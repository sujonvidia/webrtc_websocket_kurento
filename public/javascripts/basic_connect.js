var goConvIdChecklist = '';
var goMsgIdChecklist = '';
var filterOnlyTagMsgA = [];
var filterOnlyTagMsgATrigger = false;
var all_current_sms = [];
var fileSizeStore = [];
var allTempEmailAddress = [];
var to = "";
var conversation_id = "";
var root_conv_id = null;
var conversation_type = "";
var room_id = "";
var room_name = "";
var room_img = "";
var created_by = "";
var filedata = [],
    audiofile = [],
    videofile = [],
    imgfile = [],
    otherfile = [],
    allfiles = [];
var thread_id = "";
var thread_root_id = "";
var swap_conversation_id = "";
var adminArra = [];
var participants = [];
var participants_guest = [];
var participants_sub = [];
var roomTitle = "";
var privacy = "";
var keySpace = "";
var tagListForFileAttach = [];
var attachFileList = [];
var sidebar_paging = 50;

var formDataTemp = [];
var urrm_pn = [];
var need_todo_details = [];
var loaderEndTime;
var recentEmo = [];
var checkedList = {};
var totalTagListTitleCon = [];
var userlistWithname = {};
var allUserTagList = [];
var filesCount = 0;
var alldeletemsgid = [];
var roomtag = [];
var deletedMessages = [];
var isTabActive = true;
var pageTitleOn = '';
var thisroomStatus = '';
var thisroomPrivacy = '';
var user_id_to_img = {};
var user_id_to_fullname = {};
var allFilteredItem = [];
var allConvIdforFilter = [];
var has_incompleted_checklist = false;
var draft_checklist = {};
var draft_msg = {};
var msg_checklist_counter = [];
var msg_chk_today = [];
var msg_chk_overdue = [];
var par_chk_process = false;
var my_all_task_assignment = [];
var my_all_task_assignment_filterd = [];
var my_all_task_assignment_checklist_items = [];
var myallConversations = [];
var allMediaFilesData = [];
var allMediaLinksData = [];
var globalpageSize = 20;


var escKeyUpForHead = () => {

    $(window).keyup(function(e) {
        if (e.keyCode == 27) {
            e.preventDefault();
            e.stopImmediatePropagation();
            console.log(168)
            if ($('#warningsPopupConversation').is(':visible')) {
                closeModal('warningsPopupConversation')
            }
            if ($('#live-note').is(':visible')) {
                // hideNoteBox()
            }

            if ($('#updatechannelContainer').is('visible')) {
                if ($('#warningsPopup').is(':visible')) {
                    $('#warningsPopup').hide();
                } else {
                    $('#updatechannelContainer').hide();
                }
            }

            if ($('#warningsPopup').is(':visible')) {
                $('#warningsPopup').hide();
            }

            if ($('#msg').attr('data-checklist') == 'true') {
                console.log(189)
                addMsgCheckList();
            } else if ($('#selectMessage').hasClass('selected activeComFilter')) {
                $('#selectMessage').trigger('click');
            } else if ($('#warningPopupForCallMsg').is(':visible')) {
                closeModal('warningPopupForCallMsg');
                // }else if($('#headSearchClose').is(':visible')){
                // 	hideSearchForHead();
            } else if ($('#headActionDropdown').is(':visible')) {
                viewDropDown('#headActionDropdown');
            } else if ($('.profilenavMainSection').is(":visible") == true) {
                $('.profilenavMainSection').hide();
                $('.profile_nav img.nav_ico').css('transform', 'rotate(0deg)');
            } else if ($('#memberListBackWrap').is(':visible') == true) {
                $('.closeBackwrap').trigger("click");
            } else if ($('#subtaskListBackWrap').is(':visible') == true) {
                $('.closeBackwrap').trigger("click");
            } else if ($('.taglisttag').is(':visible') == true) {
                $('.taglisttag').hide();
                $('.conv_tagOptions').hide();
                $('#input_values input').attr('id', "searchAfter")
                    .attr('placeholder', "Type and enter to search message(s) in conversation")
                    .attr('onkeyup', 'searchThisThread(event,this)').focus().val('');
            } else if ($('.create-event-popup').is(":visible") == true) {
                $('.create-event-popup').hide();
                $("#CreateEvent").show();
            } else if ($('.create-todo-popup').is(":visible") == true && $("#todoAdvanceOption").is(":visible") == true) {
                $("#todoAdvanceOption").hide();
            } else if ($('.create-todo-popup').is(":visible") == true) {
                $('.create-todo-popup').hide();
                $("#createTodo").show();
            } else if ($('#notificationPopup').is(':visible')) {
                closeModal('notificationPopup');
            } else if ($('#shareMessagePopUp').is(':visible')) {
                $('#shareMessagePopUp').hide();
            } else if ($('.customTooltipSidebar').is(':visible')) {
                $('.customTooltipSidebar').hide();
            } else if ($('#groupAdminArea').is(':visible')) {
                closeModal('groupAdminArea');
            } else if ($('#ownerAreaForTodo').is(':visible')) {
                closeModal('ownerAreaForTodo');
            } else if ($('#ChatFileUpload_task').is(':visible')) {
                closeUploadPopup();
            } else if ($('#ChatFileUpload').is(':visible')) {
                closeUploadPopup();
            } else if ($('.emoji_div').is(':visible')) {
                $('.emoji_div').hide();
            } else if ($('#repChatFileUpload').is(':visible')) {
                repcloseUploadPopup();
            } else if ($('#threadReplyPopUp').is(':visible')) {
                // if(window.name !='calling')
                if (typeof callCleanupLogic !== 'function' && window.name !== 'calling') {
                    $('#threadReplyPopUp').hide();
                    placeCaretAtEnd(document.getElementById('msg'));
                }
            } else if ($('.emojiListContainer').is(':visible')) {
                $('.emojiListContainer').hide();
            } else if ($('#delete_msg_div').is(':visible')) {
                $('#delete_msg_div').hide();
            } else if ($('#delete_task_msg_div').is(':visible')) {
                $('#delete_task_msg_div').hide();
            } else if ($('.msg-more-popup').is(':visible')) {
                $('.msg-more-popup').hide();
            } else if ($('#live-chat').is(':visible')) {
                $('#live-chat').hide();
            } else if ($('#repChatFileUpload').is(':visible')) {
                repcloseUploadPopup();
            } else if ($('.filterMainContainer').is(":visible") == true && $('.chooseTag').is(":visible") == true) {
                $('.chooseTag').hide();
            } else if ($('.filterMainContainer').is(":visible") == true) {
                $('.filterMainContainer').hide();
                $('.side-bar-filter-icon').removeClass("active");
            } else if ($('.only_filter_list').is(":visible") == true) {
                $('.conv_tagOptions').find('.srcConv_tag').removeClass('activeUl');
                $('.side-bar-filter-icon').removeClass("activeFil");
            } else if ($('.conv_tagOptions').is(":visible") == true) {
                $('.conv_tagOptions').hide();
            } else if ($('.checklist_more_option').is(":visible") == true) {
                console.log(267)
                $('.checklist_more_option').hide();
            } else if ($('.search-panel').is(":visible") == true) {
                $('.search-panel').hide();
                $("#searchConversation").show();
            } else if ($('.moreMenuPopup').is(":visible") == true && $('.backwrap').is(":visible") == true) {
                $('.backwrap').hide();
            } else if ($('.moreMenuPopup').is(":visible") == true) {
                $('.moreMenuPopup').hide();
            } else if ($('.msgs-form-users-options').is(":visible") == true && $('.emojiListContainer').is(":visible") == true) {
                $('.emojiListContainer').hide();
            } else if ($('.msgs-form-users-options').is(":visible") == true && $('.msg-more-popup').is(":visible") == true) {
                $('.msg-more-popup').hide();
            } else if ($('.threadasideContainer').is(':visible') == true) {
                $('.threadasideContainer').hide();
                $("#connectAsideContainer").show();
            } else if ($('.chat-head-calling .addTagConv').is(':visible') == true) {
                $('.chat-head-calling .addTagConv').hide();
                $('.chat-head-calling .tagged').show();
                $(this).val("");
            } else if ($('.emoji_div').is(":visible") == true) {
                $('.emoji_div').remove();
            } else if ($('#createDirMsgContainer').is(":visible") == true) {
                closeAllPopUp();
            } else if ($('#memberListBackWrap').is(":visible") == true) {
                closeAllPopUp();
            } else if ($('#subtaskListBackWrap').is(":visible") == true) {
                closeAllPopUp();
            } else if ($('#addTagforImg').is(':visible')) {
                closeModal('addTagforImg');
            } else if ($('.fileSliderBackWrap').is(":visible") == true) {
                if ($('.media-file-popup').is(':visible') == true) {
                    $(".close-media-popup.allAttachmentView").click();
                } else if ($('.image-popup-slider').is(':visible') == true) {
                    $(".close-image-popup-slider").click();
                }
            } else if ($('.suggested-type-list').is(':visible')) {
                $('.suggested-type-list').hide();
                $('.add-team-member').val("");
                $('.add-direct-member').html("");
            } else if ($('#dueDatePickerDiv').is(':visible')) {
                $('#dueDatePickerDiv').hide();
                $('#dueDatePicker').css('pointer-events', 'auto');
            } else if ($('#joinChannelPanel').is(':visible')) {
                closeRightSection();
            } else if ($('#createChannelContainer').is(':visible')) {
                closeRightSection();
            }

            if ($('.upgradeModal_wrapper').is(':visible')) {
                $('.closeUpgradeModal').trigger('click');
            }

            if ($('.backwrap').is(':visible')) {
                console.log(321)
                if ($('#_searchForm').is(':visible')) {
                    if ($('#_searchForm .allUser_list').is(':visible')) {
                        $('#_searchForm .allUser_list').hide();
                    } else {
                        $('#_searchForm').hide();
                        $('#hayvenSidebar').css('z-index', '9999');
                        $('#personalConnectActive').css('z-index', '4');
                        $('.backwrap').hide();
                    }
                } else {
                    $('.backwrap').hide();
                }
            }
            if ($('#wsCreateCompanyPopUp').is(':visible')) {
                $('#adminSettingBackWrap').hide();
                $('#wsCreateCompanyPopUp').hide();
            }


        }
    });
}
escKeyUpForHead();
//for close modal
function closeModal(id) {
    $('#' + id).hide();
    $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable');
    $('#' + id).attr('data-esc', false);
    if (id == 'notificationPopup') {
        $('.radioItem.selected').removeClass('selected');
        $("input[type='radio'][name='muteNotification'][value='30M']").closest('label').trigger('click');
        $('#notificationPopup').attr('data-mute-id', "");
        $('#muteDeleteButton').hide();
    } else if (id == 'groupAdminArea') {
        $("#roomIdDiv").attr('data-rfu', "");
    } else if (id == 'msgUrlPreview') {
        $('#msgUrlPreview .url_title').html('');
        $('#msgUrlPreview .ulr_img').html('');
        $('#msgUrlPreview .url_desc').html('');
    } else if (id == 'informationPopup') {
        $('.input_field[data-set="true"]').removeAttr('data-set');
        $('.task_ewh_field input[data-set="true"]').removeAttr('data-set');
    } else if (id == 'roleChangerPopup') {
        $("#adminSettingBackWrap").hide();
    } else if (id == 'downloadPreviewPopup') {
        if ($('#downloadPreviewPopup').attr('thread-view') == 'true') {
            $('#threadReplyPopUp').show();
        }
        $('.downloadPreviewBody').removeAttr('style').removeClass('ui-draggable').removeClass('ui-draggable-handle');
    } else if (id == 'shareLinkPop') {
        if ($('#shareLinkPop').attr('thread-view') == 'true') {
            $('#threadReplyPopUp').show();
        }
        $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable');
    } else if (id == 'updateMessageTag') {
        if ($('#updateMessageTag').attr('thread-view') == 'true') {
            $('#threadReplyPopUp').show();
        }
        $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable').removeClass('ui-draggable-handle');
    } else if (id == 'changePwdPopup') {
        $('#old_password').val('');
        $('#new_password').val('');
        $('#con_password').val('');
    } else if (id == 'warningsPopupConversation') {
        $('.warningPopupBody').removeAttr('style').removeClass('ui-draggable').removeClass('ui-draggable-handle');
    } else if (id == 'createDirConv') {
        $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable');
    } else if (id == 'shareMessagePopUp') {
        $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable');
    } else if (id == 'clearMessages') {
        $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable');
    } else if (id == 'warningPopup') {
        $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable');
    } else if (id == 'changePwdPopup') {
        $('.changePwdPopupBody').removeAttr('style').removeClass('ui-draggable').removeClass('ui-draggable-handle');
    } else if (id == 'editCustomTitle') {
        $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable');
    } else if (id == 'updateMemberPopup') {
        $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable');
    } else if (id == 'warningPopupForCallMsg') {
        $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable');
    }
    $('.drag_handlr').removeClass('ui-draggable-handle');
}

var user_list = _.orderBy(allUserdata[0].users, [username => username.fullname.toLowerCase()], ["asc"]);
$.each(user_list, function(ky, va) {
    userlistWithname[va.id] = va.fullname;
});

var mywindowUrl = '';
var url888888 = window.location.href;
var arr888888 = url888888.split("/");
mywindowUrl = arr888888[0] + "//" + arr888888[2]
    // function connectLiDesign(data){
    // 	var design = '';
    // 			  +'<li onclick="start_conversation(event)" data-octr="'+data.created_by+'" data-nom="0" data-myid="'+user_id+'" data-createdby="'+data.created_by+'" data-nor="0" data-id="6ea76667-4ce9-4cdf-b20d-6196d721e64d" data-tm="9" data-subtitle="f4518e60-ce4d-11e9-894d-fe1c385d7514" data-conversationtype="group" data-conversationid="098b0091-698f-48c2-b02c-fe3736762168" data-name="General Discussion" data-img="feelix.jpg" id="conv098b0091-698f-48c2-b02c-fe3736762168" class="selected" style="left: 0px;">'
    // 			  +'<span class=" lock" style="left: 12px;"></span>'
    // 			  +'<span class=" usersName">'

// 		      +'<span class="conv_nickname_098b0091-698f-48c2-b02c-fe3736762168">General Discussion</span>'
// 			  +'</span>'
// 			  +'<span class=" unreadMsgCount"></span>'
// 			  +'<span class=" closeSta" style="display:none;">[closed]</span>'

// 		  '</li>';
// 	return design;
// }

var hiddenTagName = [];
var alltagName = [];
var PVM = false;
var allUnit = [];
var drawmsgtype = 'old';

var viewchecklisttype = 'count';
var allChecklistData = [];
var checklistMsglist = [];
var unchecklistMsglist = [];
var business_unitChangename = '';
var activeConvPrivacy = '';
var allconvissuetag = [];
var updatedMsgArr = [];
var tempAttachmentTag = [];
var thisroomTagList = [];

var temppconvSingle = false;
var temppconvSingleGo = false;
var temppconvSingleFriendId = null;
var conv_service_provider = [];
var activeSound = [];


function checkdrawmsg(data, adminlist, privacy) {
    if (activeConvPrivacy == 'protected') {
        var msg_service_provider = [];
        if (data.service_provider != null && data.service_provider != undefined) {
            msg_service_provider = data.service_provider
        }
        var msg_assignusers = [];

        if (data.assign_to != null && data.assign_to != undefined) {
            msg_assignusers = data.assign_to;
        }
        var msg_type = '';
        if (data.msg_type != null) {
            msg_type = data.msg_type;
        }

        if (data.sender == user_id || adminlist.indexOf(user_id) > -1 || msg_service_provider.indexOf(user_id) > -1 || msg_assignusers.indexOf(user_id) || msg_type == 'convert_conversation' || msg_type == 'convert') {
            return true;
        } else {
            return false;
        }
    } else {
        return true;
    }

}


socket.emit('getAllNotificationSound', { user_id: user_id }, function(res) {
    if (res.status) {
        $("#setNotify .only_filter_list").html('');
        if (res.sounds.length > 0) {
            $.each(res.sounds, function(k, v) {
                // console.log(12286, k,v);
                var html = '<li class="moreOpt_list Noti_sounds" onclick="setAsNotify(this)" data-type="notification" data-title="' + v.location + '" data-status=0>' + v.originalname + '</li>'
                $("#setNotify .only_filter_list").append(html);
            });
        } else {
            $("#setNotify").hide();
        }
    }
});


function getNotificationSound() {
    var data = {
        user_id: user_id
    }
    socket.emit('getNotificationSound', data, function(res) {
        if (res.status) {
            if (res.result[0] != undefined) {
                activeSound = [];
                $('#notifyAudioContainer').html('');
                var html = '<audio id="notifyAudio" style="display:none">' +
                    '<source src="ringtones/short_tone.mp3" type="audio/mp3">' +
                    'Your browser does not support the audio element.' +
                    '</audio>';
                $('#notifyAudioContainer').html(html);
                // console.log(333333333, res.result)
                $.each(res.result, function(k, v) {
                    var file_ext = v.tune_title.split('.').pop().toLowerCase();
                    if (v.status == 1) {
                        activeSound.push({ conv: v.conversation_id, location: v.tune_title, status: v.status });
                        var html = '<audio id="notifyAudio_' + v.conversation_id + '" style="display:none">' +
                            '<source src="' + v.tune_title + '" type="audio/' + file_ext + '">' +
                            'Your browser does not support the audio element.' +
                            '</audio>';
                        $('#notifyAudioContainer').append(html);
                    }
                });
            } else {
                var html = '<audio id="notifyAudio" style="display:none">' +
                    '<source src="ringtones/short_tone.mp3" type="audio/mp3">' +
                    'Your browser does not support the audio element.' +
                    '</audio>';
                $('#notifyAudioContainer').html(html);
            }
        }
    })
}

getNotificationSound();

setInterval(function() {
    $.each(activeSound, function(k, v) {
        if (v.conv == conversation_id) {
            // console.log('work point')
            $.each($('.Noti_sounds'), function(ka, va) {
                if (v.location == $(va).attr('data-title')) {
                    $('.Noti_sounds').removeClass('active').attr('data-status', 0);
                    // console.log(14095,v);
                    if (!$(va).hasClass('active')) {
                        $(va).addClass('active').attr('data-status', 1);
                    }
                }
            });
        }
    });
}, 6000);



function setAsNotify(elm) {
    var status = '';
    if ($(elm).attr('data-status') == 1) {
        $(elm).removeClass('active').attr('data-status', 0);
        status = 0;
    } else {
        status = 1;
    }
    var data = {
        user_id: user_id,
        conversation_id: conversation_id,
        type: $(elm).attr('data-type'),
        tune_title: $(elm).attr('data-title'),
        status: status
    }

    socket.emit('setAsNotification', data, function(res) {
        if (res.status) {
            $('.moreMenuPopup').hide();
            getNotificationSound();
        }
    })

}

function playNotification(id) {
    var ids = 'notifyAudio_' + id;
    var playDefault = document.getElementById("notifyAudio");

    var dontDisturb = localStorage.getItem('dontDisturb' + user_id);
    dontDisturb = JSON.parse(dontDisturb);
    if (dontDisturb == null || dontDisturb.length == 0 || dontDisturb.indexOf(id) == -1) {
        // console.log(22, id, dontDisturb.indexOf(id));
        if ($('#conv' + id).find('.mute_bell').length == 0) {
            // if ($('#'+ids).length == 1) {
            // 	var playS = document.getElementById(ids);
            //  	playS.play(); 
            //  	console.log('Played Dynamic Tune..');
            // }else {
            // console.log('Played default Tune..');
            playDefault.play();
            // }
        }
    }
}

$.each(user_list, function(k, v) {
    user_id_to_img[v.id] = v.img;
    user_id_to_fullname[v.id] = v.fullname;
})

var countFiles = (action, type) => {
    if (action == 'add') {
        filesCount = (parseInt(filesCount) + 1);
        $('#conversationFileView').text('Files (' + filesCount + ')');
    }
}


function checklistView() {
    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            $('.tag_name_view_' + v.tag_id).find('span').text(v.title);
        }
    })
}
var getAllTag = false;

function getAllUserTag() {
    // socket.emit('getCompanyTag',{user_id:user_id,company_id:company_id},function(res){
    // 	getAllTag = true;

    var allTagsShow = [];
    var allTagsShow_ids = [];
    if (allUserdata[0].company_tag.status) {
        for (let i of allUserdata[0].company_tag.data) {
            if (i.tagged_by.toString() == user_id) {
                allTagsShow.push(i);
                allTagsShow_ids.push(i.tag_id);
            } else {
                if (i.team_list !== null) {
                    for (let t of allteams) {
                        if (t.participants !== null) {
                            if (t.participants.indexOf(user_id) > -1) {
                                if (i.team_list.indexOf(t.team_id.toString()) > -1 && allTagsShow_ids.indexOf(i.tag_id) == -1) {
                                    allTagsShow.push(i);
                                    allTagsShow_ids.push(i.tag_id);
                                }
                            }
                        }
                    }
                }
            }
        }
        allUserTagList = allTagsShow;
        console.log(563, allUserTagList)
            // allUserTagList = allUserdata[0].company_tag.data;

        $.each(allUserTagList, function(k, v) {
            if (v != undefined) {
                if (thisroomTagList.indexOf(v.tag_id) > -1) {
                    $('#groupChatContainer .chat-head-calling .tagged').attr('active-status', true);
                }
                $('#filterUserTag').append('<div class="tag_list filter_tag_' + v.tag_id + '" onclick="filter_OR_operation(event,\'tag\')" tag-id="' + v.tag_id + '">' + v.title + '</div>');
            }
        })
        checklistView();
    } else {
        console.log("No data found");
    }
    // });
}
if (allteams.length == 0) {
    setTimeout(function() {
        getAllUserTag();
    }, 6000)
} else {
    getAllUserTag();
}

function countAndGetchecklist(showing = null) {
    if (showing != null) {
        viewchecklisttype = 'view';
        $("#onscrollloading").show();
        $('#msg-container').html('');
        $('#msg-container').attr('has-msg', true);
        $('#msg-container').attr('data-checklist', true);

    }
    allChecklistData = [];
    unchecklistMsglist = [];
    checklistMsglist = [];
    socket.emit('getChecklistConv', { conversation_id: conversation_id }, function(res) {
        if (res.status) {
            console.log('getChecklistConv', res.data);
            // console.log(2, res.checklist)
            var totalMsg = [];
            $.each(res.data, function(k, v) {

                    if (v.has_delete == null) {
                        v.has_delete = [];
                    }
                    if (v.has_hide == null) {
                        v.has_hide = [];
                    }

                    if (v.has_delete.indexOf(user_id) == -1 && v.has_hide.indexOf(user_id) == -1 && v.has_delete.indexOf('delete_for_all') == -1) {
                        if (checkguestMsg(v)) {

                            totalMsg.push(v);
                        }
                    }
                })
                // console.log('totalMsg', totalMsg);
            res.data = totalMsg;

            if (res.data.length > 0) {
                var unchecklist = 0;
                var completechecklist = 0;
                var allchecklist = 0;
                var allchecklistMsg = 0;
                var unchecklistmsg = 0;
                var completeChecklistMsg = 0;
                $.each(res.data, function(k, v) {
                    if (alldeletemsgid.indexOf(v.msg_id) == -1) {
                        // if($('.msg_id_'+v.msg_id).length > 0 ){
                        $('#clcounterperMsg' + v.msg_id).attr('data-com', '0');
                        $('#clcounterperMsg' + v.msg_id).attr('data-length', '0');
                        if (v.msg_type == "checklist") {
                            var checkedlength = $('.msg_id_' + v.msg_id).find('.checkBox.checked').length;

                            taskItemCounter(v.msg_id);
                            if (checkedlength == 0) {
                                unchecklistmsg = unchecklistmsg + 1;
                            } else {
                                if (checkedlength == $('.msg_id_' + v.msg_id).find('.checkBox').length) {
                                    completeChecklistMsg = completeChecklistMsg + 1;
                                } else {
                                    unchecklistmsg = unchecklistmsg + 1;
                                }
                            }
                            allchecklistMsg = allchecklistMsg + 1;
                        }

                        var checklistall = []
                        $.each(res.checklist, function(ck, cv) {
                            if (cv.msg_id == v.msg_id) {
                                $('#clcounterperMsg' + v.msg_id).attr('data-length', (parseInt($('#clcounterperMsg' + v.msg_id).attr('data-length')) + 1));
                                var thismsgtotalcomcl = parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'));
                                var thismsgTotalcl = parseInt($('#clcounterperMsg' + v.msg_id).attr('data-length'));

                                checklistall.push(cv);
                                res.data[k]['checklist'] = checklistall;
                                var assusr = cv.alternative_assign_to == null ? cv.assign_to : cv.alternative_assign_to;
                                // if(cv.checklist_status == 0 || (cv.checklist_status == 1 && cv.review_status == 1 && cv.assignedby == user_id && assusr != user_id)){
                                unchecklistMsglist.push(res.data[k]);
                                checklistMsglist.push(res.data[k]);
                                if (cv.checklist_status == 0) {
                                    unchecklist = unchecklist + 1;
                                    // checklistMsglist.push(res.data[k]);
                                    // unchecklistMsglist.push(res.data[k]);
                                    $('#clcounterperMsg' + v.msg_id).html('(' + parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com')) + '/' + thismsgTotalcl + ')');
                                } else {
                                    // checklistMsglist.push(res.data[k]);
                                    completechecklist = completechecklist + 1
                                    $('#clcounterperMsg' + v.msg_id).attr('data-com', (thismsgtotalcomcl + 1));
                                    $('#clcounterperMsg' + v.msg_id).html('(' + parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com')) + '/' + thismsgTotalcl + ')');
                                }
                                allchecklist = allchecklist + 1;
                                $('#data_msg_body' + v.msg_id).find('.filterchecklist').text('Show Pending (' + (thismsgTotalcl - parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'))) + ')');

                                $('#data_msg_body' + v.msg_id).find('.filterchecklist.active').text('Show All (' + thismsgTotalcl + ')');
                                $('#data_msg_body' + v.msg_id).find('.filterchecklist').attr('data-length', thismsgTotalcl);
                                $('#data_msg_body' + v.msg_id).find('.filterchecklist').attr('data-in', (thismsgTotalcl - parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'))));
                                $('#data_msg_body' + v.msg_id).find('.filterpending').text('All Pending (' + (thismsgTotalcl - parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'))) + ')');
                                $('#data_msg_body' + v.msg_id).find('.filterpending').attr('data-pending', (thismsgTotalcl - parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'))));
                                if ((thismsgTotalcl - parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'))) == 0) {
                                    $('#no_pendingList' + v.msg_id + '').remove();
                                    if (v.msg_body !== 'Converted Checklist') {
                                        // $('#data_msg_body'+v.msg_id).find('.checkAction').after('<div class="no_pendingList" id="no_pendingList'+v.msg_id+'">No pending task here! <span class="link_url" onclick="filterchecklistLastime(\''+v.msg_id+'\',\'showall\')">Click to view all completed task(s).</span></div>');
                                    }
                                }

                                $('#filterCompletedall_' + v.msg_id).text('Completed (' + $('#clcounterperMsg' + v.msg_id).attr('data-com') + ')');
                                $('#filterCompletedall_' + v.msg_id).attr('data-com', $('#clcounterperMsg' + v.msg_id).attr('data-com'));
                                // var le = $('#msg-container .msg-separetor-unread').find('.msgs-form-users .filterpending');
                                $('#msg-container .msg-separetor-unread').nextAll('.msgs-form-users').find('.filterpending').addClass('unread');
                                taskItemCounter(v.msg_id);
                            }
                        });
                        // }
                    }
                });

            }
            allChecklistData = res.data;
            var allmsgTagid = [];
            if (viewchecklisttype == 'view') {

                // showIncompleteChecklist()
                if (showing == 'showinc') {
                    $('#msg-container').html('');
                    if (unchecklistMsglist.length == 0) {
                        // console.log('Chewclist Length 0');
                        $('#msg-container').attr('data-checklist', true);
                    } else {
                        unchecklistMsglist = _.orderBy(unchecklistMsglist, ['created_at'], ['asc']);
                        // console.log(506, unchecklistMsglist);
                    }
                    let tempid = [];
                    $.each(unchecklistMsglist, function(k, v) {
                        if (tempid.indexOf(v.msg_id) == -1) {
                            tempid.push(v.msg_id);
                            if (checkdrawmsg(v, adminArra, activeConvPrivacy)) {
                                if (v.tag_list != null) {
                                    if (v.tag_list.length > 0) {
                                        $.each(v.tag_list, function(kt, vt) {
                                            if (allmsgTagid.indexOf(vt) == -1) {
                                                allmsgTagid.push(vt);
                                            }
                                        });
                                    }
                                }

                                checklist_has_pending_process(v);
                                draw_msg(v);
                            }
                        }
                        total_AssigneeUser = $('.msg_id_' + v.msg_id).find('.has_assign.checkListItem').length;
                        $('#data_msg_body' + v.msg_id).find('.assignment_count').text('Assigned (' + total_AssigneeUser + ')').attr('data-assingment', total_AssigneeUser);
                    });
                    $("#onscrollloading").hide();

                    if ($('#roomIdDiv').attr('data-privecy') == 'protected') {
                        if (allmsgTagid != null) {
                            if (allmsgTagid.length > 0) {

                                socket.emit('getconvissuetag', { allmsgTagid: allmsgTagid }, function(issuedata) {
                                    if (issuedata.data.length > 0) {
                                        $.each(issuedata.data, function(k, v) {
                                            $('.issuetagid' + v.tag_id).html(issueTagDesign2(v));
                                            allconvissuetag.push(v);
                                        });
                                    }
                                });
                            } else {
                                $('.requestHolder').show();
                            }
                        }
                    }
                }

                if (showing == 'showcom') {
                    $('#msg-container').html('');
                    if (checklistMsglist.length == 0) {
                        $('#msg-container').attr('data-checklist', false);
                    }

                    $.each(checklistMsglist, function(k, v) {
                        if (checkdrawmsg(v, adminArra, activeConvPrivacy)) {

                            draw_msg(v);
                        }
                    });
                    $("#onscrollloading").hide();

                }
                if (showing == 'flagged') {
                    $('#msg-container').html('');
                    if (checklistMsglist.length == 0) {
                        $('#msg-container').attr('data-checklist', false);
                    }

                    $.each(checklistMsglist, function(k, v) {
                        if (v.has_flagged != null && v.has_flagged.indexOf(user_id) > -1) {
                            if (checkdrawmsg(v, adminArra, activeConvPrivacy)) {

                                draw_msg(v);
                            }
                        }

                    });
                    $("#onscrollloading").hide();

                }
                permsgchecklistCounter(res.data, res.checklist);
                scrollToBottom('.chat-page .os-viewport', 0);
            } else {

                $('#completeChecklist').attr('data-item', allchecklistMsg);
                $('#incompleteChecklist').attr('data-item', unchecklistmsg);
                $('#completeChecklist').attr('data-itemS', '(' + allchecklistMsg + ')');
                $('#incompleteChecklist').attr('data-itemS', '(' + unchecklistmsg + ')');

                if (unchecklistmsg > 0) {
                    $('#checkListCounter').html('Task List <span>' + completeChecklistMsg + '/' + allchecklistMsg + '</span>');
                    $('#checkListCounter').attr('data-val', unchecklistmsg);
                    $('#checkListCounter').parent('.headFiles').show();
                    $('#optionalChecklist').removeClass('hide').addClass('show');
                } else {
                    if (completeChecklistMsg > 0) {
                        $('#checkListCounter').html('Task List <span>' + allchecklistMsg + '/' + allchecklistMsg + '</span>');
                        $('#checkListCounter').attr('data-val', '0');
                        $('#checkListCounter').parent('.headFiles').show();
                        $('#optionalChecklist').removeClass('hide').addClass('show');
                    } else {

                        $('#checkListCounter').parent('.headFiles').hide();
                        $('#optionalChecklist').removeClass('show').addClass('hide');
                        $('#checkListCounter').removeClass('active');
                        $('#checklistActiondiv').removeClass('active');
                        $('#groupChatContainer').removeClass('checklistActive');
                    }

                }
            }

            viewchecklisttype = 'count';

        }
        if ($('#msg-container').html() == '' && $('#msg-container').attr('data-checklist') == 'false') {
            $('#FixedMsgBody').show();
        }
    });
}

function permsgchecklistCounter(data, checklist) {
    var unchecklist = 0;
    var completechecklist = 0;
    var allchecklist = 0;
    var allchecklistMsg = 0;
    var unchecklistmsg = 0;
    var completeChecklistMsg = 0;
    $.each(data, function(k, v) {
        if (alldeletemsgid.indexOf(v.msg_id) == -1) {
            // if($('.msg_id_'+v.msg_id).length > 0 ){

            $('#clcounterperMsg' + v.msg_id).attr('data-com', '0')
            $('#clcounterperMsg' + v.msg_id).attr('data-length', '0')
            if (v.msg_type == "checklist") {

                var checkedlength = $('.msg_id_' + v.msg_id).find('.checkBox.checked').length;
                if (checkedlength == 0) {
                    unchecklistmsg = unchecklistmsg + 1;
                } else {
                    if (checkedlength == $('.msg_id_' + v.msg_id).find('.checkBox').length) {
                        completeChecklistMsg = completeChecklistMsg + 1;
                    } else {
                        unchecklistmsg = unchecklistmsg + 1;
                    }
                }
                allchecklistMsg = allchecklistMsg + 1;
            }

            var checklistall = []
            $.each(checklist, function(ck, cv) {
                if (cv.msg_id == v.msg_id) {
                    $('#clcounterperMsg' + v.msg_id).attr('data-length', (parseInt($('#clcounterperMsg' + v.msg_id).attr('data-length')) + 1));
                    var thismsgtotalcomcl = parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'));
                    var thismsgTotalcl = parseInt($('#clcounterperMsg' + v.msg_id).attr('data-length'));


                    checklistall.push(cv);
                    data[k]['checklist'] = checklistall;

                    var assusr = cv.alternative_assign_to == null ? cv.assign_to : cv.alternative_assign_to;
                    // if(cv.checklist_status == 0 || (cv.checklist_status == 1 && cv.review_status == 1 && cv.assignedby == user_id && assusr != user_id)){
                    if (cv.checklist_status == 0) {
                        unchecklist = unchecklist + 1;
                        $('#clcounterperMsg' + v.msg_id).html('(' + parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com')) + '/' + thismsgTotalcl + ')');
                    } else {
                        completechecklist = completechecklist + 1
                        $('#clcounterperMsg' + v.msg_id).attr('data-com', (thismsgtotalcomcl + 1));
                        $('#clcounterperMsg' + v.msg_id).html('(' + parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com')) + '/' + thismsgTotalcl + ')');
                    }
                    allchecklist = allchecklist + 1;
                    $('#data_msg_body' + v.msg_id).find('.filterchecklist').text('Show Pending (' + (thismsgTotalcl - parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'))) + ')');
                    $('#data_msg_body' + v.msg_id).find('.filterchecklist.active').text('Show All (' + thismsgTotalcl + ')');
                    $('#data_msg_body' + v.msg_id).find('.filterchecklist').attr('data-length', thismsgTotalcl);
                    $('#data_msg_body' + v.msg_id).find('.filterchecklist').attr('data-in', (thismsgTotalcl - parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'))));
                    $('#data_msg_body' + v.msg_id).find('.filterpending').text('All Pending (' + (thismsgTotalcl - parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'))) + ')');
                    $('#data_msg_body' + v.msg_id).find('.filterpending').attr('data-pending', (thismsgTotalcl - parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'))));
                    // console.log(458,(thismsgTotalcl - parseInt($('#clcounterperMsg'+v.msg_id).attr('data-com'))) == 0);
                    if ((thismsgTotalcl - parseInt($('#clcounterperMsg' + v.msg_id).attr('data-com'))) == 0) {
                        $('#no_pendingList' + v.msgid + '').remove();
                        // $('#filterPending_'+v.msgid).parent('.checkAction').after('<div class="no_pendingList" id="no_pendingList'+v.msgid+'">No pending task here! <span class="link_url">Click to view all completed task(s).</span></div>')
                    }
                    $('#filterCompletedall_' + v.msg_id).text('Completed (' + $('#clcounterperMsg' + v.msg_id).attr('data-com') + ')');
                    $('#filterCompletedall_' + v.msg_id).attr('data-com', $('#clcounterperMsg' + v.msg_id).attr('data-com'));
                    $('#msg-container .msg-separetor-unread').nextAll('.msgs-form-users').find('.filterpending').addClass('unread');
                }
            });
            // }
        }
    });
}

function showAllChecklist(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
    // console.log(247,allChecklistData)
    // $('#checklistActiondiv .deleteMessage').removeClass('active');
    // $('#checklistActiondiv .deleteMessage.complete').addClass('active');
    $('#msg-container').removeClass('all_hide');
    $('#incompleteChecklist').removeClass('active');
    $('#flaggedChecklist').removeClass('active');
    $('#completeChecklist').addClass('active');
    $('#filter_checklist_text').val('');
    // $('#msg-container').html('');
    countAndGetchecklist('showcom');
    $('#FixedMsgBody').hide();

}

function showIncompleteChecklist(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
    // $('#checklistActiondiv .deleteMessage').removeClass('active');
    // $('#checklistActiondiv .deleteMessage.incomplete').addClass('active');
    $('#flaggedChecklist').removeClass('active');
    $('#completeChecklist').removeClass('active');
    $('#incompleteChecklist').addClass('active');
    $('#msg-container').removeClass('all_hide');
    $('#filter_checklist_text').val('');
    $('#msg-container').html('');
    countAndGetchecklist('showinc');

}

function showFlaggedChecklist(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
    $('#msg-container').removeClass('all_hide');
    $('#completeChecklist').removeClass('active');
    $('#incompleteChecklist').removeClass('active');
    $('#flaggedChecklist').addClass('active');
    $('#filter_checklist_text').val('');

    $('#msg-container').html('');
    countAndGetchecklist('flagged');
    $('#FixedMsgBody').hide();
}

function onlydrawMsg(convid) {
    var allmsgTagid = [];
    $('#secretUserList').html('');
    $("#onscrollloading").show();
    $('#msg-container').attr('has-msg', true);
    $('#msg-container').html('');
    if ($('#checklistActiondiv').hasClass('active')) {
        $('#checkListCounter').removeClass('active');
        $('#checklistActiondiv').removeClass('active')
    }
    if ($('#mediaFilePreview').is(':visible')) {
        closeMediaPopup()
    }
    if ($('.backwrap').is(':visible')) {
        $('.backwrap').hide();
    }
    if ($('#fileSliderBackWrap').is(':visible')) {
        backToMediaTab()
    }

    if (adminArra.indexOf(user_id) == -1) {
        $('#closeThisRoom').hide();
        $('#deleteThisRoomfull').hide();
    }
    socket.emit('getlasthundredmsg', { conversation_id: convid }, function(res) {
        if (res.status) {
            var allmsg = [];

            $.each(res.msg, function(k, v) {
                if (v.msg_type == 'checklist') {
                    var msg = v;
                    var newcheclist = [];
                    $.each(res.checklist, function(ka, va) {
                        if (va.msg_id == v.msg_id) {
                            newcheclist.push(va);
                        }
                    });
                    msg['checklist'] = newcheclist;
                    allmsg.push(msg);
                } else {
                    allmsg.push(v);
                }
                if (v.tag_list != null) {
                    if (v.tag_list.length > 0) {
                        $.each(v.tag_list, function(kt, vt) {
                            if (allmsgTagid.indexOf(vt) == -1) {
                                allmsgTagid.push(vt);
                            }
                        });
                    }
                }
            });
            // console.log(730, allmsg)
            $.each(allmsg, function(k, v) {

                    draw_msg(v, true);
                })
                // console.log("====================================== 424 =======================================");
            scrollToBottom('.chat-page .os-viewport', 0);
            // countAndGetchecklist();
            $("#onscrollloading").hide();

            // setTimeout(function(){
            // }, 0);
            if (res.msg.length == 0) {
                $('#msg-container').attr('has-msg', false);
            }
            // $("#onscrollloading").hide();
            viewchecklisttype = 'count';
            countAndGetchecklist();
        }
        inviewfun();
        $('#msg').focus();
        if ($('#roomIdDiv').attr('data-privecy') == 'protected') {
            if (allmsgTagid != null) {
                if (allmsgTagid.length > 0) {

                    socket.emit('getconvissuetag', { allmsgTagid: allmsgTagid }, function(issuedata) {
                        if (issuedata.data.length > 0) {
                            $.each(issuedata.data, function(k, v) {
                                $('.issuetagid' + v.tag_id).html(issueTagDesign2(v));
                                allconvissuetag.push(v);
                            });
                        }
                    });
                } else {
                    $('.requestHolder').show();
                }
            }
        }
    });
    // setTimeout(function(){
    // 	scrollToBottom('.chat-page .os-viewport', 0);
    // 	$("#onscrollloading").hide();
    // },300)


}

function viewChecklistMsg(type) {
    // var get_type = getCookie("checklist_view_type"+conversation_id);
    // if (get_type != "") {
    // 	get_type = JSON.parse(get_type);
    // }
    if ($('body').hasClass('checklistFilterView')) {
        $('#conv' + conversation_id).click();
        return;
    }

    if (type == undefined) {
        if (!$('body').hasClass('checklistFilterView')) {
            // if (get_type != "") {
            // 	var u_id = get_type[0];
            // 		u_id = u_id.replace(/^"(.*)"$/, '$1');
            // 	var con_id = get_type[1];
            // 		con_id = con_id.replace(/^"(.*)"$/, '$1');
            // 	if (u_id == user_id && conversation_id == con_id) {
            // 		viewChecklistMsg(get_type[2]);
            // 	}else {
            // 		viewChecklistMsg('grid_view');
            // 	}
            // }else {
            viewChecklistMsg('grid_view');
            // }
        }
    } else {
        $('#workFreeliToaster').hide();

        var msg = 'Showing Checklist messages(s) from this channel. Click the close button to go back.';
        showFreeliToaster(true, msg);
        $('#workFreeliToaster').attr('data-id', 'checklist_msg');

        filterOnlyTagMsgA = [];
        filterOnlyTagMsgATrigger = false;

        var checklist_view_type = [user_id, conversation_id, type];
        checklist_view_type = JSON.stringify(checklist_view_type);
        // setCookie("checklist_view_type"+conversation_id,checklist_view_type);

        if (type == 'grid_view') {
            // $('#groupChatContainer').removeClass('checklistActive_list_view_origin');
            // if(!$('#groupChatContainer').hasClass('checklistActive_grid_view')){
            // 	$('#groupChatContainer').addClass('checklistActive_grid_view');
            // }
            $('#checklistListView').removeClass('active');
            $('#checklistListVieworigin').removeClass('active');
            if ($('#checklistGridView').hasClass('active')) {
                $('#checklistGridView').removeClass('active');
                // $('#groupChatContainer').removeClass('checklistActive_grid_view');
            } else {
                $('#checklistGridView').addClass('active');
                $('#msg-container').attr('data-checklist', true);
            }
        } else if (type == 'list_view_origin') {
            // $('#groupChatContainer').removeClass('checklistActive_grid_view');
            // if(!$('#groupChatContainer').hasClass('checklistActive_list_view_origin')){
            // 	$('#groupChatContainer').addClass('checklistActive_list_view_origin');
            // }
            $('#checklistListView').removeClass('active');
            $('#checklistGridView').removeClass('active');
            if ($('#checklistListVieworigin').hasClass('active')) {
                $('#checklistListVieworigin').removeClass('active');
                // $('#groupChatContainer').removeClass('checklistActive_list_view_origin');
            } else {
                $('#checklistListVieworigin').addClass('active');
                $('#msg-container').attr('data-checklist', true);
            }
        } else {
            // $('#groupChatContainer').removeClass('checklistActive_grid_view');
            // $('#groupChatContainer').removeClass('checklistActive_list_view_origin');
            $('#checklistGridView').removeClass('active');
            $('#checklistListVieworigin').removeClass('active');
            if ($('#checklistListView').hasClass('active')) {
                $('#checklistListView').removeClass('active');
            } else {
                $('#checklistListView').addClass('active');
            }
        }

        $('#FixedMsgBody').hide();
        if (!$('#checkListCounter').hasClass('active') && $('#checklistActiondiv').is(':visible') && $('#selectMessage').hasClass('selected')) {
            $('#selectMessage').trigger('click');

        } else {

            $('#msg-container').removeAttr('data-checklist');

            if ($('#checkListCounter').hasClass('active')) {
                if (!$('#checklistGridView').hasClass('active') && !$('#checklistListView').hasClass('active') && !$('#checklistListVieworigin').hasClass('active')) {
                    $('#checkListCounter').removeClass('active');
                    $('#checklistActiondiv').removeClass('active');
                    $('#groupChatContainer').removeClass('checklistActive');
                    $('#msg-container').html('');
                    viewchecklisttype = 'count';
                    // $('#conv'+conversation_id).removeClass('sideActive');
                    $('#incompleteChecklist').removeClass('active');
                    $('#completeChecklist').removeClass('active');
                    onlydrawMsg(conversation_id);
                    $('.send-msgs').show();
                }
            } else {
                $('#checkListCounter').addClass('active');
                $('#checklistActiondiv').addClass('active');
                $('#groupChatContainer').addClass('checklistActive');
                $('#checklistActiondiv').attr('close-time', moment().add('5', 'seconds').unix());
                $('#incompleteChecklist').addClass('active');
                // viewchecklisttype = 'view';
                // showIncompleteChecklist()
                viewchecklisttype = 'view';
                $('.send-msgs').hide();
                countAndGetchecklist('showinc');
            }
        }

        if (!$('#checklistGridView').hasClass('active') && !$('#checklistListView').hasClass('active') && !$('#checklistListVieworigin').hasClass('active')) {
            $('body').removeClass('checklistFilterView');
        } else {
            if (!$('body').hasClass('checklistFilterView')) {
                $('body').addClass('checklistFilterView');
            }
        }
    }

}

var sidebarLiMouseEnter = () => {

    $('.side_bar_list_item li').mouseleave(function() {
        $(this).children('.remove').hide();
    });

    $('.side_bar_list_item li').mouseenter(function() {
        if ($(this).children('.unreadMsgCount').text().length > 0) {
            $(this).children('.remove').hide();
        } else {
            $(this).children('.remove').show();
        }
    });
}

var scrollToBottom = (target, delay = 400) => {
    $(target).animate({ scrollTop: $(target).prop("scrollHeight") }, delay);
    if (target == '#repChatContainer') {
        // $('#msg_rep').focus();
        placeCaretAtEnd(document.getElementById('msg_rep'));
    }
};
var lastmsgConvid = [];

var unread_msg_conv_intop = () => {
    /* No need this code now */
    // $.each($(".side_bar_list_item li"), function () {
    // 	if (!$(this).find(".unreadMsgCount").html() == "") {
    // 		$(this).css('color', 'rgba(0,0,0,0.88)');
    // 	}
    // });
    //
    // var unread = ""; var read = ""; var count = 0;
    // $.each($("#conversation_list_sidebar li"), function (k, v) {
    // 	if (count === 0) {
    // 		count++;
    // 		read += v.outerHTML;
    //
    // 	}
    // 	else {
    // 		if (!$(v).find(".unreadMsgCount").html() == "") {
    // 			unread += v.outerHTML;
    // 		} else {
    // 			read += v.outerHTML;
    // 		}
    // 	}
    // });
    // $("#conversation_list_sidebar").html(unread);
    // $("#conversation_list_sidebar").append(read);

    // sidebarLiMouseEnter();
    /* if required open this code */
    unreadinactiveCounterTime();
}
unread_msg_conv_intop();

var _rep_msg = (urdv) => {
    thread_id = urdv.rep_conv;
    thread_root_id = urdv.root_msg_id;

    socket.emit('get_one_msg_info', { conversation_id: urdv.root_conv_id, msg_id: urdv.root_msg_id }, (res) => {
        if (res.msg_type == "call") {
            $('.write-thread-msgs').hide();
            $('.pevThread,.nextThread').hide();
        } else {
            $('.write-thread-msgs').show();
            $('.pevThread,.nextThread').show();
        }
        $('#threadReplyPopUp .replies-container').html("");

        draw_reply_popup_html(res.conversation_id, urdv.root_msg_id, res.sender_img, res.sender_name, moment(res.created_at).format('h:mm a'), '<div class="plain_text">' + res.msg_body + '</div>');
        $('#msg_rep').attr('placeholder', 'Reply to ' + res.sender_name + '');
        // $('#threadReplyPopUp .replies-container').html("");

        $('.pevThread').hide();
        $('.nextThread').hide();

        $('#threadReplyPopUp').show();
        $('#msg_rep').focus();

        find_and_show_reply_msg_popup(thread_root_id, urdv.root_conv_id);
    });
};


var FtempArray = []; // for file upload tag
var FtaggedList = []; // for file upload tag
var my_tag_list = {};
var my_tag_id = [];

var room_img = '';

var updateContainer = false;
var getuserNameList = (thisdata) => {
    var user_title_list = '';
    if (thisdata.new_user.length == 1) {
        var user = findObjForUser(thisdata.new_user[0]).fullname;
        if (thisdata.new_user[0] == user_id) {
            user = 'You'
        }
        user_title_list = user;
    } else {
        $.each(thisdata.new_user, function(k, v) {

            var user = findObjForUser(v).fullname;
            if (v == user_id) {
                user = 'You'
            }
            if (k == 0) {
                user_title_list = user;
            } else {
                if (thisdata.new_user.length == (k + 1)) {
                    user_title_list = user_title_list + ' & ' + user;
                } else {
                    user_title_list = user_title_list + ', ' + user;
                }
            }

        })
    }
    return user_title_list;
}

function draw_notification(data, append, newN = '') {
    // console.log(1018, data);
    // console.log(1019, JSON.parse(data.body));
    if (!$('#archiveNotification').hasClass('active')) {

        if (data.is_delete != null) {
            if (data.is_delete.indexOf(user_id) > -1) {

                return false;
            }
        }
    }
    var notification_by = findObjForUser(data.created_by).fullname;
    if (data.created_by == user_id) {
        notification_by = 'You'
    }
    var unreadClass = '';
    if (data.seen_users == null) {
        data.seen_users = [];
    }
    // if(data.seen_users.indexOf(user_id) != -1)
    // 	unreadClass = 'unreadNoti';

    var msg_body = '';
    if (data.type == 'room_delete') {
        msg_body = '"' + data.title + '" room has been deleted.';
        //msg_body = '"'+data.title +'" room has been deleted by '+ notification_by +' on '+moment(data.created_at).format('DD-MM-YYYY') +' at '+ moment(data.created_at).format('LT');
    } else if (data.type == 'remove_conv_member') {
        // console.log('remove_conv_member',data);
        var thisdata = JSON.parse(data.body);
        var user_title_list = getuserNameList(thisdata);
        if (thisdata.new_user.indexOf(user_id) > -1) {
            msg_body = 'You have been removed from "' + data.title + '" room.';
        } else {
            msg_body = notification_by + ' removed "' + user_title_list + '" in "' + data.title + '" Room.';
        }
    } else if (data.type == 'add_conv_member') {
        // console.log('add_conv_member',data);
        var thisdata = JSON.parse(data.body);
        var user_title_list = getuserNameList(thisdata);
        msg_body = notification_by + ' added "' + user_title_list + '" in "' + data.title + '" Room.'
    } else if (data.type == 'add_team_member') {
        var thisdata = JSON.parse(data.body);
        var user_title_list = getuserNameList(thisdata);
        if (thisdata.new_user.indexOf(user_id) > -1) {
            msg_body = 'Welcome to "' + data.title + '" Team! You have been added as a "Member".   <a href="/">Click here to refresh your account.</a>';
        } else {
            msg_body = notification_by + ' added "' + user_title_list + '" in "' + data.title + '" Team.';
        }
    } else if (data.type == 'make_admin') {
        var thisdata = JSON.parse(data.body);
        var user_title_list = getuserNameList(thisdata);

        if (thisdata.new_user.indexOf(user_id) > -1) {
            msg_body = 'You are now an admin of "' + data.title + '" room.';
        }
    } else if (data.type == 'make_member') {
        var thisdata = JSON.parse(data.body);
        var user_title_list = getuserNameList(thisdata);

        if (thisdata.new_user.indexOf(user_id) > -1) {
            msg_body = 'Your admin access level to "' + data.title + '" room has been revoked.';
        }
    } else if (data.type == 'checklist_changes') {
        var thisdata = JSON.parse(data.body);
        // var user_title_list = getuserNameList(thisdata);
        if (data.title == 'status_change') {
            msg_body = notification_by + ' changed the status of "' + thisdata.checklist_title + '" checklist.';
        } else if (data.title == 'edit_checklist') {
            msg_body = notification_by + ' edited and item of "' + thisdata.checklist_title + '" checklist.';
        } else if (data.title == 'new_assignee') {
            msg_body = notification_by + ' assigned you on "' + thisdata.item_title + '" item in "' + thisdata.checklist_title + '" checklist.';
        } else if (data.title == 'remove_assignee') {
            msg_body = notification_by + ' removed you on "' + thisdata.item_title + '" item in "' + thisdata.checklist_title + '" checklist.';
        } else if (data.title == 'change_due_date') {
            msg_body = notification_by + ' changed due date on "' + thisdata.item_title + '" item in "' + thisdata.checklist_title + '" checklist.';
        } else if (data.title == 'alternative_assign_to') {
            msg_body = notification_by + ' added you as a alternate assignee on "' + thisdata.item_title + '" item in "' + thisdata.checklist_title + '" checklist.';
        } else if (data.title == 'ttlRequest') {
            // msg_body = notification_by +' request you for due date extension in "'+ thisdata.checklist_title +'" checklist.';
            // User-A has requested to change the assignment due date named " a" in Test.
            msg_body = notification_by + ' has requested to change the assignment due date named "' + thisdata.item_title + '" in "' + thisdata.checklist_title + '".';
        } else if (data.title == 'cancel_request') {
            // msg_body = notification_by +' request you for due date extension in "'+ thisdata.checklist_title +'" checklist.';
            // User-A has requested to change the assignment due date named " a" in Test.
            msg_body = notification_by + ' has Cancel Extension request named "' + thisdata.item_title + '" in "' + thisdata.checklist_title + '".';
        } else if (data.title == 'ttlAccepted') {
            // msg_body = notification_by +' accept your due date extension request in "'+ thisdata.checklist_title +'" checklist.';
            // User-A has accepted the assignment named " a" in Test
            msg_body = notification_by + ' has accepted the assignment named "' + thisdata.item_title + '" in "' + thisdata.checklist_title + '".';
        } else if (data.title == 'ttlApprove') {
            // User-A has accepted the assignment named " a" in Test
            // msg_body = notification_by +' has accepted the assignment named "'+thisdata.item_title+'" in "'+ thisdata.checklist_title +'".';
            msg_body = notification_by + ' approved your due date extension request  named "' + thisdata.item_title + '" in "' + thisdata.checklist_title + '".';
        } else if (data.title == 'ttlCancelled') {
            if (thisdata.type == 'reject') {
                msg_body = notification_by + ' cancelled your due date extension request in "' + thisdata.checklist_title + '" checklist.';
            } else if (thisdata.type == 'decline') {
                // User-A has declined the assignment named " a" in Test
                msg_body = notification_by + ' has declined the assignment named "' + thisdata.item_title + '" in "' + thisdata.checklist_title + '".';
            } else if (thisdata.type == 'cancel_decline') {
                // User-A has declined the assignment named " a" in Test
                msg_body = notification_by + ' has Cancel decline the assignment named "' + thisdata.item_title + '" in "' + thisdata.checklist_title + '".';
            }
        } else if (data.title == 'ttlDelete') {
            msg_body = notification_by + ' deleted "' + thisdata.item_title + '" item from "' + thisdata.checklist_title + '" checklist.';
        } else if (data.title == 'addItem') {
            msg_body = notification_by + ' Added "' + thisdata.item_title + '" item in "' + thisdata.checklist_title + '" checklist.';
        } else if (data.title == 'updateItem') {
            msg_body = notification_by + ' Updated "' + thisdata.item_title + '" item in "' + thisdata.checklist_title + '" checklist.';
        } else if (data.title == 'updateTitleAndStatus') {
            msg_body = notification_by + ' Updated "' + thisdata.checklist_title + '" checklist.';
        }
    }
    if (newN == 'new') {
        var thisdata = JSON.parse(data.body);
        var toastHtml = getToastHtml(msg_body, thisdata);

        $('#customToastContainer').prepend(toastHtml);
        if (data.title != "new_assignee" &&
            data.title != "alternative_assign_to" &&
            data.title != "updateTitleAndStatus" &&
            data.title != "remove_assignee" &&
            data.title != "edit_checklist" &&
            data.title != "ttlCancelled" &&
            data.title != "ttlDelete" &&
            data.title != "ttlAccepted" &&
            data.title != "ttlApprove" &&
            data.title != "status_change" &&
            data.title != "change_due_date" &&
            data.title != "addItem" &&
            data.title != "updateItem" &&
            data.title != "ttlRequest") {
            $('#groupChatContainer').removeClass('editChecklist_active');
        }

        if ($('#conv' + thisdata.conversation_id).hasClass('sideActive')) {
            if (!$('.msg_id_' + thisdata.msg_id).hasClass('editable_checklistMsg')) {
                // $('.msg_id_'+thisdata.msg_id).addClass('pending_msg');
                if (data.title == "new_assignee" ||
                    data.title == "alternative_assign_to" ||
                    data.title == "remove_assignee" ||
                    data.title == "edit_checklist" ||
                    data.title == "ttlCancelled" ||
                    data.title == "ttlDelete" ||
                    data.title == "change_due_date" ||
                    data.title == "ttlRequest") {
                    has_incompleted_checklist_yet();
                }
            }
        }
        // console.log(1107, data.title)
    } else {
        if (msg_body !== '') {
            /* Start Date Group By */
            var msg_date = moment(data.created_at).calendar(null, {
                sameDay: '[Today]',
                lastDay: '[Yesterday]',
                lastWeek: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; },
                sameElse: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; }
            });

            var temp_date = msg_date;
            var unread_noti = '<div class="msg-separetor-unread" data-length="1" ><p>1 New Notification</p></div>';
            if ($('#notification_body').find('.msg-separetor-unread').length == 0) {
                if (unreadClass != '') {
                    $('#notification_body').append(unread_noti);
                }
            } else {
                if (unreadClass != '') {
                    var c = parseInt($('#notification_body').find('.msg-separetor-unread').attr('data-length')) + 1;
                    $('#notification_body').find('.msg-separetor-unread').attr('data-length', c).find('p').text(c + ' New Notification');
                }
            }

            // if (append) {
            $.each($('#notification_body').find('.msg-separetor'), function(k, v) {
                if ($(v).text() == msg_date) {
                    msg_date = null;
                    return 0;
                }
            });
            if (msg_date !== null && $('#notification_body').find('.msg-separetor-unread').length == 0) {
                var date_html = '<div class="msg-separetor" data-format="' + moment(data.created_at).format('YYYY-MM-DD') + '" data-date="' + msg_date + '"><p>' + msg_date + '</p></div>';

                if (append) {
                    $('#notification_body').append(date_html);
                }
            }
            // }
            /* End Date Group By */
            var goption = '';
            var goptionFun = '';
            if (data.type == 'checklist_changes') {
                var thisdata = JSON.parse(data.body);
                goptionFun = 'onclick="gothismsgCov(\'' + thisdata.conversation_id + '\',\'' + thisdata.msg_id + '\')"';
                goption = '<div  data-balloon="View this checklist" data-balloon-pos="left"><div class="gonoti" onclick="gothismsgCov(\'' + thisdata.conversation_id + '\',\'' + thisdata.msg_id + '\')" data-noti="' + data.notification_id + '"></div></div>';
            }

            var html = '<div class="msgs-form-users ' + unreadClass + '" id="noti_id_' + data.notification_id + '" data-notification="' + data.notification_id + '" onmouseenter="removeUnreadNoti(this)">';
            html += '<div class="msg-user-photo" ' + goptionFun + '>';
            //html +=  '<span style="cursor:pointer" onclick="actionMentionUser(\''+data.created_by+'\')" class="user_name'+data.created_by+' conv_nickname_'+data.created_by+'">'+findObjForUser(data.created_by).fullname+'</span><span class="msg-time">'+moment(data.created_at).format('DD-MM-YYYY') +' '+ moment(data.created_at).format('LT')+'</span>';
            html += '<img class="" src="' + file_server + 'profile-pic/Photos/' + findObjForUser(data.created_by).img + '" alt="communication2@1579613569165.png" ></div>';

            html += '<div class="user-msg" ' + goptionFun + '>' + '<h4><span style="cursor:pointer"  class="user_name' + data.created_by + ' conv_nickname_' + data.created_by + '">' + findObjForUser(data.created_by).fullname + '</span><span class="msg-time" data-balloon="Created on ' + moment(data.created_at).local().format('DD-MM-YYYY') + '" data-balloon-pos="up"> @ ' + moment(data.created_at).local().format('DD-MM-YYYY') + ' ' + moment(data.created_at).local().format('LT') + '</span> </h4>' + '<div class="plain_text" >' + msg_body + '</div></div>';

            html += '<div class="msgs-form-users-options"><div data-balloon="Remove this notification" data-balloon-pos="left" ><div class="delete_noti" onclick="notiRemoveForMe(this)" data-noti="' + data.notification_id + '"></div></div>' + goption + '</div>';
            html += '</div>';
            if (append) {
                $('#notification_body').append(html);
            } else {
                $('#notification_body').prepend(html);
                if (msg_date !== null && $('#notification_body').find('.msg-separetor-unread').length == 0) {
                    var date_html = '<div class="msg-separetor" data-format="' + moment(data.created_at).format('YYYY-MM-DD') + '" data-date="' + msg_date + '"><p>' + msg_date + '</p></div>';
                    $('#notification_body').prepend(date_html);
                }
            }

        }
    }
    // console.log(typeof(data.body))
    // check_add_conv_counter(JSON.parse(data.body));
}

function check_add_conv_counter(data) {
    if (data.msg_id != "" && msg_checklist_counter.indexOf(data.msg_id) == -1) {
        msg_checklist_counter.push(data.msg_id);
        var c = Number($("#conv" + data.conversation_id).find(".unreadMsgCount").text());
        // console.log(1249,c)
        $("#conv" + data.conversation_id).find(".unreadMsgCount").html(c + 1);
        $("#conv" + data.conversation_id).attr("data-nom", c + 1);
        conv_into_top(data.conversation_id);
    }
}

function removeThisToast(elm) {
    $(elm).parent('.toastContainer').remove();
}

function getToastHtml(string, data) {
    var html = '';
    html += '<div class="toastContainer" data-type="checklist" close-time="' + moment().add(5, 'seconds').unix() + '">'
    html += '<div class="toastMsg" onclick="gothismsgCov(\'' + data.conversation_id + '\',\'' + data.msg_id + '\'); removeThisToast(this)">' + string + '</div>'
    html += '<div class="closeIcon" onclick="removeThisToast(this)"></div>'
    html += '</div>';

    return html;
}
socket.on('newNotification', function(data) {
    // console.log('User_id', user_id);
    console.log('data', data);
    if (data.receive_users.indexOf(user_id) > -1) {
        var noti_body = JSON.parse(data.body);
        // console.log(818, data);
        if ($('#NotificationContainer').is(':visible')) {
            draw_notification(data, true);
            seenUnreadNotification();
        } else {
            console.log('check notificaiton 1');
            playNotification(noti_body.conversation_id);
            // console.log(55555)
            var u_length = $('#notificaitonClickItem').find('.unreadMsgCount').text();
            if (u_length != '') {
                u_length = parseInt(u_length)
            } else {
                u_length = 0;
            }
            // console.log(1283,(u_length + 1))
            $('#notificaitonClickItem').find('.unreadMsgCount').html((u_length + 1));
            draw_notification(data, true, 'new');

        }
        check_add_conv_counter(noti_body);
        if (noti_body.conversation_id == conversation_id) {
            setTimeout(function() {
                has_incompleted_checklist_yet();
            }, 1000);
        }
    }
});


function welcome_freeli(type = false) {
    var welcome_msg = '<div class=" msgs-form-users welcome_freeli" id="anwarSir_notificaiton"> <div class="plain_text" >' +
        '<h1 class="layer">Welcome to Workfreeli!</h1>' +
        '<p>Workfreeli is the smart business management application that reorganizes your work world and combines all your channels into a single platform. It is a new business application that OHS Global Inc. has been developing and we are happy to begin implementation of this application within our internal teams. To kick off, we’re launching the Connect platform. </p><br>' +
        '<p style="margin-top:16px;font-weight:600">With Workfreeli Connect, you can:</p>' +
        '<ul>' +
        '<li>Connect one-on-one with team members or create a Room to communicate with multiple people</li>' +
        '<li>Send instant messages, make audio calls, have video conferences</li>' +
        '<li>Create checklists and share any type of file</li>' +
        '<li>Easily edit privacy settings to change who can join conversations and view content</li>' +
        '<li>Take file management to a whole other level by tagging any type of content</li>' +
        '</ul>' +
        '<p>Stay tuned for more! Over the next few weeks, we will be rolling out additional functions and features.</p>' +
        '<p>As we’re still under development, please feel free to direct message me of any bugs or issues you find.</p>' +
        '<p style="margin-top:40px">Enjoy!</p>' +
        '<p>Anwar Ali</p>' +
        '</div></div>';
    if (type) {
        $('#notification_body').prepend(welcome_msg);
    } else {

        $('#notification_body').append(welcome_msg);
    }

}
var scroll_down_fun = (type) => {
    if (type == 'notification') {
        if ($('#notification_body').find('.msg-separetor-unread').length == 0) {
            $('#notification_body').animate({ scrollTop: $('#notification_body').prop("scrollHeight") }, 0);
        } else {
            // var posArray = $('#notification_body').find('.msg-separetor-unread:last').positionedOffset();
            // $('#notification_body').scrollTop = posArray[1];

            var genunixid = 'unredbar' + moment().unix();
            $('#notification_body').find('.msg-separetor-unread').last().attr('id', genunixid);
            var elmnt = document.getElementById(genunixid);
            elmnt.scrollIntoView();
        }
    }
}

function cancelAllFilter() {
    $.each(allFilteredItem, function(k, v) {
        if (v == 'flag') {
            $('#c_flag_ed').remove();
            $('.filterFlagged_msg').removeClass('activeComFilter');
            $('#flagPanelContainer').hide();
        } else if (v == 'checklist') {
            $('#f_checklist').remove();
            $('#f_checklist_pending').remove();
            $('#f_checklist_flagged').remove();
            $('#filterChecklist_msg').removeClass('activeComFilter');
        } else {
            $('#c_tag_item_' + v).remove();
            $('.filter_tag_' + v).removeClass('active');
        }
    });
    allFilteredItem = [];
    filterConversationLastT();
    $('#filterOnly_pending_Checklist').removeClass('activeComFilter');
    $('#filterFlagged_checklist').removeClass('activeComFilter');
    $('#connectAsideContainer').find('.backToChat.hidden').hide();
}
var start_conv_trigger = false;
var loadConversation = '';
var myAllNotificationdata = [];
var notification_draw_count = 0;

function archiveNotification() {
    if ($('#archiveNotification').hasClass('active')) {
        start_conversation('notification');
    } else {
        $('#archiveNotification').addClass('active');
        conversation_id = 'notificaiton';
        if (!$('#groupChatContainer').hasClass('hideforNotificaiton')) {
            $('#groupChatContainer').addClass('hideforNotificaiton');
        }
        $('.side_bar_list_item li').removeClass('sideActive');
        $('#notificaitonClickItem').addClass('sideActive');
        $('#updateUserProfile').hide();
        $('#notification_body').html("").show();

        $('#notificaitonClickItem').find('.unreadMsgCount').html('');
        socket.emit('my_all_notification', { user_id: user_id }, function(res) {
            socket.emit('update_notification', { user_id: user_id, update_type: 'update_many_seen' });
            $('#NotificationContainer').css('display', 'block');
            // welcome_freeli();
            var data = _.orderBy(res.data, ['created_at'], ['asc']);
            var i = 0;
            data = data.reverse();
            myAllNotificationdata = data;
            notification_draw_count = 0;
            $.each(data, function(k, v) {
                if (i < 20) {
                    // console.log(1563,v.is_delete)
                    if (v.is_delete != null) {
                        if (v.is_delete.indexOf(user_id) > -1) {
                            draw_notification(v, false);
                            i++;
                            notification_draw_count++;
                        }
                    }
                }
            });


            if (i == 0) {
                if (!$('#anwarSir_notificaiton').is(':visible')) {
                    welcome_freeli(true);
                }
            }
            if (i > 0) {
                scroll_down_fun('notification');
            }
        });
        $('#defaultRoom').remove();
        $('#createChannelContainer').hide();
        $('#NotificationContainer .chatting-date-header').show();
        $('body').removeClass('room_closed');
        $("#tips_body").hide();
    }
}

function get_conversation_obj(id) {
    if ($("#conv" + id).length == 1) {
        let participants = [];
        let participants_admin = [];
        let participants_without_me = [];
        $.each($("#conv" + id).find(".convParticipantsname"), function(k, v) {
            participants.push($(v).attr("data-id"));
            if ($(v).attr("data-id") != user_id)
                participants_without_me.push($(v).attr("data-id"));
            if ($(v).hasClass("conv_admin"))
                participants_admin.push($(v).attr("data-id"));
        });
        return {
            conversation_id: id,
            conversation_title: $("#conv" + id).attr("data-name"),
            conversation_type: $("#conv" + id).attr("data-conversationtype"),
            root_conv_id: $("#conv" + id).attr("data-root_conv_id"),
            privacy: $("#conv" + id).attr("data-privacy"),
            conv_img: $("#conv" + id).attr("data-img"),
            participants: participants,
            participants_admin: participants_admin,
            participants_without_me: participants_without_me
        };
    } else {
        return false;
    }
}

var start_conversation = (event) => {
    // debugger;
    $('.chat-head-calling').fadeOut('fast').addClass('disable-clicking');
    if ($('#flagPanelContainer').is(':visible')) {
        $('#flagPanelContainer').hide();
        $('.backToChat.hidden').hide();
        $('body').removeClass('filtered_msg');
        $('.filterFlagged_msg').removeClass('activeComFilter');
        removeA(allFilteredItem, 'flag');
        $('#groupChatContainer').removeClass('active_flagFilter');

    }
    if($('#activityPanelContainer').is(':visible')){
        $('#activityPanelContainer').hide();
    }
    $('#msg').removeClass('secret_div');
    if ($('#workFreeliToaster').attr('data-id') == 'link') {
        $('#workFreeliToaster').attr('data-id', '');
    }
    if ($(event.target).attr('data-conversationtype') == 'group') {
        $('.private_msg_icon').show();
        $('#privateChatsOnly').show();
        $('#privateChatsOnly').removeClass('active'); $('#msg-container').attr('has-private','false');
        // $('#msg').css('padding-left','34px');
        document.getElementById("msg").style.paddingLeft = "34px";
    } else {
        $('.private_msg_icon').hide();
        $('#privateChatsOnly').hide();
        $('#privateChatsOnly').removeClass('active'); $('#msg-container').attr('has-private','false');
        // $('#msg').css('padding-left','12px');
        document.getElementById("msg").style.paddingLeft = "12px";
    }

    getAllShortUrl();
    var id = $('.editable_checklistMsg').attr('data-msgid');
    // if (($('.msg_id_'+id).find('.checkListItem.needUpdate').length>0 || $('.msg_id_'+id).find('.checkListItem.new_item .checkBoxTitle').text() != '') && !$('#save_warning').is(':visible')) {
    // 	$('#save_warning').find('.btn-cancel').attr('onclick','cancelEditAction(this,\''+id+'\')');
    // 	$('#save_warning').find('#save_unsaved').attr('onclick','editMessageSaveAction(\''+id+'\',\'remove_msg\')');
    // 	// $('#save_warning').find('#save_unsaved').attr('onclick','saveChecklistStatusAndTitle(\''+id+'\')');
    // 	$('#save_warning').css('display','flex');
    // 	return;
    // }
    $('#sub_conv_holder').html("");
    root_conv_id = null;
    $('#roomIdDiv').attr('data-privecy', "")
    $('.side_bar_list_item li').removeClass('sideActive')
    $('.subconversation_create').removeClass('thisIsInactive');
    $('#groupChatContainer').removeClass('has_sub_conv');
    $('.selectedMsgAction').hide();
    // debugger

    if (!$('#filterFlagged_msg_2').hasClass('activeComFilter')) {
        if (!secretTriggerd && !threadTriggerd) { hideSearchForHead(); }
    }

    if (socket.connected) {
        console.log('socket.io is connected.');
    } else {
        socket.open();
        if (socket.connected) {
            console.log('socket.io is reconnected.');
        } else {
            $("#conv" + $(event.target).attr("data-conversationid")).trigger("click");
        }
    }
    $('.side_bar_list_item li').css('pointer-events', 'none');
    setTimeout(function() {
        $('.side_bar_list_item li').css('pointer-events', 'unset');
    }, 1000);
    $('body').removeClass('checklistFilterView')
    $('#personalConnectActive').addClass('blur_head');
    $('#checkListCounter').attr('data-val', 0);
    $('#checklistGridView').removeClass('active');
    $('#checklistListView').removeClass('active');
    // $('#groupChatContainer').removeClass('checklistActive_list_view_origin');
    // $('#groupChatContainer').removeClass('checklistActive_grid_view');
    $('#checklistListVieworigin').removeClass('active');
    $('#workFreeliToaster').attr('data-id', '');
    $('#FixedMsgBody').hide();
    $('#flagged_icon_filter').attr('data-count', 0);
    $('#groupChatContainer').removeClass('editChecklist_active');
    $('.Noti_sounds').removeClass('active').attr('data-status', 0);
    // console.log(1564,loadConversation)
    // console.log(1565,event)
    if (event != 'notification' && event != 'task_assignment') {
        if (loadConversation == $(event.target).attr("data-conversationid")) {
            return false;
        } else {
            loadConversation = $(event.target).attr("data-conversationid");
        }
    }

    $('#threadReplyPopUp').hide();
    // console.log(event,930)
    // $('.video-call,.voice-call,.join-call').hide();
    $(event.target).removeClass('sideActive');
    var newMsgCounter = $(event.target).attr('data-nom');
    // showFreeliToaster(false);
    // if($(event.target).find('.unreadMsgCount').text() !== '' && $(event.target).find('.unreadMsgCount').is(':visible')){
    // 	if($('#filterUnread_msg').hasClass('activeComFilter')){
    // 		//backToChat();
    // 	}
    // 	else if(allFilteredItem.length > 0){
    // 		// cancelAllFilter();
    // 		if($(event.target).attr('data-nom') !== ''){
    // 			var html = 'You have '+$(event.target).attr('data-nom')+' new message(s) in this channel. <sapn onclick="newMsgClickFun(event)" class="goNewMsgToast">Click here to see all those message(s).</span>'
    // 			showFreeliToaster(true,msg)
    // 		}
    //
    //
    // 	}
    // }

    $('.moreMenuPopup').hide();
    $('#callNotifications').hide();

    if ($('.info_tooltip').is(':visible')) {
        $('.i-conv').removeClass('active');
        $('.info_tooltip').removeClass('active');
        $('.info_tooltip').hide();
    }
    // if(isTabActive){
    // 	if (unreadinactiveCounter > 0) {
    // 		$('#titleTag').text(pageTitleOn);
    // 		unreadinactiveCounter = 0;
    // 	}
    // }
    if (!$('#filterFlagged_msg_2').hasClass('activeComFilter')) {
        showFreeliToaster(false);
    }
    if (!threadTriggerd) {
        $('#threadChatsOnly').removeClass('active');
    }
    if (!secretTriggerd) {
        $('#privateChatsOnly').removeClass('active'); $('#msg-container').attr('has-private','false');
    }
    $('#updatechannelContainer').hide();
    $('#mediaFilePreview').hide();
    $('#mediaFilePreview').attr('view-type', '');
    $('.media-file-popup').hide();
    $('.image-popup-slider').hide();
    // console.log(1621, event)
    if (event == 'notification') {
        $('#archiveNotification').removeClass('active');
        conversation_id = 'notificaiton';
        if (!$('#groupChatContainer').hasClass('hideforNotificaiton')) {
            $('#groupChatContainer').addClass('hideforNotificaiton');
        }
        $('.side_bar_list_item li').removeClass('sideActive').removeClass('selected');
        $('#notificaitonClickItem').addClass('sideActive');
        $('#updateUserProfile').hide();
        $('#notification_body').html("").show();

        $('#notificaitonClickItem').find('.unreadMsgCount').html('');
        socket.emit('my_all_notification', { user_id: user_id }, function(res) {
            // console.log(1638,'updateNotiseen')
            socket.emit('update_notification', { user_id: user_id, update_type: 'update_many_seen' });
            $('#NotificationContainer').css('display', 'block');
            // welcome_freeli();
            var data = _.orderBy(res.data, ['created_at'], ['asc']);
            var i = 0;
            data = data.reverse();
            myAllNotificationdata = data;
            notification_draw_count = 0;
            $.each(data, function(k, v) {
                if (i < 20) {
                    // console.log(1563,v.is_delete)
                    if (v.is_delete != null) {
                        if (v.is_delete.indexOf(user_id) == -1) {
                            draw_notification(v, false);
                            i++;
                            notification_draw_count++;
                        }
                    } else {
                        draw_notification(v, false);
                        i++;
                        notification_draw_count++;
                    }
                }
            });
            seenUnreadNotification();


            if (i == 0) {
                if (!$('#anwarSir_notificaiton').is(':visible')) {
                    welcome_freeli(true);
                }
            }
            if (i > 0) {
                scroll_down_fun('notification');
            }
        });
        $('#defaultRoom').remove();
        $('#createChannelContainer').hide();
        $('#NotificationContainer .chatting-date-header').show();
        $('body').removeClass('room_closed');
        $("#tips_body").hide();
        $('#taskAss_pagination').remove();
        return false;
    } else if (event == 'task_assignment') {
        cancelAllFilter();
        showFreeliToaster(false);
        activeFlagFilterConv = "";
        $('#groupChatContainer').removeClass('active_flagFilter');
        $('#workFreeliToaster').attr('data-id', '');
        allFilteredItem = [];
        allConvIdforFilter = [];
        $(".msg-separetor").hide();
        backToMediaTab();
        closeMediaPopup();

        $('.side_bar_list_item li').removeClass('sideActive').removeClass('selected');
        $('#groupChatContainer').removeClass('hideforNotificaiton');
        $('#NotificationContainer').css('display', 'none');
        $('#task_assignment').addClass('sideActive');
        $('#conv_title .converstaion_name').text('Task List Panel').addClass('ts');
        var allConv = [];
        $("#onscrollloading").show();
        $('body').removeClass('chklst_incompleted');
        // $('body').removeClass('_draw_prepend');

        // $('#groupChatContainer').removeClass('checklistActive_grid_view').removeClass('task_assignment');
        if (!$('#groupChatContainer').hasClass('task_assignment')) {
            $('#groupChatContainer').addClass('task_assignment');
            $('body').addClass('task_assignment');
            $('#groupChatContainer').addClass('checklistActive_list_view_origin');
        }
        $('#checklistListView').removeClass('active');
        $('#checklistGridView').removeClass('active');
        $('#msg-container').attr('data-checklist', true);

        $.each($('[id^=conv]'), function(k, v) {
            if ($(v).is("li") && allConv.indexOf($(v).attr('data-conversationid')) == -1)
                allConv.push($(v).attr('data-conversationid'));
        });

        var data = {
            user_id: user_id,
            convlist: allConv,
            company_id: company_id
        }

        socket.emit('my_all_task_assignment', data, function(res) {
            console.log(1719,res.result);
            if (res.status) {
                my_all_task_assignment = [];
                $.each(res.result, function(k, v) {
                    if (v.has_delete == null) {
                        v.has_delete = [];
                    }
                    if (v.has_hide == null) {
                        v.has_hide = [];
                    }

                    if (v.has_delete.indexOf(user_id) == -1 && v.has_hide.indexOf(user_id) == -1 && v.has_delete.indexOf('delete_for_all') == -1) {
                        if (checkguestMsg(v) && $("#conv" + v.conversation_id).length == 1) {
                            my_all_task_assignment.push(v);
                        }
                    }
                });

                if (my_all_task_assignment.length == 0) {
                    $('#msg-container').attr('data-checklist', false);
                    $("#onscrollloading").hide();
                } else if (my_all_task_assignment.length > 0) {
                    // my_all_task_assignment = _.orderBy(my_all_task_assignment, ["last_update_time"], ["desc"]);
                    my_all_task_assignment = _.orderBy(my_all_task_assignment, ["created_at"], ["desc"]);
                    my_all_task_assignment_checklist_items = res.checklist;

                    let msgids = [];
                    $.each(my_all_task_assignment_checklist_items, function(ck, cv) {
                        if (checklistCounterLenthString([cv]) > 0) {
                            if (msgids.indexOf(cv.msg_id) == -1)
                                msgids.push(cv.msg_id);
                        }
                    });
                    // console.log(1754, msgids);
                    for (let i = 0; i < msgids.length; i++) {
                        let key = _.findIndex(my_all_task_assignment, function(o) { return o.msg_id == msgids[i]; });
                        if (key > 0) {
                            let swap = my_all_task_assignment[key];
                            my_all_task_assignment.splice(key, 1);
                            my_all_task_assignment.splice(0, 0, swap);
                        }
                        // console.log(1757, key);
                    }
                    $('.searchAndFilter').removeAttr('style');
                    $('.checklistListViewHeader li').removeClass('active');
                    $('#msg-container').html('');
                    $('#taskList_panel').html('');
                    gotoChecklistTaskPage(1, 'off', 'first');
                    $("#onscrollloading").hide();
                } else {
                    $('#msg-container').html('');
                    $("#onscrollloading").hide();
                }
            }
        });
        $('.side_bar_list_item li').css('pointer-events', 'unset');
        return false;
    } else {
        $('#groupChatContainer').removeClass('hideforNotificaiton');
        $('#groupChatContainer').removeClass('task_assignment');
        $('body').removeClass('task_assignment');
        $('#groupChatContainer').removeClass('checklistActive_list_view_origin');
        $('#groupChatContainer').removeClass('checklistActive_grid_view');
        $('#conv_title .converstaion_name').removeClass('ts');
        $('#task_assignment').removeClass('sideActive');
        $('#NotificationContainer').css('display', 'none');
        $('#taskAss_pagination').remove();
    }

    $('#secretUserList').html('');
    if ($(event.target).hasClass('mute_bell')) {
        return false;
    }

    if ($(event.target).hasClass('protected')) {
        return false;
    }

    if ($(event.toElement).hasClass('sideActive')) {
        if ($(event.target).hasClass('conv_closed')) {
            return false;
        }
    }
    // console.log(1032,activeFlagFilterConv,$(event.target).attr("data-conversationid"))
    scrollMsgUp = true;

    // lasttime_msg_id = '';
    $('.send-msgs').show();
    $('#clear_all').show();
    $('#selectMessage').show();
    $('#leaveThisRoom').show();
    $('#closeThisRoom').show();
    $('#viewMuteNotification').show();
    $('#clear_all_deleted_msg').show();

    $(".send-msgs .send-emoji").show();
    $(".send-msgs .send-attach-file").show();
    $(".send-msgs .circle_up_arrow").show();
    $(".send-msgs #msgCheckListBtn").show();

    if (activeFlagFilterConv !== '') {
        if (allFilteredItem.indexOf('flag') > -1) {
            activeFlagFilterConv = $(event.target).attr("data-conversationid");

            $('#groupChatContainer').addClass('active_flagFilter');
            // console.log('Flaged active');
        }
        // if($(event.target).attr("data-conversationid") !== activeFlagFilterConv){
        // 	if($('#filterFlagged_msg_2').hasClass('activeComFilter')){
        // 		$('#filterFlagged_msg_2').removeClass('activeComFilter');
        // 		showFreeliToaster(false);
        // 		if(!$('#filterFlagged_msg').hasClass('activeComFilter')){
        // 			console.log(1047,'removeFilter')
        // 			removeA(allFilteredItem,'flag');
        // 		}
        // 	}
        // }
    } else {
        $('#groupChatContainer').removeClass('active_flagFilter');
    }
    $("#msg").css({ 'opacity': '1', 'border': '1px solid var(--PrimaryC)' });

    $('#callNotifications').removeClass('active');
    $('#callnotificationCloseLabel').hide();
    $('body').removeClass('callnotificationFilter');
    $('#msg-container').attr('call-filter', 'false');
    $('#msg-container').attr('data-call', 'false');
    $('#unredScrollMsg').removeClass('active').attr('data-value', 0);
    updatedMsgArr = [];
    mention_div_action('hide');
    // $('.side_bar_list_item li').removeClass('sideActive');
    filesCount = 0;
    if ($('#callNotifications').hasClass('active')) {
        $('#callNotifications').trigger('click');
    }
    $('#conversationFileView').text('Files (0)');
    // console.log(998,$('.threadasideContainer').is(':visible'))
    if ($('.threadasideContainer').is(':visible')) {
        $(event.toElement).removeClass('sideActive');
        event.preventDefault();
        event.stopImmediatePropagation();
        // return false;
    }
    if ($('.threadasideContainer').is(':visible')) {
        $('#conv' + $(event.target).attr("data-conversationid")).removeClass('sideActive')
    }
    if ($(event.toElement).hasClass('sideActive')) {

        closeRightSection();
        if ($(event.target).attr("data-conversationid") !== user_id) {
            $('#callNotifications').show();
        }
        if (!$('.threadasideContainer').is(':visible')) {
            if (allFilteredItem.length) {
                $('#conv' + $(event.target).attr("data-conversationid")).find('.unreadMsgCount').html('');
            }
        }

        onlydrawMsg($(event.target).attr("data-conversationid"))
        return false;
    } else {

        // $('body').addClass('room_closed');
        $('#roomIdDiv').next('h4').hide();

    }
    //$('#groupChatContainer .chat-head-name h4').html('<img src="/images/basicAssets/Users.svg" alt=""> <span id="totalMember"></span> | <span id="topicTypeName"></span>')
    $('#createIssueBtn').removeClass('closeIssue').addClass('openIssue');
    $('#groupChatContainer').removeClass('protected');
    $('.send-msgs').removeClass('issueActive');
    start_scroll = true;
    $('#groupChatContainer').attr('msg-edit', false);
    $('.msgs-form-users-options').removeClass('editAction');
    $('#msg-container').removeAttr('data-checklist');
    $('#msg-container').attr('has-msg', true);
    $('#checkListCounter').parent('.headFiles').hide();
    $('#optionalChecklist').removeClass('show').addClass('hide');
    $('#checkListCounter').removeClass('active');
    $('#groupChatContainer').removeClass('checklistActive');
    $('#checklistActiondiv').removeClass('active');
    $('#selectedMsgActionDiv').removeClass('active');
    $('#topicTypeName').html("");
    $('.msg-separetor-unread').remove();
    if ($(event.target).hasClass('triggered')) {
        $('.side_bar_list_item li').removeClass('triggered');
    } else {
        $('.side_bar_list_item li').removeClass('triggered');
        PVM = false;
    }
    // hideSearchForHead();
    if (!PVM) {
        $('.connect_right_section').hide();
        $('#groupChatContainer').show();
    }
    $('#roomIdDiv').removeAttr('data-balloon-pos').removeAttr('data-balloon');
    $('#roomIdDiv .msg-user-photo img').removeClass('viewTooltip');
    if ($('#msg').attr('data-checklist') == 'true') {
        $('#msgCheckItemContainer').remove();
        $('#msg').attr('data-checklist', 'false');
        $('#msg').attr('contenteditable', true);
        $('#msgCheckListBtn').removeClass('active');
        $('#msg').remove('.msgCheckListContainer');
        $('#msg').focus();
    }
    $('#top-date').text('');
    selectedMessages = [];
    $('#selectMessage').removeClass('selected');
    $('#selectMessage').removeClass('activeComFilter');
    // $('#selectedMsgActionDiv').hide();
    $('#groupChatContainer').removeClass('selectAction');

    event.stopImmediatePropagation();
    var conversationid = conversation_id = $(event.target).attr("data-conversationid");
    $('#conv' + conversation_id).find('.unreadMsgCount').text('');
    checklist_pending_unread(conversation_id);
    forviewconv(conversationid);
    countAndGetchecklist();

    if (filterOnlyTagMsgATrigger !== conversation_id) {
        filterOnlyTagMsgATrigger = false;
        filterOnlyTagMsgA = [];
        if ($('#workFreeliToaster').is(':visible')) {
            // $('#workFreeliToaster').hide();
        }
        $('#containSelectedTag').html("");

    } else {
        $('#workFreeliToaster').attr('data-id', 'filterOnlyTagMsgATrigger');
        var msg = 'Showing Tagged messages(s) from this channel. Click the close button to go back.';
        showFreeliToaster(true, msg);
    }
    if (filterOnlyTagMsgA.length == 0) {
        if ($('#workFreeliToaster').is(':visible')) {
            // $('#workFreeliToaster').hide();
        }
    }
    if (user_id == conversation_id) {
        $('#callNotifications').hide();
    } else {
        $('#callNotifications').show();
    }
    if (conversationid != undefined) {
        loaderEndTime = moment(new Date()).format('mm:ms');
        pageCustomLoader(true);
        $('#mediaFilePreview').hide();
        $('#mediaFilePreview').attr('view-type', '');
        $('.media-file-popup').hide();
        $('.image-popup-slider').hide();
        $('#notificationPopup').attr('data-mute-id', '');
        var unreadThread = false;
        if ($(".threadasideContainer").is(":visible")) {
            unreadThread = true;
        } else {
            unreadThread = false;
        }
        // if ($(".threadasideContainer").is(":visible")) {
        // 	var rep_offset = "";
        // 	var rep_conv_id = $(event.target).attr("data-conversationid");
        // 	console.log(urrm_pn);
        // 	urrm_pn = _.sortBy(urrm_pn, ["root_conv_id",]);
        //
        // 	$.each(urrm_pn, function (urdk, urdv) {
        // 		if(urdv.is_seen){
        //
        // 		}else{
        // 			if ($('#conv' + rep_conv_id).attr('data-tmp_msgid') == undefined) {
        // 				if (urdv.root_conv_id == rep_conv_id) {
        // 					_rep_msg(urdv);
        // 					urrm_pn[urdk].is_seen = true;
        // 					console.log(1076,urrm_pn);
        // 					return false;
        // 				}
        // 			} else {
        // 				if (urdv.root_conv_id == rep_conv_id && urdv.root_msg_id == $('#conv' + rep_conv_id).attr('data-tmp_msgid')) {
        // 					_rep_msg(urdv);
        // 					urrm_pn[urdk].is_seen = true;
        // 					console.log(1076,urrm_pn);
        // 					return false;
        // 				}
        // 			}
        // 		}
        //
        // 	});
        // } else
        if (!$(event.target).hasClass('sideActive')) {
            // console.log(1209,allFilteredItem);
            adminArra = [];
            participants = [];
            if (!PVM) {

                if ($('#groupChatContainer').is(":visible") == false) {
                    $(".connect_right_section").hide();
                    $('#groupChatContainer').show();
                }
            }

            if ($("#defaultRoom").is(":visible")) {
                $("#defaultRoom").remove();
            }

            $('#msg').focus();

            var id = to = room_id = $(event.target).attr("data-id");
            var type = conversation_type = $(event.target).attr("data-conversationtype");
            $('body').attr('conv-type', conversation_type);
            var name = room_name = $(event.target).attr("data-name");
            room_img = $(event.target).attr("data-img");
            var img = room_img = $(event.target).attr("data-img");
            var subtitle = $(event.target).attr("data-subtitle");
            var tm = $(event.target).attr("data-tm");
            var status = $(event.target).find('.online, .offline, .hash, .lock, .protected').attr('class');
            $('#groupChatContainer').removeClass('thisisGroup');
            if (type == 'group') {
                $('#groupChatContainer').addClass('thisisGroup');
            }

            setCookie('last_active_conv', conversation_id);

            $("#pin-to-bar").attr('data-conversationid', conversationid);
            $("#createConvTag").attr('data-roomid', conversationid);

            $("#lastActive").val(conversationid);

            $("#pin-to-bar").attr('data-id', id);
            $("#pin-to-bar").attr('data-subtitle', subtitle);
            $("#pin-to-bar").attr('data-img', img);
            $("#pin-to-bar").attr('data-name', name);
            $("#pin-to-bar").attr('data-type', type);
            if (type == 'personal') {
                $("#conv_title").html('<span class="' + status + '" style="top: 44px;z-index: 9; position: absolute;""></span><div class="msg-user-photo" style="" onclick="actionMentionUser(event,\'' + id + '\')"><img class="user_img' + id + '" src="' + file_server + 'profile-pic/Photos/' + img + '" onclick="actionMentionUser(event,\'' + conversationid + '\')" data-value="' + file_server + 'profile-pic/Photos/' + img + '" alt="" style="position:absolute; margin:auto;left:17px;top:18px;background: #f5f5f5"></div><span class="converstaion_name conv_nickname_' + id + ' user_name' + id + '" onclick="actionMentionUser(event,\'' + id + '\')" style="margin-left: 27px;" >' + name + '</span>');
                $("#conv_title").css('margin-left', '27px');
            } else {
                $("#conv_title").html('<div class="msg-user-photo" style=""><img src="' + file_server + 'room-images-uploads/Photos/' + img + '" data-value="room-images-uploads/Photos/' + img + '" onclick="actionMentionUser(event,\'' + conversationid + '\')" alt="" style="position:absolute; margin:auto;left:17px;top:18px;background: #f5f5f5"></div><span class="converstaion_name conv_nickname_' + conversationid + '" style="margin-left: 27px;">' + name + '</span>');
                $("#conv_title").css('margin-left', '27px');
            }
            changeAllCustomTitle();
            // $("#conv_title").text(name);
            // $("#conv_key").text('@'+subtitle);

            $("#conv_key").text('');
            // $("#totalMember").text('');
            // forActiveCallIcon(onlineUserList, participants, conversation_type);
            $("#msg").html("");
            $("#msg-container").html("");

            // $('.voice-call').show();
            // $('.video-call').show();
            $('.chat-head-calling .more-menu').show();
            // For tag purpose. while clicking on room or personal
            $('.chat-head-calling .addTagConv').hide();
            $('.chat-head-calling .tagged').show();
            $("#taggedList").html("");



            tagListTitle = [];
            tagLsitDetail = [];

            $("#fileAttachTagLs").html('');

            tagListForFileAttach = [];
            FtempArray = [];
            FtaggedList = [];


            $("#taggedIMG").attr('src', '/images/basicAssets/custom_not_tag.svg');
            $("#createConvTag").val('');
            $("#tagItemList").text('');


            var itstimeToGetConv = 0;
            if (!$(".threadasideContainer").is(":visible")) {

                var thisConvUnreadmsg = 0;
                if ($('.backToChat.hidden').is(':visible')) {
                    thisConvUnreadmsg = Number($("#conv" + conversation_id).find(".unreadMsgCount").html());

                    data_unreadAllMsg = data_unreadAllMsg.splice(data_unreadAllMsg.indexOf(null), 1);
                    data_unreadAllMsg = data_unreadAllMsg.splice(data_unreadAllMsg.indexOf(""), 1);

                    if (data_unreadAllMsg.length > 0) {
                        var um = data_unreadAllMsg;
                        $.each(um, function(k, v) {
                            if (v.conversation_id == conversation_id) {
                                data_unreadAllMsg.splice(k, 1);
                                data_unreadAllMsg[k] = '';
                            }
                        });
                        var eum = data_allEditUnreadMsg;

                        $.each(eum, function(k, v) {
                            if (v.conversation_id == conversation_id) {
                                data_unreadAllMsg[k] = '';
                            }
                        });
                    }
                    reply_msg_counter();
                } else {
                    var um = data_unreadAllMsg;
                    $.each(um, function(k, v) {
                        if (v.conversation_id == conversation_id) {
                            thisConvUnreadmsg = thisConvUnreadmsg + 1;
                            data_unreadAllMsg[k] = '';
                        }
                    });
                }


                if ($(event.target).attr("data-conversationid") !== user_id) {
                    var unreadMsgCount = Number($("#conv" + conversation_id).find(".unreadMsgCount").html()) - Number(thisConvUnreadmsg);
                    // console.log(1819,unreadMsgCount);
                    if (unreadMsgCount < 0) {
                        unreadMsgCount = 0;
                    }
                    if (allFilteredItem.length == 0) {
                        if (unreadMsgCount == 0) {
                            $("#conv" + conversation_id).find(".unreadMsgCount").html("");
                            checklist_pending_unread(conversation_id);
                        } else {
                            // console.log(1824,unreadMsgCount)
                            $("#conv" + conversation_id).find(".unreadMsgCount").html(unreadMsgCount)

                        }
                    }

                    var this_msg_unread = thisConvUnreadmsg;
                    var total_unreadcount = Number($(".scroll_unreadMsg>h5>span").text()) - this_msg_unread;
                    display_show_hide_unread_bar(total_unreadcount);
                    reply_msg_counter();
                }

                // $("#conv" + conversation_id).attr("data-nom", 0);


            } else {
                findReplyUnreadMsg();
                itstimeToGetConv = 2000;
            }
            var seartTxt = $("#searchText").val();
            var chklsky = has_conv_into_local(conversationid);


            $("#onscrollloading").show();
            $("#personalConnectActive").addClass("is_loading");
            //debugger;
            if (threadTriggerd) {
                threadTriggerd = false;
                setTimeout(function() {
                    // console.log({type :type, id:id, conversationid:conversationid, name:name, img:img, user_id:user_id, seartTxt:seartTxt});
                    socket.emit('get_conversation_history_thread', { type, id, conversationid, name, img, user_id, seartTxt, filterOnlyTagMsgA, allUserTagList }, (respons) => {
                        // console.log(1081,respons);
                        loadConversation = '';
                        if (respons.msg == "success") {
                            start_conv_success(respons, type, id, conversationid, name, img, user_id, seartTxt, 0);
                            // $("#onscrollloading").hide();
                            $("#personalConnectActive").removeClass("is_loading");
                        } else {
                            console.log("failed to load filter data");
                        }
                    });
                }, itstimeToGetConv);

            } else if (secretTriggerd) {
                secretTriggerd = false;
                $('#privateChatsOnly').addClass('active'); $('#msg-container').attr('has-private','true');
                setTimeout(function() {
                    // console.log({type :type, id:id, conversationid:conversationid, name:name, img:img, user_id:user_id, seartTxt:seartTxt});
                    socket.emit('get_conversation_history_secret', { type, id, conversationid, name, img, user_id, seartTxt, filterOnlyTagMsgA, allUserTagList }, (respons) => {
                        console.log(1081, respons);
                        loadConversation = '';
                        if (respons.msg == "success") {
                            start_conv_success(respons, type, id, conversationid, name, img, user_id, seartTxt, 0);
                            // $("#onscrollloading").hide();
                            $("#personalConnectActive").removeClass("is_loading");
                        } else {
                            console.log("failed to load filter data");
                        }
                    });
                }, itstimeToGetConv);

            } else {
                if ($(event.target).attr("data-isedit") == "yes" && $(".backToChat").is(":visible")) {
                    seartTxt = "findall";
                    setTimeout(function() {
                        socket.emit('get_conversation_history', { type, id, conversationid, name, img, user_id, seartTxt, allFilteredItem, user_id, unreadThread, filterOnlyTagMsgA, allUserTagList }, (respons) => {
                            // console.log(1388,respons);
                            loadConversation = '';
                            if (respons.msg == "success") {
                                start_conv_success(respons, type, id, conversationid, name, img, user_id, seartTxt, 0);
                                // $("#onscrollloading").hide();
                                $("#personalConnectActive").removeClass("is_loading");
                            } else {
                                console.log("failed to load filter data");
                            }
                        });
                    }, itstimeToGetConv);

                } else {
                    if (chklsky != -1) {
                        setTimeout(function() {
                            socket.emit('get_conversation_history', { type, id, conversationid, name, img, user_id, seartTxt, allFilteredItem, user_id, unreadThread, filterOnlyTagMsgA, allUserTagList }, (respons) => {
                                // console.log(1404,respons);
                                loadConversation = '';
                                if (respons.msg == "success") {
                                    start_conv_success(respons, type, id, conversationid, name, img, user_id, seartTxt, 0);
                                    // $("#onscrollloading").hide();
                                    $("#personalConnectActive").removeClass("is_loading");
                                } else {
                                    console.log("failed to load filter data");
                                }
                            });
                        }, itstimeToGetConv);

                        // localStorage.get_conversation_history = JSON.stringify(localstorage['get_conversation_history']);
                        // start_my_conv_success(localstorage['get_conversation_history'][chklsky], type, id, conversationid, name, img, user_id, seartTxt, 1000);
                    } else {
                        if ($('#groupChatContainer').is(':visible')) {
                            $("#onscrollloading").show();
                            $("#personalConnectActive").addClass("is_loading");
                        }
                        // console.log(1423,allFilteredItem)
                        setTimeout(function() {
                            // console.log(1428888,allFilteredItem)
                            socket.emit('get_conversation_history', { type, id, conversationid, name, img, user_id, seartTxt, allFilteredItem, user_id, unreadThread, filterOnlyTagMsgA, allUserTagList }, (respons) => {
                                // console.log(1425,respons);
                                loadConversation = '';
                                if (respons.msg == "success") {
                                    // localstorage['get_conversation_history'].push(respons);
                                    // localStorage.get_conversation_history = JSON.stringify(localstorage['get_conversation_history']);
                                    start_conv_success(respons, type, id, conversationid, name, img, user_id, seartTxt, 0);
                                } else {
                                    console.log("failed to load");
                                }
                                // $("#onscrollloading").hide();
                                $("#personalConnectActive").removeClass("is_loading");
                            });
                        }, itstimeToGetConv);

                    }
                }
            }

            // sideBarActiveInactive(event);
            $('.side_bar_list_item li').removeClass('sideActive');
            $('.side_bar_list_item li').removeClass('selected');
            $('.side_bar_list_item li').children(".hash, .online, .offline, .lock, .toDo, .protected").css('left', '12px');
            $(event.target).addClass('sideActive');
            $(event.target).addClass('selected');
            $(event.target).children('.remove').hide();
            $(event.target).children(".hash, .online, .offline, .lock, .toDo, .protected").css('left', '6px');

            unread_msg_conv_intop();
            unreadinactiveCounterTime();
        }
        // Floating Date in the top bar
        $('.chat-page .os-viewport').on('scroll', function() {
            var scrollTop = $('.chat-page .os-viewport').scrollTop();
            if (scrollTop === 0)
                $('#top-date').html("");
            $(".msg-separetor").each(function() {
                var last = true;
                if (last)
                    $(this).removeClass('not_visible');

                if ($(this).offset().top < 170) {
                    last = false;
                    $(this).addClass("not_visible");
                    $('#top-date').html($('.not_visible').last().attr('data-date'));
                }
            });
        });

        if (windowWidth && windowWidth <= 415) {
            $('#hayvenSidebar').hide();
        }
    }
    if (!$('.temppSideli').hasClass('sideActive')) {
        $('.temppSideli').remove();
    }
    updateContainer = false;
    reply_msg_counter();

    if (allFilteredItem.length > 0) {
        // cancelAllFilter();

        if (newMsgCounter != '' && newMsgCounter != '0' && start_conv_trigger == false) {
            var html = 'You have new notification(s) in this channel. <span onclick="newMsgClickFun(event)" class="goNewMsgToast">Click here to go back to this channel.</span>'
            showFreeliToaster(true, html);
        }
        // else{
        // 	showFreeliToaster(false);
        // }


    }
    if (start_conv_trigger) {
        start_conv_trigger == false;
    }

    // var lastActive = $('#lastActive').val();
    // if($('#conv'+lastActive +' .mute_bell').is(':visible')){
    if ($('#conv' + conversation_id).attr('data-mute') != 'unmute') {
        $('#viewMuteNotification').addClass('active');
    } else {
        $('#viewMuteNotification').removeClass('active');
    }

    if (conversation_id == user_id) {
        $('#getTeamTask').text('My Task');
    } else {
        $('#getTeamTask').text('Team Task');
    }
    setTimeout(function() {
        $('.checklist_more_option').hide();
    }, 500)
    setTimeout(function() {
        _incompleted();
    }, 2500)
    setTimeout(function() {
        $('.side_bar_list_item li').removeClass('sideActive').removeClass('selected');
        $("#conv" + conversation_id).addClass('sideActive').addClass('selected');
    }, 3000)
};

function _incompleted() {
    if (has_incompleted_checklist === true && getCookie("skip_msg_hidding") != conversation_id) {
        // console.log('ZZZZZZ')
        $.each($('.msgs-form-users[data-msg-type="checklist"]'), function(k, v) {
            // $(v).addClass('pending_msg');
        });
        $('#closeRoomLabel').show();
    }
}

function newMsgClickFun(event) {
    start_conv_trigger == true;
    cancelAllFilter();
    // $('#conv'+conversation_id).click();
}

var start_tips = (event) => {
    $("#notification_body").hide();
    $("#NotificationContainer .chatting-date-header").hide();
    $("#show_tips_containter").html("");

    socket.emit('get_all_tips', { user_id: user_id }, (respons) => {
        if (respons.status) {
            // console.log(respons);
            $.each(respons.data, function(k, v) {
                // console.log(v);
                var html = '<div class="simple-view-tips" tips_id="' + v.tips_id + '">' +
                    '<h3 class="tips-header">' + v.tips_title + '</h3>' +
                    '<p class="noti-tips-details">' + v.tips_details + '</p>' +
                    '</div>';
                $("#show_tips_containter").append(html);
            });
            $("#tips_body").show();
        } else {
            $("#show_tips_containter").append('<h3 class="no-tips-find">No tips are available at this moment.</h3>');
            // console.log("Failed to load tips data.");
        }
    });
}
var chk_pageValue = 20;

function pagesizechange(filter) {
    chk_pageValue = $("#chk_pageValue").val();
    gotoChecklistTaskPage(page = 1, filter);
}

function showgotopage() {
    $("#gotopage").toggle();
}
var hasPrevPage = 0;
var hasNextPage = 0;

function chk_task_pagination(page = 1, filter) {
    // $("#msg-container").append("<ul id='chk_task_pagination'></ul>");
    if ($('#taskAss_pagination').length == 0) {
        var html = '<div class="showingSelect">';
        html += '	<span>Show records</span>';
        html += '	<select id="chk_pageValue" onchange="pagesizechange(\'' + filter + '\')">';
        // html += '		<option value="10">10</option>';
        html += '		<option value="20" selected>20</option>';
        html += '		<option value="50">50</option>';
        html += '		<option value="100">100</option>';
        html += '	</select>';
        html += '</div>';
        html += '<ul id="chk_pageChange">';
        html += '	<li class="prev"> Prev </li>';
        html += '	<li id="chk_pageCount" onclick="showgotopage()"></li>';
        html += '	<li class="next"> Next </li>';
        html += '</ul>';
        html += '<ul id="gotopage"></ul>';
        // html += '<input class="_gotoPage" type="number" min="1">';
        // html += '<span class="submit_gotoPage" onclick="goto_Pageno(\''+ filter +'\')">Go</span>';
        // html += '<p id="chk_goBack"><span class="prev_btn">Go Up</span><span class="next_btn">Load More</span></p>';
        $("#personalConnectActive").append('<div id="taskAss_pagination">' + html + '</div>');
    } else {
        // $('#taskAss_pagination').html('');
    }
    if ($('#chk_task_pagination').length == 0) {
        $("#personalConnectActive").append("<ul id='chk_task_pagination'></ul>");
    } else {
        $('#chk_task_pagination').html('');
    }
    var nop = $("#chk_pageValue").val();
    var alltask = (filter == 'on') ? my_all_task_assignment_filterd : my_all_task_assignment;
    let total = Math.ceil(alltask.length / nop);

    let prev = page <= total ? page - 1 : 0;
    hasPrevPage = prev;
    if (prev > 0) {
        $("#chk_pageChange .prev").attr('onclick', 'gotoChecklistTaskPage(' + prev + ', \'' + filter + '\')').removeAttr('disabled');
        $("#chk_goBack .prev_btn").attr('onclick', 'gotoChecklistTaskPage(' + prev + ', \'' + filter + '\')');
    } else {
        $("#chk_pageChange .prev").attr('onclick', '').attr('disabled', 'disabled');
        $("#chk_goBack .prev_btn").attr('onclick', '');
    }

    let next = page < total ? page + 1 : 0;
    hasNextPage = next;
    if (next > 0) {
        $("#chk_pageChange .next").attr('onclick', 'gotoChecklistTaskPage(' + next + ', \'' + filter + '\')').removeAttr('disabled');
        $("#chk_goBack .next_btn").attr('onclick', 'gotoChecklistTaskPage(' + next + ', \'' + filter + '\')');
        $('#chk_goBack').addClass('active_next').removeClass('active_prev');
    } else {
        $("#chk_pageChange .next").attr('onclick', '').attr('disabled', 'disabled');
        $("#chk_goBack .next_btn").attr('onclick', '');
        $('#chk_goBack').addClass('active_prev').removeClass('active_next');
    }


    $("#chk_pageCount").text(page + " / " + total);
    for (let n = 1; n <= total; n++)
        $('#gotopage').append('<li onclick="gotoChecklistTaskPage(\'' + n + '\', \'' + filter + '\')">' + n + '</li>');
}

// function goto_Pageno(filter, n){
// let n = $("#taskAss_pagination").find("._gotoPage").val();
// $("#taskAss_pagination").find("._gotoPage").val("");
// gotoChecklistTaskPage(n, filter);
// }

function _searchForm() {
    if ($('#_searchForm').is(':visible')) {
        $('#_searchForm').hide();
        $('#hayvenSidebar').css('z-index', '9999');
        $('#personalConnectActive').css('z-index', '4');
    } else {
        $('#_searchForm').show();
        $('#hayvenSidebar').css('z-index', '999');
        $('#personalConnectActive').css('z-index', '3');
    }
}

function gotoChecklistTaskPage(page = 1, filter = 'off', fil_type) {
    $("#gotopage").hide();
    $('.checklistListViewHeader li').removeClass('active');
    if (fil_type == 'first') {
        $('.checklistListViewHeader li.lastUpdateListHead').addClass('active');
    }
    $('#msg-container').html('');
    $('#taskList_panel').html('');
    var nop = chk_pageValue;
    var alltask = (filter == 'on') ? my_all_task_assignment_filterd : my_all_task_assignment;

    for (var k = (page - 1) * nop; k < alltask.length && k < nop * page; k++) {
        var checklistall = []
        $.each(my_all_task_assignment_checklist_items, function(ck, cv) {
            if (cv.msg_id == alltask[k].msg_id) {
                checklistall.push(cv);
                alltask[k]['checklist'] = checklistall;
                taskItemCounter(alltask[k].msg_id);
            }
        });

        if (checkdrawmsg(alltask[k], adminArra, activeConvPrivacy)) {
            draw_msg(alltask[k], true, true);
        }
    }
    $("#onscrollloading").hide();
    setTimeout(function() {
        mousewheelevent = true;
    }, 500);
    chk_task_pagination(page, filter);
    if (filter == 'on' && my_all_task_assignment_filterd.length == 0) {
        $("#taskList_panel").html("<p class='noresultfound'>No search result were found. <span onclick='gotosearchbox()'>Please click here to start searching again.</span></p>");
    }
}

function gotosearchbox() {
    $("._inputBar").val("").focus();
}
// Floating Date in the notification top bar
var draw_noti_loading = false;
$('#notification_body').on('scroll', function() {
    var scrollTop = $('#notification_body').scrollTop();
    // console.log('scrollTop = ',scrollTop);
    if (scrollTop == 0) {
        if (!draw_noti_loading) {
            draw_noti_loading = true;
            setTimeout(function() {
                draw_noti_loading = false;
            }, 1000);
            var limit_t = notification_draw_count + 20;
            var i = 0;
            $.each(myAllNotificationdata, function(k, v) {
                if (i < limit_t) {
                    if (!$('#noti_id_' + v.notification_id).is(':visible')) {
                        if ($('#archiveNotification').hasClass('active')) {
                            if (v.is_delete != null) {
                                if (v.is_delete.indexOf(user_id) > -1) {
                                    draw_notification(v, false);
                                    i++;
                                    notification_draw_count++;
                                }
                            }
                        } else {
                            if (v.is_delete != null) {
                                if (v.is_delete.indexOf(user_id) == -1) {
                                    draw_notification(v, false);
                                    i++;
                                    notification_draw_count++;
                                }
                            } else {
                                draw_notification(v, false);
                                i++;
                                notification_draw_count++;
                            }
                        }
                        if (k == (myAllNotificationdata.length - 1)) {
                            if (!$('#anwarSir_notificaiton').is(':visible')) {

                                welcome_freeli(true);
                            }
                        }
                    }
                }
            });
        }
    }

    $(".msg-separetor").each(function() {
        var last = true;
        if (last)
            $(this).removeClass('not_visible');

        if ($(this).offset().top < 170) {
            last = false;
            $(this).addClass("not_visible");
            // $('.chatting-date-header p').html($('.not_visible').last().attr('data-date'));
            $('.chatting-date-header p').html($('#notification_body .not_visible p').last().text()).show();
        }
    });

    if (scrollTop < 575) {
        // console.log('scrollTop = ',scrollTop);
        $('#NotificationContainer .chatting-date-header p').html("").hide();
    }
});

function checkConvBusy(conversation_id, is_busy) {
    if (is_busy > 0) {
        $('.chat-head-calling .voice-call').addClass('is_busy');
        $('.chat-head-calling .video-call').addClass('is_busy');
    } else {
        $('.chat-head-calling .voice-call').removeClass('is_busy');
        $('.chat-head-calling .video-call').removeClass('is_busy');
    }
}

var addprivacyClass = (id, privacy) => {
    $('#' + id).removeClass('public');
    $('#' + id).removeClass('private');
    $('#' + id).removeClass('protected');
    $('#' + id).addClass(privacy);
}
var per_conv_all_files = [];
socket.on('conv_files_deleted', function(data) {
    if (per_conv_all_files[0].conversation_id == data.conv_id) {
        for (var i = 0; i < per_conv_all_files.length; i++) {
            if (per_conv_all_files[i].key == data.key) {
                per_conv_all_files[i].is_delete = 1;
                var divkeyclass = per_conv_all_files[i].key.replace(/[^\w\s]/gi, '');
                // $('.'+ divkeyclass).html('<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;">'+ per_conv_all_files[i].originalname +' has been deleted by Account Admin</p>');
                $('.' + divkeyclass).html('<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;"></p>');
            }
        }
    }
});
socket.on('conv_files_added', function(data) {
    // console.log(1043,data);
    if ($('#roomIdDiv').attr('data-roomid') == data[0].conversation_id) {
        per_conv_all_files = data;
    }
});

function checkFlaggedIcon(conversation_id) {
    var count = 0;
    socket.emit('get_flagged_msg_only', { user_id: user_id, conversation_id: conversation_id }, function(respons) {
        // console.log(1594,respons)
        if (respons.data.length > 0) {
            $.each(respons.data, function(k, v) {
                if (v.has_hide == null) {
                    v.has_hide = [];
                }
                if (v.has_hide.indexOf(user_id) == -1) {
                    count++;
                }
            });
            // console.log(1600,count);
            if (count > 0) {
                $('#flagged_icon_filter').attr('data-count', count);
            }
        }
    })
}

function getMyconvUmfun(data) {
    var allUmsgIds = [];
    for (var i = 0; i < data.length; i++) {
        if (data[i].conversation_id == conversation_id) {
            allUmsgIds.push(data[i].msg_id);
        }
    }
    return allUmsgIds;
}

function getMyConvUnreadCounter(id) {
    var count = 0;
    for (var i = 0; i < allUnreadMessages.length; i++) {
        if (allUnreadMessages[i].conversation_id == id) {
            count++;
        }
    }
    if (conversation_id == id) {
        count = 0;
    }
    return count;
}

function updateSubconvUnreadData(conid) {
    for (let i = 0; i < allUnreadMessages.length; i++) {
        if (allUnreadMessages[i].conversation_id == conid) {
            allUnreadMessages[i] = {};
        }
    }
}

function split_at_index(value, index) {
    return value.substring(0, index);
}

function subconvDesign(data) {
    var tooltip = '';
    var mainTItle = data.title;
    var title = data.title;
    if (data.title.length > 20) {
        title = split_at_index(data.title, 20) + '...';
        tooltip = 'data-balloon="' + mainTItle + '" data-balloon-pos="right"';
    }
    if (conversation_id == data.conversation_id) {
        $('#sub_conv_holder').find('.item').removeClass('activeBefore');
        $('#sub_conv_holder').find('.item.last-child-class').addClass('activeBefore');
    }
    $('#sub_conv_holder').find('.item').removeClass('last-child-class');
    return '<div data-convitemid="' + data.conversation_id + '" data-participants="' + data.participants.join() + '" class="_subconvUnread' + data.conversation_id + ' item last-child-class ' + (conversation_id == data.conversation_id ? 'active' : '') + '" onclick="$(\'#conv' + data.conversation_id + '\').trigger(\'click\')"><span ' + tooltip + '>' + title + '<span class="counter" data-length="' + getMyConvUnreadCounter(data.conversation_id) + '">' + getMyConvUnreadCounter(data.conversation_id) + '</span></span><span class="pipe">|</span></div>';
}
conv_id_for_createRoom = null;

function getAllSubConversation(conv_id, isGroup) {
    conv_id_for_createRoom = conv_id;
    $('#sub_conv_holder').html('');
    socket.emit('getAllSubConversation', conv_id, function(res) {
        if (res != null) {

            var le = 0;
            for (var i = 0; i < res.length; i++) {
                if (res[i].participants.indexOf(user_id) > -1) {
                    if (participants_sub.indexOf(user_id) > -1) {
                        $('#conv' + res[i].conversation_id).trigger('click')
                    }
                    le++;
                    $('#sub_conv_holder').append(subconvDesign(res[i]));

                }
            }
            if (le > 0) {
                if (conv_id != conversation_id) {
                    $('.subconversation_create').addClass('hideThisitem');
                    $('#sub_conv_holder').prepend('<div class="back_to_main_conv" root-conversation-id="' + conv_id + '" onclick="$(\'#conv' + conv_id + '\').trigger(\'click\')" data-balloon="Back to Main Room" data-balloon-pos="right"><span></span></div>')
                    $('#sub_conv_holder').append('<div class="dir-msg-close closeModal for_exit_sub_room" onclick="$(\'#conv' + conv_id + '\').trigger(\'click\')" data-balloon="Back to Main Room" data-balloon-pos="left"><span></span></div>')
                } else {
                    $('.subconversation_create').removeClass('hideThisitem');
                }
                if (le >= 10) {
                    $('.subconversation_create').addClass('thisIsInactive');
                }
                $('#groupChatContainer').addClass('has_sub_conv');
            } else {
                if (isGroup == 'yes') {

                    if (adminArra.indexOf(user_id) > -1) {

                        $('#convert_conversation').attr('onclick', 'convertToSub(event)');
                        $('#convert_conversation').html('Convert to Sub-room');
                    } else {
                        $('#convert_conversation').html('');
                    }
                }
            }
        } else {
            if (isGroup == 'yes') {
                if (adminArra.indexOf(user_id) > -1) {

                    $('#convert_conversation').attr('onclick', 'convertToSub(event)');
                    $('#convert_conversation').html('Convert to Sub-room');
                } else {
                    $('#convert_conversation').html('');
                }

            }
        }
        $('#conv' + conv_id).addClass('sideActive ');
    })

}

function openOnlySubConv(conv_id, isGroup) {
    socket.emit('getAllSubConversation', conv_id, function(res) {
        if (res != null) {
            $('#conv' + res[0].conversation_id).trigger('click');

        }
    })
}
var thisConvLinksData = [];

function findMyLinks(conversation_id) {
    let convid = conversation_id;
    if($('#filterFlagged_msg').hasClass('activeComFilter')){
        convid = 'all';
    }
    thisConvLinksData = [];
    socket.emit('getAllLinks', convid, function(res) {
        console.log(3019,res)
        if (res.status) {
            console.log(res.data)
            thisConvLinksData = res.data;
            changeMsgLinkTitle();
        }
    })
}

function changeMsgLinkTitle() {

    $.each(thisConvLinksData, function(k, v) {
        // if(v.msg_id === '704757a0-d3e4-11eb-a0c7-2c9c7e1f24a6'){
        //     console.log(3018,v)
        // }
        if (v.title != 'null') {
            $('.onlyLinkTitle' + v.msg_id).text(v.title);
            $('#url_title_' + v.url_id).text(v.title);
            if (v.user_id != null) {
                if (v.user_id.toString() == user_id) {
                    if (v.title == '') {
                        $('.onlyLinkTitle' + v.msg_id).text('Add a title')
                        $('.onlyLinkTitle' + v.msg_id).attr('onclick', 'editMyOwnLink(this)');
                    }
                }
            }
        } else {
            if (v.user_id.toString() == user_id) {
                $('.onlyLinkTitle' + v.msg_id).text("Add a title");
                $('#url_title_' + v.url_id).text('');
                $('.onlyLinkTitle' + v.msg_id).attr('onclick', 'editMyOwnLink(this)');
            }
        }
    })
}
setInterval(function() {
    // onlyLinkTitle
    changeMsgLinkTitle();
}, 4000);

function start_conv_success(respons, type, id, conversation_id, name, img, user_id, seartTxt, time = 0) {
    // update_conv_counter();
    // if(respons.conversation[0].root_conv_id != null){
    // 	$("body").addClass("mainconvlock4you");
    // }
    findMyLinks(conversation_id);
    if (conversation_id != user_id)
        adminArra = (respons.conversation[0].participants_admin == null ? [] : respons.conversation[0].participants_admin);
    else
        adminArra = [];

    root_conv_id = null;
    $('#convert_conversation').html('');

    conv_id_for_createRoom = conversation_id;
    // console.log(2117,respons);
    if (getCookie("skip_msg_hidding") != conversation_id) {
        setCookie("skip_msg_hidding", "");
    }
    $('#conv' + conversation_id).find('.unreadMsgCount').text('');
    checklist_pending_unread(conversation_id);
    has_incompleted_checklist = false;
    // console.log(1597,conversation_id)
    $('body').removeClass('chklst_incompleted');
    checkFlaggedIcon(conversation_id);
    $('#issue_req_users').html("");
    $('#issue_req_users').attr("data-id", '');

    $('#secretUserList').html('');
    conv_service_provider = [];
    if (respons.conversation[0] != undefined) {
        thisroomStatus = respons.conversation[0].status;
        thisroomPrivacy = respons.conversation[0].privacy;
        if (respons.conversation[0].privacy == 'protected') {
            if (respons.conversation[0].service_provider != null) {
                conv_service_provider = respons.conversation[0].service_provider;
            }
            $('#groupChatContainer').addClass('protected');
        }
    } else {
        thisroomStatus = '';
        thisroomPrivacy = '';
    }

    clear_media_popup();
    updatedMsgArr = [];
    per_conv_all_files = respons.files;
    mention_div_action('hide');
    thisroomTagList = [];
    if (conversation_id == user_id) {
        $('#personalConnectActive').addClass('personal_conv');
        $('#groupChatContainer').addClass('personal_conv');
        $('.optionalList').addClass('personal_conv_on');
        $('.classForChecklist').addClass('personal_conv_on');
        // For guest, instead of You Channel, can we show "About Workfreeli" and put our promo page there on right panel
        if (has_permission(user_id, GUEST)) {
            $("#onscrollloading").hide();
            $("#scrollingsvg").hide();
            $("#msg-container").html("Promo page coming soon...");
            $(".send-msgs").hide();
            return false;
        }
        respons.conversation.push({
                b_unit_id: null,
                company_id: null,
                conv_img: user_img,
                conversation_id: user_id,
                created_at: moment().unix(),
                created_by: user_id,
                group: 'no',
                group_keyspace: null,
                guests: 'no',
                is_active: null,
                is_busy: 0,
                participants: [user_id],
                participants_admin: [user_id],
                participants_guest: null,
                participants_sub: null,
                room_id: user_id,
                single: "no",
                status: null,
                tag_list: [],
                title: user_fullname,
                topic_type: '',
                root_conv_id: null

            })
            // console.log(876,respons.conversation)
        root_conv_id = null;
    } else {
        $('#groupChatContainer').removeClass('personal_conv');
        // console.log(2417,allUnreadMessages.length);
        if (allUnreadMessages.length > 0) {
            var getMyconvUm = getMyconvUmfun(allUnreadMessages);

            if (getMyconvUm.length > 0) {
                socket.emit('updateConversation_seen', { msg_id: getMyconvUm, conversation_id: conversation_id, user_id: user_id, type: 'array' }, function(res) {
                    console.log('updateConversation_seen', res);
                });
            }
        }
        if (respons.conversation[0].group == 'yes') {
            if (respons.conversation[0].root_conv_id == null) {
                // $('#convert_conversation').attr('onclick','convertToSub(event)');
                // $('#convert_conversation').html('move to sub room');
            } else {
                if (adminArra.indexOf(user_id) > -1) {

                    $('#convert_conversation').attr('onclick', 'convertToConv(event)');
                    $('#convert_conversation').html('Convert to Main Room');
                } else {
                    $('#convert_conversation').html('');
                }
            }
        }
        updateSubconvUnreadData(conversation_id);
    }
    root_conv_id = respons.conversation[0].root_conv_id;
    participants = respons.conversation[0].participants;
    participants_guest = (respons.conversation[0].participants_guest == null ? [] : respons.conversation[0].participants_guest);
    participants_sub = (respons.conversation[0].participants_sub == null ? [] : respons.conversation[0].participants_sub);

    // console.log(2524,participants_sub.indexOf(user_id) > -1 && root_conv_id == null)
    // console.log(2525,participants_sub.indexOf(user_id) , root_conv_id)
    if (participants_sub.indexOf(user_id) > -1 && root_conv_id == null) {
        // console
        if (respons.conversation[0].participants_sub.indexOf(user_id) > -1) {
            $(".send-msgs").hide();
            $("#msg-container").addClass("lock4you");
            $("body").addClass("mainconvlock4you").attr("data-lockconvid", conversation_id);
        }
        openOnlySubConv((respons.conversation[0].root_conv_id == null ? respons.conversation[0].conversation_id : respons.conversation[0].root_conv_id), respons.conversation[0].group);
        return false;
    } else {
        // console.log(2526);
        if (!$("body").hasClass("filter_thread_msg")) {
            getAllSubConversation((respons.conversation[0].root_conv_id == null ? respons.conversation[0].conversation_id : respons.conversation[0].root_conv_id), respons.conversation[0].group);
        }

        roomRemoveElement(respons.conversation[0]);
        forviewconv(conversation_id);

        // console.log(2374, respons.conversation[0].participants_guest);

        if (respons.conversation[0].participants_sub != null) {
            if (respons.conversation[0].participants_sub.indexOf(user_id) > -1) {
                $(".send-msgs").hide();
                $("#msg-container").addClass("lock4you");
            }
        } else {
            $(".send-msgs").show();
            $("#msg-container").removeClass("lock4you");
        }


        // calling check ============================================================================================
        socket.emit('call_running_conf', { // first check if user is busy in calling
            conversation_id: conversation_id,
            partner_id: $('#conv' + conversation_id).length ? $('#conv' + conversation_id).attr("data-id") : null,
            user_id: user_id,
            conversation_type: $('#conv' + conversation_id).length ? $('#conv' + conversation_id).attr("data-conversationtype") : null,
        }, function(status) {
            // console.log('call__running__conf',status);
            // if (!status.redis_status) {
            //     $('.video-call,.voice-call,.join-call').hide();
            // }
            // else{
            if (status.conv_run || status.partner_run || status.partner_allow) {
                $('.video-call,.voice-call').hide();
                $('.join-call').show();
            } else {
                $('.video-call,.voice-call').show();
                $('.join-call').hide();
            }

            // }

            // //debugger;
            if (status.room_info) {
                if (status.room_info.conversation_init == 'personal') {
                    $('.msg_id_' + status.room_info.msg_id).find('.plain_text').text('Call in progress...');
                } else {
                    $('.msg_id_' + status.room_info.msg_id).find('.plain_text').text('Call in progress, please join the call now by clicking the Call icon on top.');
                }
            }
            // //debugger;
            for (let i = 0; i < status.calling_user_run.length; i++) {
                let call_li_add = $('#connectAsideContainer #conv' + status.calling_user_run[i]); // blink
                if (call_li_add.length) { // conversation found
                    call_li_add.children('span:first').addClass('animate-flicker-call').addClass('audio').addClass('call').addClass('running');
                    call_li_add.find('.sidebartooltipcall').css("display", "block");
                }
            }

            $('.voice-call,.video-call,.join-call').attr({
                'data-conversationid': $('#conv' + conversation_id).attr("data-conversationid"),
                'data-conferenceid': $('#conv' + conversation_id).attr("data-conferenceid"),
                'data-conversationtype': $('#conv' + conversation_id).attr("data-conversationtype"),
                'data-convname': $('#conv' + conversation_id).attr("data-name"),
                'data-partnername': $('#conv' + conversation_id).attr("data-name"),
                'data-partnerid': $('#conv' + conversation_id).attr("data-id"),
                'data-privacy': $('#conv' + conversation_id).attr("data-privacy"),
                'data-participants': respons.conversation[0].participants,
                'data-img': $('#conv' + conversation_id).attr("data-img"), // new
                'data-status': $('#conv' + conversation_id).attr("data-status"), // new
                'data-pin': $('#conv' + conversation_id).attr("data-pin"),
                'data-mute': $('#conv' + conversation_id).attr("data-mute")
            });

            if (status.user_busy) {
                if (status.call_type_route == 'video') {
                    $('#profile_video_call').show();
                    $('#profile_audio_call').hide();
                } else {
                    $('#profile_video_call').hide();
                    $('#profile_audio_call').show();
                }
            }
            $('.chat-head-calling').fadeIn('fast').removeClass('disable-clicking');
        });
        $('.join-call').attr('data-balloon', "Join \"" + $('#conv' + conversation_id).attr("data-name") + "\"").attr('data-balloon-pos', "up-left");
        // calling end =========================================================



        created_by = respons.conversation[0].created_by;
        $('#groupChatContainer .chat-head-calling .tagged').attr('active-status', false);
        if (respons.conversation[0].tag_list !== null) {
            if (respons.conversation[0].tag_list.length > 0) {
                thisroomTagList = respons.conversation[0].tag_list;
                $.each(allUserTagList, function(k, v) {
                    if (v != undefined) {
                        // console.log(v,thisroomTagList);
                        if (thisroomTagList.indexOf(v.tag_id) > -1) {
                            $('#groupChatContainer .chat-head-calling .tagged').attr('active-status', true);
                        }
                    }
                });
            }
        }

        filesCount = 0;
        $('#conversationFileView').text('Files (0)');
        // $("#conv_key").text('@ '+respons.conversation[0].group_keyspace);
        for (var i = 0; i < allteams.length; i++) {
            if (allteams[i].team_id == respons.conversation[0].group_keyspace)
                $("#conv_key").text('@ ' + allteams[i].team_title);
        }

        prevConvid = conversation_id;
        var allmsgTagid = [];
        addprivacyClass('groupChatContainer', respons.conversation["0"].privacy);
        activeConvPrivacy = respons.conversation[0].privacy;
        if (respons.checklist != undefined) {
            $.each(respons.conversation_list, function(mk, mv) {
                if (mv.msg_type == 'checklist') {
                    if (mv.msg_body.indexOf('msgCheckListContainer') == -1) {
                        var thismsgcl = [];
                        $.each(respons.checklist, function(ck, cv) {
                            if (cv.msg_id == mv.msg_id) {
                                thismsgcl.push(cv);
                                respons.conversation_list[mk]['checklist'] = thismsgcl;
                                // console.log(2094, respons.conversation_list[mk]['checklist']);
                            }
                        });

                    }
                }
            })
        }
        checkConvBusy(conversation_id, respons.conversation[0].is_busy)
        if (respons.topics.topics != undefined) {
            if (respons.topics.topics.length > 0) {
                $("#msg_tag_container").html('');
                $("#topicLi").remove();
                // topicTagItem = [];
                $.each(respons.topics.topics, (topick, topicv) => {
                    var html = '<div class="item" ><span class="inactive" data-topi="' + topicv.title + '" onclick="toggleTopicLi(this)"></span><p class="valtext">' + topicv.title + '</p><span class="valremove" data-id="' + topicv.topic_id + '" data-val="' + topicv.title + '" onclick="removeMsgTag(this)"></span></div>';
                    $('#msg_tag_container').prepend(html);
                    var htmlFilter = '<div class="item" data-title="' + topicv.title + '" onclick="filterdata(this);" ></span><p class="valtext">' + topicv.title + '</p><span class="valremove" data-id="' + topicv.topic_id + '" data-val="' + topicv.title + '" onclick="removeMsgTag(this)"></span></div>';

                    $('#topicContainer').prepend(htmlFilter);

                    var liHtml = '<li>';
                    liHtml += '	<div class="option topicLi">';
                    liHtml += '		<div class="inactive"  data-topi="' + topicv.title + '" onclick="toggleTopicLi(this)"></div>';
                    liHtml += '		<div class="text">' + topicv.title + '</div>';
                    liHtml += '	</div>';
                    liHtml += '</li>';
                    $('#options_container').append(liHtml);
                    // topicTagItem.push(topicv.title);
                });
            }
        }

        if (respons.conversation_type == 'group') {
            $('#roomIdDiv').attr('topic-type', respons.conversation[0].topic_type);
            $('#roomIdDiv').attr('topic-unit', respons.conversation[0].b_unit_id);
            $('#roomIdDiv').attr('topic-tag', respons.tags.join(','));
            $('.chat-head-calling .tagged').removeClass('active');
            if (respons.tags.length > 4) {
                $('.chat-head-calling .tagged').addClass('active');
            } else {
                $('.chat-head-calling .tagged').removeClass('active');
            }
            $.each(allUnit, function(unitk, unitv) {
                if (unitv.unit_id == respons.conversation[0].b_unit_id) {
                    $('#topicTypeName').text(unitv.unit_name);
                }
            });
        }

        if (respons.conversation_type == 'group' && respons.conversation[0].participants_admin.indexOf(user_id) == -1) {
            $('#roomIdDiv').attr({
                "data-balloon": 'Only Room Admin Can Modify This Section',
                "data-balloon-pos": 'right'
            });
            $('#roomIdDiv .msg-user-photo img').addClass('viewTooltip');
        } else {
            var convTitle = respons.room_name.split('');
            if (convTitle.indexOf(',') > -1 && respons.conversation[0].participants_admin.indexOf(user_id) == -1) {
                $('#roomIdDiv').attr({
                    "data-balloon": 'Only Room Admin Can Modify This Section',
                    "data-balloon-pos": 'right'
                });
                $('#roomIdDiv .msg-user-photo img').addClass('viewTooltip');
            } else {

                $('#roomIdDiv').removeAttr('data-balloon-pos').removeAttr('data-balloon');
                $('#roomIdDiv .msg-user-photo img').removeClass('viewTooltip');
            }
        }

        loaderEndTime = moment(new Date()).format('mm:ms');
        pageCustomLoader(false);
        var need_update_message_seen_list = [];
        var edit_seen_lts = [];

        attachFileList = [];

        if (respons.messagestag.length > 0) {
            $.each(respons.messagestag, function(k, v) {
                msgIdsFtag.push(v.id);
            });
        }

        if (respons.tags != undefined) {
            var taggedID = respons.tags; //all con tag tag_id
            var condtagsid = FtaggedList = respons.condtagsid; //all con tag id

            var tempTagList = [];

            var totalTagslist = FtempArray = _.orderBy(respons.totalTags, ['title'], ['asc']);
            totalTagListTitleCon = totalTagslist;
            $.each(totalTagslist, function(k, v) {

                if (alltags.indexOf(v.title.toLowerCase()) === -1) {
                    my_tag_list[v.tag_id] = v.title.toLowerCase();
                    alltags.push(v.title.toLowerCase());
                    alltagsFull.push(v);
                    my_tag_id.push(v.tag_id.toString());
                }

                if (condtagsid.indexOf(v.tag_id) !== -1) {
                    tagListForFileAttach.push(v.title.toLowerCase());
                    if (hiddenTagName.indexOf(v.title.toLowerCase()) == -1) {
                        if (v.visibility !== 'hidden') {

                            tagListTitle.push(v.title.toLowerCase());
                        }
                    }
                    tagLsitDetail.push({ 'cnvtagid': taggedID[condtagsid.indexOf(v.tag_id)], 'tagid': v.tag_id, 'tagTitle': v.title.toLowerCase(), 'roomid': conversation_id, 'visibility': v.visibility });

                    var newClass = (v.visibility == 'hidden') ? "hiddenTag _htid_" + v.tag_id : "visibletrue";

                    var design = '<li class="' + newClass + '" onclick="removeLevel(\'' + taggedID[condtagsid.indexOf(v.tag_id)] + '\',\'' + conversation_id + '\',\'' + v.tag_id + '\')">' + v.title + '<span class="tagcheck" id="level' + taggedID[condtagsid.indexOf(v.tag_id)] + '"></span></li>';

                    if (tempTagList.indexOf(v.tag_id) === -1) { tempTagList.push(v.tag_id); }
                    if ($('#level' + taggedID[condtagsid.indexOf(v.tag_id)]).length == 0) {

                        $('#taggedList').append(design);
                    }
                }
            });
            alltagName = [];
            $.each(totalTagslist, function(k, v) {
                alltagName.push(v.title);
                if (v.visibility == 'hidden') {
                    hiddenTagName.push(v.title.toLowerCase());
                }

                var newClass = (v.visibility == 'hidden') ? "hiddenTag _htid_" + v.tag_id : "visibletrue";
                if (tempTagList.indexOf(v.tag_id) === -1) {
                    if ($('#tagLi' + v.tag_id).length == 0) {

                        var design = '<li id="tagLi' + v.tag_id + '" onclick="addTagto(\'' + v.tag_id + '\',\'' + conversation_id + '\')" class="' + newClass + '">' + v.title + '</li>';
                        $('#taggedList').append(design);
                    }
                }
            });

            if (tagListTitle.length > 0) {
                $("#tagItemList").text(tagListTitle.join(','));
                $("#taggedIMG").attr('src', '/images/basicAssets/custom_tagged.svg');
            }
        }

        if (respons.conversation["0"].participants_admin == null) {
            respons.conversation["0"].participants_admin = []
        }

        if (respons.conversation["0"].participants == null) {
            respons.conversation["0"].participants = []
            respons.conversation["0"].participants_guest = []
            respons.conversation["0"].participants_sub = []
        }

        if ($.inArray(user_id, respons.conversation["0"].participants_admin) !== -1) {
            adminArra = respons.conversation["0"].participants_admin;
            participants = respons.conversation["0"].participants;
            participants_guest = (respons.conversation["0"].participants_guest == null ? [] : respons.conversation["0"].participants_guest);
            participants_sub = (respons.conversation["0"].participants_sub == null ? [] : respons.conversation["0"].participants_sub);
            $("#roomIdDiv").attr('data-roomid', conversation_id);
            $("#roomIdDiv").attr('data-title', respons.conversation["0"].title);
            $("#roomIdDiv").attr('data-privecy', respons.conversation["0"].privacy);
            $("#roomIdDiv").attr('data-keyspace', respons.conversation["0"].group_keyspace);
            // $("#roomIdDiv").attr('data-convimg', respons.conversation["0"].conv_img);
            $("#roomIdDiv").attr('data-convimg', img);
            // console.log(1348,participants);
            $("#totalMember").text((participants.length - participants_sub.length));
            forActiveCallIcon(onlineUserList, participants, 'group');

        } else {
            // $("#roomIdDiv").attr('data-roomid','0');
            adminArra = respons.conversation["0"].participants_admin;
            participants = respons.conversation["0"].participants;
            participants_guest = (respons.conversation["0"].participants_guest == null ? [] : respons.conversation["0"].participants_guest);
            participants_sub = (respons.conversation["0"].participants_sub == null ? [] : respons.conversation["0"].participants_sub);
            $("#roomIdDiv").attr('data-roomid', conversation_id);
            $("#roomIdDiv").attr('data-title', respons.conversation["0"].title);
            $("#roomIdDiv").attr('data-privecy', respons.conversation["0"].privacy);
            $("#roomIdDiv").attr('data-keyspace', respons.conversation["0"].group_keyspace);
            // $("#roomIdDiv").attr('data-convimg', respons.conversation["0"].conv_img);
            $("#roomIdDiv").attr('data-convimg', img);
            // console.log(1348,participants);
            $("#totalMember").text((participants.length - participants_sub.length));
            forActiveCallIcon(onlineUserList, participants, 'group');
        }

        // Chat head member count div
        if (type == "group") {
            $('.chat-head-name h4').show();
            $('.chat-head-name').css('margin-top', '17px');
            $('.chat-head-name').css('height', '47px');
            $('.converstaion_name').css('margin-left', '27px');
            $('#conv_title .hash').css({
                'position': 'absolute',
                'top': '16px'
            });
            $('#conv_title .lock').css({
                'position': 'absolute',
                'top': '16px'
            });
            $('#roomIdDiv').css('cursor', 'pointer');

            leaveRoomShowFun();
            //$('#leaveThisRoom').show();
            $('#roomIdDiv').attr('onclick', "roomEdit(event,$(this).attr('data-roomid'),$(this).attr('data-title'),$(this).attr('data-privecy'),$(this).attr('data-keyspace'),$(this).attr('data-convimg'))");
            // if (name.indexOf(',') > -1) {
            // 	$('#leaveThisRoom').text('Leave group');
            // }
        } else if (type == "personal") {
            $('.chat-head-name h4').hide();
            $('.chat-head-name').css('margin-top', '28px');
            $('.chat-head-name').css('height', 'auto');
            $('#roomIdDiv').removeAttr('onclick');
            $('#roomIdDiv').css('cursor', 'default');
            $('#leaveThisRoom').hide();
            $('#closeThisRoom').hide();
            $('#hideThisRoom').hide();
            $(".chat-head-name").css('pointer-events', 'auto');
            $(".chat-head-more-menu").css('pointer-events', 'auto');
            $(".pin-unpin").css('pointer-events', 'auto');
            $(".tagged").css('pointer-events', 'auto');
            $(".media").css('pointer-events', 'auto');
            $("#msg").css('pointer-events', 'auto');
            $(".msgs-form-users").css('pointer-events', 'auto');
            $("#msg").attr('contenteditable', true);
            forActiveCallIcon(onlineUserList, participants, 'personal', id);

        }

        if (respons.pinnedStatus != undefined) {
            $("#pin-to-bar").addClass('pined');
            $("#pin-to-bar").parent('.pin-unpin').addClass('pined');
            $("#pin-to-bar").attr('data-pinned', respons.pinnedStatus.id);
            $("#pin-to-bar").attr('src', '/images/basicAssets/custom_pinned.svg');
        } else {
            $("#pin-to-bar").removeClass('pined');
            $("#pin-to-bar").parent('.pin-unpin').removeClass('pined');
            $("#pin-to-bar").attr('data-pinned', '');
            $("#pin-to-bar").attr('src', '/images/basicAssets/custom_not_pin.svg');
        }

        // $('#memberHolder .checkTask').each(function (i, obj) {
        // 	$(obj).prop('checked', false);
        // });
        // var a = [];
        // var b = [];
        // $('#memberHolder .checkTask').each(function (i, obj) {
        // 	if (participants.indexOf($(obj).attr('data-uid')) > -1) {
        // 		$(obj).prop('checked', true);
        // 		a.push($(obj).closest('li'))
        // 	} else {
        // 		b.push($(obj).closest('li'))
        // 	}
        // });

        // $('#memberHolder .os-content').html('');
        // $.each(a, function (i, e) {
        // 	$('#memberHolder .os-content').append(e);
        // });

        // $.each(b, function (i, e) {
        // 	$('#memberHolder .os-content').append(e);
        // });

        var msg_ids = [];
        // var start_pos =  (respons.conversation_list.length > 20)?respons.conversation_list.length-20:0;
        var noattch = 0;
        var convlist = respons.conversation_list;
        convlist = _.sortBy(convlist, ["created_at", ]);
        // console.log(convlist)
        convlist.reverse();
        if (respons.conversation[0].participants_sub != null) {
            if (respons.conversation[0].participants_sub.indexOf(user_id) > -1) {
                $(".send-msgs").hide();
                $("#msg-container").addClass("lock4you");
                $("body").addClass("mainconvlock4you").attr("data-lockconvid", conversation_id);
                convlist = [];
            }
        } else {
            $(".send-msgs").show();
            $("#msg-container").removeClass("lock4you");
        }
        $.each($(".sideActive"), function(sk, sv) {
            // console.log(2891)
            if (!$(sv).hasClass("itssubconvhide")) {
                // console.log(2892)
                if ($(sv).attr("data-conversationid") != $("body").attr("data-lockconvid")) {
                    // console.log(2893)
                    $("body").removeClass("mainconvlock4you").attr("data-lockconvid", "");
                }
            }
        });
        if (convlist.length == 0) {
            $('#msg-container').attr('has-msg', false);
        }
        // console.log(2366, respons.conversation_list);
        // console.log(2366, convlist);
        $.each(convlist, function(k, v) {
            if (msg_checklist_counter.indexOf(v.msg_id) > -1) {
                msg_checklist_counter.splice(msg_checklist_counter.indexOf(v.msg_id));
            }
            par_chk_process = false;
            msg_chk_today = [];
            msg_chk_overdue = [];
            if (v.msg_type == 'checklist') {
                checklist_has_pending_process(v);
                // for(var n=0; n<v.checklist.length; n++){
                // 	if(checklist_item_has_pending_process(v.checklist[n]) === true){
                // 		console.log(2457, v.checklist[n]);
                // 		par_chk_process = true;
                // 		n = v.checklist.length;
                // 	}
                // }
            } else {
                // if(has_incompleted_checklist === true && getCookie("skip_msg_hidding") != "1"){
                // 	return;
                // }
            }

            if (v.tag_list != null) {
                if (v.tag_list.length > 0) {
                    $.each(v.tag_list, function(kt, vt) {
                        if (allmsgTagid.indexOf(vt) == -1) {
                            allmsgTagid.push(vt);
                        }
                    });
                }
            }
            // if number of attachment > 20 pc, then no more messages will be show
            // if(noattch > 8) return false;
            noattch += count_no_of_attch(v);

            if (k > 99 && !$(".backToChat").is(":visible")) return false;
            // if(k>start_pos){
            msg_ids.push(v.msg_id);


            if ($('#conv' + conversation_id).attr("data-isedit") == "yes" && $(".backToChat").is(":visible")) {
                if (v.edit_status != null) {
                    if (v.edit_seen != null) {
                        if (v.edit_seen.indexOf(user_id) === -1) {
                            edit_seen_lts.push(v.msg_id);
                            if (checkdrawmsg(v, respons.conversation[0].participants_admin, respons.conversation[0].privacy)) {

                                draw_msg(v, false);
                            }
                        }
                    } else {
                        edit_seen_lts.push(v.msg_id);
                        if (checkdrawmsg(v, respons.conversation[0].participants_admin, respons.conversation[0].privacy)) {

                            draw_msg(v, false);
                        }
                    }
                } else {
                    if (v.msg_status == null) {
                        if (v.sender == user_id) {
                            // This msg send by this user; so no need to change any seen status
                        } else {
                            if (checkdrawmsg(v, respons.conversation[0].participants_admin, respons.conversation[0].privacy)) {

                                draw_msg(v, false);
                            }
                        }
                    }
                }
            } else {
                if ($("#searchAction").val() == 2) {
                    if (v.has_flagged !== null) {
                        if (v.has_flagged.indexOf(user_id.toString()) !== -1) {
                            if (checkdrawmsg(v, respons.conversation[0].participants_admin, respons.conversation[0].privacy)) {

                                draw_msg(v, false);
                            }
                        }
                    }
                } else {
                    if (checkdrawmsg(v, respons.conversation[0].participants_admin, respons.conversation[0].privacy)) {

                        draw_msg(v, false);
                    }
                }
            }


            if (v.msg_status == null) {
                if (v.sender == user_id) {
                    // This msg send by this user; so no need to change any seen status
                } else {
                    // This msg receive by this user; so need to change seen status
                    need_update_message_seen_list.push(v.msg_id);
                    draw_urhr();
                }
            }

            // If msg status have some user id, then
            else {
                if (v.msg_status.indexOf(user_id) > -1) {
                    // This msg already this user seen
                    if (v.sender != user_id) {
                        // This msg receive by this user; so need to change seen status
                        need_update_message_seen_list.push(v.msg_id);
                        draw_urhr();
                    }
                } else {}
            }
            // if (need_update_message_seen_list.length == 1)
            // 	draw_urhr();

            // }
        });

        inviewfun();

        socket.emit("conv_read_notification", { conversation_id, user_id });

        if (need_update_message_seen_list.length > 1)
            find_urhr_add_s(need_update_message_seen_list.length);


        if (respons.messagestag != undefined) {
            if (respons.messagestag.length > 0) {
                $.each(respons.messagestag, function(k, v) {
                    if (v.tagged_type == 'tag') {
                        msgIdsFtag.push(v.id);
                        if (v.tag_title != undefined) {
                            if (v.tag_title !== null) {
                                if (v.tag_title.length > 0) {
                                    var hiddentag = [];
                                    $.each($('.hiddenTag'), function(a, b) {
                                        hiddentag.push($(b).text().trim().toLowerCase());
                                    });

                                    var vL = 0;
                                    $.each(v.tag_title, function(kt, vt) {
                                        if (hiddentag.indexOf(vt.toLowerCase()) == -1) {
                                            $("#filesTag" + v.message_id).append('<span class="filesTag">' + vt + '</span>');
                                            vL = vL + 1;
                                        }
                                    });

                                    if (vL > 0) {
                                        $("#filesTag" + v.message_id).show();
                                        $("#filesTagHolder" + v.message_id).show();
                                    }
                                }
                                $("#filesTagHolder" + v.message_id).attr('data-msgtag-id', v.id);
                            }
                        }
                    }

                });
            }
        }

        if ($("#searchText").val() != 1) {
            var str = $('#searchText').val();
            str = str.replace(/<\/?[^>]+(>|$)/g, "");

            $('.user-msg>p').unhighlight();
            $('.user-msg>p').highlight(str);

            $.each($('.msgs-form-users'), function() {
                if ($(this).find('.highlight').length == 0) {
                    $(this).prev('.msg-separetor').hide();
                    $(this).hide();
                } else {
                    $(this).prev('.msg-separetor').show();
                    $(this).show();
                }
            });
        }




        //scrollToBottom('.chat-page .os-viewport');
        setTimeout(function() {
            updatedMsgArr.reverse();
            $.each(updatedMsgArr, (k, v) => {
                var tDesign = '<div style="padding: 5px 0px;position: relative;" class="updatedDivCOntainer" id="updatedMsgBody' + v.id + '" onclick="triggermainThread(this)"><a class="msgthreadtrigger" onclick="colorChange(\'' + v.updatedmsgid + '\');" href="#msgThread_' + v.updatedmsgid + '"></a><div class="updatedTextOriginal">' + $("#data_msg_body" + v.updatedmsgid).html() + '</div></div>';

                $(".msg_id_" + v.id + ' .plain_text').before(tDesign);
                $('#msgThread_' + v.id + ' .deleSingleMsgConnect').remove();
            });

            scrollToBottom('.chat-page .os-viewport', 0);
            $("#onscrollloading").hide();

            start_scroll = false;
        }, time);
        // console.log(1558,parseInt($('#conv'+conversation_id).attr('data-nom')));
        // console.log(2110,allFilteredItem);
        if (allFilteredItem.length == 0) {
            sent_delivered();
            last_delivered_always_show();
            if (parseInt($('#conv' + conversation_id).attr('data-nom')) > 0) {
                $.ajax({
                    url: '/alpha2/update_msg_status',
                    type: 'POST',
                    data: {
                        msgid_lists: JSON.stringify(need_update_message_seen_list),
                        user_id: user_id,
                        conversation_id: conversation_id,
                        edit_seen_lts: JSON.stringify(edit_seen_lts)
                    },
                    dataType: 'JSON',
                    success: function(res) {
                        socket.emit('update_msg_seen', {
                            msgid: res.msg_ids,
                            senderid: to,
                            receiverid: user_id,
                            conversation_id: conversation_id
                        });
                        //update_local_conv_msg_status(has_conv_into_local(conversation_id), need_update_message_seen_list);
                    },
                    error: function(err) {
                        console.log(err);
                    }
                });
            }

            if (edit_seen_lts.length > 0) {
                $.ajax({
                    url: '/alpha2/update_seen_status',
                    type: 'POST',
                    data: {
                        msgid_lists: JSON.stringify(edit_seen_lts),
                        user_id: user_id,
                        conversation_id: conversation_id
                    },
                    dataType: 'JSON',
                    success: function(res) {

                    },
                    error: function(err) {
                        console.log(err);
                    }
                });
            }
        }


        if (need_todo_details.length > 0) {
            socket.emit('need_todo_info', need_todo_details, (res) => {
                if (res.status) {
                    $('.msgs-form-users').each(function(i, obj) {
                        $.each(res.activity_list, function(tk, tv) {
                            if ($(obj).find('.todo_id_' + tv.activity_id).find('.acceptedLabel').length == 1) {
                                if ($(obj).find('.todo_id_' + tv.activity_id).find('.acceptedLabel').hasClass('decline')) {
                                    $(obj).find('.todo_id_' + tv.activity_id).find('.acceptedLabel>label').html(tv.activity_title);
                                } else {
                                    $(obj).find('.todo_id_' + tv.activity_id).find('.acceptedLabel>label').html(tv.activity_title);
                                    var ml = draw_todo_member_list(tv.activity_participants);
                                    $(obj).find('.todo_id_' + tv.activity_id).append(ml);
                                }

                            } else {
                                $(obj).find('.todo_id_' + tv.activity_id).find('.toDoName').html(tv.activity_title);
                                $(obj).find('.todo_id_' + tv.activity_id).find('.dudate').html(moment(tv.activity_end_time).format("Do MMMM, YYYY"));
                                $(obj).find('.todo_id_' + tv.activity_id).find('.accept_toDO').attr('data-members', tv.activity_participants);
                            }
                        });
                    });
                }
            });
        }

        //checking admin or not for member add and room edit

        if (type == "group") {
            if (respons.conversation[0].status != null) {
                if (respons.conversation[0].status == 'close') {
                    $('#clear_all').hide();
                    $('#selectMessage').hide();
                    $('#leaveThisRoom').hide();
                    $('#closeThisRoom').hide();
                    $('#callNotifications').hide();
                    $('#viewMuteNotification').hide();
                    $('#clear_all_deleted_msg').hide();

                    // $('#hideThisRoom').show();

                    if (adminArra != null) {
                        if (adminArra.indexOf(user_id) > -1) {
                            $('#reopenThisRoom').show();
                            $('#reOpenThisRoomBtn').show();
                        } else {
                            $('#reopenThisRoom').hide();
                            $('#reOpenThisRoomBtn').hide();
                        }
                    }

                    inactiveAllPointer();
                    $("#msg").attr('contenteditable', false);
                    $("#msg").blur();
                    $("#msg").text('');
                    // console.log(1545,respons.conversation[0].status)
                    if (respons.conversation[0].status == 'close') {
                        if (respons.conversation[0].sender_id == user_id) {
                            // $("#msg").attr('placeholder','This room has been closed by you on '+ moment(respons.conversation[0].last_msg_time).format('DD-MM-YYYY') +' at '+ moment(respons.conversation[0].last_msg_time).format('LT') +'');
                            $('#closeRoomMsg').text('This room has been closed by you on ' + moment(respons.conversation[0].last_msg_time).format('DD-MM-YYYY') + ' at ' + moment(respons.conversation[0].last_msg_time).format('LT') + '');

                        } else {
                            // $("#msg").attr('placeholder','This room has been closed by '+ findObjForUser(respons.conversation[0].sender_id).fullname +' on '+ moment(respons.conversation[0].last_msg_time).format('DD-MM-YYYY') +' at '+ moment(respons.conversation[0].last_msg_time).format('LT') +'');
                            $('#closeRoomMsg').text('This room has been closed by ' + findObjForUser(respons.conversation[0].sender_id).fullname + ' on ' + moment(respons.conversation[0].last_msg_time).format('DD-MM-YYYY') + ' at ' + moment(respons.conversation[0].last_msg_time).format('LT') + '');
                        }
                    }

                    $(".send-msgs .send-emoji").hide();
                    $(".send-msgs .send-attach-file").hide();
                    $(".send-msgs .circle_up_arrow").hide();
                    $(".send-msgs #msgCheckListBtn").hide();
                    // $("#hideRoom_fromLeft").css('display','flex');
                    $('body').addClass('room_closed');

                    // $("#msg").css({'opacity':'0.7','border':'1px solid var(--AIC)'});

                    //$("#roomIdDiv").css('pointer-events', 'none');
                    $('.chat-head-name>h4').css('pointer-events', 'auto');

                } else {
                    if (adminArra != null) {
                        if (adminArra.indexOf(user_id) > -1) {
                            //$('#leaveThisRoom').show();
                            if (adminArra.length > 1) {
                                $('#hideThisRoom').show();
                            } else {
                                $('#hideThisRoom').hide();
                            }
                            $('#closeThisRoom').show();
                            $('#reopenThisRoom').hide();
                            $('#reOpenThisRoomBtn').hide();

                        } else {
                            //$('#leaveThisRoom').show();
                            $('#closeThisRoom').hide();
                            $('#hideThisRoom').show();
                            $('#reopenThisRoom').hide();
                            $('#reOpenThisRoomBtn').hide();

                            $('#clear_all').show();
                            $('#selectMessage').show();
                            $('#callNotifications').show();
                            $('#viewMuteNotification').show();
                            $('#clear_all_deleted_msg').show();
                            // $('#leaveThisRoom').hide();
                        }
                    }

                    activeAllPointer();
                    $("#msg").attr('contenteditable', true);
                    $("#msg").focus();

                    //Msg placeholder
                    $("#msg").attr('placeholder', 'Message ' + name + '');

                    $(".send-msgs .send-emoji").show();
                    $(".send-msgs .send-attach-file").show();
                    $(".send-msgs .circle_up_arrow").show();
                    $(".send-msgs #msgCheckListBtn").show();
                    // $("#hideRoom_fromLeft").hide();
                    $('body').removeClass('room_closed');
                    $("#msg").css({ 'opacity': '1', 'border': '1px solid var(--PrimaryC)' });

                    //$("#roomIdDiv").css('pointer-events', 'none');
                    $('.chat-head-name>h4').css('pointer-events', 'auto');
                }
            } else {
                if (adminArra != null) {
                    if (adminArra.indexOf(user_id) > -1) {
                        //$('#leaveThisRoom').show();
                        $('#closeThisRoom').show();
                        $('#hideThisRoom').hide();
                        $('#reopenThisRoom').hide();
                        $('#reOpenThisRoomBtn').hide();
                    } else {
                        //$('#leaveThisRoom').show();
                        $('#closeThisRoom').hide();
                        $('#hideThisRoom').show();
                        $('#reopenThisRoom').hide();
                        $('#reOpenThisRoomBtn').hide();

                    }
                }

                activeAllPointer();
                $("#msg").attr('contenteditable', true);
                $("#msg").focus();
                $("#msg").attr('placeholder', 'Message ' + name + '');
                $('body').addClass('room_closed');

            }
        } else {
            //Msg placeholder
            $("#msg").attr('contenteditable', true);
            $("#msg").focus();
            $("#msg").attr('placeholder', 'Message ' + name + '');
            $('#reopenThisRoom').hide();

            $('#closeThisRoom').hide();
            $('#hideThisRoom').hide();
            $('#reopenThisRoom').hide();
            $('#reOpenThisRoomBtn').hide();

            $('#clear_all').show();
            $('#selectMessage').show();
            // $('#callNotifications').show();
            $('#viewMuteNotification').show();
            $('#clear_all_deleted_msg').show();

            $(".send-msgs .send-emoji").show();
            $(".send-msgs .send-attach-file").show();
            $(".send-msgs .circle_up_arrow").show();
            $(".send-msgs #msgCheckListBtn").show();
            // $("#hideRoom_fromLeft").hide();
            $('body').removeClass('room_closed');
            $("#msg").css({ 'opacity': '1', 'border': '1px solid var(--PrimaryC)' });
        }
        if (respons.conversation[0].title == null) {
            respons.conversation[0].title = ''
        }
        if (respons.conversation[0].title.indexOf(',') > -1) {
            $(".chat-head-name").css('pointer-events', 'auto');
        } else {
            if (respons.conversation[0].status != null) {
                if (respons.conversation[0].status == 'close') {
                    $(".chat-head-name").css('pointer-events', 'auto');
                } else {
                    $(".chat-head-name").css('pointer-events', 'auto');
                }
            } else {
                $(".chat-head-name").css('pointer-events', 'auto');
            }


        }

        if (adminArra != null) {
            if (adminArra.indexOf(user_id) > -1) {
                $("#grpPrivacy").removeAttr('disabled');
                $(".add-team-member").removeAttr('disabled');
                $("#team-name").removeAttr('disabled');
                $(".file-up-div").css('pointer-events', 'auto');
                if (name.indexOf(',') > -1) {
                    $('#hideThisRoom').text('Delete this group');
                } else {
                    $('#hideThisRoom').text('Delete this room');
                }

            } else {
                $("#grpPrivacy").attr('disabled');
                $(".add-team-member").attr('disabled');
                $("#team-name").prop('disabled', true);
                $(".file-up-div").css('pointer-events', 'none');
                if (name.indexOf(',') > -1) {
                    $('#hideThisRoom').text('Leave this group');
                } else {
                    $('#hideThisRoom').text('Leave this room');
                }
            }
        }
        // forActiveCallIcon(onlineUserList, participants, type,id); // sujon
        $('#conversationFileView').removeClass('active');
        if ($('.attach_tag').length > 0) {
            $('#conversationFileView').addClass('active');
        }
        if (respons.conversation["0"].privacy == 'protected') {
            $("#msg").attr('placeholder', 'Hi, ' + user_fullname + '. Create your new issue in this room.');
            $('#groupChatContainer .chat-head-name h4').html("");
            $('#groupChatContainer .chat-head-name h4').append('<span style="margin-left:5px" id="topicTypeName"># Support Room #</span>');
        }
        if (allmsgTagid.length > 0) {

            socket.emit('getconvissuetag', { allmsgTagid: allmsgTagid }, function(issuedata) {
                if (issuedata.data.length > 0) {
                    $.each(issuedata.data, function(k, v) {
                        $('.issuetagid' + v.tag_id).html(issueTagDesign2(v));
                        allconvissuetag.push(v);
                    });
                }

                setTimeout(function() {
                    scrollToBottom('.chat-page .os-viewport', 0);
                    countAndGetchecklist();
                    $("#onscrollloading").hide();

                }, 1000);
            });

        } else {
            setTimeout(function() {
                scrollToBottom('.chat-page .os-viewport', 0);
                countAndGetchecklist();
                $("#onscrollloading").hide();

            }, 1000);

        }

        if ($('#msg-container .msg-separetor-unread:last').next('.msgs-form-users:visible').length == 0) {
            if (allFilteredItem.length == 0) {
                $('#msg-container .msg-separetor-unread:last').remove();
                $('#conv' + conversation_id).attr('data-nom', 0);
            }

        }
        if ($('#msg-container').find('msgs-form-users:visible').length == 0) {
            $('#msg-container').attr('has-msg', false);
        }
        convParticipantsTooltip(conversation_id);
        forviewconv(conversation_id);
        findReplyUnreadMsg();
        inviewfun();
        mousewheelfun();
        changeAllCustomTitle();
        checkguestUserelement();
        if (allFilteredItem.length == 0) {
            $('#conv' + conversation_id).attr('data-nom', 0);
        }
        unreadinactiveCounterTime();
        // drawFile_size();
        if (!$('.threadasideContainer').is(':visible')) {
            if (allFilteredItem.length == 0) {
                $('#conv' + conversation_id).find('.unreadMsgCount').html('');
                checklist_pending_unread(conversation_id);
            }

        }

        nameArry = [];
        nameArryid = [];
        nameArryimg = [];
        $.each(user_list, function(k, v) {
            if (participants.indexOf(v.id) !== -1 && v.is_delete == 0) {
                console.log(4157,v)
                nameArry.push(v.originalname);
                nameArryid.push(v.id);
                nameArryimg.push(v.img);
            }
        });

        setTimeout(function() {
            if (goMsgIdChecklist != '') {
                if ($('#msgThread_' + goMsgIdChecklist).length > 0) {
                    $('#msgThread_' + goMsgIdChecklist).find('.checkListPlainText').click();
                    goMsgIdChecklist = '';
                    goConvIdChecklist = '';
                } else {
                    socket.emit('getOneChecklistMsg', { conversation_id: goConvIdChecklist, msg_id: goMsgIdChecklist }, function(res) {
                        // console.log(2861,res)
                        var data = res.msg;

                        data['checklist'] = res.checklist;
                        // console.log(2861,data)
                        if (checkdrawmsg(data, respons.conversation[0].participants_admin, respons.conversation[0].privacy)) {
                            draw_msg(data, true);
                            setTimeout(function() {
                                $('#msgThread_' + goMsgIdChecklist).find('.checkListPlainText').click();
                                backtoChatMsgIdRemove = goMsgIdChecklist;
                                goMsgIdChecklist = '';
                                goConvIdChecklist = '';
                            }, 1000)
                        }
                    })
                }
            }
            // console.log(30577, getCookie("skip_msg_hidding"))
            if (has_incompleted_checklist === true && getCookie("skip_msg_hidding") != conversation_id) {
                $.each($(".msgs-form-users"), function(mk, mv) {
                    var msgid = $(mv).attr("data-msgid");
                    if ($(mv).attr("data-msg-type") != 'checklist') {
                        if ($('.msg_id_' + msgid).prev().hasClass('msg-separetor')) {
                            $('.msg_id_' + msgid).prev().remove();
                        }
                        if ($('.msg_id_' + msgid).prev().hasClass('msg-separetor-unread')) {
                            $('.msg_id_' + msgid).prev().remove();
                        }
                        $(mv).hide();
                    } else if (!$(mv).hasClass("pending_chk_process")) {
                        if ($('.msg_id_' + msgid).prev().hasClass('msg-separetor')) {
                            $('.msg_id_' + msgid).prev().remove();
                        }
                        if ($('.msg_id_' + msgid).prev().hasClass('msg-separetor-unread')) {
                            $('.msg_id_' + msgid).prev().remove();
                        }
                        $(mv).hide();
                    }
                });

                // $('#closeRoomMsg').html('To see the all content(s) in this conversation please complete your checklist process.');
                $('#closeRoomMsg').html('The checklist(s) below requires your action.');
                $('#closeRoomLabel').find('.close_msg_bar').remove();
                $('#closeRoomLabel').append('<span class="close_msg_bar" onclick="closeLabel()"></span>');
                $('body').addClass('chklst_incompleted');
                $('body.chklst_incompleted .send-msgs').hide();
                _incompleted();
                // console.log('xxxxx')
            } else {
                $('body').removeClass('chklst_incompleted');
                $('body.chklst_incompleted .send-msgs').show();
            }
        }, 1000);


        var dchk = JSON.parse(localStorage.getItem('draft_checklist'));
        if (dchk != null) {
            if (dchk.conversation_id == conversation_id && dchk.user_id == user_id) {
                // console.log(3053, dchk);
                draft_checklist_open(dchk);
            }
        }
        var dmsg = JSON.parse(localStorage.getItem('draft_msg'));
        if (dmsg != null) {
            if (dmsg.conversation_id == conversation_id && dmsg.user_id == user_id) {
                // console.log(3158, dmsg);
                $("#msg").html(dmsg.msg);
            }
        }

        setTimeout(function() {
            if (respons.conversation[0].root_conv_id != null) {
                $("#conv" + respons.conversation[0].root_conv_id).find(".subroomunread").hide();
                $.each($("#sub_conv_holder .item").find(".counter"), function(sk, sv) {
                    if (Number($(sv).text()) > 0) {
                        $("#conv" + respons.conversation[0].root_conv_id).find(".subroomunread").show();
                        return;
                    }
                });
            }
        }, 3000);
        setTimeout(function() {
            if ($("#msg-container").hasClass("lock4you")) {
                $("#sub_conv_holder .item:first").trigger("click");
                // setTimeout(function(){
                // 	$(".back_to_main_conv").hide();
                // 	$(".for_exit_sub_room").hide();
                // }, 2000);
            }
        }, 1000);

        setTimeout(function() {
            setCookie("last_update_checklist", "");
            activeShareIconLink();
        }, 5000);
        socket.emit('find_all_files', { conversation_id: $('#roomIdDiv').attr('data-roomid') }, function(res) {
            thisConvAllFilesNames = [];
            thisConvAllFilesLocations = [];
            $.each(res.files, function(k, v) {
                thisConvAllFilesNames.push(v.key);
                thisConvAllFilesLocations.push(v.location);
            });
            activeShareIconLink();
        })

        if (has_permission(user_id, GUEST)) {
            socket.emit("check_update_invitation", { id: user_id, conversation_id, status: "Viewed" }, (invite_result) => {
                console.log(3750, invite_result);
            });
        }
    }
    setTimeout(function() {
        if (type == "personal" && conversation_id == user_id) {
            $("#personalConnectActive #conv_title .msg-user-photo img").attr("src", file_server + 'profile-pic/Photos/' + user_img);
            $("#personalConnectActive #conv_title .converstaion_name").text(user_fullname);
        }
        $('.side_bar_list_item li').removeClass('sideActive').removeClass('selected');
        $("#conv" + conversation_id).addClass('sideActive').addClass('selected');

        if ($('#conv' + conversation_id).attr('data-mute') != 'unmute') {
            $('#viewMuteNotification').addClass('active');
            console.log('*******  MUTE  ********');
        } else {
            $('#viewMuteNotification').removeClass('active');
            console.log('*******  UNMUTE  ********');
        }
    }, 2000)

}

socket.on('receive_read_notification', function(data) {
    if (data.user_id == user_id) {
        $("#conv" + data.conversation_id).find(".unreadMsgCount").text("");
        $("#conv" + data.conversation_id).attr("data-nom", 0);
    }
})

function closeLabel() {
    console.log("skip_msg_hidding 1", getCookie("skip_msg_hidding"), conversation_id);
    setCookie("skip_msg_hidding", conversation_id);
    $("#conv" + conversation_id).trigger("click");
    console.log("skip_msg_hidding 2", getCookie("skip_msg_hidding"), conversation_id);
}

function draft_checklist_open(data) {
    addMsgCheckList();
    $("#checkListPlainText1").text(data.title);
    if (data.items.length > 0) {
        $.each(data.items, function(k, v) {
            var n = k + 1;
            $("#checkBoxTitle" + n).text(v);
        });
    }
}

var backtoChatMsgIdRemove = ''

function roomRemoveElement(room) {
    if (room.participants_admin == null) {
        room.participants_admin = [];
    }
    var design = '<li id="deleteThisRoomfull" onclick="showDeleteRoomPop()">Delete this room</li>';
    $('#deleteThisRoomfull').remove();
    if (room.group == 'yes') {
        if (room.conversation_id != user_id) {
            if (room.participants_admin.indexOf(user_id) > -1) {
                $('.chat-head-calling>.moreMenuPopup').append(design);
            }
        }
    }
}

function showDeleteRoomPop() {
    // $('#warningPopup').show();
    // $('#warningPopup').attr('data-type','delete_room');
    // $('#warningMessage').html('Are you sure you want to delete this Room ? This cannot be <span class="undone">undone</span>');
    // $('#warningPopup').find('.buttonAction').addClass('bg_danger').text('Delete');
    // $('#warningPopup').find('.buttonCancel').text('Cancel');
    $('#msgDeleteLastTime').css('display', 'flex');
    $('#deleteconvLasTimeAction').removeClass('action_red_Active');
    $('#deleteconvLasTimeAction').removeClass('bg_danger');
    $('#deleteconvLasTimeAction').addClass('action_red_inactive');
    $('#deleteConvLastTimeInput').css("border-color", "#d8d8d8");
    var r = Math.floor(100000 + Math.random() * 900000);
    $('#deleteConvLastTimeVal').text(r);
    $('#deleteConvLastTimeInput').val("");
    $('#deleteConvLastTimeInput').focus();
    $('#deleteconvLasTimeAction').text('Delete')



}

function confirmDelete(e) {
    var a = $('#deleteConvLastTimeVal').text();
    var b = $('#deleteConvLastTimeInput').val();
    if (a == b) {
        $('#deleteconvLasTimeAction').addClass('action_red_Active');
        $('#deleteconvLasTimeAction').removeClass('action_red_inactive');
    } else {
        $('#deleteconvLasTimeAction').removeClass('action_red_Active');
        $('#deleteconvLasTimeAction').addClass('action_red_inactive');
    }
    if (e.keyCode !== 8) {
        if (b.length >= 6) {
            e.preventDefault();
            e.stopImmediatePropagation();
            if (a == b) {
                $('#deleteConvLastTimeInput').css("border-color", "green");
                $(e.target).blur();
            } else {
                $('#deleteConvLastTimeInput').css("border-color", "red");
            }
        }
    } else {
        if (a == b) {
            $('#deleteConvLastTimeInput').css("border-color", "green");
            $(e.target).blur();
        } else {
            $('#deleteConvLastTimeInput').css("border-color", "#d8d8d8");
        }
    }

}

function roomDeleteLastTime() {
    if ($("#roomIdDiv").attr('data-roomid') != '') {
        socket.emit('room_delete_emit', { conversation_id: $("#roomIdDiv").attr('data-roomid'), company_id: company_id, participants: participants, user_id: user_id, user_fullname: user_fullname, room_title: $('#conv_title').find('.converstaion_name').text(), created_at: new Date() }, function(res) {
            // console.log(res);
            closeModal('msgDeleteLastTime');
        })
    }
}

function drawFile_size() {
    $.each(fileSizeStore, function(k, v) {
        getFileSize(v.url, v.cls);
    });
}

function unread_thread_out_of_txt(msg_id){
    var tor = Number($('#msgThread_' + msg_id).find('.msgReply.readunreadreply').attr('data-count'));
    var ur = Number($('#msgThread_' + msg_id).find('.msgReply.readunreadreply').attr('data-unread_reply')) + 1;
    console.log(ur, tor);
    $('#msgThread_' + msg_id).find('.msgReply.readunreadreply').attr('data-unread_reply', ur);
    $('#msgThread_' + msg_id).find('.msgReply .view_threaded_chat_str').html('View unread threaded chat (<span class="no-of-replies" >'+ ur + ' out of ' + tor + '</span>) ');
}

var allrepData = [];
var allmyUnreadThread = [];

function findReplyUnreadMsg() {
    allrepData = [];
    allmyUnreadThread = [];
    socket.emit('getAllThreadCov', conversation_id, function(res) {
        if (res.status) {
            if (res.data.length > 0) {
                allrepData = res.data;
                var all_Conv_id = []
                $.each(allrepData, function(k, v) {
                    if (all_Conv_id.indexOf(v.rep_id) == -1) {
                        all_Conv_id.push(v.rep_id);
                    }
                });
                socket.emit('getallThreadMsg', { conversation_id: all_Conv_id }, function(res2) {
                    // console.log(res2)
                    $.each(allrepData, function(k, v) {
                        $.each(res2.data, function(ka, va) {
                            if (va.conversation_id == v.rep_id) {
                                if (va.msg_status == null) {
                                    va.msg_status = [];
                                }
                                if (va.msg_id == "4911a8b0-895d-11eb-a095-bd64e5242dcf") {
                                    // console.log(4033,va);
                                    // console.log(4033,va.msg_status.indexOf(user_id) > -1);
                                    // console.log(4033,va.sender != user_id);
                                    // console.log(4033,allmyUnreadThread.indexOf(v.msg_id) == -1);
                                }
                                if (va.msg_status.indexOf(user_id) > -1) {
                                    if (va.sender != user_id) {
                                        unread_thread_out_of_txt(v.msg_id);
                                        if (allmyUnreadThread.indexOf(v.msg_id) == -1) {
                                            allmyUnreadThread.push(v.msg_id);
                                            $('#msgThread_' + v.msg_id).find('.countReply').addClass('unreadOn');
                                        }
                                    }
                                }
                            }
                        })
                    })
                })
            }
        }
    })
}


function checkunreadthread(msgid) {
    if ($('#msgThread_' + msgid).find('.countReply').length > 0) {
        $('#msgThread_' + msgid).find('.countReply').addClass('unreadOn');
    } else {
        setTimeout(function() {
            $('#msgThread_' + msgid).find('.countReply').addClass('unreadOn');
        }, 1000);
    }

}

function forviewconv(conversation_id) {
    // console.log('forviewconv',participants);
    if (conversation_id == user_id) {
        $('.chat-head-calling').find('.voice-call').hide();
        $('.chat-head-calling').find('.video-call').hide();
        $('.chat-head-calling').find('.tagged').hide();
        $('#callNotifications').hide();
        $('#pin-to-bar').parent('.pin-unpin ').addClass('pined');
        $('#pin-to-bar').parent('.pin-unpin ').css('pointer-events', 'none');
        $('#pin-to-bar').parent('.pin-unpin ').hide();
    } else {
        $('#pin-to-bar').parent('.pin-unpin ').show();
    }
}

function activeAllPointer() {
    $(".chat-head-name").css('pointer-events', 'auto');
    $(".chat-head-more-menu").css('pointer-events', 'auto');
    $(".pin-unpin").css('pointer-events', 'auto');
    $(".tagged").css('pointer-events', 'auto');
    $(".media").css('pointer-events', 'auto');
    $("#msg").css('pointer-events', 'auto');
    $(".msgs-form-users").css('pointer-events', 'auto');

}

function colorChange(id) {
    $("#data_msg_body" + id).addClass('addcolor');
    setTimeout(function() {
        $("#data_msg_body" + id).removeClass('addcolor');
    }, 3000);
}

function inactiveAllPointer() {
    $(".chat-head-name").css('pointer-events', 'auto');
    $(".chat-head-more-menu").css('pointer-events', 'none');
    $(".pin-unpin").css('pointer-events', 'none');
    $(".tagged").css('pointer-events', 'none');
    $(".media").css('pointer-events', 'none');
    $("#msg").css('pointer-events', 'none');
    $(".msgs-form-users").css('pointer-events', 'none');

    // $("#searchBefore").css('pointer-events', 'none');
    // $(".name_and_profile").css('pointer-events', 'none');
    // $("#viewlistUpdateroom").css('pointer-events', 'none');
    // $(".channel-name").css('pointer-events', 'none');
    // $("#updateWorkspaceTeam").css('pointer-events', 'none');
    // $("#business_unitUpdate").css('pointer-events', 'none');
    // $(".select-ecosystem").css('pointer-events', 'none');
    // $(".upload-channel-photo").css('pointer-events', 'none');
    // $(".file-up-div label").css('pointer-events', 'none');
    // $("#forAdminBtn .create").css('pointer-events', 'none');
}

var sent_delivered = () => {
    // $('.msg-send-seen-delivered').hide();
    // var remove_previous = false;
    // $($('.msg-send-seen-delivered').get().reverse()).each(function (k, v) {
    // 	if (remove_previous) $(v).text("");
    // 	if ($(v).text() == ' - Sent') $(v).show();
    // 	if ($(v).text() == ' - Delivered') { $(v).show(); remove_previous = true; }
    // });
};
var last_delivered_always_show = () => {
    var last_img = $('.msg-send-seen-delivered').last().closest('.msgs-form-users').find('.msg-user-photo>img').attr('alt');
    if ($('#conv' + user_id).attr('data-img') == last_img && $('.msg-send-seen-delivered').last().text() != ' - Sent') {
        $('.msg-send-seen-delivered').hide();
        $('.msg-send-seen-delivered').last().text(' - Delivered');
        $('.msg-send-seen-delivered').last().show();
    }
    var msgid = $('.msg-send-seen-delivered').last().closest('.msgs-form-users').attr('data-msgid');
    // console.log(3719, 'last modify');
    // if(msgid == getCookie('last_update_checklist')){
    // 	$('.msg-send-seen-delivered').last().text(' - Checklist Modified by '+findObjForUser(user_id).fullname);
    // }
};
var update_msg_seen_status = (msgid) => {
    if ($('.msg-send-seen-delivered').last().text() != ' - Delivered')
        $('.msg_id_' + msgid).find('.msg-send-seen-delivered').text(' - Delivered').delay(3000).fadeOut();
    last_delivered_always_show();
};
var tooltipForOverLength = () => {
    // $('.side_bar_list_item li').mouseenter(function () {
    // 	var lengthCount = $(this).children('.usersName').text().length;
    // 	var thisName = $(this).children('.usersName').text();
    // 	var selector = $(this);
    // 	if (lengthCount >= 17 && lengthCount <= 25) {
    // 		setTimeout(function () {
    // 			selector.attr({
    // 				'data-balloon-length': 'medium',
    // 				'data-balloon': '' + thisName + '',
    // 				'data-balloon-pos': 'up'
    // 			});
    // 		}, 1000);

    // 	} else if(lengthCount >= 25){
    // 		setTimeout(function () {
    // 			selector.attr({
    // 				'data-balloon-length': 'fit',
    // 				'data-balloon': '' + thisName + '',
    // 				'data-balloon-pos': 'up'
    // 			});
    // 		}, 1000);
    // 	}
    // });

    // $('#createTodo').mouseleave(function () {
    // 	// $('#createTodo').find('.tooltipForRightSide').remove();
    // 	// $('.main-header').css('z-index', '999');

    // });

    $('.roomDrawTitle').mouseenter(function() {
        var thisName = $(this).attr('data-title');
        var selector = $(this).parent('h3');
        if (thisName.length > 20) {
            setTimeout(function() {
                selector.attr({
                    'data-balloon-length': 'medium',
                    'data-balloon': '' + thisName + '',
                    'data-balloon-pos': 'up'
                });
            }, 1000);
        }
    });

    $('#createTodo').mouseenter(function() {
        var selector = $(this);
        setTimeout(function() {
            selector.attr({
                'data-balloon': 'Add a quick task and share',
                'data-balloon-pos': 'up'
            });
        }, 1000);

    });
    $('#CreateEvent').mouseenter(function() {
        var selector = $(this);
        setTimeout(function() {
            selector.attr({
                'data-balloon': 'Create an event or schedule and share',
                'data-balloon-pos': 'up'
            });
        }, 1000);

    });
    $('.createFeedBack').mouseenter(function() {
        var selector = $(this);
        setTimeout(function() {
            selector.attr({
                'data-balloon': 'Add a feedback',
                'data-balloon-pos': 'up'
            });
        }, 1000);

    });
    $('.chat-head-calling .pin-unpin').mouseenter(function() {
        var selector = $(this);
        var convTitle = $('#conv_title').text();
        var roomType = $('#roomIdDiv').attr('data-title');
        if (roomType == 'Personal') {
            if ($('#pin-to-bar').hasClass('pined') == true) {
                convTitle = "Unpin this direct chat";
            } else {
                convTitle = "Pin this direct chat";
            }
        } else {
            if ($('#pin-to-bar').hasClass('pined') == true) {
                convTitle = "Unpin this room";
            } else {
                convTitle = "Pin this room";
            }
        }
        if ($('#pin-to-bar').hasClass('pined') == true) {
            setTimeout(function() {
                selector.attr({
                    'data-balloon': '' + convTitle + '',
                    'data-balloon-pos': 'up'
                });
            }, 1000);

        } else {

        }
        setTimeout(function() {
            selector.attr({
                'data-balloon': '' + convTitle + '',
                'data-balloon-pos': 'up'
            });
        }, 1000);

    });
    $('.chat-head-calling .tagged').mouseenter(function() {
        var selector = $(this);
        var convTitle = $('#conv_title').text();
        var roomType = $('#roomIdDiv').attr('data-title');
        if (roomType == 'Personal') {
            convTitle = "Tag this direct chat";
        } else {
            convTitle = "Tag this room";
        }
        setTimeout(function() {
            selector.attr({
                'data-balloon': convTitle,
                'data-balloon-pos': 'up'
            });
        }, 1000);

    });


    $('.chat-head-calling .voice-call').mouseenter(function() {
        var selector = $(this);
        var convTitle = $('#conv_title .converstaion_name').text();
        var roomType = $('#roomIdDiv').attr('data-title');
        if (roomType == 'Personal') {
            convTitle = 'Voice call ' + convTitle + '';
        } else {
            convTitle = 'Voice Call';
        }
        setTimeout(function() {
            selector.attr({
                'data-balloon': '' + convTitle + '',
                'data-balloon-pos': 'up'
            });
        }, 1000);

    });
    $('.chat-head-calling .video-call').mouseenter(function() {
        var selector = $(this);
        var convTitle = $('#conv_title .converstaion_name').text();
        var roomType = $('#roomIdDiv').attr('data-title');
        if (roomType == 'Personal') {
            convTitle = 'Video call ' + convTitle + '';
        } else {
            convTitle = 'Video Call';
        }
        setTimeout(function() {
            selector.attr({
                'data-balloon': '' + convTitle + '',
                'data-balloon-pos': 'up'
            });
        }, 1000);

    });
    $('.chat-head-calling .more-menu').mouseenter(function() {
        var selector = $(this);
        if ($('.moreMenuPopup').is(':visible') == true) {
            setTimeout(function() {
                selector.attr({
                    'data-balloon': 'Hide more option',
                    'data-balloon-pos': 'up'
                });
            }, 1000);

            // var design = '<div class="tooltipForRightSide tooltipHeadLeft"><h2>Hide more option</h2><span></span></div>';
        } else {
            setTimeout(function() {
                selector.attr({
                    'data-balloon': 'More Options',
                    'data-balloon-pos': 'up'
                });
            }, 1000);

            // var design = '<div class="tooltipForRightSide tooltipHeadLeft"><h2>See more option</h2><span></span></div>';
        }
    });
    $('.addTagConv').mouseenter(function() {
        var selector = $(this);

        if ($('#tagItemList').text().length > 25) {
            var text = $('#tagItemList').text();
            setTimeout(function() {
                selector.attr({
                    'data-balloon': '' + text + '',
                    'data-balloon-pos': 'up'
                });
            }, 1000);
        }

    });
    $('.pevThread').mouseenter(function() {
        var selector = $(this);
        setTimeout(function() {
            selector.attr({
                'data-balloon': 'Go to previous threaded reply',
                'data-balloon-pos': 'up'
            });
        }, 1000);

    });
    $('.nextThread').mouseenter(function() {
        var selector = $(this);
        setTimeout(function() {
            selector.attr({
                'data-balloon': 'Go to next threaded reply',
                'data-balloon-pos': 'up'
            });
        }, 1000);

    });


}
tooltipForOverLength();

var tooltipForBackWrap = () => {
    $('.closeBackwrap').mouseenter(function() {
        $(this).attr({
            'data-balloon': 'Press Esc to close',
            'data-balloon-pos': 'up'
        });

    });
}
tooltipForBackWrap();

var draw_urhr = () => {
    $("#msg-container").find('.msg-separetor-unread').remove();
    // var html = '<div class="msg-separetor-unread" data-length="1" ><p>1 new message</p></div>';
    var html = '<div class="msg-separetor-unread" data-length="1" ><p>New Message(s)</p></div>';
    $("#msg-container").prepend(html);
};
var find_urhr_add_s = (nour) => {
    // $("#msg-container").find('.msg-separetor-unread>p').html(nour + ' new messages');
    $("#msg-container").find('.msg-separetor-unread>p').html('New Message(s)');
    $("#msg-container").find('.msg-separetor-unread').attr('data-length', nour);
};

var count_no_of_attch = (data) => {
    var count = 0;
    count += (data.attch_imgfile === null) ? 0 : data.attch_imgfile.length;
    count += (data.attch_videofile === null) ? 0 : data.attch_videofile.length;
    count += (data.attch_audiofile === null) ? 0 : data.attch_audiofile.length;
    count += (data.attch_otherfile === null) ? 0 : data.attch_otherfile.length;
    return count;
};

function findObjForUser(value) {
    for (var i = 0; i < user_list.length; i++) {
        if (user_list[i]['id'] === value) {
            if (user_list[i].login_total == null) {
                user_list[i].login_total = 0;
            }
            var userData = {
                    email: user_list[i].email,
                    fullname: user_list[i].fullname,
                    id: user_list[i].id,
                    img: user_list[i].img,
                    designation: user_list[i].designation,
                    dept: user_list[i].dept,
                    createdat: user_list[i].createdat,
                    conference_id: user_list[i].conference_id,
                    login_total: user_list[i].login_total,
                    originalname:user_list[i].originalname

                }
                // if(user_list[i].id == user_id){
                // 	userData.fullname = 'You';
                // }
            return userData;
        }
    }
    return false;
}

function findObjFromUserName(value) {
    for (var i = 0; i < user_list.length; i++) {
        if (user_list[i]['originalname'] === value) {
            if (user_list[i].login_total == null) {
                user_list[i].login_total = 0;
            }
            var userData = {
                    id: user_list[i].id,
                    email: user_list[i].email,
                    fullname: user_list[i].fullname,
                    id: user_list[i].id,
                    img: user_list[i].img,
                    designation: user_list[i].designation,
                    dept: user_list[i].dept,
                    createdat: user_list[i].createdat,
                    conference_id: user_list[i].conference_id,
                    login_total: user_list[i].login_total,
                    originalname:user_list[i].originalname

                }
                // if(user_list[i].id == user_id){
                // 	userData.fullname = 'You';
                // }
            return userData;
        }
    }
    return false;
}

function draw_call_history(data) {
    var html = '';
    if (data.call_duration != null && data.call_duration != '') {
        html += '<div class="plain_text">In a call for ' + get_call_duration(data.call_duration) + '</div>';
    } else {

        if (typeof data.old_msgid != 'undefined' && parseInt(data.old_msgid) == 0) {
            if (conversation_type == 'personal') {
                html += '<div class="plain_text">Call in progress...</div>';
            } else {
                html += '<div class="plain_text">Call in progress, please join the call now by clicking the Call icon on top.</div>';
            }
        } else {
            if (data.call_status == 'message') {
                html += '<div class="plain_text">' + data.msg_body + '</div>';
            } else {
                html += '<div class="plain_text">Missed a call</div>';
            }
        }
    }
    return html;
}

function getMyFilesLengthTotal(data) {
    let img = data.attch_imgfile == null ? 0 : data.attch_imgfile.length;
    let audio = data.attch_audiofile == null ? 0 : data.attch_audiofile.length;
    let video = data.attch_videofile == null ? 0 : data.attch_videofile.length;
    let docs = data.attch_otherfile == null ? 0 : data.attch_otherfile.length;
    let total = img + audio + video + docs;
    // console.log(4884, img, audio, video, docs, total)
    return total;
}
function threadReplyPvt(el){
    $(el).closest('.secret_message_found').find('.reply_btn_n').click();

}
var draw_msg = (data, append = true, allTsk = false, re = false) => {
    console.log('secretTriggerd',secretTriggerd);
    // console.log('draw_msg', data);
    // var cnv = get_conversation_obj(data.conversation_id);
    // console.log(4876, cnv);
    var nowFilesLength = getMyFilesLengthTotal(data);
    data['delete_text'] = '';
    data['total_delete'] = 0;
    if (data.total_files == 'null') {
        data.total_files = 0;
    } else {
        if (Number(data.total_files) > nowFilesLength) {
            data['delete_text'] = Number(data.total_files) - nowFilesLength + ' file(s) deleted.'
            data['total_delete'] = Number(data.total_files) - nowFilesLength;
        }
    }

    if (re) {
        conversation_type = get_conversation_obj(data.conversation_id);
    }

    if (data.msg_body.indexOf('~@') > -1) {
        data.msg_body = data.msg_body.split('  ').join('~@');
        // data.msg_body = data.msg_body.replace("@~", "~@");
        var arr = data.msg_body.split('~@');
        var text = ''
        for (u in arr) {
            var user_info = findObjFromUserName(arr[u]).id;
            if (arr[u] == 'Everyone') {
                text = text + '<div onclick="actionMentionUser(event,\'Everyone\')" data-id="Everyone" class="mention_user_msg solid_mention" data-mention="@Everyone"></div>'
            } else {
                if (user_info) {
                    text = text + '<div onclick="actionMentionUser(event,\'' + user_info + '\')" data-id="' + user_info + '" class="mention_user_msg solid_mention" data-mention="@' + arr[u] + '"></div>'
                } else {
                    text = text + arr[u];
                }
            }
        }
        data.msg_body = text;
    }

    if (data.msg_body.indexOf('href') > -1) {
        $('#forTextModify').html(data.msg_body);
        let urlLength = $('#forTextModify').find('a').length;

        if (urlLength == 1) {
            let pendata = '';
            if (data.sender == user_id) {
                if (data.msg_body.indexOf('email_link') == -1) {
                    pendata = '<span class="edit_pen flag_forLater" onclick="editMyOwnLink(this)" data-value="' + data.msg_id + '"></span><br>'
                }
                data.msg_body = '<h1 class="view_link_title onlyLinkTitle' + data.msg_id + '" onclick="editMyOwnLink(this)" data-value="' + data.msg_id + '"></h1>' + pendata + '' + data.msg_body;
            } else {
                data.msg_body = '<h1 class="view_link_title onlyLinkTitle' + data.msg_id + '"></h1><br>' + pendata + '' + data.msg_body;
            }


        }
    }
    // if(data.created_at > '2020-12-24T12:13:41.046Z'){
    // 	var bytes  = CryptoJS.AES.decrypt(data.msg_body, 'freeli_01');
    // 	data['msg_body'] = bytes.toString(CryptoJS.enc.Utf8);
    // }

    if (filterOnlyTagMsgA.indexOf('filteTagOnly') > -1) {
        if (data.tag_list == null) {
            return false;
        } else if (data.tag_list.length == 0) {
            return false;
        }
    }
    // console.log(3951, 1111)
    if (data.msg_id == 'e68e1c80-b065-11ea-897e-bbba8fb953ef') {
        // console.log(3044,data)
    }

    if ($('.threadasideContainer').is(':visible')) {
        if (allmyUnreadThread.indexOf(data.msg_id) == -1) {
            return false;
        }
    }
    var thisStatus = false;
    if (conversation_type == 'group') {
        if (data.sender.toString() == user_id) {
            thisStatus = true;
        } else {
            if (adminArra.indexOf(user_id) > -1) {
                thisStatus = true;
            }
        }
    } else {
        thisStatus = true;
    }
    if (data.msg_id == '5a867df0-e5bb-11ea-b903-c448c04b00c1') {

        // console.log(3351,data);
    }
    all_user_string_tag[data.msg_id] = data.user_tag_string;
    // console.log(3199,filterOnlyTagMsgA,data.tag_list,data.tag_list == null);

    if (allFilteredItem.length > 0) {
        var msg_viewFil = false;
        if (data.msg_type != 'notification' && data.msg_type != 'call') {
            $.each(allFilteredItem, function(k, v) {
                if (v == 'flag') {
                    if (data.has_flagged != null) {
                        if (data.has_flagged.indexOf(user_id.toString()) > -1) {
                            msg_viewFil = true;
                        }
                    }
                } else if (v == 'checklist') {

                    if (data.msg_type == 'checklist') {
                        msg_viewFil = true;
                        if (allFilteredItem.indexOf('flagged_checklist') > -1) {
                            if (data.has_flagged != null && data.has_flagged.indexOf(user_id) != -1) {
                                msg_viewFil = true;
                            } else {
                                msg_viewFil = false;
                            }
                        }

                    }
                }
            });

            if (msg_viewFil) {
                if (allFilteredItem.indexOf('pending_checklist') > -1) {
                    var p = 0;
                    var c = 0;
                    $.each(data.checklist, function(k, v) {
                        if (v.checklist_status == 1) {
                            c += 1;

                        } else {
                            p += 1;
                        }
                    });
                    // console.log(2990,p,c);
                    if (p == 0) {
                        msg_viewFil = false;;
                    }
                }
            }


        }
        if (!msg_viewFil) {
            return false;
        }
    }

    // console.log(4029, 2222)
    if (!checkguestMsg(data)) {
        return false;
    }
    // console.log(1111, 4439)
    // if(data.msg_body != null){
    // 	if(data.msg_body.indexOf('secret_user _scret_msg_') > -1){
    //         var secretuser = data.msg_body.split('@:_S');
    //             secretuser = secretuser[1];
    //             if(user_id != secretuser && user_id != data.sender){
    //                 return false;
    //             }
    //     }
    // }

    var dataAssign = '';
    if (data.service_provider != null && data.service_provider != undefined) {
        if (data.service_provider.length > 0) {
            var design = '<span class="msg-time" data-id="' + data.service_provider.join(',') + '">[Service Provider(s) : ';
            $.each(data.service_provider, function(k, v) {
                if (k == 0) {
                    design += '<span> ' + findObjForUser(v).fullname + ' </span>';
                } else {
                    if (data.service_provider.length == (k + 1)) {
                        design += ' & <span>' + findObjForUser(v).fullname + ' </span>';
                    } else {
                        design += '<span>, ' + findObjForUser(v).fullname + ' </span>';
                    }
                }
            })
            design += ']</span>';
            dataAssign = design;
        }

    }

    if (data.assign_to == null || data.assign_to == undefined) {
        data.assign_to = [];
    }

    if (data.assign_to.length > 0) {
        var design = '<span class="secret_heading" data-id="' + data.assign_to.join(',') + '">Assign to ';
        $.each(data.assign_to, function(k, v) {
            if (k == 0) {
                design += '<span> ' + findObjForUser(v).fullname + ' </span>';
            } else {
                if (data.assign_to.length == (k + 1)) {
                    design += ' & <span>' + findObjForUser(v).fullname + ' </span>';
                } else {
                    design += '<span>, ' + findObjForUser(v).fullname + ' </span>';
                }
            }
        })
        design += '</span>';
        dataAssign += design;
    }

    var secretUserPerMsg = data.secret_user;
    if (data.secret_user != null && data.secret_user != undefined) {
        if (data.secret_user.length > 0) {
            if (data.secret_user.indexOf(user_id) == -1) {
                return false;
            }
        }
    } else {
        secretUserPerMsg = [];
    }
    if (data.msg_id == 'e68e1c80-b065-11ea-897e-bbba8fb953ef') {
        // console.log(3044,data)
    }

    var additionalChk = false;
    if ($('#groupChatContainer').hasClass('task_assignment')) {
        allTsk = true;
    }

    if ((allTsk && re == false) || (allTsk == false && re)) {
        drawActiveConvMsg = false;
    } else {
        drawActiveConvMsg = true;
    }

    if (drawActiveConvMsg) {
        if (data.conversation_id !== conversation_id)
            return false
    }

    if (data_search) {
        hideSearchForHead();
        data_search = false;
    }

    var end_timer = null;
    if (data.has_timer !== null && data.has_timer !== undefined) {
        if (data.has_timer > new moment().valueOf()) {
            end_timer = moment.unix(data.has_timer).format("hh:mm A");
        } else {
            return;
        }
    }
    var _edit_check = '';
    if (data.msg_type == 'checklist') {
        if (data.old_msg_id != undefined) {
            if ($('.msg_id_' + data.old_msg_id).hasClass('editable_checklistMsg')) {
                _edit_check = 'editable_checklistMsg';
            }
            $('.msg_id_' + data.old_msg_id).remove();
        } else if ($('.msg_id_' + data.msg_id).is(':visible')) {
            $('.msg_id_' + data.msg_id).remove();
            saveChecklistStatusAndTitlefun(data);
        }
    } else {
        $('.msg_id_' + data.msg_id).remove();
    }

    // if ($('.msg_id_'+data.msg_id).hasClass('editable_checklistMsg')) {
    // 	_edit_check = 'editable_checklistMsg';
    // }
    //    $('.msg_id_'+data.msg_id).remove();

    //$('.msgs-form-users.msg_id_'+data.msg_id).remove(); // sujon

    // if (data.has_hide != null)
    // 	if ((data.has_hide).indexOf(user_id) > -1)
    // 		return;
    // if(data.has_delete == null || (data.has_delete).indexOf(user_id) == -1){
    var attach_show = true,
        deletebtn_active = true,
        permanently = false;
    // if (data.has_delete != null) {
    // 	if ((data.has_delete).indexOf(user_id) == -1) {
    // 		if ((data.has_delete).indexOf('Sender delete it') > -1) {
    // 			alldeletemsgid.push(data.msg_id);
    // 			data.msg_body = "<i><img src='/images/delete_msg.png' class='deleteicon'> This message was deleted.</i>";
    // 			attach_show = false;
    // 			permanently = true;
    // 			// deletebtn_active = false;
    // 		}
    // 	}
    // 	else {
    // 		alldeletemsgid.push(data.msg_id);
    // 		data.msg_body = "<i><img src='/images/delete_msg.png' class='deleteicon'> You deleted this message.</i>";
    // 		attach_show = false;
    // 		permanently = true;
    // 	}
    // }

    // if (data.msg_body == "This message was deleted.") {
    // 	data.msg_body = "<i><img src='/images/delete_msg.png' class='deleteicon'> This message was deleted.</i>";
    // 	attach_show = false;
    // 	permanently = true;
    // }

    // if (permanently) {
    // 	data.msg_body += '<span onclick="permanent_delete_silently(\'' + data.msg_id + '\')" class="silent_delete"> (Remove this line)</span>';
    // }

    // console.log(3345, data)

    if (data.has_hide !== null && data.has_hide !== undefined) {
        if (data.has_hide.indexOf(user_id) > -1) {
            return false;
        }
    }
    var has_title = findObjForUser(data.sender).fullname;
    if (!has_title) {
        has_title = data.sender_name;
    }
    // console.log(800,has_title)
    if (data.sender == user_id) {
        has_title = "You";
    }
    var hasDelete = false;
    if (data.has_delete != null && data.has_delete != undefined) {
        if (data.has_delete.indexOf('delete_for_all') > -1) {
            hasDelete = true;
            if (data.msg_type == 'checklist') {
                data.msg_body = '<i><img src="/images/delete_msg.png" class="deleteicon"> "' + data.msg_body + '" Checklist has been deleted by  ' + findObjForUser(data.sender).fullname ? findObjForUser(data.sender).fullname : data.sender_name + '</i><span onclick="permanent_delete_silently(\'' + data.msg_id + '\')" class="silent_delete"> (Remove this line)</span>';
            } else {

                data.msg_body = '<i><img src="/images/delete_msg.png" class="deleteicon"> ' + has_title + ' deleted this message.</i><span onclick="permanent_delete_silently(\'' + data.msg_id + '\')" class="silent_delete"> (Remove this line)</span>';
            }
        } else if (data.has_delete.indexOf(user_id) > -1) {
            hasDelete = true;
            if (data.msg_type == 'checklist') {
                data.msg_body = '<i><img src="/images/delete_msg.png" class="deleteicon"> "' + data.msg_body + '" Checklist has been deleted by  ' + findObjForUser(data.sender).fullname ? findObjForUser(data.sender).fullname : data.sender_name + '</i><span onclick="permanent_delete_silently(\'' + data.msg_id + '\')" class="silent_delete"> (Remove this line)</span>';
            } else {
                data.msg_body = '<i><img src="/images/delete_msg.png" class="deleteicon"> You deleted this message.</i><span onclick="permanent_delete_silently(\'' + data.msg_id + '\')" class="silent_delete"> (Remove this line)</span>';
            }
        }
    }
    data.hasDelete = hasDelete;
    var msgdeleteClass = ''
    if (hasDelete) {
        msgdeleteClass = 'deleted'
    }

    if (secretUserPerMsg.length > 0) {
        msgdeleteClass = msgdeleteClass + ' secret_message_found ';
    } else {
        msgdeleteClass = msgdeleteClass + ($('#privateChatsOnly.active').length ? ' secret_filter_hide ' : '');
    }
    var msgClasses = '';
    if (data.has_flagged != null && (data.has_flagged).indexOf(user_id) != -1) {
        msgClasses = 'flagged_background';
    }


    /* Start Date Group By */
    var msg_date = moment(data.created_at).calendar(null, {
        sameDay: '[Today]',
        lastDay: '[Yesterday]',
        lastWeek: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; },
        sameElse: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; }
    });
    var temp_date = msg_date;

    if (append) {
        $.each($('.msg-separetor'), function(k, v) {
            if ($(v).text() == msg_date) {
                msg_date = null;
                return 0;
            }
        });
        if (msg_date !== null && $('.msg-separetor-unread').length == 0) {
            var date_html = '<div class="msg-separetor" data-format="' + moment(data.created_at).format('YYYY-MM-DD') + '" data-date="' + msg_date + '"><p>' + msg_date + '</p></div>';
            if (re) {
                // return 
                // console.log(5243, $('#flagConvList'+data.conversation_id));
                // $(".convMsgContainer").append(date_html);
            } else {

                $("#msg-container").append(date_html);
            }
        }
    }
    /* End Date Group By */

    var isiturl = isURL(data.msg_body);
    // debugger
    var secret_user_str = data.secret_user && data.secret_user.length ? data.secret_user.join(',') : '';
    if ($('#callNotifications').hasClass('active')) {
        if (data.msg_type == 'call') {
            var html = '<div data-format="' + moment(data.created_at).format('YYYY-MM-DD') + '" class="' + msgdeleteClass + ' msgs-form-users msg_id_' + data.msg_id + '" flaged-data="' + ((data.has_flagged != null) ? data.has_flagged : '') + '" data-secret-user="'+secret_user_str+'" id="msgThread_' + data.msg_id + '" data-msgid="' + data.msg_id + '" data-msg-date="' + data.created_at + '" data-msg-type="' + data.msg_type + '" show-toolbar="' + (data.has_reply > 0 ? 'true' : 'false') + '">';
        } else {
            if (data.msg_type == 'checklist' && data.checklist !== undefined) {
                var html = '<div data-format="' + moment(data.created_at).format('YYYY-MM-DD') + '" conv-id="' + data.conversation_id + '" conv-type="' + get_conversation_obj(data.conversation_id).conversation_type + '" data-room="' + get_conversation_obj(data.conversation_id).conversation_title + '" data-checklistlength="' + data.checklist.length + '" data-msgbody="' + data.msg_body.toString() + '" data-createdby="' + findObjForUser(data.sender).fullname + '" sender-id="' + data.sender + '" data-lastmodified="' + data.created_at + '" data-lastmodifiedby="' + (data.last_update_user != null ? findObjForUser(data.last_update_user).fullname : findObjForUser(data.sender).fullname) + '" class="' + (data.sender == user_id ? 'msg_creator' : '') + '' + msgdeleteClass + ' ' + (thisStatus ? 'EditableClass ' : 'ReadonlyCladd ') + ' msgs-form-users msg_id_' + data.msg_id + ' ' + msgClasses + '" flaged-data="' + ((data.has_flagged != null) ? data.has_flagged : '') + '" data-secret-user="'+secret_user_str+'" id="msgThread_' + data.msg_id + '" data-msgid="' + data.msg_id + '" data-msg-date="' + ((data.old_created_time == null) ? data.created_at : data.old_created_time) + '" data-msg-type="' + data.msg_type + '">';
            } else {
                var html = '<div data-format="' + moment(data.created_at).format('YYYY-MM-DD') + '" conv-id="' + data.conversation_id + '" conv-type="' + get_conversation_obj(data.conversation_id).conversation_type + '" data-room="' + get_conversation_obj(data.conversation_id).conversation_title + '" data-msgbody="' + (data.msg_type == 'checklist' ? data.msg_body.toString() : '') + '" data-lastmodified="' + data.created_at + '" data-lastmodifiedby="' + (data.last_update_user != null ? findObjForUser(data.last_update_user).fullname : findObjForUser(data.sender).fullname) + '" class="' + msgdeleteClass + ' ' + (thisStatus ? 'EditableClass ' : 'ReadonlyCladd ') + ' msgs-form-users msg_id_' + data.msg_id + ' ' + msgClasses + '" flaged-data="' + ((data.has_flagged != null) ? data.has_flagged : '') + '" data-secret-user="'+secret_user_str+'" id="msgThread_' + data.msg_id + '" data-msgid="' + data.msg_id + '" data-msg-date="' + ((data.old_created_time == null) ? data.created_at : data.old_created_time) + '" data-msg-type="' + data.msg_type + '">';
            }
        }
    } else {
        if (data.msg_type == 'call') {
            var html = '<div data-format="' + moment(data.created_at).format('YYYY-MM-DD') + '" class="' + msgdeleteClass + ' msgs-form-users msg_id_' + data.msg_id + '" flaged-data="' + ((data.has_flagged != null) ? data.has_flagged : '') + '" data-secret-user="'+secret_user_str+'" id="msgThread_' + data.msg_id + '" data-msgid="' + data.msg_id + '" data-msg-date="' + data.created_at + '" data-msg-type="' + data.msg_type + '" show-toolbar="' + (data.has_reply > 0 ? 'true' : 'false') + '">';
        } else {
            if (data.msg_type == 'checklist' && data.checklist !== undefined) {
                var html = '<div data-format="' + moment(data.created_at).format('YYYY-MM-DD') + '" conv-id="' + data.conversation_id + '" conv-type="' + get_conversation_obj(data.conversation_id).conversation_type + '" data-room="' + get_conversation_obj(data.conversation_id).conversation_title + '" data-checklistlength="' + data.checklist.length + '" data-msgbody="' + data.msg_body.toString() + '" data-createdby="' + findObjForUser(data.sender).fullname + '" sender-id="' + data.sender + '" data-lastmodified="' + data.created_at + '" data-lastmodifiedby="' + (data.last_update_user != null ? findObjForUser(data.last_update_user).fullname : findObjForUser(data.sender).fullname) + '" class="' + (data.msg_body == 'Team Tasks' ? 'team_task_msg' : '') + ' ' + (data.msg_body == 'My Tasks' ? 'team_task_msg' : '') + ' ' + (data.sender == user_id ? 'msg_creator' : '') + '' + msgdeleteClass + ' ' + (thisStatus ? 'EditableClass ' : 'ReadonlyCladd ') + ' msgs-form-users msg_id_' + data.msg_id + ' ' + msgClasses + '" flaged-data="' + ((data.has_flagged != null) ? data.has_flagged : '') + '" data-secret-user="'+secret_user_str+'" id="msgThread_' + data.msg_id + '" data-msgid="' + data.msg_id + '" data-msg-date="' + ((data.old_created_time == null) ? data.created_at : data.old_created_time) + '" data-msg-type="' + data.msg_type + '">';
            } else {
                var html = '<div data-format="' + moment(data.created_at).format('YYYY-MM-DD') + '" conv-id="' + data.conversation_id + '" conv-type="' + get_conversation_obj(data.conversation_id).conversation_type + '" data-room="' + get_conversation_obj(data.conversation_id).conversation_title + '" data-msgbody="' + (data.msg_type == 'checklist' ? data.msg_body.toString() : '') + '" data-lastmodified="' + data.created_at + '" data-lastmodifiedby="' + (data.last_update_user != null ? findObjForUser(data.last_update_user).fullname : findObjForUser(data.sender).fullname) + '" class="' + (data.msg_body == 'Team Tasks' ? 'team_task_msg' : '') + ' ' + (data.msg_body == 'My Tasks' ? 'team_task_msg' : '') + ' ' + msgdeleteClass + ' ' + (thisStatus ? 'EditableClass ' : 'ReadonlyCladd ') + ' msgs-form-users msg_id_' + data.msg_id + ' ' + msgClasses + '" flaged-data="' + ((data.has_flagged != null) ? data.has_flagged : '') + '" data-secret-user="'+secret_user_str+'" id="msgThread_' + data.msg_id + '" data-msgid="' + data.msg_id + '" data-msg-date="' + ((data.old_created_time == null) ? data.created_at : data.old_created_time) + '" data-msg-type="' + data.msg_type + '">';
            }

            if (data.msg_type == 'checklist') {
                html += '<div class="checklistMsg_head">';
                html += '<h3><span class="dir-msg-close-backs back" onclick="cancelEditAction(this,\'' + data.msg_id + '\')"></span>';
                // html += 		' <span class="viewFileThread" id="viewFileThreadId" onclick="viewThreadFiles(event,this)">Checklist</span></h3>';
                html += ' <span onclick="cancelEditAction(this,\'' + data.msg_id + '\')">Checklist</span></h3>';
                html += '<span class="flash_msg_updated">Updated</span>';
                html += '<span class="tooltipmsg" data-balloon="Press Esc to close" data-balloon-pos="left">';
                html += '<div class="thread-close closeModal" onclick="cancelEditAction(this,\'' + data.msg_id + '\')"></div>';
                html += '</span>';
                html += '</div>';
            }
        }
    }

    if ($('#selectMessage').hasClass('selected')) {
        html += '<span class="hyvenCheckboxBefore hyvenCheckbox" onclick="selectMessage(this,\'' + data.msg_id + '\')"></span>';
    } else {

        html += '<span class="hyvenCheckboxBefore" onclick="selectMessage(this,\'' + data.msg_id + '\')"></span>';
    }
    if (data.msg_type == 'checklist') {
        // console.log('get_conversation_obj',get_conversation_obj(data.conversation_id))
        var checklistListviewLength = checklistCounterLenthString(data.checklist)
        html += '<ul class="checklist_list_view_design" data-status="' + checklistListviewLength + '" onclick="makeEditablechecklist(event,\'' + data.sender + '\',\'' + data.msg_id + '\')">';
        html += '<li style="width: 25%" title="' + get_conversation_obj(data.conversation_id).conversation_title + '">' + get_conversation_obj(data.conversation_id).conversation_title + '</li>';
        html += '<li style="width: 35%" class="checklisticon_vew _checklist_title" title="' + data.msg_body + '">' + data.msg_body + (checklistListviewLength > 0 ? '<span class="need_action_counter">' + checklistListviewLength + '</span>' : '') + '</li>';
        // html += '<li>'+findObjForUser(data.sender).fullname+'</li>';
        html += '<li style="width: 20%" title="' + (data.last_update_user != null ? findObjForUser(data.last_update_user).fullname : findObjForUser(data.sender).fullname) + '">' + (data.last_update_user != null ? findObjForUser(data.last_update_user).fullname : findObjForUser(data.sender).fullname) + '</li>';
        html += '<li style="width: 20%" title="' + data.created_at + '">' + moment(data.created_at).format('DD-MMM-YYYY hh:mm a') + '</li>';
        // html += '<li style="width: 17%" title="">'+(checklistListviewLength == -1 ? 'Completed' : checklistListviewLength > 0 ? '<span class="actionRequired">Action Required</span><span class="need_action_counter">'+checklistListviewLength+'</span>' : '') +'</li>';
        html += '</ul>';
    }

    // if (data.has_flagged != null && (data.has_flagged).indexOf(user_id) != -1) {
    //     html += '<ul class="msg_list_view_design">';
    //     html += '<li style="width: 25%" title="' + get_conversation_obj(data.conversation_id).conversation_title + '">' + get_conversation_obj(data.conversation_id).conversation_title + '</li>';
    //     html += '<li style="width: 35%" class="listMsgBody" title="' + data.msg_body + '">' + data.msg_body + '</li>';
    //     // html += '<li>'+findObjForUser(data.sender).fullname+'</li>';
    //     html += '<li style="width: 20%" title="' + findObjForUser(data.sender).fullname + '">' + findObjForUser(data.sender).fullname + '</li>';
    //     html += '<li style="width: 20%" title="' + data.created_at + '">' + moment(data.created_at).format('DD-MMM-YYYY hh:mm a') + '</li>';
    //     // html += '<li style="width: 17%" title="">'+(checklistListviewLength == -1 ? 'Completed' : checklistListviewLength > 0 ? '<span class="actionRequired">Action Required</span><span class="need_action_counter">'+checklistListviewLength+'</span>' : '') +'</li>';
    //     html += '</ul>';
    // }
    html += '<div class="msg-user-photo">';

    if (user_id_to_fullname[data.sender] == $('#conv_title .converstaion_name').text()) {
        if ($('.sideActive.selected').attr('data-conversationtype') == 'group') {
            if (findObjForUser(data.sender).fullname) {
                html += '<img class="user_img' + data.sender + '" src="' + file_server + 'room-images-uploads/Photos/' + room_img + '" alt="' + user_id_to_img[data.sender] + '" onclick="actionMentionUser(event,\'' + data.sender + '\')" data-value="' + file_server + 'profile-pic/Photos/' + user_id_to_img[data.sender] + '" >';
            } else {
                html += '<img class="user_img' + data.sender + '" src="' + file_server + 'room-images-uploads/Photos/' + data.sender_img + '"  data-value="' + file_server + 'profile-pic/Photos/' + data.sender_img + '" alt="' + data.sender_img + '">';
            }
        } else {
            if (findObjForUser(data.sender).fullname) {
                html += '<img class="user_img' + data.sender + '" src="' + file_server + 'profile-pic/Photos/' + user_id_to_img[data.sender] + '" alt="' + user_id_to_img[data.sender] + '" onclick="actionMentionUser(event,\'' + data.sender + '\')" data-value="' + file_server + 'profile-pic/Photos/' + user_id_to_img[data.sender] + '">';
            } else {
                html += '<img class="user_img' + data.sender + '" src="' + file_server + 'profile-pic/Photos/' + data.sender_img + '"  data-value="' + file_server + 'profile-pic/Photos/' + data.sender_img + '">';

            }
        }
    } else {
        if (data.msg_type == 'notification') {
            html += '<img class="user_img' + data.sender + '" src="' + file_server + 'profile-pic/Photos/msg_notification.svg" alt="' + user_id_to_img[data.sender] + '" onclick="actionMentionUser(event,\'' + data.sender + '\')" data-value="' + file_server + 'profile-pic/Photos/msg_notification.svg">';
        } else {
            if (findObjForUser(data.sender).fullname) {
                html += '<img class="user_img' + data.sender + '" src="' + file_server + 'profile-pic/Photos/' + user_id_to_img[data.sender] + '" alt="' + user_id_to_img[data.sender] + '" onclick="actionMentionUser(event,\'' + data.sender + '\')" data-value="' + file_server + 'profile-pic/Photos/' + user_id_to_img[data.sender] + '">';
            } else {
                html += '<img class="user_img' + data.sender + '" src="' + file_server + 'profile-pic/Photos/' + data.sender_img + '"  data-value="' + file_server + 'profile-pic/Photos/' + data.sender_img + '" alt="' + data.sender_img + '">';
            }
        }
    }

    html += '</div>';


    html += '<div class="user-msg" data-sendername="' + ((user_id_to_fullname[data.sender]) ? user_id_to_fullname[data.sender] : data.sender_name) + '" data-senderId="' + data.sender + '" data-senderimg="' + ((user_id_to_img[data.sender]) ? user_id_to_img[data.sender] : data.sender_img) + '">';

    if (findObjForUser(data.sender).fullname) {
        html += '<h4 class="user_info_sec"><span style="cursor:pointer" onclick="actionMentionUser(event,\'' + data.sender + '\')" class="user_name' + data.sender + ' sndr_name conv_nickname_' + user_id + '">' + (data.msg_type == 'notification' ? 'WorkFreelibots' : user_id_to_fullname[data.sender]) + '</span> '+ (participants.indexOf(data.sender) > -1 ? '':'<span class="participants_deleted">(inactive)</span>');
    } else {
        html += '<h4 class="user_info_sec"><span style="cursor:pointer" class="">' + data.sender_name + '</span>';
    }

    if (data.edit_status != null) {
        if (data.msg_type == 'checklist') {
            html += '&nbsp;<span class="msg-time" data-balloon="Created on ' + moment(data.edit_status).local().format('DD-MM-YYYY') + '" data-balloon-pos="up"> @ ' + moment(data.created_at).local().format('hh:mm a') + '</span>';
        } else {
            html += '&nbsp;<span class="msg-time" data-balloon="Created on ' + moment(Number(data.edit_status)).local().format('DD-MM-YYYY') + '" data-balloon-pos="up" > @ ' + moment(Number(data.edit_status)).local().format('h:mm a') + '</span>';
        }
    } else {
        html += '&nbsp;<span class="msg-time" data-balloon="Created on ' + moment(data.old_created_at).local().format('DD-MM-YYYY') + '" data-balloon-pos="up"> @ ' + ((data.old_created_time != null) ? moment(data.old_created_time).local().format('hh:mm a') : moment(data.created_at).local().format('hh:mm a')) + '</span>';
    }

    // if (data.forward_by != null) {
    //     html += '&nbsp;<span class="msg-time last_update" style="font-style:italic;">  Forwarded</span>';

    // } else
    // if (data.last_update_user != null) {
    //     if (data.msg_type != 'checklist') {
    //         html += '&nbsp;<span class="msg-time last_update" > - Last updated by ' + findObjForUser(data.last_update_user).fullname + ' on ' + moment(data.last_update_time).format('DD-MM-YYYY hh:mm a') + '</span>';
    //     } else {
    //         html += '&nbsp;<span class="msg-time last_update" > ' + (data.last_update_user != null ? ' - Checklist Modified by ' + findObjForUser(data.last_update_user).fullname + ' on ' + moment(data.last_update_time).format('DD-MM-YYYY hh:mm a') : '') + '</span>';
    //     }

    // }
    html += '<span class="_assign_to_' + data.msg_id + '">'
    if (dataAssign != '') {
        html += '&nbsp;' + dataAssign
    }
    html += '</span>';

    if (data.sender == user_id) {
        if (end_timer !== null)
            html += '&nbsp;<span class="msg-timer timer_msg active" data-value="' + data.has_timer + '" ></span>';
        html += '&nbsp;<span class="remove-timer" onclick="removeMsgTimer(this)" data-msg-id="' + data.msg_id + '" data-balloon="Remove Timer" data-balloon-pos="up">Remove timer</span>';
    } else {
        if (end_timer !== null)
            html += '&nbsp;<span class="msg-timer timer_msg" data-value="' + data.has_timer + '"></span>';
        // html += '<span class="remove-timer" data-balloon="Remove Timer" data-balloon-pos="up">&nbsp;Remove timer</span>';
    }
    // Sms seen unseen
    var delete_both_side = 0;


    var this_tag_list = [];
    if (data.tag_list != null) {
        this_tag_list = data.tag_list
    }
    if (data.msg_type == 'checklist') {
        html += '<span class="msg-send-seen-delivered">' + (thisStatus ? ' - Editable' : ' - Readonly') + '';
        html += '</span>';
        // var up_time = moment(data.created_at).add(3,'minutes').format('DD-MM-YYYY hh:mm a')
        // var c_time = moment().format('DD-MM-YYYY hh:mm a')
        // if (up_time > c_time) {
        // 	console.log('9999999999999999999999')
        // }
    } else {
        html += '<span class="msg-send-seen-delivered">';


        // Issue #54, for own conversation, no need to show messages status
        // if (data.conversation_id != user_id && data.sender == user_id) {
        // 	if (data.has_delivered == 0) {
        // 		delete_both_side = 1;
        // 		html += ' - Sent';
        // 	} else {
        // 		if (data.msg_status == null) {
        // 			delete_both_side = 0;
        // 			html += ' - Delivered';
        // 		}
        // 	}
        // }
        if ((data.conversation_id != user_id && data.sender == user_id) || data.forward_by == user_id) {

            if (data.message_pending != undefined) {
                html += ' - Sent';
            } else {
                delete_both_side = 0;
                html += ' - Delivered';

            }
        }
        html += '</span>';
    }
    var checkSrcOn = $('#input_values').find('input').val().length;

    // if(data.edit_status != null){
    // 	data.edit_status = Number(data.edit_status);
    // 	html += '<div class="message_edit_status" data-balloon-pos="up" data-balloon="'+moment(data.edit_status).format('MMM Do YYYY @ h:mm a')+'">  - [Edited] </div>';
    // }

    html += '<span data-val="' + delete_both_side + '" class="hidden msg_id_del_status_' + data.msg_id + '"></span>';

    // Check flag and unflag message
    if (data.has_flagged != null && (data.has_flagged).indexOf(user_id) != -1) {
        // <img src="/images/basicAssets/Flagged.svg">
        html += '&nbsp;<span onclick="flaggedUserMsg(event)" class="flaggedMsg"></span>';
    } else {
        html += '&nbsp;<span class="flag_forLater" onclick="triggerFlagForlater(this)"><span class="color_white" data-balloon="Flag for later " data-balloon-pos="right">Flag</span></span>';
    }

    html += '</h4>';

    if (data.forward_by != null) {
        html += '<span class="msg-time last_update" style="font-style:italic;">  Forwarded</span>';
    } else
    if (data.last_update_user != null) {
        if (data.msg_type != 'checklist') {
            html += '<span class="msg-time last_update" > - Last updated by ' + findObjForUser(data.last_update_user).fullname + ' on ' + moment(data.last_update_time).format('DD-MM-YYYY hh:mm a') + '</span>';
        } else {
            html += '<span class="msg-time last_update" > ' + (data.last_update_user != null ? ' - Checklist Modified by ' + findObjForUser(data.last_update_user).fullname + ' on ' + moment(data.last_update_time).format('DD-MM-YYYY hh:mm a') : '') + '</span>';
        }
    }
    
    removeA(secretUserPerMsg, data.sender);
    if (secretUserPerMsg.length > 0) {
        // if (data.sender == user_id) {
        html += '<div style="margin-bottom: 12px;">';
        html += '<span class="secret_heading" onclick="threadReplyPvt(this)" data-id="' + secretUserPerMsg.join(',') + '">';
        html += '<span class="lock_pvt"></span>';
        html += '<span class="">Private message to: </span>';
        // html += '<span class="secret_heading" data-id="'+secretUserPerMsg.join(',')+'">Private message '+((data.sender != user_id) ? 'from':'to');
        $.each(secretUserPerMsg, function(k, v) {
            if (v !== data.sender) {
                // if(k + 1 != secretUserPerMsg.length ){
                // 	html += '<span> '+findObjForUser(v).fullname+' </span>';
                // }else{
                if (k == 0) {
                    html += '<span> ' + findObjForUser(v).fullname + ' </span>';
                } else {
                    if (secretUserPerMsg.length == (k + 1)) {
                        html += ' & <span>' + findObjForUser(v).fullname + ' </span>';
                    } else {
                        html += '<span>, ' + findObjForUser(v).fullname + ' </span>';
                    }
                }
                // }
            }
        });
        html += '<span class="msg-pvt-msg-click" onclick="threadReplyPvt(this)"> - Click to view';
        html += '</span>';
        
        html += '</span>';

        html += '</div>';
        // } else {
        //     html += '<span class="secret_heading" data-id="' + secretUserPerMsg.join(',') + '">Private message </span>';
        // }
    }
    /*========================== MSG TEXT BODY =======================================*/
    var multi_type_file = 0;
    if (data.attch_imgfile === null || data.attch_imgfile.length == 0)
        data.attch_imgfile = [];
    else multi_type_file = data.attch_imgfile.length;
    if (data.attch_videofile === null || data.attch_videofile.length == 0)
        data.attch_videofile = [];
    else multi_type_file += data.attch_videofile.length;
    if (data.attch_audiofile === null || data.attch_audiofile.length == 0)
        data.attch_audiofile = [];
    else multi_type_file++;
    if (data.attch_otherfile === null || data.attch_otherfile.length == 0)
        data.attch_otherfile = [];
    else multi_type_file++;
    html += '<div class="msg_body_container">'
    if (data.msg_body == 'No Comments') {
        if (data.edit_history != null) {
            if (data.hasDelete) {
                html += '<div class="attachI" id="data_msg_body' + data.msg_id + '" onkeyup="keyupForPlain_textEdit(event)">' + data.msg_body + '</div>';
            } else {
                html += returnedithistoryDesign(data.edit_history, data, 'attachI');
            }
        } else {
            html += '<div class="attachI" id="data_msg_body' + data.msg_id + '" onkeyup="keyupForPlain_textEdit(event)">' + data.msg_body + '</div>';
        }
        // html += '<div id="data_msg_body'+data.msg_id+'" class="plain_text"></div>';
    } else if (data.msg_type == 'todo') {
        html += draw_todo_share(data);
        need_todo_details.push(data.activity_id);
    } else if (data.msg_type == 'call') {
        html += draw_call_history(data);
    } else if (isiturl && data.msg_type != 'checklist') {
        if (data.edit_history != null) {
            if (data.hasDelete) {
                html += '<div class="plain_text" id="data_msg_body' + data.msg_id + '" onkeyup="keyupForPlain_textEdit(event)">' + data.msg_body + '</div>';
            } else {

                html += returnedithistoryDesign(data.edit_history, data, 'plain_text');
            }
        } else {
            html += '<div id="data_msg_body' + data.msg_id + '" class="has_url plain_text " data-date="' + data.created_at + '">' + data.msg_body;
            if (data.url_title != null) {
                var htmlObject = document.createElement('div');
                htmlObject.innerHTML = data.msg_body;
                var url = $(htmlObject).find('a:first').attr('href');
                //html += per_msg_url_attachment(data.url_base_title, data.url_title, data.url_body, data.url_image, data.url_favicon,url);
            }
            if (data.msg_body.indexOf(file_server) > -1) {
                var htmlObject = document.createElement('div');
                htmlObject.innerHTML = data.msg_body;
                var url = $(htmlObject).find('a:first').attr('href');
                html += per_msg_url_attachment("", "", "", url, "", "");
            }
            html += '</div>';
        }
    } else if (data.attch_imgfile.length > 0 || data.attch_videofile.length > 0 || data.attch_audiofile.length > 0 || data.attch_otherfile.length > 0) {
        // html += '<div style="" class="attachI" id="data_msg_body'+data.msg_id+'">' + data.msg_body + '</div>';
        if (data.edit_history != null) {
            if (data.hasDelete) {
                html += '<div class="attachI" id="data_msg_body' + data.msg_id + '">' + data.msg_body + '</div>';
            } else {
                html += returnedithistoryDesign(data.edit_history, data, 'attachI');
            }
        } else {
            html += '<div class="attachI" id="data_msg_body' + data.msg_id + '">' + data.msg_body + '</div>';
        }
    } else {
        if (data.msg_type == 'checklist') {
            if (data.msg_body.indexOf('msgCheckListContainer') == -1) {
                html += '<div class="plain_text" id="data_msg_body' + data.msg_id + '" onkeyup="keyupForPlain_textEdit(event)">';
                if (hasDelete) {
                    html += '' + data.msg_body + '';
                } else {
                    html += draw_msg_checklist(data);
                }
                html += '</div>';
            } else {
                html += '<div onkeyup="keyupForPlain_textEdit(event)" class="plain_text" id="data_msg_body' + data.msg_id + '">' + data.msg_body + '</div>';
            }
        } else {
            if (data.edit_history != null) {
                if (data.hasDelete) {
                    html += '<div onkeyup="keyupForPlain_textEdit(event)" class="plain_text" id="data_msg_body' + data.msg_id + '">' + data.msg_body + '</div>';
                } else {

                    html += returnedithistoryDesign(data.edit_history, data, 'plain_text');
                }
            } else {
                html += '<div onkeyup="keyupForPlain_textEdit(event)" class="plain_text" id="data_msg_body' + data.msg_id + '">' + data.msg_body + '</div>';
            }
        }
    }

    /*========================== MSG TEXT BODY END ====================================*/
    if (data.has_delete == null) {
        data.has_delete = [];
    }
    if (data.has_delete.indexOf(user_id) == -1 && data.has_delete.indexOf('delete_for_all') == -1) {
        var totalattachLength = 0;
        if (data.attch_videofile !== null && attach_show) {
            if (user_id === data.sender) { if (attachFileList.indexOf(data.msg_id) === -1) { attachFileList.push(data.msg_id); } }
            if (multi_type_file == 1)
                html += per_msg_video_attachment(data.attch_videofile, user_id_to_fullname[data.sender], totalattachLength);
            else
                html += per_msg_file_attachment(data.attch_videofile, user_id_to_fullname[data.sender], totalattachLength);
            totalattachLength = (totalattachLength + data.attch_videofile.length);
        }

        if (data.attch_imgfile !== null && attach_show) {
            if (user_id === data.sender) {
                if (attachFileList.indexOf(data.msg_id) === -1) { attachFileList.push(data.msg_id); }
            }
            // console.log(3712, data.attch_imgfile)
            if (multi_type_file == data.attch_imgfile.length && data.attch_imgfile.length < 2) {
                if (data.attch_imgfile.length == 1 && data.attch_imgfile[0].search(".svg") > -1) {
                    html += per_msg_file_attachment(data.attch_imgfile, user_id_to_fullname[data.sender], user_id_to_img[data.sender], data.msg_body, totalattachLength);
                } else {
                    html += per_msg_img_attachment(data.attch_imgfile, user_id_to_fullname[data.sender], user_id_to_img[data.sender], data.msg_body, totalattachLength);
                }
            } else {
                html += per_msg_file_attachment(data.attch_imgfile, user_id_to_fullname[data.sender], user_id_to_img[data.sender], data.msg_body, totalattachLength);
            }
            totalattachLength = (totalattachLength + data.attch_imgfile.length);

        }
        if (data.attch_audiofile !== null && attach_show) {
            if (user_id === data.sender) { if (attachFileList.indexOf(data.msg_id) === -1) { attachFileList.push(data.msg_id); } }
            // html += per_msg_audio_attachment(data.attch_audiofile, user_id_to_fullname[data.sender]);
            html += per_msg_file_attachment(data.attch_audiofile, user_id_to_fullname[data.sender], totalattachLength);
            totalattachLength = (totalattachLength + data.attch_audiofile.length);


        }
        if (data.attch_otherfile !== null && attach_show) {
            if (user_id === data.sender) { if (attachFileList.indexOf(data.msg_id) === -1) { attachFileList.push(data.msg_id); } }
            html += per_msg_file_attachment(data.attch_otherfile, user_id_to_fullname[data.sender], totalattachLength);
            totalattachLength = (totalattachLength + data.attch_otherfile.length);


        }
        if (totalattachLength > 4) {
            // html += '<div data-length="'+totalattachLength+'" class="viewAllFiles showmore_'+totalattachLength+'" onclick="loadnext8(this, '+totalattachLength+');" style="cursor:pointer">';
            // html +=		'Show All ('+ totalattachLength +')';
            // html += '</div>';
        }
        html += '<span class="item_delete_text delete_text' + data.msg_id + '" data-length="' + data.total_delete + '">' + data.delete_text + '</span>';
        html += '<span class="attach_tag onlyFileTag active" id="thisMsgTagLists' + data.msg_id + '" data-id="' + this_tag_list.join(',') + '">';
        var useLength = 0;
        var tooltipcount = 0;
        var newHtml = '';
        $.each(allUserTagList, function(k, v) {
            if (v != undefined) {
                if (this_tag_list.indexOf(v.tag_id) > -1) {
                    var st = '';
                    if (v.shared_tag != null) {
                        st = ' shared_tag_user ';
                        if (v.shared_tag !== user_id) {
                            st = st + ' others_userTag ';
                        }
                    }
                    if (useLength < 1000) {
                        // if (v.tag_type == 'public') {
                        //     newHtml += '<span class="tag_design public_tag_team tag_name_view_' + v.tag_id + '" style="' + (v.tag_color != null ? 'background-color:' + v.tag_color + '' : '') + '" ' + getTooltipForshareTag(v.tag_id) + '><span>' + v.title + '</span> </span>';
                        // } else {
                        //     newHtml += '<span class="tag_design  tag_name_view_' + v.tag_id + st + '" ' + getTooltipForshareTag(v.tag_id) + '><span>' + v.title + '</span> </span>';
                        // }
                        newHtml += '<span class="tag_design public_tag_team tag_name_view_' + v.tag_id + '" style="' + (v.tag_color != null ? 'background-color:' + v.tag_color + '' : '') + '" ' + getTooltipForshareTag(v.tag_id) + '><span>' + v.title + '</span> </span>';



                    } else {
                        tooltipcount++;
                    }

                    // if(useLength == 0){
                    // 	html += '<span> '+v.title+' </span>';
                    // }else{
                    // 	if(this_tag_list.length == (useLength+1)){
                    // 		html += ' & <span> '+v.title+' </span>';
                    // 	}else{
                    // 		html += '<span>, '+v.title+' </span>';
                    // 	}
                    // }
                    useLength++;
                }
            }
        });
        if (useLength > 0) {
            html += '<span class="ToggleTagActionMsg counter_tag' + useLength + '" onclick="thisMsgTags(this)">(' + useLength + ')</span>'
        }
        html += newHtml;
        // if(tooltipcount > 0){
        // 	html += '<span class="tag_design moreTooltipBtn">+'+tooltipcount+' more</span>'
        // 	html += '<div class="tag_toolTip for_tag" data-pos="top">'
        // 	// html += 	'<span class="tooltip_close" onclick="tooltip_close()"></span>'
        // 	html += 	'<div class="tooltip_body">'
        // 	useLength = 0;
        // 	$.each(allUserTagList,function(k,v){
        // 		if(this_tag_list.indexOf(v.tag_id) > -1){
        // 			if(useLength > 2){
        // 				if(v.tag_type == 'public'){
        // 					html += '<li class="tag_name_view_'+v.tag_id+'" style="'+(v.tag_color != null ? 'color:'+v.tag_color+'':'var(--PrimaryC)')+'" '+getTooltipForshareTag(v.tag_id)+'><span>'+v.title+'</span> </li>';
        // 				}else{
        // 					var sc = ''
        // 					if(v.shared_tag != null){
        // 						if(v.shared_tag !== user_id){
        // 							sc = 'color:#F55';
        // 						}else{
        // 							sc = 'color:var(--PrimaryC)';
        // 						}
        // 					}
        // 					html += '<li class="tag_name_view_'+v.tag_id+'" style="'+sc+'" '+getTooltipForshareTag(v.tag_id)+'><span>'+v.title+'</span> </li>';
        // 				}
        // 			}
        // 			useLength++;
        // 		}
        // 	});
        // 	html += 	'</div>'
        // 	html += '</div>'
        // }
        html += '</span>';

        html += '<div class="replies">';
        // Check emoji reaction message
        if (data.has_emoji !== null && attach_show) {
            $.each(data.has_emoji, function(k, v) {
                if (v > 0)
                    html += emoji_html(k, k, v);
            });
        }
        html += '</div>';
        // if (data.attch_imgfile.length > 0 || data.attch_videofile.length > 0 || data.attch_audiofile.length > 0 || data.attch_otherfile.length > 0) {
        // 	html += '<div id="filesTagHolder' + data.msg_id + '" style="display:none;margin: 8px 0px; float: left;width:100%; font-family:hvWorkSans;" class="attach_tag"><span style="margin: 0px 8px 0px 0px; float: left;font-size: 14px;font-family: hvAssistant;font-style: italic;">' + user_id_to_fullname[data.sender] + ' tagged the attachment(s) as</span>  <span style="float: left;margin-top: 0px;" id="filesTag' + data.msg_id + '"></span></div>';

        // }else{
        // 	html += '<div id="filesTagHolder' + data.msg_id + '" style="display:block;margin: 8px 0px; float: left;width:100%; font-family:hvWorkSans;" class="attach_tag"><span style="float: left;margin-top: 0px;" class="filesTagSpan" id="filesTag' + data.msg_id + '"></span></div>';
        // }
        // if(data.msg_id == 'e68e1c80-b065-11ea-897e-bbba8fb953ef')
        // console.log(3683,data.has_reply > 0 && attach_show);

        // console.log(5211,data.has_reply)
        if (data.has_reply > 0 && attach_show) {
            html += per_msg_rep_btn(data.conversation_id, data.has_reply, data.last_reply_time, data.last_reply_name, data.msg_type);
        }
        if ($('#roomIdDiv').attr('data-privecy') == 'protected') {
            if (data.assign_to.length == 0) {
                if (adminArra.indexOf(user_id) > -1 || conv_service_provider.indexOf(user_id) > -1) {
                    html += '<div class="assignBtn" onclick="assigntoRequest(\'' + data.conversation_id + '\',\'' + data.msg_id + '\')">Assign to</div>'
                }
            } else {
                if (adminArra.indexOf(user_id) > -1 || conv_service_provider.indexOf(user_id) > -1) {
                    html += '<div class="assignBtn" onclick="assigntoRequest(\'' + data.conversation_id + '\',\'' + data.msg_id + '\')">Update Assign</div>'
                }
            }
            // html += '<div class="mentionHolder"  id="mentionHolder'+data.msg_id+'">';
            // 	if(adminArra.indexOf(user_id) > -1 ){
            // 		if(data.tag_list == null){
            // 			html += msgreqHolderHtml(data);
            // 		}else if(data.tag_list.length == 0){
            // 			html += msgreqHolderHtml(data);
            // 		}
            // 	}

            // 	if(data.tag_list != null){

            // 		if(data.tag_list.length > 0){
            // 			$.each(data.tag_list,function(tv,tv){

            // 				html += '<div class="issueTag issuetagid'+tv+'"></div>';
            // 			})
            // 		}
            // 	}
            // html += '</div>';
        } else {
            if (alldeletemsgid.indexOf(data.msg_id) == -1) {
                html += '<div id="msg_tag_list' + data.msg_id + '"  class="attach_tag hidden_attach_tag" tag-list="' + data.tag_list + '">';
                // console.log(3876, data.msg_id)
                // console.log(3877, data.tag_list)
                $.each(data.tag_list, function(ck, cv) {
                    // if(data.msg_type == 'text' || data.msg_type == 'checklist'){

                    // 	html += '<span class="tag_design tag_name_view_'+cv+'" data-id="'+cv+'"></span>'
                    // }else{
                    // 	if(thisroomTagList.indexOf(cv) == -1){
                    // 		html += '<span class="tag_design tag_name_view_'+cv+'" data-id="'+cv+'"></span>'
                    // 	}
                    // }
                    html += '<span style="background-color:'+cv.tag_color+'" class="tag_design tag_name_view_' + cv + '" data-id="' + cv + '"></span>';

                });
                html += '</div>';
            }
        }

    }

    html += '</div>';
    html += '</div>';
    if (data.has_delete.indexOf(user_id) == -1 && data.has_delete.indexOf('delete_for_all') == -1) {
        html += '<div class="msgs-form-users-options" >';
        if (re) {
            html += '<div data-balloon="Go to message" data-msg="' + data.msg_id + '" data-conv="' + data.conversation_id + '" data-balloon-pos="down" class="_gotoMsg" onclick="gotoThisMessage(event,this)"></div>';
        }
        if (data.sender == user_id) {

            html += '<div class="select_message cancelupdatebtn" data-balloon="Cancel edit" data-balloon-pos="left" data-msg-id="' + data.msg_id + '" onclick="editactiontrigger(this,\'cancel\')"></div>';
            html += '<div class="select_message update_msgbtn" data-balloon="Update message" data-balloon-pos="left" data-msg-id="' + data.msg_id + '" onclick="editactiontrigger(this,\'update\')"></div>';
        }

        html += '<div class="select_message" id="selectMessage' + data.msg_id + '" msg-id="' + data.msg_id + '" data-balloon="Click for select this message" data-balloon-pos="left" data-msg-id="' + data.msg_id + '" onclick="selectThisMs(this)" style="display:none"></div>';

        html += '<p class="for_callOptionShare" onclick="shareMessage(event)" data-balloon="Forward Call History" data-balloon-pos="left"></p>';
        if (data.sender == user_id) {
            var delete_all_active = (data.sender == user_id);
            html += '<p class="for_callOptionDelete" onclick="delete_this_msg(event, ' + delete_all_active + ')" data-balloon="Delete Call History" data-balloon-pos="left"></p>';
        }
        html += '<div data-balloon="Add Reaction" data-balloon-pos="down" class="call-rep-emoji" onclick="viewEmojiList(event)"></div>';
        // Check flag and unflag message
        if (data.has_flagged != null && (data.has_flagged).indexOf(user_id) != -1) {
            html += '<div data-balloon="Flag this message" data-balloon-pos="down" class="flag flagged" onclick="flggUserMsg(event)"></div>';
        } else {
            html += '<div class="flag" data-balloon="Flag this message" data-balloon-pos="down" onclick="flggUserMsg(event)"></div>';
        }
        html += '<div class="replys" conv-id="' + data.conversation_id + '" data-msgid="' + data.msg_id + '" onmouseenter="replybtnonhover(this)" onmouseleave="replybtnonleave(this)" click-type="reaply" onclick="threadReply(event)"></div>';
        html += '<div class="forward_icon" onclick="shareMessage(event)" data-balloon="Forward Message" data-balloon-pos="down"></div>';

        html += '<div class="replys replyAttach" data-balloon="Upload a file" data-balloon-pos="down" click-type="attach" onclick="threadReply(event);"></div>';
        if (!$('#groupChatContainer').hasClass('protected')) {
            // html += '<div class="tagOP" data-balloon="Add a Tag" data-balloon-pos="down" onclick="viewMessageTag(this)" msg-id="' + data.msg_id + '"></div>';
        }
        if (data.sender == user_id) {
            html += '<div class="select_message eidtmsg" data-balloon="Edit a message" data-balloon-pos="left" onclick="triggerEdit(this)" msg-id="' + data.msg_id + '"></div>';
        } else if (data.msg_type == 'checklist') {
            if (conversation_type == 'personal') {
                html += '<div class="select_message eidtmsg" data-balloon="Edit a message" data-balloon-pos="left" onclick="triggerEdit(this)" msg-id="' + data.msg_id + '"></div>';
            } else if (adminArra !== null) {

                if (adminArra.indexOf(user_id) > -1) {

                    html += '<div class="select_message eidtmsg" data-balloon="Edit a message" data-balloon-pos="left" onclick="triggerEdit(this)" msg-id="' + data.msg_id + '"></div>';
                }
            }
        }
        html += '<div class="more" data-balloon="More Options" data-balloon-pos="left" onclick="msgMoreBtn(event)">';
        html += '<div class="msg-more-popup" style="display:none">';
        if (data.has_delete == null && data.msg_type !== 'todo' && data.msg_body !== null) {
            var regex = /(&nbsp;|<([^>]+)>)/ig

            //html += '<p class="perMsgCreateTaskConnect" onclick="viewCreateTodoPopupNew(event,\'' + (data.msg_body.replace(regex, "") === "No Comments" ? "No Comment" : data.msg_body.replace(regex, "")) + '\',\'' + data.msg_id +'\')" class="createNTFC">Create a Task</p>';
        }
        if (data.sender == user_id && data.msg_type !== 'checklist') {
            html += '<p class="perMsgShareEventConnect timerMsg"  data-msg-id="' + data.msg_id + '" data-time="" onclick="messageSetTimer(this)" >Set timer for auto-delete</p>';
        }
        if ($('#groupChatContainer').hasClass('protected')) {
            if (adminArra.indexOf(user_id) > -1) {


                html += '<p class="issueTagContainer" msg-id="' + data.msg_id + '" onclick="openIssueTag(this)">Issue Tag</p>';
            }
        }
        // html += '<p class="perMsgShareEventConnect" >Schedule an event</p>';
        // html += '<p class="shareSingleMsgConnect" onclick="shareMessage(event)">Forward Message</p>';
        if (data.msg_type != 'checklist') {
            html += '<p class="convertTask" onclick="convertTask(event)" style="display:none !important">Convert to task</p>';
        }
        let el = document.createElement('html');
        el.innerHTML = data.msg_body;
        if (data.msg_type !== 'checklist') {
            if (data.sender == user_id) {
                html += '<p class="editSingleMsgConnect"  id="editAction' + data.msg_id + '" onclick="editMessage(\'' + data.msg_id + '\',this)" style="display:none">Edit Message</p>';
            }
        } else {
            // console.log(3057,conversation_type == 'personal')
            if (conversation_type == 'personal') {
                html += '<p class="editSingleMsgConnect" id="editAction' + data.msg_id + '" onclick="ediCheckListMessage(\'' + data.msg_id + '\',\'' + data.sender + '\')" style="display:none">Edit Message</p>';
            } else if (data.sender == user_id) {
                html += '<p class="editSingleMsgConnect" id="editAction' + data.msg_id + '" onclick="ediCheckListMessage(\'' + data.msg_id + '\',\'' + data.sender + '\')" style="display:none">Edit Message</p>';
            } else if (adminArra !== null) {
                if (adminArra.indexOf(user_id) > -1 || data.sender == user_id) {
                    html += '<p class="editSingleMsgConnect" id="editAction' + data.msg_id + '" onclick="ediCheckListMessage(\'' + data.msg_id + '\',\'' + data.sender + '\')" style="display:none">Edit Message</p>';
                }
            }
        }
        if (data.msg_type != 'checklist') {

            html += '<p class="selectSingleMsgConnect" onclick="triggerSelect(this)" msg-id="' + data.msg_id + '">Select Message</p>';
        }
        // if(!$('#groupChatContainer').hasClass('protected')){

        // 	html += '<p class="messageTag" onclick="viewMessageTag(this)" msg-id="'+data.msg_id+'">Message Tag</p>';
        // }
        // if(data.edit_status == null && data.updatedmsgid == null){
        if (permanently) {
            html += '<p class="deleSingleMsgConnect" onclick="delete_permanently(event)">Delete Message</p>';
        } else {
            var delete_all_active = (data.sender == user_id);
            if (adminArra != null) {
                if (data.msg_type == 'checklist') {
                    if (adminArra.indexOf(user_id) > -1 || data.sender == user_id) {

                        html += '<p class="deleSingleMsgConnect" onclick="delete_this_msg(event, ' + delete_all_active + ')">Delete Message</p>';
                    }
                } else {

                    html += '<p class="deleSingleMsgConnect" onclick="delete_this_msg(event, ' + delete_all_active + ')">Delete Message</p>';
                }
            } else {
                if (data.msg_type == 'checklist') {
                    if (data.sender == user_id) {
                        html += '<p class="deleSingleMsgConnect" onclick="delete_this_msg(event, ' + delete_all_active + ')">Delete Message</p>';
                    }
                } else {
                    html += '<p class="deleSingleMsgConnect" onclick="delete_this_msg(event, ' + delete_all_active + ')">Delete Message</p>';
                }
            }

        }
        // }
        html += '</div>';
        html += '</div>';
        html += '</div>';
    }


    html += '</div>';
    html += '<div class="updateTextContainer updateTextContainermsg" id="updatedContainer' + data.msg_id + '" style="display:block"></div>';
    // console.log(4608, html);
    // if ($('body').hasClass('_draw_prepend')) {
    // 	append = false;
    // }

    if (append) {
        // $("#msg-container").append(html);
        if (data.updatedmsgid == null || data.updatedmsgid == '') {
            // console.log(51201,data,append,html)
            if (data.msg_type == 'notification') {
                botMsgCluster(data, true, html);
            } else {
                // if (lastMainNotiId != '') {
                //     $('#msgThread_' + lastMainNotiId).before('<span onclick="showMoreNoti(this)" class="moreNoticlas more' + lastMainNotiId + '">+ Show More</span>');
                //     $('#msgThread_' + lastMainNotiId).removeClass('thisisChild');
                //     if (lastMainNotiId != '') {
                //         $('.more' + lastMainNotiId).attr('data-ids', prepandArrayNotiIds)
                //     }
                //     lastMainNotiId = '';

                // }
                if (allTsk) {
                    $('#taskList_panel').append(html);
                } else {
                    if (re) {
                        return html;
                    } else {
                        $("#msg-container").append(html);
                    }
                }
            }

            if ($('#incompleteChecklist').hasClass('active')) {
                $('#data_msg_body' + data.msg_id).find('.filterchecklist').click();
            }
        } else {
            // console.log(51201,data,append,html)
            if (data.msg_type == 'notification') {
                botMsgCluster(data, true, html);
            } else {
                // if (lastMainNotiId != '') {
                //     $('#msgThread_' + lastMainNotiId).before('<span class=" moreNoticlas more' + lastMainNotiId + '" onclick="showMoreNoti(this)">+ Show More</span>');
                //     $('#msgThread_' + lastMainNotiId).removeClass('thisisChild');
                //     if (lastMainNotiId != '') {
                //         $('.more' + lastMainNotiId).attr('data-ids', prepandArrayNotiIds)
                //     }
                //     lastMainNotiId = '';

                // }
                if (allTsk) {
                    $('#taskList_panel').append(html);
                } else {
                    if (re) {
                        return html;
                    } else {
                        $("#msg-container").append(html);
                    }
                }
            }
            if ($('#incompleteChecklist').hasClass('active')) {

                $('#data_msg_body' + data.msg_id).find('.filterchecklist').click();
            }
            if ($("#data_msg_body" + data.updatedmsgid).is(':visible')) {
                var tDesign = '<div style="padding: 5px 0px;position: relative;" class="updatedDivCOntainer" id="updatedMsgBody' + data.msg_id + '" onclick="triggermainThread(this)"><a class="msgthreadtrigger" onclick="colorChange(\'' + data.updatedmsgid + '\');" href="#msgThread_' + data.updatedmsgid + '"></a><div class="updatedTextOriginal">' + $("#data_msg_body" + data.updatedmsgid).html() + '</div></div>';
                $(".msg_id_" + data.msg_id + ' .plain_text').before(tDesign);
                $('#msgThread_' + data.msg_id + ' .deleSingleMsgConnect').remove();
            } else {
                updatedMsgArr.push({
                    'id': data.msg_id.toString(),
                    'updatedmsgid': data.updatedmsgid.toString(),
                    'msgbody': data.msg_body,
                    'created_at': data.created_at
                });
            }
        }

        // console.log(4638, $(".msg_id_"+data.msg_id+" .msgCheckListContainer"));
        if (par_chk_process && data.msg_type == 'checklist') {
            // $(".msg_id_"+data.msg_id).addClass("pending_chk_process").addClass('pending_msg');
            $(".msg_id_" + data.msg_id).addClass("pending_chk_process");
            // console.log(11, 'pending_chk_process');
        }
        if (data.msg_type == 'checklist' && msg_chk_today.indexOf(data.msg_id) > -1) {
            $(".msg_id_" + data.msg_id + " .msgCheckListContainer").addClass("due_date_today");
            // console.log(11, 'due_date_today');
        }
        if (data.msg_type == 'checklist' && msg_chk_overdue.indexOf(data.msg_id) > -1) {
            $(".msg_id_" + data.msg_id + " .msgCheckListContainer").addClass("due_date_overdue");
            // console.log(11, 'due_date_overdue');
        }

    } else {
        // console.log('_draw_prepend');
        if (data.updatedmsgid == null || data.updatedmsgid == '') {
            if (data.msg_type == 'notification') {
                botMsgCluster(data, false, html);
            } else {

                if (allTsk) {
                    $('#taskList_panel').prepend(html);
                } else {
                    if (re) {
                        return html;
                    } else {

                        $("#msg-container").prepend(html);
                    }
                }
            }
        } else {
            if (data.msg_type == 'notification') {
                botMsgCluster(data, false, html);
            } else {
                if (allTsk) {
                    $('#taskList_panel').prepend(html);
                } else {
                    if (re) {
                        return html;
                    } else {

                        $("#msg-container").prepend(html);
                    }
                }
            }
            if ($("#data_msg_body" + data.updatedmsgid).is(':visible')) {
                var tDesign = '<div style="padding: 5px 0px;position: relative;" class="updatedDivCOntainer" id="updatedMsgBody' + data.msg_id + '" onclick="triggermainThread(this)"><a class="msgthreadtrigger" onclick="colorChange(\'' + data.updatedmsgid + '\');" href="#msgThread_' + data.updatedmsgid + '"></a><div class="updatedTextOriginal">' + $("#data_msg_body" + data.updatedmsgid).html() + '</div></div>';
                $(".msg_id_" + data.msg_id + ' .plain_text').before(tDesign);
                $('#msgThread_' + data.msg_id + ' .deleSingleMsgConnect').remove();

            } else {
                updatedMsgArr.push({
                    'id': data.msg_id.toString(),
                    'updatedmsgid': data.updatedmsgid.toString(),
                    'msgbody': data.msg_body,
                    'created_at': data.created_at
                });
            }
        }

        if (par_chk_process && data.msg_type == 'checklist') {
            // $(".msg_id_"+data.msg_id).addClass("pending_chk_process").addClass('pending_msg');
            $(".msg_id_" + data.msg_id).addClass("pending_chk_process");
            // console.log(22, 'pending_chk_process');
        }
        if (data.msg_type == 'checklist' && msg_chk_today.indexOf(data.msg_id) > -1) {
            $(".msg_id_" + data.msg_id + " .msgCheckListContainer").addClass("due_date_today");
            // console.log(22, 'due_date_today');
        }
        if (data.msg_type == 'checklist' && msg_chk_overdue.indexOf(data.msg_id) > -1) {
            $(".msg_id_" + data.msg_id + " .msgCheckListContainer").addClass("due_date_overdue");
            // console.log(22, 'due_date_overdue');
        }

        $.each($('.msg-separetor'), function(k, v) {
            if ($(v).text() == msg_date) {
                $(v).remove();
                return 0;
            }
        });
        var date_html = '<div class="msg-separetor" data-format="' + moment(data.created_at).format('YYYY-MM-DD') + '" data-date="' + msg_date + '"><p>' + msg_date + '</p></div>';
        $("#msg-container").prepend(date_html);
    }
    if (data.tag_list != null) {

        if (data.tag_list.length > 0) {

            checklistView();
        }
    }
    messageEllipsis(data.msg_id)
        // moreMsgAction();
        // forActiveRedialIcon(onlineUserList, participants, conversation_type,to); // sujon
        // viewThread();
        // }
    hideMsgSeparetor();
    if (data.msg_type == 'checklist') {
        if (drawmsgtype == 'new') {
            viewchecklisttype = 'count';
            countAndGetchecklist()
        }
    }

    if (_edit_check != '') {
        closeAllPopUp();
        ediCheckListMessage(data.msg_id, data.sender);
    }
};

function isSameDayAndMonth(m1, m2) {
    if (m1 == undefined || m2 == undefined) {
        return false;
    } else {

        m1 = moment(m1);
        m2 = moment(m2);
        // console.log(m1,m2)
        return m1.date() === m2.date() && m1.month() === m2.month()
    }
}
var lastMainNotiId = '';
var prepandArrayNotiIds = [];

function botMsgCluster(data, append, html) {
    if (append) {
        if ($("#msg-container").find('.msgs-form-users').last().attr('data-msg-type') == 'notification' && isSameDayAndMonth($("#msg-container").find('.msgs-form-users').last().attr('data-msg-date'), data.created_at)) {
            $('.more' + lastMainNotiId).remove();
            $("#msg-container").find('.msgs-form-users').last().addClass('thisisChild');
            prepandArrayNotiIds.push($("#msg-container").find('.msgs-form-users').last().attr('data-msgid'))
            $("#msg-container").append(html);
            lastMainNotiId = data.msg_id;
            // $("#msg-container").find('.msgs-form-users').last().before('<span class=" moreNoticlas more' + lastMainNotiId + '" onclick="showMoreNoti(this)" >+ Show More</span>');
            // if (lastMainNotiId != '') {
            //     $('.more' + lastMainNotiId).attr('data-ids', prepandArrayNotiIds)
            // }




        } else {
            prepandArrayNotiIds = [];
            $("#msg-container").append(html);
        }


        // if($("#msg-container").find('.msgs-form-users').last().attr('data-msg-type') == 'notification' && isSameDayAndMonth($("#msg-container").find('.msgs-form-users').last().attr('data-msg-date'),data.created_at)){
        // 	$("#msg-container").find('.msgs-form-users').last().find('.plain_text').append('<div class="cluster_data msg_id_'+data.msg_id+'" id="msgThread_'+data.msg_id+'">'+data.msg_body+'</div>')
        // }else{
        // 	$("#msg-container").append(html);
        // }
        // $("#msg-container").append(html);
    } else {
        // if($("#msg-container").find('.msgs-form-users').first().attr('data-msg-type') == 'notification' && isSameDayAndMonth($("#msg-container").find('.msgs-form-users').first().attr('data-msg-date'),data.created_at)){
        // 	$("#msg-container").find('.msgs-form-users').first().find('.plain_text').append('<div class="cluster_data msg_id_'+data.msg_id+'" id="msgThread_'+data.msg_id+'">'+data.msg_body+'</div>')
        // }else{
        // 	$("#msg-container").prepend(html);
        // }

        if ($("#msg-container").find('.msgs-form-users').first().attr('data-msg-type') == 'notification' && isSameDayAndMonth($("#msg-container").find('.msgs-form-users').first().attr('data-msg-date'), data.created_at)) {
            if ($("#msg-container").find('.msgs-form-users').first().hasClass('thisisChild')) {
                if (lastMainNotiId != '') {
                    prepandArrayNotiIds.push(data.msg_id);
                    $('.more' + lastMainNotiId).attr('data-ids', prepandArrayNotiIds)
                }
                $("#msg-container").prepend(html);
                $("#msg-container").find('.msgs-form-users').first().addClass('thisisChild');
            } else {
                lastMainNotiId = '';
                prepandArrayNotiIds = [];
                $("#msg-container").find('.msgs-form-users').first().removeClass('endHideChild')
                    // $("#msg-container").find('.msgs-form-users').first().before('<span onclick="showMoreNoti(this)" class="moreNoticlas more' + $("#msg-container").find('.msgs-form-users').first().attr('data-msgid') + '">+ Show More</span>');
                lastMainNotiId = $("#msg-container").find('.msgs-form-users').first().attr('data-msgid');
                $("#msg-container").prepend(html);
                prepandArrayNotiIds.push(data.msg_id);
                $('.more' + lastMainNotiId).attr('data-ids', prepandArrayNotiIds)
                $("#msg-container").find('.msgs-form-users').first().addClass('thisisChild');

            }

        } else {
            $("#msg-container").prepend(html);
        }
    }
}

function showMoreNoti(elm) {
    var allMsgids = $(elm).attr('data-ids').split(',');

    if ($(elm).hasClass('active')) {
        $(elm).removeClass('active');
        $(elm).text('+ Show More')
        for (var i = 0; i < allMsgids.length; i++) {
            $('#msgThread_' + allMsgids[i]).hide();
        }

    } else {
        $(elm).addClass('active');
        $(elm).text('- Show Less');
        for (var i = 0; i < allMsgids.length; i++) {
            $('#msgThread_' + allMsgids[i]).css('display', 'flex');
        }
    }
}

function messageEllipsis(msg_id, type) {
    if (type == 'reply') {
        var msg_thread = $('.rep_msg_' + msg_id).find('.updatedTextOriginal');
        $.each(msg_thread, function(k, v) {
            var text = $(v).find('.msg_historyBody').html();
            if (text != undefined) {
                // console.log(3082,text)
                text = text.replace(/<script([\S\s]*?)>([\S\s]*?)<\/script>/ig, "");
                $(v).find('.msg_historyBody').html(text);
            }
        });
        var msg_thread = $('.rep_msg_' + msg_id).find('.updatedTextOriginal');

        $.each(msg_thread, function(k, v) {
            if ($(v).height() > 66) {
                if (!$(v).hasClass('ellipsis_active')) {
                    $(v).addClass('ellipsis_active');
                    $(v).find('.lastUpdateTime').before('<div class="showMoreEditedmsg" onclick="showEditFullMsg(\'' + msg_id + '\',this)"> + Show full message</div>')
                }

            }
        })
    } else {
        var msg_thread = $('#msgThread_' + msg_id).find('.updatedTextOriginal');
        $.each(msg_thread, function(k, v) {
            var text = $(v).find('.msg_historyBody').html();
            if (text != undefined) {
                // console.log(3082,text)
                text = text.replace(/<script([\S\s]*?)>([\S\s]*?)<\/script>/ig, "");
                $(v).find('.msg_historyBody').html(text);
            }
        });
        var msg_thread = $('#msgThread_' + msg_id).find('.updatedTextOriginal');

        $.each(msg_thread, function(k, v) {
            if ($(v).height() > 66) {
                if (!$(v).hasClass('ellipsis_active')) {
                    $(v).addClass('ellipsis_active');
                    $(v).find('.lastUpdateTime').before('<div class="showMoreEditedmsg" onclick="showEditFullMsg(\'' + msg_id + '\',this)"> + Show full message</div>')
                }

            }
        })
    }


}

function showEditFullMsg(msg_id, elm) {
    if (!$(elm).hasClass('active')) {
        $(elm).parent('.updatedTextOriginal').removeClass('ellipsis_active');
        $(elm).text('- Hide full message');
        $(elm).addClass('active');
    } else {
        $(elm).parent('.updatedTextOriginal').addClass('ellipsis_active');
        $(elm).text('+ Show full message');
        $(elm).removeClass('active');
    }
}

function checklistVisiblityCheck(data) {
    if (data.privacy == 'Private') {
        if (conversation_type == 'group') {
            if (adminArra.indexOf(user_id) > -1 || data.assign_to == user_id) {
                return true;
            } else {
                return false;
            }
        } else {
            return true;
        }
    } else {
        return true;
    }
}

function checklistSettingsAuth(data) {
    return true;
    // if(data.created_by == user_id || adminArra.indexOf(user_id) > -1 ||){
    // 	return true;
    // }else{
    // 	return false;
    // }
}

function checklist_has_pending_process(msg) {
    par_chk_process = false;

    // console.log('checklist_has_pending_process',msg.checklist);
    if (msg.checklist === undefined) {
        return false;
    }
    for (var n = 0; n < msg.checklist.length; n++) {
        if (checklist_item_has_pending_process(msg.checklist[n]) === true) {
            // console.log(2457, v.checklist[n]);
            par_chk_process = true;
            n = msg.checklist.length;
        }
    }
    return par_chk_process;
}

function checklist_item_has_pending_process(cv) {
    // who is the assign user?
    var assusr = cv.alternative_assign_to == null ? cv.assign_to : cv.alternative_assign_to;
    // if self assign, no need to check pending process
    if (assusr == cv.assignedby) return false;

    // to find incompleted checklist
    // checklist_status must be "0"
    if (cv.checklist_status == 0) {
        // if assign user is me,
        // task do not created by my selft and
        // task request ttl not me
        // if(assusr == user_id && cv.created_by != user_id && cv.Request_ttl_by != user_id){
        if (assusr == user_id && cv.Request_ttl_by != user_id) {
            if (conversation_type != 'personal' && (cv.assign_status == cv.created_by || adminArra.indexOf(cv.assign_status) > -1)) {
                // console.log(4712, cv);
                return true;
            } else if (cv.assign_status != "2" && cv.assign_status != "1" && conversation_type == 'personal') {
                return true;
            }
        }
        // else if(assusr == user_id && cv.created_by == user_id && cv.assign_status != null && cv.assign_status != user_id && cv.assign_status != 2){
        // 	has_incompleted_checklist = true;
        // }
        // task created by me or
        // i'm a group admin
        else if (cv.created_by == user_id || adminArra.indexOf(user_id) > -1) {
            // task not assign to me and
            // task decline or request
            if (assusr != user_id && (cv.assign_status == 1 || cv.Request_ttl_by != null)) {
                // console.log(4728, cv);
                return true;
            }
        }
    }
    return false;
}

function update_chk_by_now_for_due_date_today(cv) {
    // due date and current date is same
    if (moment(Number(cv.end_due_date)).isSame(moment().unix() * 1000, 'day')) {
        // console.log(4676)
        if (getCookie("chk_due_date_today" + cv.convid + "@" + cv.msg_id) != 1) {
            socket.emit("chk_due_date_today", { conversation_id: cv.convid, msg_id: cv.msg_id }, function(res) {
                // console.log(4679, res)
                setCookie("chk_due_date_today" + cv.convid + "@" + cv.msg_id, 1, 1);
                // location.reload();

                if ($('.msg_id_' + cv.msg_id).length > 0) {
                    var lastInsert = $('.msg_id_' + cv.msg_id)[0].outerHTML;
                    $('.msg_id_' + cv.msg_id).remove();
                    $('#msg-container').append(lastInsert);
                    // console.log('lastInsert',lastInsert);
                }
            });
        }
    }
}

function checklist_item_due_date_check(cv) {
    var assusr = cv.alternative_assign_to == null ? cv.assign_to : cv.alternative_assign_to;
    if (assusr == cv.assignedby) return false;

    if (cv.request_ttl_approved_date != null) {
        cv.end_due_date = (moment(cv.request_ttl_approved_date, "YYYY-MM-DD HH:mm").unix() * 1000);
    }

    update_chk_by_now_for_due_date_today(cv);

    // if assign user is me,
    if (assusr == user_id) {
        // to find incompleted checklist
        // checklist_status must be "0", means checklist is pending
        // user do not decline this task
        if (cv.checklist_status == 0 && cv.assign_status != 1) {
            // due date and current date is same
            if (moment(Number(cv.end_due_date)).isSame(moment().unix() * 1000, 'day')) {
                if (msg_chk_today.indexOf(cv.msg_id) == -1)
                    msg_chk_today.push(cv.msg_id);
                // return true;
            }
            // due date is lower then current time = overdue
            if (Number(cv.end_due_date) < moment().unix() * 1000) {
                if (msg_chk_overdue.indexOf(cv.msg_id) == -1)
                    msg_chk_overdue.push(cv.msg_id);
                return true;
            }
        }
    }
}

function showAllTab(el) {
    $(el).hide();
    $('.breakText.sep_bar').hide();
    $(el).parents('.checkAction').find('.temp_hide').removeClass('temp_hide');
}

function draw_msg_checklist(data) {
    // console.log(6440, data);
    var due_date_is_today = false;
    if (data.checklist == undefined) {
        data.checklist = [];
    }
    $('#clcounterperMsg' + data.msg_id).attr('data-length', data.checklist.length);
    // console.log(4026,data);
    var unchecklist = 0;
    if (data.msg_body == 'Converted Checklist') {

        var html = '<div class="msgCheckListContainer">';
    } else {
        var html = '<div class="msgCheckListContainer" data-sender="' + data.sender + '" msg-id="' + data.msg_id + '" onclick="makeEditablechecklist(event,\'' + data.sender + '\',\'' + data.msg_id + '\')">';
    }

    html += '<p class="checkListPlainText" title="' + data.msg_body + '" onkeydown="checkListPlainText(event)" onkeyup="checkListPlainTextKeyup(event)">' + data.msg_body + '</p><span class="filter_by" data-balloon="Filter Checklist by" data-balloon-pos="up" onclick="filterBy_popup(event, this)"></span><span class="settingsIco" msg-id="' + data.msg_id + '" onclick="checklistDueDate(\'settings\',event)"></span>';
    html += '<div class="filterBy_popup" msg-id="' + data.msg_id + '">';
    html += '	<div class="item_more_items filter_me" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'me_all\')">Created by Me</div>';
    html += '	<div class="item_more_items filter_other" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'other_all\')">Created by Other</div>';
    html += '</div>';
    html += '<div class="checkAction ' + ((data.msg_body == 'Converted Checklist') ? 'hiddenCl' : '') + '">';
    html += '<span class="checklistcounter" data-com="0" data-length="0" id="clcounterperMsg' + data.msg_id + '" style="display:none"></span>';
    html += '<span class="filterchecklist" onclick="toggleChecklistf(\'' + data.msg_id + '\')" style="display:none">Show Pending</span>';
    html += '<span class="filterShowall recentActivity" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'recentActivity\')" id="recentActivity_' + data.msg_id + '" data-all="' + data.checklist.length + '">Recent Activity</span> <span class="breakText">|</span>';
    html += '<span class="filterpending" data-unread="" id="filterPending_' + data.msg_id + '" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'pending\')">All Pending (0)</span> <span class="breakText">|</span>';
    html += '<span class="filterMypending" data-unread="" id="filterMyPending_' + data.msg_id + '" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'my_pending\')">My Pending (0)</span> <span class="breakText">|</span>';
    html += '<span class="filterMyResReq temp_hide" data-unread="" id="filterMyResReq_' + data.msg_id + '" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'my_res_req\')">My Response Required (0)</span> <span class="breakText">|</span>';
    html += '<span class="filterShowall completed_all temp_hide" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'com_all\')" id="filterCompletedall_' + data.msg_id + '" data-com="0">Completed (0)</span> <span class="breakText">|</span>';
    html += '<span class="filterShowall assignment_count temp_hide" data-assingment="0" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'show_assigned\')" id="filterassigned_' + data.msg_id + '"  msg-id="' + data.msg_id + '" filter-type="show_assigned" >Assigned (0)</span> <span class="breakText">|</span>';
    html += '<span class="filterShowall unassignment_count temp_hide" data-assingment="0" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'show_unassigned\')" id="filterUnassigned_' + data.msg_id + '"  msg-id="' + data.msg_id + '" filter-type="show_unassigned" >Unassigned (0)</span> <span class="breakText">|</span>';
    html += '<span class="filterShowall over_due temp_hide" data-assingment="0" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'show_over_due\')" id="filterOverDue_' + data.msg_id + '"  msg-id="' + data.msg_id + '" filter-type="show_over_due" >Over Due (0)</span> <span class="breakText">|</span>';
    html += '<span class="filterShowall showAllChecklist" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'showall\')" id="filterShowall_' + data.msg_id + '" data-all="' + data.checklist.length + '">Show All (' + data.checklist.length + ')</span> <span class="breakText">|</span>';
    html += '<span class=" show_activity" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'show_activity\'); //filterOnChecklist(this)"  msg-id="' + data.msg_id + '" filter-type="show_activity" >View details</span> <span class="breakText sep_bar">|</span>';
    html += '<span class="filterShowall showAllTab" onclick="showAllTab(this)"></span>';
    html += '</div>';
    html += '<div class="filter_by_name"></div>';
    html += '<div class="itemContainer">';
    var checklist_item = _.orderBy(data.checklist, ["created_at", "checklist_id"], ["asc", "asc"]);
    $.each(checklist_item, function(ck, cv) {
        if (cv.checklist_title == null || cv.checklist_title == '') {
            return;
        }
        due_date_is_today = false;
        var AssC = 0;
        if (cv.alternative_assign_to != null) {
            AssC += 1;
        } else if (cv.assign_to != null) {
            AssC += 1;
        }

        var hiddenCls = '';
        var msg_pending = false;
        var lock_for_user = '';
        var assusr = cv.alternative_assign_to == null ? cv.assign_to : cv.alternative_assign_to;
        if (checklist_item_has_pending_process(cv) === true) {
            has_incompleted_checklist = true;
        }
        if (checklist_item_due_date_check(cv) === true) {
            has_incompleted_checklist = true;
            due_date_is_today = true;
            par_chk_process = true;
        }

        var self_ass = false;
        var msg_creator = data.sender;
        if (assusr == user_id && cv.assignedby == user_id) {
            self_ass = true;
        }

        if (conversation_type == 'personal') {
            if (cv.assign_status == 1 || cv.Request_ttl_by != null) {
                lock_for_user = ' lock_for_user';
            }
        } else {
            if (cv.assign_status == 1 || cv.Request_ttl_by != null) {
                lock_for_user = ' lock_for_user';
            }
        }

        if ($('#input_values').find('input').val() == '') {
            if (cv.checklist_status == 1) {
                if (data.msg_body !== 'Converted Checklist') {
                    hiddenCls = 'hiddenCl';
                }
            } else {
                if (unchecklist >= 3) {
                    hiddenCls = 'hiddenCl';
                    if (unchecklist == 3) {
                        html += '<div style="float:left; width:auto" class="showMorechecklist" onclick="filterchecklistLastime(\'' + data.msg_id + '\',\'pending\')"> + Show full pending list</div>'
                    }
                }
                unchecklist++;
            }
        }

        var allActivity = '<span class="activity_created"> Created  by ' + findObjForUser(cv.created_by).fullname + ' @ ' + moment(cv.created_at).local().format('MMM Do YYYY - h:mm a') + ' </span>';
        if (assusr != null && cv.end_due_date != null) {
            allActivity += '<span class="activity_assignedTo"> | Assigned to ' + findObjForUser(assusr).fullname + ' </span>'
        }
        if (cv.assignedby != null && cv.end_due_date != null) {
            allActivity += '<span class="activity_assignedBy"> | Assigned by ' + findObjForUser(cv.assignedby).fullname + ' </span>'
        }
        if (cv.last_edited_by !== null) {
            allActivity += '<span class="activity_editedBy"> | Edited by ' + findObjForUser(cv.last_edited_by).fullname + ' @ ' + moment(cv.last_edited_at).local().format('MMM Do YYYY - h:mm a') + ' </span>'
        }
        if (cv.last_updated_by !== null) {
            allActivity += '<span class="activity_Comp"> | Updated by ' + findObjForUser(cv.last_updated_by).fullname + ' @ ' + moment(cv.last_updated_at).local().format('MMM Do YYYY - h:mm a') + ' </span>'
        }

        if (cv.end_due_date != null) {
            if (Number(cv.end_due_date) < moment().unix()) {
                if (cv.last_updated_by !== null) {
                    if (moment(cv.last_updated_at).unix() > Number(cv.end_due_date) && cv.checklist_status == 0) {
                        hiddenCls += ' overdue'
                    }
                } else {

                    hiddenCls += ' overdue'
                }
            }
        }
        var cvPrivacy = checklistVisiblityCheck(cv);
        var visibilityCk = '';
        if (cvPrivacy) {
            visibilityCk = 'visible';
        } else {
            visibilityCk = 'invisible';
        }
        if (cv.request_ttl_approved_date != null) {
            cv.end_due_date = (moment(cv.request_ttl_approved_date, "YYYY-MM-DD HH:mm").unix() * 1000);
        }
        var additional_check = '';
        var response_req = '';
        if (cv.checklist_status == 0) {
            if (assusr != user_id) {
                if (cv.assign_status == 1 && cv.assignedby == user_id) {
                    response_req = 'response_req';
                    msg_pending = true;
                } else if (cv.Request_ttl_by != null && cv.assignedby == user_id) {
                    response_req = 'response_req';
                    msg_pending = true;
                }
                if (cv.assign_status == user_id && cv.assignedby == user_id && cv.Request_ttl_by == null && cv.end_due_date != null) {}
            } else {
                if (cv.assign_status != null && cv.assign_status != 2 && cv.assign_status != user_id && assusr == user_id) {
                    if ((cv.assignee_change_reason != null || cv.assign_decline_note != null) && cv.assign_status != 1 && cv.Request_ttl_by == null) {
                        additional_check = 'waiting_3';
                        response_req = 'response_req';
                        msg_pending = true;
                    } else if (cv.assign_status == 1 && assusr == user_id) {} else if (cv.Request_ttl_by == user_id) {} else {
                        additional_check = 'waiting_3';
                        response_req = 'response_req';
                        msg_pending = true;
                    }
                }
                // Accepted user for personal conversation
                else if (due_date_is_today == false && get_conversation_obj(data.conversation_id).conversation_type == 'personal' && cv.assign_status == 2 && assusr == user_id) {
                    // html += '<div class="ttl_requestTime ttl_request'+cv.checklist_id+'"><span class="_separetor">|</span> <span class="success_btn" data-id="'+cv.checklist_id+'"><span class="short_cart_btn" data-type="Request" onclick="open_duedate_box(this)">Request for extension</span> </span></div>';
                    additional_check = 'waiting_3';
                }
            }

            if (due_date_is_today && assusr == user_id && cv.assignedby != user_id) {
                if (cv.assign_status == 2 && cv.Request_ttl_by == user_id) {} else {
                    if (cv.Request_ttl_by == null) {
                        additional_check = 'waiting_3';
                        response_req = 'response_req';
                        msg_pending = true;
                    }
                }
            }
        }
        var item_accepted = '';
        var review_status = ((cv.review_status == null) ? 0 : cv.review_status);

        var check_mark = ((cv.checklist_status == 1) ? true : false);
        var my_pending = '';
        if (assusr == user_id && check_mark == false) {
            my_pending = 'my_pending';
        }

        // remove html tags
        var title = cv.checklist_title.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1');
        // var isURL = validURL(title);

        var cvSettingsChanger = checklistSettingsAuth(cv);
        html += '<div created_by="' + cv.created_by + '" msg_title="' + cv.msg_title + '" data-lastmodified="' + (cv.last_updated_at != null && cv.last_updated_by != null ? cv.last_updated_at : '') + '" msg-pending="' + msg_pending + '" is-url="false" assigned-by="' + cv.assignedby + '" assign-to="' + assusr + '" data-ass="' + AssC + '" created_at="' + cv.created_at + '" msg_id="' + data.msg_id + '" checklist_status="' + cv.checklist_status + '" review_status="' + review_status + '" class="' + additional_check + ' ' + response_req + ' ' + my_pending + ' ' + (due_date_is_today ? 'dateOver_due' : '') + ' ' + (AssC == 1 ? 'has_assign' : 'unassigned') + ' ' + (cv.created_by == user_id ? 'crt_me' : 'crt_other') + ' ' + (cvSettingsChanger ? '' : 'settingsFalse ') + ' checkListItem ' + hiddenCls + ' ' + visibilityCk + ' perchecklist_' + cv.checklist_id + ' ' + (cv.last_updated_at != null && cv.last_updated_by != null ? 'modified' : '') + ' ' + (check_mark ? 'completed_item' : 'pending_item') + '" checklist-id="' + cv.checklist_id + '" created-at="' + cv.created_at + '">';
        html += '<div class="' + (cvPrivacy ? '' : 'checkUNauth ') + 'checkBox ' + (check_mark ? 'checked' : '') + '" onclick="selectCheckItem(this)"></div>';
        html += '<div creator_id="' + cv.created_by + '" class="checkBoxTitle" onpaste="onpasteFun(event)" created_at="' + cv.created_at + '" contenteditable="false" placeholder="Add a new task" onkeyup="checkListTitleKeyup(event)" onkeydown="msgCheckListTitle(event)" onblur="msgChecklistBlur(event)" my-id="' + user_id + '" edited-by="' + cv.last_edited_by + '" edited-at="' + cv.last_edited_at + '" data-title="' + title + '">' + title + '</div>';
        if (cv.end_due_date != null) {
            html += '	<div class="endDue_date"> Due by: ' + (cv.end_due_date != null ? moment.unix(Number(cv.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</div>'
        }
        // html += '<div data-balloon="Open this link" data-balloon-pos="down" data-balloon-length="small" class="link_open"  data-title="'+title+'" onclick="link_open(this)"></div>';
        html += '	<div last_updated_by="' + cv.last_updated_by + '" style="position:relative" data-balloon="Task Assignment" data-balloon-pos="down" data-balloon-length="small" checklist_status="' + cv.checklist_status + '" class="outer_ass dueDateIcon ' + (cv.end_due_date != null ? 'AssigneeUser active' : '') + '" msg-id="' + data.msg_id + '" data-id="' + cv.checklist_id + '" data-privacy="' + (cv.privacy != null ? cv.privacy : '') + '" data-assignee="' + (cv.alternative_assign_to != null ? cv.alternative_assign_to : cv.assign_to != null ? cv.assign_to : '') + '" end-date="' + (cv.end_due_date != null ? cv.end_due_date : '') + '" start-date="' + (cv.start_due_date != null ? cv.start_due_date : '') + '">'
        if (cv.alternative_assign_to != null) {
            html += '<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(cv.alternative_assign_to).img + '" >'
        } else if (cv.assign_to != null) {
            html += '<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(cv.assign_to).img + '" >'
        }
        html += '	</div>'
        html += '	<div class="item_UpdateButton" type="update" data-balloon="Click to update" data-balloon-pos="down-right" data-balloon-length="small" onclick="item_UpdateButton(event)"></div>'
        html += '	<div class="item_delete" data-balloon="Delete" data-label="Delete" data-balloon-pos="down-right" data-balloon-length="small" onclick="delete_item_div(this,event)"></div>'
        html += '<div class="item_toolbar">'
        html += '	<div last_updated_by="' + cv.last_updated_by + '" data-balloon="Task Assignment" data-balloon-pos="down" data-balloon-length="small"  checklist_status="' + cv.checklist_status + '" class="dueDateIcon ' + (cv.end_due_date != null ? 'AssigneeUser active' : '') + lock_for_user + '" msg-id="' + data.msg_id + '" data-id="' + cv.checklist_id + '" data-privacy="' + (cv.privacy != null ? cv.privacy : '') + '" data-assignee="' + (cv.alternative_assign_to != null ? cv.alternative_assign_to : cv.assign_to != null ? cv.assign_to : '') + '" end-date="' + (cv.end_due_date != null ? cv.end_due_date : '') + '" start-date="' + (cv.start_due_date != null ? cv.start_due_date : '') + '" onclick="checklistDueDate(this,event)">'
        if (cv.alternative_assign_to != null) {
            html += '<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(cv.alternative_assign_to).img + '" >'
        } else if (cv.assign_to != null) {
            html += '<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(cv.assign_to).img + '" >'
        }
        html += '	</div>'
            // html += '	<div data-balloon="Open this link" data-balloon-pos="down" data-balloon-length="small" class="link_open"  data-title="'+cv.checklist_title+'" onclick="link_open(this)"></div>'	
        html += '	<div data-balloon="Click to reply on this item." data-balloon-pos="down" data-balloon-length="small" class="checkboxReplyBtn ' + ((data.msg_body == 'Converted Checklist') ? 'hiddenCl' : '') + '"  data-title="' + title + '" onclick="openThreadForCheckI(event,this)" msg_id="' + data.msg_id + '" checklist-id="' + cv.checklist_id + '"></div>'
        html += '	<div data-balloon="Copy to Clipboard" data-balloon-pos="down-right" data-balloon-length="small" class="item_copy"  data-title="" onclick="copyThis_item(this)" msg_id="' + data.msg_id + '" checklist-id="' + cv.checklist_id + '"></div>'
        html += '	<div data-balloon="Delete" data-label="Delete" data-balloon-pos="down-right" data-balloon-length="small" class="item_del' + lock_for_user + '"  data-title="" onclick="delete_item_div(this,event)" msg_id="' + data.msg_id + '" checklist-id="' + cv.checklist_id + '"></div>'
        html += '</div>'

        if (assusr == user_id && cv.assignedby == user_id && cv.assign_status == user_id) {
            html += '<div class="assign_info">'
            html += '<span class="createdBy_name"> Created  by ' + findObjForUser(cv.created_by).fullname + ' on ' + moment(cv.created_at).local().format('MMM Do YYYY - h:mm a') + ' </span>';
            if (cv.last_updated_by != null) {
                html += ' <span class="end_due_date upBy_name" data="' + findObjForUser(cv.last_updated_by).fullname + '">| Updated by ' + findObjForUser(cv.last_updated_by).fullname + ' on ' + moment(cv.last_updated_at).local().format('MMM Do YYYY - h:mm a') + '</span>'
            }
            if (assusr != null) {
                if (cv.end_due_date != null) {
                    html += '<span class="end_due_date assignee_name" data="' + findObjForUser(assusr).fullname + '">' + (cv.last_updated_by != null ? ' | ' : ' | ') + 'Self-assigned</span> '
                    if (cv.checklist_status == 0) {
                        html += ' <span class="end_due_date _due_date" data="' + (cv.end_due_date != null ? moment.unix(Number(cv.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (cv.end_due_date != null ? moment.unix(Number(cv.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>'
                    } else {
                        html += ' <span class="end_due_date compBy_name" data="' + findObjForUser(cv.last_updated_by).fullname + '">| Completed by ' + findObjForUser(cv.last_updated_by).fullname + ' on ' + moment(cv.last_updated_at).local().format('MMM Do YYYY - h:mm a') + ' </span>'
                    }
                }
            }
            html += '</div>'
        } else if (assusr != user_id && cv.assignedby == assusr && cv.assign_status == assusr) {
            html += '<div class="assign_info">'
            html += '<span class="createdBy_name"> Created  by ' + findObjForUser(cv.created_by).fullname + ' on ' + moment(cv.created_at).local().format('MMM Do YYYY - h:mm a') + ' </span>';
            if (cv.last_updated_by != null) {
                html += ' <span class="end_due_date upBy_name" data="' + findObjForUser(cv.last_updated_by).fullname + '">| Updated by ' + findObjForUser(cv.last_updated_by).fullname + ' on ' + moment(cv.last_updated_at).local().format('MMM Do YYYY - h:mm a') + '</span>'
            }
            if (assusr != null) {
                if (cv.end_due_date != null) {
                    html += '<span class="end_due_date assignee_name" data="' + findObjForUser(assusr).fullname + '">' + (cv.last_updated_by != null ? ' | ' : ' | ') + 'Self-assigned by ' + findObjForUser(assusr).fullname + '</span> '
                    if (cv.checklist_status == 0) {
                        html += ' <span class="end_due_date _due_date" data="' + (cv.end_due_date != null ? moment.unix(Number(cv.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (cv.end_due_date != null ? moment.unix(Number(cv.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>'
                    } else {
                        html += ' <span class="end_due_date compBy_name" data="' + findObjForUser(cv.last_updated_by).fullname + '">| Completed by ' + findObjForUser(cv.last_updated_by).fullname + ' on ' + moment(cv.last_updated_at).local().format('MMM Do YYYY - h:mm a') + ' </span>'
                    }
                }
            }
            html += '</div>'
        } else {
            html += '<div class="assign_info">'
            html += '<span class="createdBy_name"> Created  by ' + findObjForUser(cv.created_by).fullname + ' on ' + moment(cv.created_at).local().format('MMM Do YYYY - h:mm a') + ' </span>';
            if (cv.last_updated_by != null) {
                html += ' <span class="end_due_date upBy_name" data="' + findObjForUser(cv.last_updated_by).fullname + '">| Updated by ' + findObjForUser(cv.last_updated_by).fullname + ' on ' + moment(cv.last_updated_at).local().format('MMM Do YYYY - h:mm a') + '</span>'
            }
            if (assusr != null) {
                if (cv.end_due_date != null) {
                    html += '<span class="end_due_date assignee_name" data="' + findObjForUser(assusr).fullname + '">' + (cv.last_updated_by != null ? ' | ' : ' | ') + 'Assigned to ' + findObjForUser(assusr).fullname + ' </span>'
                    if (cv.checklist_status == 0) {
                        html += ' <span class="end_due_date _due_date" data="' + (cv.end_due_date != null ? moment.unix(Number(cv.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (cv.end_due_date != null ? moment.unix(Number(cv.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>'
                    }
                    html += ' <span class="end_due_date assignBy_name" data="' + findObjForUser(cv.assignedby).fullname + '">| Assigned by ' + findObjForUser(cv.assignedby).fullname + ' </span>'
                    if (cv.checklist_status != 0) {
                        html += ' <span class="end_due_date compBy_name" data="' + findObjForUser(cv.last_updated_by).fullname + '">| Completed by ' + findObjForUser(cv.last_updated_by).fullname + ' on ' + moment(cv.last_updated_at).local().format('MMM Do YYYY - h:mm a') + ' </span>'
                    }
                }

                if (cv.checklist_status == 0) {
                    if (assusr != user_id) {
                        if (cv.assign_status == 1 && cv.assignedby == user_id) {
                            html += '<div class="ttl_requestTime ttl_request' + cv.checklist_id + '"><span class="_separetor">|</span> <span style="color: red">Declined </span>  <span class="success_btn red_color" data-id="' + cv.checklist_id + '"><span class="short_cart_btn" data-type="decline_review" onclick="open_duedate_box(this)" action="declined">Review</span></span></div>';
                        } else if (cv.Request_ttl_by != null && cv.assignedby == user_id) {
                            html += '<div class="ttl_requestTime ttl_request' + cv.checklist_id + '"><span class="_separetor">|</span> <span style="color: red">Extension requested </span>  <span class="success_btn red_color" data-id="' + cv.checklist_id + '"><span class="short_cart_btn" data-type="request_review" onclick="open_duedate_box(this)">Review</span></span></div>';
                        }
                        if (cv.assign_status == user_id && cv.assignedby == user_id && cv.Request_ttl_by == null && cv.end_due_date != null) {
                            html += '<div class="ttl_requestTime ttl_request' + cv.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + cv.checklist_id + '">Pending Acceptance. </span></div>';
                        }
                    } else {
                        if (cv.assign_status != null && cv.assign_status != 2 && cv.assign_status != user_id && assusr == user_id) {
                            if ((cv.assignee_change_reason != null || cv.assign_decline_note != null) && cv.assign_status != 1 && cv.Request_ttl_by == null) {
                                html += '<div class="ttl_requestTime ttl_request' + cv.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + cv.checklist_id + '"><span class="short_cart_btn aprove_btn_sortcart" onclick="assign_accept_btn(this)">Accept</span> <span class="short_cart_btn" data-type="Request" onclick="open_duedate_box(this)">Request for extension</span> <span class="short_cart_btn" data-type="Decline" onclick="open_duedate_box(this)">Decline</span></span></div>';
                                due_date_is_today = false;
                            } else if (cv.assign_status == 1 && assusr == user_id) {
                                html += '<div class="ttl_requestTime ttl_request' + cv.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + cv.checklist_id + '"><span class="short_cart_btn" data-type="cancel_decline" msg-id="' + cv.msg_id + '" checklist-id="' + cv.checklist_id + '" data-reciver="' + cv.assignedby + '" onclick="requesttlBtn(this)">Cancel Decline</span></span></div>';
                            } else if (cv.Request_ttl_by == user_id) {
                                html += '<div class="ttl_requestTime ttl_request' + cv.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + cv.checklist_id + '"><span class="short_cart_btn" data-type="cancel_request" msg-id="' + cv.msg_id + '" checklist-id="' + cv.checklist_id + '" data-reciver="' + cv.assignedby + '" onclick="requesttlBtn(this)">Cancel Extension request</span></span></div>'
                            } else {
                                html += '<div class="ttl_requestTime ttl_request' + cv.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + cv.checklist_id + '"><span class="short_cart_btn aprove_btn_sortcart" onclick="assign_accept_btn(this)">Accept</span> <span class="short_cart_btn" data-type="Request" onclick="open_duedate_box(this)">Request for extension</span> <span class="short_cart_btn" data-type="Decline" onclick="open_duedate_box(this)">Decline</span></span></div>';
                                due_date_is_today = false;
                            }
                        }
                        // Accepted user for personal conversation
                        else if (due_date_is_today == false && get_conversation_obj(data.conversation_id).conversation_type == 'personal' && cv.assign_status == 2 && assusr == user_id) {
                            // html += '<div class="ttl_requestTime ttl_request'+cv.checklist_id+'"><span class="_separetor">|</span> <span class="success_btn" data-id="'+cv.checklist_id+'"><span class="short_cart_btn" data-type="Request" onclick="open_duedate_box(this)">Request for extension</span> </span></div>';
                            html += '<div class="ttl_requestTime ttl_request' + cv.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + cv.checklist_id + '"><span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span> <span class="short_cart_btn" data-type="Mark complete" onclick="open_duedate_box(this)">Mark as completed</span></span></div>';
                        }
                    }

                    if (due_date_is_today && assusr == user_id && cv.assignedby != user_id) {
                        if (cv.assign_status == 2 && cv.Request_ttl_by == user_id) {
                            html += '<div class="ttl_requestTime ttl_request' + cv.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + cv.checklist_id + '"><span class="short_cart_btn" data-type="cancel_request" msg-id="' + cv.msg_id + '" checklist-id="' + cv.checklist_id + '" data-reciver="' + cv.assignedby + '" onclick="requesttlBtn(this)">Cancel Extension request</span></span></div>'
                        } else {
                            if (cv.Request_ttl_by == null) {
                                html += '<div class="ttl_requestTime ttl_request' + cv.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + cv.checklist_id + '"><span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span> <span class="short_cart_btn" data-type="Mark complete" onclick="open_duedate_box(this)">Mark as completed</span></span></div>';
                            }
                        }
                    }
                }
            }
            html += '</div>'
        }

        html += '<div style="display:none" class="activity_list_all">' + allActivity + '</div>'

        html += '<div  style=display:none !important" class=" created_by_div" >Created  by ' + findObjForUser(cv.created_by).fullname + ' @ ' + moment(cv.created_at).local().format('MMM Do YYYY - h:mm a') + '</div>';
        if (cv.last_edited_by !== null) {
            html += '<div  style="display:none !important; width:auto; margin-left:2px" class=" last_edited_by_div" update-by="' + cv.last_edited_by + '" update-time="' + cv.last_edited_by + '"> | Edited by ' + findObjForUser(cv.last_edited_by).fullname + ' @ ' + moment(cv.last_edited_at).local().format('MMM Do YYYY - h:mm a') + '</div>'
        }
        if (cv.last_updated_by !== null) {
            html += '<div style="display:none !important;  margin-left:2px" class="completed_by last_updated_by_div" update-by="' + cv.last_updated_by + '" update-time="' + cv.last_updated_at + '"> | Updated by ' + findObjForUser(cv.last_updated_by).fullname + ' @ ' + moment(cv.last_updated_at).local().format('MMM Do YYYY - h:mm a') + '</div>'
        }

        html += '</div>';
    });

    html += '<div class="updatebtn">';
    html += '<div class="update_btn" onclick="updateCheckList(event,this)">Submit</div>';
    html += '<div class="cancel_btn" onclick="cancelupChecklist(event,this)">Close</div>';
    html += '</div>';
    html += '</div>';
    html += '</div>';
    if (!data.hasDelete) {

        return html;
    }
}

function link_open(el) {
    var url = $(el).attr('data-title');
    // window.open(url,"_blank");
    Object.assign(document.createElement('a'), {
        target: '_blank',
        href: url,
    }).click();
}

function filterBy_popup(e, el) {
    e.preventDefault();
    e.stopImmediatePropagation();
    // if ($('.editable_checklistMsg').find('.checkListItem.has_assign').length > 0) {
    var assList = [];
    var msg_id = $(el).parents('.msgCheckListContainer').attr('msg-id');
    var active_filter = $(el).attr('active-filter');
    var assigneeF = 'assigneeF';
    var showall = 'showall';
    if ($(el).hasClass('active')) {
        $('.filterBy_popup').hide();
        $(el).removeClass('active');
    } else {
        $('.filterBy_popup').show();
        $(el).addClass('active');
        $('.filterBy_popup').html('');
        $.each($('.editMessageBody').find('.checkListItem'), function(k, v) {
            var name = $(v).find('.assignee_name').attr('data');
            if (name != undefined) {
                if (assList.indexOf(name) == -1) {
                    assList.push(name);
                    var html = '<div class="item_more_items assigneeF ' + (active_filter == name ? 'active' : '') + '" data-name="' + name + '" onclick="filterchecklistLastime(\'' + msg_id + '\',\'' + assigneeF + '\',\'' + name + '\',event)">' + name + '</div>';
                    $('.filterBy_popup').append(html);
                }
            }
        });
        if ($('#threadReplyPopUp').is(':visible')) {
            $('.filterBy_popup').append('<div class="item_more_items assigneeF" onclick="filterchecklistLastime(\'' + msg_id + '\',\'' + showall + '\',"",event)">Show All</div>');
        } else {
            if ($('#filterShowall_' + msg_id).hasClass('active')) {
                $('.filterBy_popup').append('<div class="item_more_items active assigneeF" onclick="filterchecklistLastime(\'' + msg_id + '\',\'' + showall + '\')">Show All</div>');
            } else {
                $('.filterBy_popup').append('<div class="item_more_items assigneeF" onclick="filterchecklistLastime(\'' + msg_id + '\',\'' + showall + '\')">Show All</div>');
            }
        }
    }
}

function item_more_popUp(el) {
    if ($(el).parents('.checkListItem').hasClass('active_more')) {
        $(el).parents('.editMessageBody').find('.checkListItem').removeClass('active_an_more');
        $(el).parents('.checkListItem').removeClass('active_an_more');
    } else {
        $(el).parents('.editMessageBody').find('.checkListItem').addClass('active_an_more');
        $(el).parents('.checkListItem').removeClass('active_an_more').addClass('active_more');
    }
}

function copyThis_item(el) {
    var ctext = $(el).parents('.checkListItem').find('.checkBoxTitle').text();
    var $temp = $("<input>");
    $(el).parents('.checkListItem').append($temp);
    $temp.val(ctext).select();
    document.execCommand("copy");
    $temp.remove();
    flash_msg_updated_fun($(el).attr('msg_id'), 'Copied');
    // toastr["success"]("Copied");
}

function filterchecklistLastime(msgid, type, name = undefined, e) {
    var totalcompletecl = $('.msg_id_' + msgid).find('.checkBox.checked').length;
    var totalcl = $('.msg_id_' + msgid).find('.checkBox').length;
    if (!$('.msg_id_' + msgid).hasClass('ReadonlyCladd')) {
        totalcl = totalcl - 1;
    }
    $('#msgThread_' + msgid).find('.assign_info').show();
    $('#msgThread_' + msgid).find('.ttl_requestTime').show();
    $('#msgThread_' + msgid).find('.activity_list_all').hide();

    // Make asscending list
    if (type != 'recentActivity' && $('.msg_id_' + msgid).hasClass('recentActivity')) {
        $('.msg_id_' + msgid + ' .checkListItem.visible').sort(function(a, b) {
            return new Date($(b).attr("created_at")) - new Date($(a).attr("created_at"));
        }).each(function() {
            $('.msg_id_' + msgid + ' .itemContainer').prepend(this);
        })
    }
    if (type != 'show_activity') {
        $('.filter_by').attr('active-filter', '');
        $('.filter_by_name').text('');
        $('.editMessageBody .filterpending').removeClass('active');
        $('.editMessageBody .filterMypending').removeClass('active');
        $('.editMessageBody .filterMyResReq').removeClass('active');
        $('.editMessageBody .filterShowall').removeClass('active');
    }

    $('#data_msg_body' + msgid).find('.showMorechecklist').remove();
    if (type == 'pending') {
        // console.log(5577, type)
        $('.editMessageBody .filterpending').addClass('active');
        $('.msg_id_' + msgid).addClass('view_pending');
        $('.msg_id_' + msgid).removeClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('my_pending');
        $('.msg_id_' + msgid).removeClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('view_complete');
        $('.msg_id_' + msgid).removeClass('filter_assign');
        $('.item_more_items.filter_me').removeClass('active');
        $('.item_more_items.filter_other').removeClass('active');
        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.msg_id_' + msgid).find('.checkBox').parent('.checkListItem').show();
        $('.msg_id_' + msgid).find('.checkListItem.new_item .checkBoxTitle').focus();

        // $('#no_pendingList'+msgid).show();	
    } else if (type == 'recentActivity') {
        // console.log(5592, type)
        $('.editMessageBody .recentActivity').addClass('active');
        if (!$('.msg_id_' + msgid).hasClass('recentActivity')) {
            // Method #1
            $('.msg_id_' + msgid + ' .checkListItem.modified').sort(function(a, b) {
                return new Date($(a).attr("data-lastmodified")) - new Date($(b).attr("data-lastmodified"));
            }).each(function() {
                $('.msg_id_' + msgid + ' .itemContainer').prepend(this);
            })

            // Method #2
            // var modified = [];
            // $.each($('.msg_id_'+msgid+' .checkListItem.modified'), function(k,v){
            // 	var item = {
            // 		update: new Date($(v).attr('lastmodified')),
            // 		id : $(v).attr('checklist-id'),
            // 		title: $(v).find('.checkBoxTitle').text()
            // 	}
            // 	if (modified.indexOf(item) == -1) {
            // 		modified.push(item);
            // 	}
            // });

            // var modified = modified.sort((a, b) => b.update - a.update);
            // console.log(modified);
            // Method #3
            // var elems = $.makeArray($('.msg_id_'+msgid+' .checkListItem.modified'));
            // elems.sort((a, b) => new Date($(a).attr('lastmodified')) - new Date($(b).attr('lastmodified')));
            // console.log(elems);
            $('.editable_checklistMsg .itemContainer').scrollTop(0);
        }
        $('.msg_id_' + msgid).addClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('my_pending');
        $('.msg_id_' + msgid).removeClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('view_pending');
        $('.msg_id_' + msgid).removeClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('view_complete');
        $('.msg_id_' + msgid).removeClass('filter_assign');
        $('.item_more_items.filter_me').removeClass('active');
        $('.item_more_items.filter_other').removeClass('active');
        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.msg_id_' + msgid).find('.checkBox').parent('.checkListItem').show();
        $('.msg_id_' + msgid).find('.checkListItem.new_item .checkBoxTitle').focus();
    } else if (type == 'my_pending') {
        // console.log(5592, type)
        $('.editMessageBody .filterMypending').addClass('active');
        $('.msg_id_' + msgid).addClass('my_pending');
        $('.msg_id_' + msgid).removeClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('view_pending');
        $('.msg_id_' + msgid).removeClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('view_complete');
        $('.msg_id_' + msgid).removeClass('filter_assign');
        $('.item_more_items.filter_me').removeClass('active');
        $('.item_more_items.filter_other').removeClass('active');
        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.msg_id_' + msgid).find('.checkBox').parent('.checkListItem').show();
        $('.msg_id_' + msgid).find('.checkListItem.new_item .checkBoxTitle').focus();
        // $('#no_pendingList'+msgid).show();	
    } else if (type == 'my_res_req') {
        $('.editMessageBody .filterMyResReq').addClass('active');
        $('.msg_id_' + msgid).addClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('my_pending');
        $('.msg_id_' + msgid).removeClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('view_pending');
        $('.msg_id_' + msgid).removeClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('view_complete');
        $('.msg_id_' + msgid).removeClass('filter_assign');
        $('.item_more_items.filter_me').removeClass('active');
        $('.item_more_items.filter_other').removeClass('active');
        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.msg_id_' + msgid).find('.checkBox').parent('.checkListItem').show();
        // $('#no_pendingList'+msgid).show();
    } else if (type == 'com_all') {
        $('.editMessageBody .completed_all').addClass('active');
        $('#filterCompletedall_' + msgid).removeClass('unread');
        $('#filterShowall_' + msgid).text('Show All (' + totalcl + ')');
        $('#filterShowall_' + msgid).attr('data-all', totalcl);
        $('#filterShowall_' + msgid).removeClass('active');

        $('.msg_id_' + msgid).addClass('view_complete');
        $('.msg_id_' + msgid).removeClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('my_pending');
        $('.msg_id_' + msgid).removeClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('view_pending');
        $('.msg_id_' + msgid).removeClass('filter_assign');
        $('.item_more_items.filter_me').removeClass('active');
        $('.item_more_items.filter_other').removeClass('active');
        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.msg_id_' + msgid).find('.checkBox').parent('.checkListItem').show();
        $('#no_pendingList' + msgid).hide();
    } else if (type == 'show_assigned') {
        $('.editMessageBody .assignment_count').addClass('active');
        $('#filterCompletedall_' + msgid).removeClass('unread');
        $('#filterShowall_' + msgid).text('Show All (' + totalcl + ')');
        $('#filterShowall_' + msgid).attr('data-all', totalcl);
        $('#filterShowall_' + msgid).removeClass('active');

        $('.msg_id_' + msgid).addClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('view_complete');
        $('.msg_id_' + msgid).removeClass('view_pending');
        $('.msg_id_' + msgid).removeClass('filter_assign');
        $('.msg_id_' + msgid).removeClass('filter_assign');
        $('.item_more_items.filter_me').removeClass('active');
        $('.item_more_items.filter_other').removeClass('active');

        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.msg_id_' + msgid).find('.checkListItem').show();
        $('#no_pendingList' + msgid).hide();
    } else if (type == 'show_unassigned') {
        $('.editMessageBody .unassignment_count').addClass('active');
        $('#filterCompletedall_' + msgid).removeClass('unread');
        $('#filterShowall_' + msgid).text('Show All (' + totalcl + ')');
        $('#filterShowall_' + msgid).attr('data-all', totalcl);
        $('#filterShowall_' + msgid).removeClass('active');

        $('.msg_id_' + msgid).addClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('my_pending');
        $('.msg_id_' + msgid).removeClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('view_complete');
        $('.msg_id_' + msgid).removeClass('view_pending');
        $('.msg_id_' + msgid).removeClass('filter_assign');
        $('.item_more_items.filter_me').removeClass('active');
        $('.item_more_items.filter_other').removeClass('active');

        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.msg_id_' + msgid).find('.checkListItem').show();
        $('#no_pendingList' + msgid).hide();
    } else if (type == 'show_over_due') {
        $('.editMessageBody .filterShowall.over_due').addClass('active');
        $('#filterCompletedall_' + msgid).removeClass('unread');
        $('#filterShowall_' + msgid).text('Show All (' + totalcl + ')');
        $('#filterShowall_' + msgid).attr('data-all', totalcl);
        $('#filterShowall_' + msgid).removeClass('active');

        $('.msg_id_' + msgid).addClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('my_pending');
        $('.msg_id_' + msgid).removeClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('view_complete');
        $('.msg_id_' + msgid).removeClass('view_pending');
        $('.msg_id_' + msgid).removeClass('filter_assign');
        $('.item_more_items.filter_me').removeClass('active');
        $('.item_more_items.filter_other').removeClass('active');

        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.msg_id_' + msgid).find('.checkListItem').show();
        $('#no_pendingList' + msgid).hide();
    } else if (type == 'me_all') {
        $('#filterShowall_' + msgid).removeClass('active');
        $('.item_more_items.filter_other').removeClass('active');
        $('.item_more_items.filter_me').addClass('active');

        $('.msg_id_' + msgid).addClass('crtBy_me');
        $('.msg_id_' + msgid).removeClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('my_pending');
        $('.msg_id_' + msgid).removeClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('crtBy_other');
        $('.msg_id_' + msgid).removeClass('view_complete');
        $('.msg_id_' + msgid).removeClass('view_pending');
        $('.msg_id_' + msgid).removeClass('filter_assign');

        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.msg_id_' + msgid).find('.checkListItem.crt_other').hide();
        $('.msg_id_' + msgid).find('.checkListItem').show();
        $('#no_pendingList' + msgid).hide();
    } else if (type == 'other_all') {
        $('#filterShowall_' + msgid).removeClass('active');
        $('.item_more_items.filter_me').removeClass('active');
        $('.item_more_items.filter_other').addClass('active');
        $('.msg_id_' + msgid).addClass('crtBy_other');
        $('.msg_id_' + msgid).removeClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('my_pending');
        $('.msg_id_' + msgid).removeClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('crtBy_me');
        $('.msg_id_' + msgid).removeClass('view_complete');
        $('.msg_id_' + msgid).removeClass('view_pending');
        $('.msg_id_' + msgid).removeClass('filter_assign');

        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.msg_id_' + msgid).find('.checkListItem.crt_me').hide();
        $('.msg_id_' + msgid).find('.checkListItem').show();
        $('#no_pendingList' + msgid).hide();
    } else if (type == 'assigneeF') {
        e.preventDefault();
        e.stopImmediatePropagation();
        $('#filterShowall_' + msgid).removeClass('active');
        $('.item_more_items.assigneeF').removeClass('active');
        $(e.target).addClass('active');
        $('.msg_id_' + msgid).addClass('filter_assign');
        $('.msg_id_' + msgid).removeClass('recentActivity');
        $('.msg_id_' + msgid).removeClass('my_res_req');
        $('.msg_id_' + msgid).removeClass('my_pending');
        $('.msg_id_' + msgid).removeClass('show_over_due');
        $('.msg_id_' + msgid).removeClass('show_assigned');
        $('.msg_id_' + msgid).removeClass('show_unassigned');
        $('.msg_id_' + msgid).removeClass('view_complete');
        $('.msg_id_' + msgid).removeClass('view_pending');
        $('.msg_id_' + msgid).find('.checkListItem').removeClass('hiddenCl');
        $('.checkListItem').removeClass('f_byAssign');

        // var assList = [];
        $('.filter_by').attr('active-filter', name);
        $('.filter_by_name').html('Filtered by ' + name + ' only <span class="close_filter" onclick="filterchecklistLastime(\'' + msgid + '\',\'showall\')"></span>');

        $.each($('.editMessageBody').find('.checkListItem'), function(k, v) {
            var name2 = $(v).find('.assignee_name').attr('data');

            if (name != undefined) {
                if (name2 != undefined) {
                    if (name == name2) {
                        $(v).addClass('f_byAssign');
                    }
                }
            }
        });
        if ($('#threadReplyPopUp').is(':visible')) {
            $('.main-thread-msgs.main_thread').addClass('filter_assign');
        }

        $('#no_pendingList' + msgid).hide();
    } else if (type == 'show_activity') {
        var el = $('#msgThread_' + msgid).find('.show_activity');

        if ($(el).hasClass('active')) {
            $(el).removeClass('active');
            $('#msgThread_' + msgid).removeClass('viewActivity');
            // $('#msgThread_'+msgid).find('.activity_list_all').hide();
            // $('#msgThread_'+msgid).find('.assign_info').show();
            // $('#msgThread_'+msgid).find('.ttl_requestTime').show();

            // $('#msgThread_'+msgid).find('.assign_info span').hide();
            // $('#msgThread_'+msgid).find('.assign_info ._separetor').hide();
            $('#msgThread_' + msgid).find('.assign_info .ttl_requestTime').removeClass('activeDetails');
        } else {
            $(el).addClass('active');
            $('#msgThread_' + msgid).addClass('viewActivity');
            // $('#msgThread_'+msgid).find('.activity_list_all').show();
            // $('#msgThread_'+msgid).find('.assign_info').hide();
            // $('#msgThread_'+msgid).find('.ttl_requestTime').hide();

            // $('#msgThread_'+msgid).find('.assign_info span').css('display','inline');
            $('#msgThread_' + msgid).find('.assign_info .ttl_requestTime').addClass('activeDetails');
        }
        // $('#msgThread_'+msgid).find('.showAllChecklist').attr('active-none','');
        $('#no_pendingList' + msgid).hide();
    } else {
        if ($('#threadReplyPopUp').is(':visible')) {
            e.stopImmediatePropagation();
            e.preventDefault();
            $('.main-thread-msgs.main_thread').removeClass('filter_assign');
        } else {
            $('.filterShowall.showAllChecklist').addClass('active');
            $('.msg_id_' + msgid).removeClass('recentActivity');
            $('.msg_id_' + msgid).removeClass('my_res_req');
            $('.msg_id_' + msgid).removeClass('my_pending');
            $('.msg_id_' + msgid).removeClass('show_over_due');
            $('.msg_id_' + msgid).removeClass('show_assigned');
            $('.msg_id_' + msgid).removeClass('show_unassigned');
            $('.msg_id_' + msgid).removeClass('view_complete');
            $('.msg_id_' + msgid).removeClass('view_pending');
            $('.msg_id_' + msgid).removeClass('filter_assign');
            $('.item_more_items.filter_me').removeClass('active');
            $('.item_more_items.filter_other').removeClass('active');
            $('#data_msg_body' + msgid).find('.checkListItem').show();
            $('#no_pendingList' + msgid).hide();
        }
    }
}

var isURL = (str) => {
    var url_pattern = new RegExp("(www.|http://|https://|ftp://)\w*");
    if (!url_pattern.test(str)) {
        return false;
    } else {
        if (str.indexOf(file_server + 'emoji/hv') > -1) return false;
        else return true;
    }
};



var draw_todo_share = (data) => {
    var html = '';
    if (data.sender != user_id) {
        html += '<p>' + user_id_to_fullname[data.sender] + ' is sharing a To-Do with you.</p>';
    } else {
        html += '<p>You share a To-Do.</p>';
    }

    html += '<div class="toDoContent todo_id_' + data.activity_id + ' todo_share_div_' + data.msg_id + '" data-aid="' + data.activity_id + '">'; // Start todo div
    if (data.msg_body == 'accept') {
        html += '<div class="toDoContent_Sec1">';
        html += '<div class="acceptCheck"></div>';
        if (data.sender != user_id)
            html += '<p class="acceptedLabel">Youve accepted <label onclick="goto_todo(event)">...</label></p>';
        else
            html += '<p class="acceptedLabel">' + $('#conv' + data.conversation_id).attr('data-name') + ' accepted <label onclick="goto_todo(event)">...</label></p>';
        html += '</div>';
    } else if (data.msg_body == 'decline') {
        html += '<div class="toDoContent_Sec1">';
        html += '<div class="acceptCheck decline"></div>';
        if (data.sender != user_id)
            html += '<p class="acceptedLabel decline">Youve decline <label>...</label></p>';
        else
            html += '<p class="acceptedLabel decline">' + $('#conv' + data.conversation_id).attr('data-name') + ' decline <label onclick="goto_todo(event)">...</label></p>';
        html += '</div>';
    } else {
        html += '<div class="toDoContent_Sec1">';
        html += '<img src="/images/basicAssets/custom_to_do_for_msg.svg">';
        html += '<p class="toDoName">...</p>';
        html += '<p>Due Date: <span class="dudate">...</span></p>';
        html += '</div>';
        if (data.sender != user_id) {
            html += '<div class="toDoContent_Sec2">';
            html += '<button class="accept_toDO" data-members="" onclick="accept_todo(event, \'' + data.conversation_id + '\', \'' + data.msg_id + '\',\'' + data.activity_id + '\')">Accept</button>';
            html += '<button class="decline_toDo" onclick="decline(event, \'' + data.conversation_id + '\', \'' + data.msg_id + '\', \'' + data.activity_id + '\')">Decline</button>';
            html += '</div>';
        }
    }
    html += '</div>'; // End todo div
    return html;
}
var goto_todo = (event) => {
    var aid = $(event.target).closest('.toDoContent').attr('data-aid');
    setCookie('lastActive', aid, 1);
    window.location.href = '/basic_to_do';
};
var accept_todo = (event, conversation_id, msg_id, activity_id) => {
    var members = $(event.target).attr('data-members').split(',');
    var html = '';
    socket.emit('todo_acepted', conversation_id, msg_id, user_id, activity_id, (res) => {
        html = '<div class="acceptCheck"></div>';
        html += '<p class="acceptedLabel">Youve accepted <label onclick="goto_todo(event)">' + $(event.target).closest('.toDoContent').find('.toDoName').html() + '</label></p>';
        $(event.target).closest('.toDoContent').find('.toDoContent_Sec1').html(html);
        html = draw_todo_member_list(members);
        $(event.target).closest('.toDoContent').find('.toDoContent_Sec2').html(html);
    });
};
var draw_todo_member_list = (members) => {
    var html = '';
    var you_decline_this_todo = false;
    html += '<div class="toDoContent_Sec2">';
    html += '<h1 class="acceptedMember">Accepted Member</h1>';
    $.each(members, function(k, v) {
        if (v == user_id) {
            you_decline_this_todo = true;
        }
        if (k < 4) {
            $.each(allUserdata[0].users, function(kk, vv) {
                if (v == vv.id)
                    html += '<img src="' + file_server + 'profile-pic/Photos/' + vv.img + '" class="selected_member" title="' + vv.fullname + '" alt="' + vv.img + '">';
            });
        } else if (k == 4) {
            html += '<span class="countSelected">+' + (members.length - 4) + '</span>';
        }
    });
    html += '</div>';
    return you_decline_this_todo ? html : "";
};
var decline = (event, conversation_id, msg_id, activity_id) => {
    socket.emit('todo_decline', conversation_id, msg_id, activity_id, user_id, (res) => {
        var html = '<div class="acceptCheck decline"></div>';
        html += '<p class="acceptedLabel decline">Youve decline <label>' + $(event.target).closest('.toDoContent').find('.toDoName').html() + '</label></p>';
        $(event.target).closest('.toDoContent').find('.toDoContent_Sec1').html(html);
        $(event.target).closest('.toDoContent').find('.toDoContent_Sec2').remove();
    });
};
var per_msg_url_attachment = (site_name, title, des, img, logo, url) => {
    // var html = '<div class="url-details">';
    // html += '<div class="base-link" onclick="click_on_url(event)">';
    // if(logo != null)
    // 	html += '<img src="' + logo + '" style="max-width:50px;max-height:50px;" onclick="click_on_url(event)">';
    // else
    // 	html += '<img src="/images/chat-action_20px_500 @1x.png" onclick="click_on_url(event)">';

    // if(site_name != null)
    //  	html += site_name;

    // html += '</div>';
    // if(site_name != "YouTube")
    // 	html += '<div class="title-link" onclick="click_on_url(event)">' + title + '</div>';
    // if(des != null)
    // 	html += '<div class="detail-link" onclick="click_on_url(event)">' + des + '</div>';
    // 	if(img != null && site_name == "YouTube"){
    // 		html += '<div class="youtube_container">';
    // 		html += '<img src="/images/youtube.jpg" onclick="make_it_youtube_object(event)" style="position: absolute; width: 60px; margin-left: 250px; margin-top: 150px;">';
    // 		html += '<img src="' + img + '" class="url_img" onclick="make_it_youtube_object(event)" style="max-height:315px; max-width:560px">';
    // 		html += '</div>';
    // 	}
    // else if(img != null)
    // 	html += '<img src="' + img + '" onload="msgimgload(event)" style="width:350px; height:350px" class="url_img" onclick="click_on_url(event)">';
    // html += '</div>';
    // return html;
    // $('.message-container .per-msg:last-child').find('.attachment').append(html);
    // $('.message-container .per-msg:last-child').find('.msg-text>a').text(title);

    // if(site_name != "YouTube"){
    var html = '<div class="msg_url_preview" style="">' +
        '<div class="ulr_img"><img src="' + img + '"></div>' +
        '<div class="url_properties">' +
        '<div class="url_title"><p>' + title + '</p><a href="' + url + '" target="_blank">' + url + '</a></div>' +
        '<div class="url_desc"><p>' + des + '</p></div>' +
        '</div>' +
        '</div>';
    return html;
    // }

};
var click_on_url = (event) => {
    var url = $(event.target).closest('.msgs-form-users').find('a').attr('href').attr('target', '_blank');
    window.open(url, '_blank');
};
// var loadnext8 = (ele, n) =>{
// 	var thismsg = $(ele).closest('.user-msg');
// 	thismsg.find(".showmore_"+n).remove();
// 	for(var i=n; i<=n+8; i++){
// 		thismsg.find('.perimgsl_'+i).show();
// 	}
// 	var m = n + 9;
// 	thismsg.find('.showmore_'+m).show();
// };
var loadnext8 = (ele, n) => {
    var thismsg = $(ele).closest('.user-msg');
    thismsg.find('.msg_per_img_div.hidden').removeClass('hidden');
    if (thismsg.find('.fil_attach.attach-file.lightbox')) {
        thismsg.find('.fil_attach.attach-file.lightbox').removeClass('hidden');
    }
    thismsg.find('.viewAllFiles ').hide();
    $(ele).parents('.msgs-form-users').addClass('collapsibleDiv');
};

$('body').on('mouseleave', '.msgs-form-users.collapsibleDiv[data-msg-type="media_imgfile"]', function(event) {
    var elm = $(this).find('.msg_per_img_div[data-img="true"]');
    $(this).removeClass('collapsibleDiv');
    $(this).find('.msg_per_img_div').addClass('hidden');
    var n = 1;
    $.each(elm, function(k, v) {
        if (n <= 5) {
            $(v).removeClass('hidden');
            n++;
        }
    });
    $(this).find('.msg_per_img_div.viewAllFiles').show();
});

$('body').on('mouseleave', '.msgs-form-users.collapsibleDiv[data-msg-type="media_otherfile"]', function(event) {
    var elm = $(this).find('.fil_attach.attach-file.lightbox');
    $(this).removeClass('collapsibleDiv');
    $(this).find('.fil_attach.attach-file.lightbox').addClass('hidden');
    var n = 1;
    $.each(elm, function(k, v) {
        if (n <= 5) {
            $(v).removeClass('hidden');
            n++;
        }
    });
    $(this).find('.msg_per_img_div.viewAllFiles').show();
});

$('body').on('click', '.notification_mute_time li', function(event) {
    if (!$('#setTimerModel').hasClass('active')) {
        $('#setTimerModel').addClass('active');
    }
});

var per_msg_img_attachment = (msg_attach_img, sender_name, sender_img, data_msg, totalattachLength) => {
    if (totalattachLength == undefined) {
        totalattachLength = 0;
    }
    var html = "";
    var strWindowFeatures = "menubar=no,location=no,resizable=yes,scrollbars=yes,status=no,width=600,height=400";
    var n = totalattachLength + 1;
    $.each(msg_attach_img, function(k, v) {
        var namespl = v.split('/');
        var fileName = namespl[namespl.length - 1];
        var extspl = fileName.split('.');
        var f_ext = extspl[extspl.length - 1];
        var org_namespl = fileName.split('@');
        var originalname = org_namespl[0] + '.' + f_ext;
        var is_hide = true;
        var id = "";
        var divkeyclass = "";
        var filesize = 0;
        var fileTag = [];
        var tagDesign = '';
        var file_tbl_id = '';
        var thumb = '';
        for (var i = 0; i < per_conv_all_files.length; i++) {
            // console.log(per_conv_all_files[i].id)
            // console.log(6877,(v == per_conv_all_files[i].bucket+'/'+per_conv_all_files[i].key && typeof(per_conv_all_files[i].id) != 'undefined' ));
            if (v == per_conv_all_files[i].bucket + '/' + per_conv_all_files[i].key && typeof(per_conv_all_files[i].id) != 'undefined') {
                // console.log(4961,per_conv_all_files[i])
                thumb = per_conv_all_files[i].bucket + '/thumb-' + per_conv_all_files[i].key;
                if (per_conv_all_files[i].voriginalName != undefined) {
                    originalname = per_conv_all_files[i].voriginalName;
                } else {

                    originalname = per_conv_all_files[i].originalname;
                }
                file_tbl_id = per_conv_all_files[i].id;
                if (per_conv_all_files[i].tag_list != null) {
                    fileTag = per_conv_all_files[i].tag_list;
                    // console.log(allUserTagList,per_conv_all_files[i].tag_list)
                    $.each(allUserTagList, function(k, v) {
                        if (v != undefined) {
                            if (per_conv_all_files[i].tag_list.indexOf(v.tag_id) > -1) {
                                tagDesign += '<div style="background-color:'+v.tag_color+'" class="tag_design tag_name_view_' + v.tag_id + '" ' + getTooltipForshareTag(v.tag_id) + '><span>' + v.title + '</span></div>'
                            }
                        }
                    })
                }
                id = per_conv_all_files[i].key;
                divkeyclass = per_conv_all_files[i].key.replace(/[^\w\s]/gi, '');

                is_hide = per_conv_all_files[i].is_delete == 1 ? true : false;
                filesize = per_conv_all_files[i].file_size == undefined ? per_conv_all_files[i].size : per_conv_all_files[i].file_size;
            }
        }
        var hidethis = n > 4 ? "hidden" : "";
        let msgImgSize = bytesToSize2(filesize);
        if (is_hide) {
            html += '<div class="deleted_class perimgsl_' + n + ' ' + hidethis + '" placeholder="Item already deleted" data-img="true" data-status="deleted">';
            // html += '<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;">'+ originalname +' has been deleted by Account Admin ('+ sender_name +')</p>';
            // html += '<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;">';
            // html += 	'<img class="img_attach" style="max-width:100%; max-height:200px" src="' + file_server + 'common/file-removed-message.png">';
            // html += '</p>';
        } else {
            // console.log(file_server + thumb);
            html += '<div class="msg_per_img_div progressImg perimgsl_' + n + ' ' + hidethis + ' ' + divkeyclass + '" data-img="true">';
            // html += 	'<img class="img_attach blazy" data-id="'+file_tbl_id+'" data-list="'+fileTag+'" style="max-width:250px; max-height:200px" src="" data-fileid="'+ id +'" data-src="' + file_server + v + '" data-originalname="'+ originalname +'" data-msg="" data-sender_name="' + sender_name + '" data-sender_img="' + sender_img + '" data-filesize="'+ bytesToSize2(filesize) +'" onclick="showImageSlider(event)" data-o="aa">';
            html += '<img class="img_attach _only_img blazy" data-id="' + file_tbl_id + '" data-list="' + fileTag + '" style="" src="' + file_server + thumb + '" onerror="javascript:this.src=\'images/nothumb.png\'" width="350px" data-fileid="' + id + '" data-src="' + file_server + v + '" data-originalname="' + originalname + '" data-msg="" data-sender_name="' + sender_name + '" data-sender_img="' + sender_img + '" data-filesize="' + msgImgSize + '" view_type="for_msg" onclick="showImageSlider(event,this, \'' + msgImgSize + '\')" data-o="aa">';

            // may be temp add
            html += '<div class="per_img_hover_opt">';
            html += '<p class="img_action view_ico" onclick="viewImgHov(this,\'message\')" data-balloon="Preview" data-balloon-pos="left"><img src="/images/basicAssets/view.svg" alt=""/></p>';
            // html += 		'<p class="img_action download_ico" data-balloon="Download" data-balloon-pos="left">';
            // html +=         	'<a download="'+ originalname +'" href="/alpha2/download/' + id +'" target="_blank" href="' + file_server + v + '">';
            // html +=             '<img src="/images/basicAssets/Download.svg" alt=""/>';
            // html +=             '</a>';
            // html +=         '</p>';
            html += '<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" data-href="' + file_server + v + '" file-name="' + originalname + '" data-balloon="Download" data-balloon-pos="left">';
            html += '		<img src="/images/basicAssets/Download.svg" alt=""/>';
            html += '</p>';
            html += '<p class="img_action tag_ico" data-balloon="Tag" data-balloon-pos="up"  onclick="viewOnlyFileTag(event,this,\'' + file_tbl_id + '\',true)"><img style="width:16px;" src="/images/basicAssets/custom_not_tag.svg" alt=""/></p>';
            html += '<p class="img_action forward_ico" data-balloon="forward" data-balloon-pos="up"  onclick="forwardOneFileFun(event,this)" data-id="' + file_tbl_id + '"><img style="width:16px;" src="/images/basicAssets/shareHayven_white.svg" alt=""/></p>';
            html += '<p class="img_action shareimg share_ico" data-balloon="Share" data-balloon-pos="up" onclick="viewShreImgPop(event,this)" data-value="' + file_server + v + '"><img src="/images/basicAssets/ShareIco.svg" alt=""/></p>';
            if (sender_name == user_fullname)
                html += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteItem(event, \'img\')" data-value="' + file_server + v + '"></p>';
            // html += 	'<p class="img_action" data-balloon="Delete" data-balloon-pos="up"  onclick="confirm_delete(this)"><img style="width:16px;" src="/images/basicAssets/delete-icon.svg" alt=""/></p>';
            html += '</div>';
            html += '<div class="name_span single_imgName" data-original="' + originalname + '" title="' + originalname + '" data-size="' + msgImgSize + '">' + originalname + ' (' + msgImgSize + ')</div>';
            // may be temp add end

            // html += '</div>';
            html += '<div class="meter" style="width:0%" data-value="0">'
            html += '<div class="tag_container" id="oneFileTag' + file_tbl_id + '">' + tagDesign + '</div>';
            html += '</div>';
        }
        html += '</div>';
        var modeval = hidethis == "" ? 4 : 5;
        // if(msg_attach_img.length > 4){
        // 		html += '<div data-length="'+msg_attach_img.length+'" class="msg_per_img_div viewAllFiles showmore_'+n+' '+hidethis+'" onclick="loadnext8(this, '+n+');" style="cursor:pointer">';
        // 		html +=		'<br>Show All ('+ (msg_attach_img.length) +')';
        // 		html += '</div>';
        //
        // }
        n++;
        countFiles('add', 'img');
    });
    return html;
}
var per_msg_img_attachment_without_inview = (msg_attach_img, sender_name, sender_img, data_msg, ) => {
    var html = "";
    var strWindowFeatures = "menubar=no,location=no,resizable=yes,scrollbars=yes,status=no,width=600,height=400";
    var n = 1;
    $.each(msg_attach_img, function(k, v) {
        var namespl = v.split('/');
        var fileName = namespl[namespl.length - 1];
        var extspl = fileName.split('.');
        var f_ext = extspl[extspl.length - 1];
        var org_namespl = fileName.split('@');
        var originalname = org_namespl[0] + '.' + f_ext;
        var is_hide = false;
        var id = "";
        var divkeyclass = "";
        var filesize = 0;
        var file_tbl_id = '';
        var fileTag = [];
        var tagDesign = '';
        var imgUrl = '';
        for (var i = 0; i < per_conv_all_files.length; i++) {
            // console.log(4818, v, per_conv_all_files[i].bucket+'/'+per_conv_all_files[i].key);
            if (fileName == per_conv_all_files[i].key && typeof(per_conv_all_files[i].id) !== 'undefined') {
                // console.log(typeof(per_conv_all_files[i].id),per_conv_all_files[i].key,fileName);
                if (per_conv_all_files[i].voriginalName != undefined) {
                    originalname = per_conv_all_files[i].voriginalName;
                } else {

                    originalname = per_conv_all_files[i].originalname;
                }
                id = per_conv_all_files[i].key;
                file_tbl_id = per_conv_all_files[i].id;
                filesize = per_conv_all_files[i].file_size == undefined ? per_conv_all_files[i].size : per_conv_all_files[i].file_size;
                divkeyclass = per_conv_all_files[i].key.replace(/[^\w\s]/gi, '');
                is_hide = per_conv_all_files[i].is_delete == 1 ? true : false;
                // console.log(f_ext)
                if (f_ext == 'svg') {
                    imgUrl = file_server + per_conv_all_files[i].bucket + '/' + 'thumb-' + per_conv_all_files[i].key
                } else {
                    imgUrl = file_server + per_conv_all_files[i].bucket + '/' + per_conv_all_files[i].key
                }
            }
        }
        let msgImgSize = bytesToSize2(filesize);

        var hidethis = n > 4 ? "hidden" : "";
        if (is_hide) {
            html += '<div class="deleted_class perimgsl_' + n + ' ' + hidethis + '" placeholder="Item already deleted" data-img="true" data-status="deleted">';
            // html += '<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;">'+ originalname +' has been deleted by Account Admin ('+ sender_name +')</p>';
            // html += '<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;">';
            // html += 	'<img class="img_attach" style="max-width:100%; max-height:200px" src="' + file_server + 'common/file-removed-message.png">';
            // html += '</p>';
        } else {
            html += '<div class="msg_per_img_div perimgsl_' + n + ' ' + hidethis + ' ' + divkeyclass + '" data-img="true">';
            // html += 	'<img class="img_attach blazy"  file_tbl_id="'+file_tbl_id+'" tag_list="'+fileTag+'" style="max-width:250px; max-height:200px" data-fileid="'+ id +'" src="' + file_server + v + '" data-originalname="'+ originalname +'" data-msg="'+data_msg+'" data-sender_name="' + sender_name + '" data-sender_img="' + sender_img + '" onclick="showImageSlider(event)">';
            html += '<img class="img_attach _only_img blazy"  data-id="' + file_tbl_id + '"  file_tbl_id="' + file_tbl_id + '" tag_list="' + fileTag + '" style="" data-fileid="' + id + '" src="' + imgUrl + '" data-originalname="' + originalname + '" data-msg="' + data_msg + '" data-sender_name="' + sender_name + '" data-sender_img="' + sender_img + '" data-filesize="' + msgImgSize + '" view_type="for_msg" onclick="showImageSlider(event,this, \'' + msgImgSize + '\')">';
            // html += 	'<div class="file-name"><span class="name_span file_title_'+file_tbl_id+'" data-original="'+originalname+'">'+originalname+'</span><span class="fileSize">'+ bytesToSize2(filesize) +'</span></div>';
            html += '<div class="per_img_hover_opt">';
            html += '<p class="img_action view_ico" onclick="viewImgHov(this,\'message\')" data-balloon="Preview" data-balloon-pos="left" data-originalname="' + originalname + '"></p>';
            // html += 		'<p class="img_action download_ico" data-balloon="Download" data-balloon-pos="left">';
            // html +=         	'<a download="'+ originalname +'" onclick="show_noti(event)" href="/alpha2/download/' + id +'" target="_blank" href="' + file_server + v + '">';
            // // html +=             '<img src="/images/basicAssets/Download.svg" alt=""/>';
            // html +=             '</a>';
            // html +=         '</p>';
            html += '<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" data-href="' + file_server + v + '" file-name="' + originalname + '" data-balloon="Download" data-balloon-pos="left">';
            html += '		<img src="/images/basicAssets/Download.svg" alt=""/>';
            html += '</p>';
            // html += 		'<p class="img_action tag_ico" data-balloon="Tag" data-balloon-pos="up"  onclick="viewTagForFiles(this)"><img style="width:16px;" src="/images/basicAssets/custom_not_tag.svg" alt=""/></p>';
            html += '<p class="img_action forward_ico" data-balloon="forward" data-balloon-pos="up"  onclick="forwardOneFileFun(event,this)" data-id="' + file_tbl_id + '"><img style="width:16px;" src="/images/basicAssets/shareHayven_white.svg" alt=""/></p>';
            html += '<p class="img_action shareimg share_ico" data-balloon="Share" data-balloon-pos="up" onclick="viewShreImgPop(event,this)" data-value="' + file_server + v + '"></p>';
            if (sender_name == user_fullname)
                html += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteItem(event, \'img\')" data-value="' + file_server + v + '"></p>';
            html += '</div>';
            html += '<div class="name_span single_imgName" data-original="' + originalname + '" title="' + originalname + '" data-size="' + msgImgSize + '">' + originalname + ' (' + msgImgSize + ')</div>';
            html += '<div class="meter" style="width:0%" data-value="0">'
            html += '</div>';
        }
        html += '</div>';
        var modeval = hidethis == "" ? 4 : 5;
        // if(msg_attach_img.length > 4){
        // 	html += '<div data-length="'+msg_attach_img.length+'" class="msg_per_img_div viewAllFiles showmore_'+n+' '+hidethis+'" onclick="loadnext8(this, '+n+');" style="cursor:pointer">';
        // 	html +=		'<br>Show All ('+ (msg_attach_img.length) +')';
        // 	html += '</div>';
        // }
        n++;
        countFiles('add', 'img');
    });
    return html;
}
var removeloader = (event) => {
    $(event.target).closest('.msg_per_img_div').find('.imgLoader').remove();
};
var msgimgload = (event) => {
    $(event.target).css({ "width": "unset", "height": "unset" });
};
var per_msg_video_attachment = (msg_attach_video, sender_name, totalattachLength) => {
    if (totalattachLength == undefined) {
        totalattachLength = 0
    }
    var n = totalattachLength + 1;
    var html = "";
    $.each(msg_attach_video, function(k, v) {
        var namespl = v.split('/')[v.split('/').length - 1];
        namespl = namespl.split('@');
        if (namespl.length > 2) {
            removeA(namespl, namespl[namespl.length - 1]);
        } else {
            namespl = namespl[0];
        }

        var classV = namespl + Date.now();
        classV = classV.replace(/[\s&\/\\@#,+()$~%.'":*?<>{}]/g, '');

        var file_type = v.split('.').pop().toLowerCase();

        var is_hide = true;
        var originalname = "";
        var divkeyclass = "";
        var filesize = 0;
        var id = "";
        var file_tbl_id = "";
        for (var i = 0; i < per_conv_all_files.length; i++) {
            if (v == per_conv_all_files[i].bucket + '/' + per_conv_all_files[i].key && per_conv_all_files[i].id != undefined) {
                if (per_conv_all_files[i].voriginalName != undefined) {
                    originalname = per_conv_all_files[i].voriginalName;
                } else {

                    originalname = per_conv_all_files[i].originalname;
                }
                id = per_conv_all_files[i].key;
                file_tbl_id = per_conv_all_files[i].id;
                originalname = per_conv_all_files[i].originalname;
                is_hide = per_conv_all_files[i].is_delete == 1 ? true : false;
                divkeyclass = per_conv_all_files[i].key.replace(/[^\w\s]/gi, '');
                filesize = per_conv_all_files[i].file_size == undefined ? per_conv_all_files[i].size : per_conv_all_files[i].file_size;
            }
        }
        if (is_hide) {
            html += '<div class="deleted_class" placeholder="Item already deleted" data-status="deleted">';
            // html += '<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;">'+ originalname +' has been deleted by Account Admin ('+ sender_name +')</p>';
            // html += '<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;">';
            // html += 	'<img class="img_attach" style="max-width:100%; max-height:200px" src="' + file_server + 'common/file-removed-message.png">';
            // html += '</p>';
            html += '</div>';
        } else {
            if (file_type.indexOf('avi') > -1 || file_type.indexOf('3gp') > -1 || file_type.indexOf('mpg') > -1 || file_type.indexOf('mkv') > -1 || file_type.indexOf('mov') > -1 || file_type.indexOf('wmv') > -1) {
                html += '<div class="' + divkeyclass + '">';
            } else {
                html += '<div class="video_container ' + divkeyclass + '">';
            }

            if (file_type.indexOf('avi') > -1 || file_type.indexOf('3gp') > -1 || file_type.indexOf('mpg') > -1 || file_type.indexOf('mkv') > -1 || file_type.indexOf('mov') > -1 || file_type.indexOf('wmv') > -1) {
                html += '<div class="fil_attach attach-file lightbox " data-sender_name="' + sender_name + '" data-filetype="video/' + file_type + '" data-src="' + file_server + v + '" data-file_name="' + v + '">';
                html += '<img onclick="triggerFile(this)" src="/images/basicAssets/' + file_type + '.svg">';
                html += '<div class="file-name" onclick="triggerView(this)">';
                html += '	<span class="name_span file_title_' + file_tbl_id + '" data-original="' + originalname + '">' + originalname + '</span>';
                html += '	<span class="fileSize">' + bytesToSize2(filesize) + '</span>';
                html += '</div>';
            } else {
                html += '<div class="lightbox " data-sender_name="' + sender_name + '" data-filetype="video/' + file_type + '" data-src="' + file_server + v + '" data-file_name="' + v + '">';
                html += '<div class="file-name" onclick="triggerView(this)">';
                html += '	<img style="position: absolute;left: 0;" onclick="triggerFile(this)" src="/images/basicAssets/' + file_type + '.svg">';
                html += '	<span class="name_span file_title_' + file_tbl_id + '" data-original="' + originalname + '">' + originalname + '</span>';
                html += '	<span class="fileSize">' + bytesToSize2(filesize) + '</span>';
                html += '</div>';

                html += '<video controls class="media-msg">';
                html += '	<source class="vdo_attach" src="' + file_server + v + '" type="video/' + file_type + '" data-file_name="' + v + '" data-sender_name="' + sender_name + '">';
                html += '	Your browser does not support HTML5 video.';
                html += '</video>';
            }


            html += '<div class="per_img_hover_opt">';
            html += '<p class="img_action view_ico" onclick="downloadFilePopup(event, this,\'frmMsg\')" data-href="' + file_server + v + '" file-name="' + originalname + '" data-balloon="Preview" data-balloon-pos="left">';
            html += '<a download target="_blank" class="download_link" href="' + file_server + v + '" style="display:none"></a>';
            html += '</p>';
            // if(file_type.indexOf('avi') > -1 || file_type.indexOf('mov') > -1 || file_type.indexOf('wmv') > -1){
            // 	html += 		'<p class="img_action download_ico" data-balloon="Download" data-balloon-pos="left">';
            // 	html += 		'	<a download="'+originalname +'" target="_blank" href="' + file_server + v + '" ></a>';
            // 	html += 		'</p>';
            // }else{
            html += '<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" data-href="' + file_server + v + '" file-name="' + originalname + '" data-balloon="Download" data-balloon-pos="left"></p>';
            // }

            // html += 		'<p class="img_action tag_ico" data-balloon="Tag" data-balloon-pos="up"  onclick="viewTagForFiles(this)"><img style="width:16px;" src="/images/basicAssets/custom_not_tag.svg" alt=""/></p>';
            html += '<p class="img_action forward_ico" data-balloon="forward" data-balloon-pos="up"  onclick="forwardOneFileFun(event,this)" data-id="' + file_tbl_id + '"><img style="width:16px;" src="/images/basicAssets/shareHayven_white.svg" alt=""/></p>';
            html += '<p class="img_action shareimg share_ico" data-balloon="Share" data-balloon-pos="up" onclick="viewShreImgPop(event,this)" data-value="' + file_server + v + '"></p>';
            if (sender_name == user_fullname)
                html += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteItem(event, \'video\')" data-value="' + file_server + v + '"></p>';
            html += '</div>';
            html += '</div>';
            html += '</div>';
            countFiles('add', 'video');
            var url2 = file_server + v;
            var data = {
                    url: url2,
                    cls: classV
                }
                // fileSizeStore.push(data);
        }
    });

    return html;
}
var per_msg_audio_attachment = (msg_attach_audio, sender_name, totalattachLength) => {
    if (totalattachLength == undefined) {
        totalattachLength = 0;
    }
    var n = totalattachLength + 1;
    var html = "";
    $.each(msg_attach_audio, function(k, v) {
        var hidethis = n > 4 ? "hidden" : "";
        var file_type = v.split('.').pop().toLowerCase();
        var is_hide = true;
        var originalname = "";
        var divkeyclass = "";
        for (var i = 0; i < per_conv_all_files.length; i++) {
            if (v == per_conv_all_files[i].bucket + '/' + per_conv_all_files[i].key) {
                if (per_conv_all_files[i].voriginalName != undefined) {
                    originalname = per_conv_all_files[i].voriginalName;
                } else {

                    originalname = per_conv_all_files[i].originalname;
                }
                originalname = per_conv_all_files[i].originalname;
                is_hide = per_conv_all_files[i].is_delete == 1 ? true : false;
                divkeyclass = per_conv_all_files[i].key.replace(/[^\w\s]/gi, '');
            }
        }
        if (is_hide) {
            html += '<div class="deleted_class ' + hidethis + '" placeholder="Item already deleted" data-status="deleted">';
            // html += '<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;">'+ originalname +' has been deleted by Account Admin ('+ sender_name +')</p>';
            // html += '<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;">';
            // html += 	'<img class="img_attach" style="max-width:100%; max-height:200px" src="' + file_server + 'common/file-removed-message.png">';
            // html += '</p>';
            html += '</div>';
        } else {
            if (file_type == 'm4a') {
                html += '<video controls class="media-msg ' + divkeyclass + ' ' + hidethis + '">';
                html += '<source class="vdo_attach" src="' + file_server + v + '" type="audio/mp4" data-file_name="' + v + '" data-sender_name="' + sender_name + '">';
                html += 'Your browser does not support HTML5 video.';
                html += '</video>';
                countFiles('add', 'audio');
            } else {
                html += '<audio controls class="media-msg ' + divkeyclass + ' ' + hidethis + '">';
                html += '<source class="ado_attach" src="' + file_server + v + '" type="audio/' + file_type + '" data-file_name="' + v + '" data-sender_name="' + sender_name + '">';
                html += 'Your browser does not support audio tag.';
                html += '</audio>';
                countFiles('add', 'audio');
            }
        }
    });
    return html;
}

var per_msg_file_attachment = (msg_attach_file, sender_name, totalattachLength) => {
    if (totalattachLength == undefined) {
        totalattachLength = 0;
    }
    var html = "";
    var n = totalattachLength + 1;
    $.each(msg_attach_file, function(k, v) {
        // var hidethis = n>4?"hidden":"";

        // console.log(k,v)
        var hidethis = "";
        var file_type = v.split('.').pop().toLowerCase();
        var is_img = false;
        var is_vdo = false;
        var url = file_server + v;
        switch (file_type) {
            case 'ai':
            case 'apk':
            case 'mp3':
            case 'ogg':
            case 'doc':
            case 'docx':
            case 'exe':
            case 'indd':
            case 'js':
            case 'sql':
            case 'pdf':
            case 'ppt':
            case 'pptx':
            case 'psd':
            case 'xls':
            case 'xlsx':
            case 'zip':
            case 'rar':
                ext = file_type;
                break;
            case '3gp':
            case 'avi':
            case 'flv':
            case 'm4v':
            case 'mov':
            case 'mpg':
            case 'mp4':
            case 'mkv':
            case 'wmv':
            case 'webm':
                ext = file_type;
                is_vdo = true;
                break;
            case 'jpg':
            case 'jpeg':
            case 'gif':
            case 'png':
            case 'svg':
                ext = file_type;
                is_img = true;
                break;
            default:
                ext = 'other';
        }
        var namespl = v.split('/');
        var fileName = namespl[namespl.length - 1];
        var extspl = fileName.split('.');
        var f_ext = extspl[extspl.length - 1];
        var org_namespl = fileName.split('@');
        var originalname = org_namespl[0] + '.' + f_ext;
        var classN = originalname + Date.now();
        classN2 = classN.replace(/[\s&\/\\@#,+()$~%.'":*?<>{}]/g, '');

        var is_hide = true;
        var id = "";
        var divkeyclass = "";
        var filesize = 0;
        var file_tbl_id = '';
        var fileTag = [];
        var tagDesign = '';
        var useLength = 0;
        var tooltipcount = 0;
        for (var i = 0; i < per_conv_all_files.length; i++) {
            // console.log(per_conv_all_files[i].id)
            if (v == per_conv_all_files[i].bucket + '/' + per_conv_all_files[i].key && typeof(per_conv_all_files[i].id) != 'undefined') {
                if (per_conv_all_files[i].voriginalName != undefined) {
                    originalname = per_conv_all_files[i].voriginalName;
                } else {

                    originalname = per_conv_all_files[i].originalname;
                }
                originalname = per_conv_all_files[i].originalname;
                id = per_conv_all_files[i].key;
                file_tbl_id = per_conv_all_files[i].id;
                if (file_tbl_id == '2b4edff0-8b52-11ea-847e-e404e26b6a55') {
                    // console.log(per_conv_all_files[i].tag_list);
                }
                if (per_conv_all_files[i].tag_list != null) {
                    fileTag = per_conv_all_files[i].tag_list;
                    tagDesign = gethtmlForFileTag(per_conv_all_files[i].id, per_conv_all_files[i].tag_list,per_conv_all_files[i]);
                    // $.each(allUserTagList,function(k,v){
                    // 	if(per_conv_all_files[i].tag_list.indexOf(v.tag_id) > -1){
                    // 		// if(useLength < 3){
                    // 			// tagDesign ='<div class="img_action tag_ico active" onclick="viewOnlyFileTag(event,this,\''+per_conv_all_files[i].key+'\')">('+(useLength + 1)+')</div>';

                    // 			useLength++;
                    // 		// }else{
                    // 		// 	tooltipcount ++;
                    // 		// }
                    // 	}
                    // })
                }
                is_hide = per_conv_all_files[i].is_delete == 1 ? true : false;
                divkeyclass = per_conv_all_files[i].key.replace(/[^\w\s]/gi, '');
                filesize = per_conv_all_files[i].file_size == undefined ? per_conv_all_files[i].size : per_conv_all_files[i].file_size;
            }
        }
        let msgImgSize = bytesToSize2(filesize);
        // if(useLength > 0){
        // 	// tagDesign += '<span class="moreTooltipBtn">+'+tooltipcount+' more</span>'
        // 	tagDesign += '<div class="tag_toolTip for_tag" data-pos="top">'
        // 	// html += 	'<span class="tooltip_close" onclick="tooltip_close()"></span>'
        // 	tagDesign += 	'<div class="tooltip_body">'
        // 	useLength = 0;
        // 	$.each(allUserTagList,function(k,v){
        // 		if(fileTag.indexOf(v.tag_id) > -1){
        // 			// if(useLength > 2){
        // 				tagDesign += '<li class="tag_name_view_'+v.tag_id+'">'+v.title+(v.tag_type == 'public' ? '(public)':'')+' </li>';
        // 			// }
        // 			useLength++;
        // 		}
        // 	});
        // 	tagDesign += 	'</div>'
        // 	tagDesign += '</div>'
        // }


        if (is_hide) {
            html += '<div class="deleted_class ' + hidethis + '" placeholder="Item already deleted" data-status="deleted">';
            html += '</div>';
        } else {
            if (is_img) {
                html += '<div view_type="for_msg" onclick="showImageSlider(event,this, \'' + msgImgSize + '\')" data-type="image" class="fil_attach attach-file lightbox ' + divkeyclass + ' perfiles_' + n + ' ' + hidethis + '" data-sender_name="' + sender_name + '" data-filetype="' + ext + '" data-src="' + file_server + v + '" data-file_name="' + v + '" data-originalname="' + originalname + '" data-filesize="' + msgImgSize + '">';
            } else {
                html += '<div onclick="' + (ext == 'mp3' || ext == 'ogg' ? 'playmusic(this, \'' + file_tbl_id + '\')' : '') + '" class="fil_attach attach-file lightbox ' + divkeyclass + ' perfiles_' + n + ' ' + hidethis + '" data-sender_name="' + sender_name + '" data-filetype="' + ext + '" data-src="' + file_server + v + '" data-file_name="' + v + '">';
            }
            if (is_img) {
                var thumb = v.replace('/Photos/', '/Photos/thumb-');
                if (ext == 'svg') {
                    html += '<img class="_only_img" data-sender_name="' + sender_name + '" view_type="for_msg" onclick="//showImageSlider(event,this, \'' + msgImgSize + '\')" data-filesize="' + msgImgSize + '" data-tag="' + fileTag + '" src="/images/basicAssets/' + ext + '.svg" onerror="javascript:this.src=\'images/nothumb.png\'" data-src="' + file_server + v + '" alt="' + originalname + '" data-originalname="' + originalname + '">';
                } else {
                    html += '<img class="_only_img" data-sender_name="' + sender_name + '" view_type="for_msg" onclick="//showImageSlider(event,this, \'' + msgImgSize + '\')" data-filesize="' + msgImgSize + '" data-tag="' + fileTag + '" src="' + file_server + thumb + '" onerror="javascript:this.src=\'images/nothumb.png\'" data-src="' + file_server + v + '" alt="' + originalname + '" data-originalname="' + originalname + '">';
                }
            } else {
                html += '<img onclick="' + (ext == 'mp3' || ext == 'ogg' ? 'playmusic(this, \'' + file_tbl_id + '\')' : 'triggerFile(this)') + '" src="/images/basicAssets/' + ext + '.svg" alt="' + v + '">';
            }

            if (ext == 'mp3' || ext == 'ogg') {
                html += '<div class="file-name" data-src="' + file_server + v + '"><div class="name_span file_title_' + file_tbl_id + '" data-original="' + originalname + '">' + originalname + '</div><div class="fileSize">' + bytesToSize2(filesize) + '</div></div>';
            } else if (is_vdo && (ext == 'mp4' || ext == 'webm')) {
                html += '<div class="file-name" view_type="for_msg" onclick="previewVdo(\'' + url + '\')" data-filesize="' + msgImgSize + '" data-src="' + file_server + v + '" data-originalname="' + originalname + '"><div class="name_span file_title_' + file_tbl_id + '" data-original="' + originalname + '">' + originalname + '</div><div class="fileSize">' + bytesToSize2(filesize) + '</div></div>';
            } else {
                html += '<div class="file-name" view_type="for_msg" onclick="' + (is_img ? '//showImageSlider(event,this, \'' + msgImgSize + '\')' : 'triggerView(this)') + '" data-filesize="' + msgImgSize + '" data-src="' + file_server + v + '" data-originalname="' + originalname + '"><div class="name_span file_title_' + file_tbl_id + '" data-original="' + originalname + '">' + originalname + '</div><div class="fileSize">' + bytesToSize2(filesize) + '</div></div>';
            }

            if (ext == 'mp3' || ext == 'ogg') {
                html += '<audio controls id="msgaudio_' + file_tbl_id + '" style="display:none">';
                html += '<source src="' + file_server + v + '" type="audio/' + ext + '"> Your browser does not support the audio element.';
                html += '</audio>';
            }
            html += '	<div class="file-time">' + moment().format('h:mm a') + '</div>';
            html += '	<div class="per_img_hover_opt" style="display: flex;">';

            html += '<p class="img_action tag_ico" data-balloon="Tag" data-balloon-pos="up"  onclick="viewOnlyFileTag(event,this,\'' + file_tbl_id + '\',true)"><img style="width:16px;" src="/images/basicAssets/custom_not_tag.svg" alt=""/></p>';
            if (ext == 'pdf') {
                html += '<p class="img_action view_ico" file-type="pdf" data-balloon="Preview" data-balloon-pos="left">';
                html += '<a download target="_blank" href="' + file_server + v + '">';
                // html += 				'<img src="/images/basicAssets/view.svg" alt=""/>';
                html += '</a>';
                html += '</p>';
            } else {
                html += '<p class="img_action view_ico" onclick="' + (is_img ? 'viewImgHov(this,\'message\')' : 'downloadFilePopup(event, this,\'frmMsg\')') + '" data-href="' + file_server + v + '" file-name="' + originalname + '" data-balloon="Preview" data-balloon-pos="left">';
                // html +=			'<img src="/images/basicAssets/view.svg" alt=""/>';
                html += '<a download target="_blank" class="download_link" href="' + file_server + v + '" style="display:none">';
                html += '</a>';
                html += '</p>';
            }
            // if( ext == 'pdf' || ext == 'mp3' || ext == 'zip'){
            if (ext == 'pdf' || ext == 'mp3' || is_img) {
                html += '<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" data-href="' + file_server + v + '" file-name="' + originalname + '" data-balloon="Download" data-balloon-pos="left">';
                html += '		<img src="/images/basicAssets/Download.svg" alt=""/>';
                html += '</p>';
            } else {
                // html += 		'<p class="img_action download_ico" onclick="tempdownloadAnyFile(event, this)" data-href="' + file_server + v + '" file-name="'+ originalname +'" data-balloon="Download" data-balloon-pos="left"></p>';
                html += '<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" data-href="' + file_server + v + '" file-name="' + originalname + '" data-balloon="Download" data-balloon-pos="left"></p>';
            }
            // html += 		'<p class="img_action tag_ico" data-balloon="Tag" data-balloon-pos="up"  onclick="viewTagForFiles(this)"><img style="width:16px;" src="/images/basicAssets/custom_not_tag.svg" alt=""/></p>';
            html += '<p class="img_action forward_ico" data-balloon="forward" data-balloon-pos="up"  onclick="forwardOneFileFun(event,this)" data-id="' + file_tbl_id + '"><img style="width:16px;" src="/images/basicAssets/shareHayven_white.svg" alt=""/></p>';
            html += '<p class="img_action shareimg share_ico" data-balloon="Share" data-balloon-pos="up" onclick="viewShreImgPop(event,this)" data-value="' + file_server + v + '"></p>';
            if (sender_name == user_fullname)
                html += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteItem(event, \'other\')" data-value="' + file_server + v + '"></p>';
            html += '</div>';
            html += '<div class="tag_container" id="oneFileTag' + file_tbl_id + '">' + tagDesign + '</div>';
            html += '</div>';
            html += '<div class="shareIcon share_ico"  data-balloon="Share" data-balloon-pos="up" onclick="viewShreImgPop(event,this)" data-value="' + file_server + v + '"></div>';
        }
        var modeval = hidethis == "" ? 4 : 5;
        // if(msg_attach_file.length > 4){
        // 	html += '<div class="msg_per_img_div viewAllFiles showmore_'+n+' '+hidethis+'" onclick="loadnext8(this, '+n+');" style="cursor:pointer">';
        // 	html +=		'<br>Show All ('+ (msg_attach_file.length) +')';
        // 	html += '</div>';
        // }
        n++;
        // html += '</a>';
        countFiles('add', 'file');
        var url2 = file_server + v;
        var data = {
                url: url2,
                cls: classN2
            }
            // fileSizeStore.push(data);
    });
    // if(totalattachLength == undefined){
    // 	totalattachLength = 0;
    // }
    // var html = "";
    // var n = totalattachLength +1;
    // $.each(msg_attach_file, function (k, v) {
    // 	var hidethis = n>4?"hidden":"";
    // 	var file_type = v.split('.').pop().toLowerCase();
    // 	switch (file_type) {
    // 		case 'ai':
    // 		case 'apk':
    // 		case 'mp3':
    // 		case 'doc':
    // 		case 'docx':
    // 		case 'exe':
    // 		case 'indd':
    // 		case 'js':
    // 		case 'sql':
    // 		case 'pdf':
    // 		case 'ppt':
    // 		case 'pptx':
    // 		case 'psd':
    // 		case 'svg':
    // 		case 'xls':
    // 		case 'xlsx':
    // 		case 'zip':
    // 		case 'rar':
    // 			ext = file_type;
    // 			break;
    // 		default:
    // 			ext = 'other';
    // 	}
    // 	var namespl = v.split('/');
    // 	var fileName = namespl[namespl.length - 1];
    // 	var extspl = fileName.split('.');
    // 	var f_ext = extspl[extspl.length - 1];
    // 	var org_namespl = fileName.split('@');
    // 	var originalname = org_namespl[0] + '.' + f_ext;
    // 	// var thisfilename = v.substring(0, v.lastIndexOf('@'));
    // 	// thisfilename = thisfilename.substring(thisfilename.lastIndexOf('/')+1);
    // 	var classN = originalname + Date.now();
    // 	classN2 = classN.replace(/[\s&\/\\@#,+()$~%.'":*?<>{}]/g, '');
    // 	// html += '<a href="' + file_server + v + '" target="_blank">';

    // 	var is_hide = true;
    // 	var id = "";
    // 	var divkeyclass = "";
    // 	var filesize = 0;
    // 	var file_tbl_id = '';
    // 	for(var i=0; i<per_conv_all_files.length; i++){
    // 		if(v == per_conv_all_files[i].bucket+'/'+per_conv_all_files[i].key){
    // 			if(per_conv_all_files[i].voriginalName != undefined){
    // 				originalname = per_conv_all_files[i].voriginalName;
    // 			}else{

    // 				originalname = per_conv_all_files[i].originalname;
    // 			}
    // 			originalname = per_conv_all_files[i].originalname;
    // 			id = per_conv_all_files[i].key;
    // 			file_tbl_id = per_conv_all_files[i].id;
    // 			is_hide = per_conv_all_files[i].is_delete == 1 ? true : false;
    // 			divkeyclass = per_conv_all_files[i].key.replace(/[^\w\s]/gi, '');
    // 			filesize = per_conv_all_files[i].file_size == undefined ? per_conv_all_files[i].size : per_conv_all_files[i].file_size;
    // 		}
    // 	}

    // 	if(is_hide){
    // 		html += '<div class="msg_per_img_div fil_attach attach-file lightbox '+hidethis+'">';
    // 		// html += '<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;">'+ originalname +' has been deleted by Account Admin ('+ sender_name +')</p>';
    // 		html += '<p style="font-size:16px; color:#F00; padding:30px;word-break: break-word;"></p>';
    // 		html += '</div>';
    // 	}else{
    // 		html += '<div class="fil_attach attach-file lightbox '+ divkeyclass +' perfiles_'+n+' '+hidethis+'" data-sender_name="'+sender_name+'" data-filetype="' + ext + '" data-src="' + file_server + v + '" data-file_name="' + v + '">';
    // 		html += '<img onclick="triggerFile(this)" src="/images/basicAssets/' + ext + '.svg" alt="' + v + '">';
    // 		html += '<div class="file-name"><span class="name_span file_title_'+file_tbl_id+'">' + originalname + '</span><span class="fileSize">'+ bytesToSize2(filesize) +'</span></div>';
    // 		html += '<div class="file-time">' + moment().format('h:mm a') + '</div>';
    // 		html  += '<div class="per_img_hover_opt" style="display: flex;">';
    // 		if (ext == 'pdf') {
    // 		html += 		'<p class="img_action view_ico" file-type="pdf" data-balloon="Preview" data-balloon-pos="up">';
    // 		html += 			'<a download target="_blank" href="' + file_server + v + '">';
    // 		// html += 				'<img src="/images/basicAssets/view.svg" alt=""/>';
    // 		html += 			'</a>';
    // 		html += 		'</p>';
    // 		}else{
    // 		html += 		'<p class="img_action view_ico" onclick="downloadFilePopup(this,\'frmMsg\')" data-href="' + file_server + v + '" file-name="'+originalname +'" data-balloon="Preview" data-balloon-pos="up">';
    // 		// html +=			'<img src="/images/basicAssets/view.svg" alt=""/>';
    // 		html += 			'<a download target="_blank" class="download_link" href="' + file_server + v + '" style="display:none">';
    // 		html += 			'</a>';
    // 		html += 		'</p>';
    // 		}
    // 		if( ext == 'pdf' || ext == 'mp3' || ext == 'zip'){
    // 		html += 		'<p class="img_action download_ico" file-name="'+originalname +'" data-balloon="Download" data-balloon-pos="up">';
    // 		html += 		'	<a target="_blank" onclick="show_noti(event)" href="/alpha2/download/' +id +'" >';
    // 		html += 		'		<img src="/images/basicAssets/Download.svg" alt=""/>';
    // 		html += 		'	</a>';
    // 		html += 		'</p>';
    // 		}else{
    // 		html += 		'<p class="img_action download_ico" data-balloon="Download" data-balloon-pos="up">';
    // 		html += 		'	<a download="'+originalname +'" target="_blank" href="' + file_server + v + '" style="">';
    // 		html += 		'		<img src="/images/basicAssets/Download.svg" alt=""/>';
    // 		html += 		'	</a>';
    // 		html += 		'</p>';
    // 		}
    // 		html += 		'<p class="img_action tag_ico" data-balloon="Tag" data-balloon-pos="up"  onclick="viewTagForFiles(this)"><img style="width:16px;" src="/images/basicAssets/custom_not_tag.svg" alt=""/></p>';
    // 		html += 		'<p class="img_action shareimg share_ico" data-balloon="Share" data-balloon-pos="up" onclick="viewShreImgPop(event,this)" data-value="' + file_server + v + '"></p>';
    // 		html += 	'</div>';

    // 		html += '</div>';
    // 		html += '<div class="shareIcon share_ico"  data-balloon="Share" data-balloon-pos="up" onclick="viewShreImgPop(event,this)" data-value="'+ file_server + v + '"></div>';
    // 	}
    // 	var modeval = hidethis==""?4:5;
    // 	// if(msg_attach_file.length > 4){
    // 	// 	html += '<div class="msg_per_img_div viewAllFiles showmore_'+n+' '+hidethis+'" onclick="loadnext8(this, '+n+');" style="cursor:pointer">';
    // 	// 	html +=		'<br>Show All ('+ (msg_attach_file.length) +')';
    // 	// 	html += '</div>';
    // 	// }
    // 	n++;
    // 	// html += '</a>';
    // 	countFiles('add','file');
    // 	var url2 = file_server + v;
    // 	var data ={
    // 		url: url2,
    // 		cls: classN2
    // 	}
    // 	// fileSizeStore.push(data);
    // });
    return html;
};

function previewVdo(url) {
    window.open(url, "_blank");
}
var per_msg_rep_btn = (conv_id, count, rep_time, rep_name, msg_type) => {
    var html = "";
    html += '<div class="msgReply readunreadreply" data-count="' + count + '" data-unread_reply="0">';
    html += '<div class="countReply">';

    if (msg_type == "call") {
        html += '<img src="/images/basicAssets/custom_thread_for_reply.svg" click-type="reaply" conv-id="' + conv_id + '" onclick="threadReply(event)">';
        html += '<img src="/images/basicAssets/custom_thread_for_reply_red.svg" class="redsvg" click-type="reaply" conv-id="' + conv_id + '" onclick="threadReply(event)">';
        html += '<p click-type="reaply" conv-id="' + conv_id + '" onclick="threadReply(event)">In-call chat history (<span class="no-of-replies" >' + count + '</span>) </p>';
    } else {
        html += '<img src="/images/basicAssets/custom_thread_for_reply.svg" click-type="reaply" conv-id="' + conv_id + '" onclick="threadReply(event)">';
        html += '<img src="/images/basicAssets/custom_thread_for_reply_red.svg" class="redsvg" click-type="reaply" conv-id="' + conv_id + '" onclick="threadReply(event)">';
        html += '<p click-type="reaply" conv-id="' + conv_id + '" class="view_threaded_chat_str" onclick="threadReply(event)">View threaded chat (<span class="no-of-replies" >' + count + '</span>) </p>';
    }

    html += '<img class="replyarrow" src="/images/basicAssets/custom_rightChevron_for_reply.svg" click-type="reaply" onclick="threadReply(event)">';
    html += '<img class="replyarrow redsvg" src="/images/basicAssets/custom_rightChevron_for_reply_red.svg" click-type="reaply" onclick="threadReply(event)">';
    html += '<span class="last_rep_text"> Last reply ' + moment(rep_time).fromNow() + ' from ' + rep_name + '</span>';
    html += '</div>';
    // if (has_rep_attachment != null) {
    // 	if (has_rep_attachment > 1) {
    // 		html += '<span class="count_rep_attch_">'+has_rep_attachment+' attachment(s)</span>';
    // 	}else{
    // 		html += '<span class="count_rep_attch_">'+has_rep_attachment+' attachment</span>';
    // 	}
    // }else{
    // 	html += '<span class="count_rep_attch_"></span>';
    // }
    html += '</div>';
    return html;
}
var make_it_youtube_object = (event) => {
    var url = $(event.target).closest('.msgs-form-users').find('a').attr('href');
    url = url.replace("watch?v=", "embed/");
    var html = '<iframe width="560" height="315" src="' + url + '?autoplay=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>';
    $(event.target).closest('.msgs-form-users').find('.youtube_container').html(html);
};
// Delete message
function delete_this_msg(event, all_active) {
    var msgid = $(event.target).closest('.msgs-form-users').attr('data-msgid');
    var msg_type = $('#msgThread_' + msgid).attr('data-msg-type');
    $('.msg-more-popup').hide();
    $('#delete_msg_div').css('display', 'flex');
    $('#delete_msg_div').find('.delete_msg_sec_title').html('Are you sure you want to delete this message? This cannot be <span class="undone">undone</span>.');
    $('#delete_msg_div').attr('msg-id', msgid);
    $('#delete_msg_div').attr('delete_type', 'msg');
    $('#delete_msg_div').attr('all_active', all_active);
    if (all_active) {
        $('#deleteForAll').show();
    } else {
        $('#deleteForMe').text('Delete for me');
        $('#deleteForAll').hide();
    }
    if (msg_type == 'checklist') {
        $('#deleteForMe').hide();
    } else {
        $('#deleteForMe').show();
    }
    if (conversation_id == user_id) {
        $('#deleteForMe').show();
        $('#deleteForAll').hide();
        $('#deleteForMe').text('Delete for me');
        all_active = false;
    } else {
        $('#deleteForMe').text('Delete for me');
    }
}

function delete_commit(e) {
    var msgid = $(e).attr('data-id');
    var is_seen = $('.msg_id_del_status_' + msgid).attr('data-val');
    var remove_both_side = $(e).hasClass('btn-msg-del-all');

    $.ajax({
        url: '/alpha2/commit_msg_delete',
        type: 'POST',
        data: { uid: user_id, conversation_id: conversation_id, msgid: msgid, is_seen: is_seen, remove: remove_both_side },
        dataType: 'JSON',
        success: function(res) {
            if (res.status) {
                alldeletemsgid.push(msgid);
                countAndGetchecklist();
                if (remove_both_side) {
                    socket.emit("one_user_deleted_this", { msgid: msgid, conversation_id: conversation_id });
                    update_local_conv_msg_delete(has_conv_into_local(conversation_id), msgid);
                }
                // add_conv_into_local('html', $("#msg-container").html().toString(), user_id+conversation_id);
                var h4data = $('.msg_id_' + msgid).find('.user-msg>h4').html();
                var delhtml = '<p> <i><img src="/images/delete_msg.png" class="deleteicon"> You deleted this message.</i><span onclick="permanent_delete_silently(\'' + msgid + '\')" class="silent_delete"> (Remove this line)</span></p>';
                $('.msg_id_' + msgid).find('.user-msg').html('<h4>' + h4data + '</h4>' + delhtml);
                $('.msg_id_' + msgid).find('.msg-more-popup>p').last().attr('onclick', 'delete_permanently(event)');
                closeAllPopUp();
                $('.msg_id_' + msgid).find('.createNTFC').remove();
            }
        },
        error: function(err) {
            console.log(err.responseText);
        }
    });
}

var delete_permanently = (event) => {
    var msgid = $(event.target).closest('.msgs-form-users').attr('data-msgid');
    $('.msg-more-popup').hide();
    $('#delete_msg_div').css('display', 'flex');
    $('.main-deleted-msg').html($('.msg_id_' + msgid).find('.msg-user-photo')[0].outerHTML);
    $('.main-deleted-msg').append('<div class="delbody">' + $('.msg_id_' + msgid).find('.user-msg').html() + '</div>');
    $('#delete_msg_div').find('.btn-msg-del').hide();
    $('#delete_msg_div').find('.delete_msg_sec_title').html('Are you sure you want to delete this message permanently? This cannot be <span class="undone">undone.</span>');
    $('#delete_msg_div').find('.permanent_delete').attr('data-id', msgid);
    $('#delete_msg_div').find('.permanent_delete').show();
};
var permanent_delete_silently = (msgid) => {
    // $.ajax({
    // 	url: '/alpha2/commit_msg_delete',
    // 	type: 'POST',
    // 	data: { uid: user_id, conversation_id: conversation_id, msgid: msgid, is_seen: 'permanent_delete', remove: true },
    // 	dataType: 'JSON',
    // 	success: function (res) {
    // 		console.log(res);
    // 		if (res.status) {
    // 			// if(remove_both_side){
    // 			//     socket.emit("one_user_deleted_this", {msgid: msgid});
    // 			// }
    // 			if(res.attch_list.length>0){
    // 				$.ajax({
    // 					url: '/s3Local/deleteObjects',
    // 					type: 'POST',
    // 					data: {bucket_name: bucket_name, attch_list: JSON.stringify(res.attch_list)},
    // 					dataType: 'JSON',
    // 					success: function(resfile){
    // 						console.log(resfile);
    // 					},
    // 					error: function(error){
    // 						console.log(error);
    // 					}
    // 				});
    // 			}
    // 			socket.emit('removethisline', { conversation_id, msgid, user_id });
    // 			// add_conv_into_local('html', $("#msg-container").html().toString(), user_id+conversation_id);
    // 			closeAllPopUp();
    // 		} else {
    // 			$('.msg_id_' + msgid).remove();
    // 			$('.msg_id_' + msgid).find('.createNTFC').remove();
    // 		}
    // 	},
    // 	error: function (err) {
    // 		console.log(err.responseText);
    // 	}
    // });
    if ($('#threadReplyPopUp').is(':visible')) {
        socket.emit('updateHasHideThismsg', { msg_id: msgid, conversation_id: thread_id, user_id: user_id }, function(res) {
            if (res.status) {
                $('.rep_msg_' + msgid).remove();
            }
        });
    } else {
        socket.emit('updateHasHideThismsg', { msg_id: msgid, conversation_id: conversation_id, user_id: user_id }, function(res) {
            if (res.status) {
                $('.msg_id_' + msgid).remove();
            }
        });
    }
};

socket.on('removedline', function(data) {
    if ($('.msg_id_' + data.msg_id).prev().hasClass('msg-separetor') &&
        ($('.msg_id_' + data.msg_id).next().hasClass('msg-separetor') || $('.msg_id_' + data.msg_id).next().length == 0)) {
        $('.msg_id_' + data.msg_id).prev().remove();

        $('.msg_id_' + data.msg_id).remove();
        $('.msg_id_' + data.msg_id).find('.createNTFC').remove();
    } else {
        $('.msg_id_' + data.msg_id).remove();
        $('.msg_id_' + data.msg_id).find('.createNTFC').remove();
    }
    // delete_local_conv_msg_delete(has_conv_into_local(data.conversation_id), data.msg_id);
    // if(data.conversation_id == conversation_id)
    // 	// add_conv_into_local('html', $("#msg-container").html().toString(), user_id+data.conversation_id);
    // else
    // 	remove_conv_from_local(user_id+data.conversation_id);
});
var permanent_delete = (e) => {
    var msgid = $(e).attr('data-id');
    permanent_delete_silently(msgid);
};

socket.on("delete_from_all", function(data) {
    var h4data = $('.msg_id_' + data.msgid).find('.user-msg>h4').html();
    var delhtml = '<p> <i><img src="/images/delete_msg.png" class="deleteicon"> This message was deleted.</i><span onclick="permanent_delete_silently(\'' + data.msgid + '\')" class="silent_delete"> (Remove this line)</span></p>';
    $('.msg_id_' + data.msgid).find('.user-msg').html('<h4>' + h4data + '</h4>' + delhtml);
    $('.msg_id_' + data.msgid).find('.createNTFC').remove();
    update_local_conv_msg_delete(has_conv_into_local(data.conversation_id), data.msgid);
    alldeletemsgid.push(data.msgid);
    countAndGetchecklist();
    // if(data.conversation_id == conversation_id)
    // 	add_conv_into_local('html', $("#msg-container").html().toString(), user_id+data.conversation_id);
    // else
    // 	remove_conv_from_local(user_id+data.conversation_id);
});
// end of delete message
/* Start emoji sending */
var emoCount = 0;
var emoCustom = ['🙏', '😍', '😘', '🥰', '👏', '🤝', '👍', '👎', '✌️', '🤟', '🤘', '👌', '✋', '🤚', '🤙', '✅', '⚠️'];
var emojiArray = ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊', '😋', '😎', '😍', '😘', '🥰', '😗', '😙', '😚', '🙂', '🤗', '🤩', '🤔', '🤨', '😐', '😑', '😶', '🙄', '😏', '😣', '😥', '😮', '🤐', '😯', '😪', '😫', '😴', '😌', '😛', '😜', '😝', '🤤', '😒', '😓', '😔', '😕', '🙃', '🤑', '😲', '🙁', '😖', '😞', '😟', '😤', '😢', '😭', '😦', '😧', '😨', '😩', '🤯', '😬', '😰', '😱', '🥵', '🥶', '😳', '🤪', '😵', '😡', '😠', '🤬', '😷', '🤒', '🤕', '🤢', '🤮', '🤧', '😇', '🤠', '🤡', '🥳', '🥴', '🥺', '🤥', '🤫', '🤭', '🧐', '🤓', '😈', '👿', '👹', '👺', '💀', '👻', '👽', '🤖', '💩', '😺', '😸', '😹', '😻', '😼', '😽', '🙀', '😿', '😾'];
var peopleFantasy = ['👶', '👧', '🧒', '👦', '👩', '🧑', '👨', '👵', '🧓', '👴', '👲', '👳‍♀️', '👳‍♂️', '🧕', '🧔', '👱‍♂️', '👱‍♀️', '👨‍🦰', '👩‍🦰', '👨‍🦱', '👩‍🦱', '👨‍🦲', '👩‍🦲', '👨‍🦳', '👩‍🦳', '🦸‍♀️', '🦸‍♂️', '🦹‍♀️', '🦹‍♂️', '👮‍♀️', '👮‍♂️', '👷‍♀️', '👷‍♂️', '💂‍♀️', '💂‍♂️', '🕵️‍♀️', '🕵️‍♂️', '👩‍⚕️', '👨‍⚕️', '👩‍🌾', '👨‍🌾', '👩‍🍳', '👨‍🍳', '👩‍🎓', '👨‍🎓', '👩‍🎤', '👨‍🎤', '👩‍🏫', '👨‍🏫', '👩‍🏭', '👨‍🏭', '👩‍💻', '👨‍💻', '👩‍💼', '👨‍💼', '👩‍🔧', '👨‍🔧', '👩‍🔬', '👨‍🔬', '👩‍🎨', '👨‍🎨', '👩‍🚒', '👨‍🚒', '👩‍✈️', '👨‍✈️', '👩‍🚀', '👨‍🚀', '👩‍⚖️', '👨‍⚖️', '👰', '🤵', '👸', '🤴', '🤶', '🎅', '🧙‍♀️', '🧙‍♂️', '🧝‍♀️', '🧝‍♂️', '🧛‍♀️', '🧛‍♂️', '🧟‍♀️', '🧟‍♂️', '🧞‍♀️', '🧞‍♂️', '🧜‍♀️', '🧜‍♂️', '🧚‍♀️', '🧚‍♂️', '👼', '🤰', '🤱', '🙇‍♀️', '🙇‍♂️', '💁‍♀️', '💁‍♂️', '🙅‍♀️', '🙅‍♂️', '🙆‍♀️', '🙆‍♂️', '🙋‍♀️', '🙋‍♂️', '🤦‍♀️', '🤦‍♂️', '🤷‍♀️', '🤷‍♂️', '🙎‍♀️', '🙎‍♂️', '🙍‍♀️', '🙍‍♂️', '💇‍♀️', '💇‍♂️', '💆‍♀️', '💆‍♂️', '🧖‍♀️', '🧖‍♂️', '💅', '🤳', '💃', '🕺', '👯‍♀️', '👯‍♂️', '🕴', '🚶‍♀️', '🚶‍♂️', '🏃‍♀️', '🏃‍♂️', '👫', '👭', '👬', '💑', '👩‍❤️‍👩', '👨‍❤️‍👨', '💏', '👩‍❤️‍💋‍👩', '👨‍❤️‍💋‍👨', '👪', '👨‍👩‍👧', '👨‍👩‍👧‍👦', '👨‍👩‍👦‍👦', '👨‍👩‍👧‍👧', '👩‍👩‍👦', '👩‍👩‍👧', '👩‍👩‍👧‍👦', '👩‍👩‍👦‍👦', '👩‍👩‍👧‍👧', '👨‍👨‍👦', '👨‍👨‍👧', '👨‍👨‍👧‍👦', '👨‍👨‍👦‍👦', '👨‍👨‍👧‍👧', '👩‍👦', '👩‍👧', '👩‍👧‍👦', '👩‍👦‍👦', '👩‍👧‍👧', '👨‍👦', '👨‍👧', '👨‍👧‍👦', '👨‍👦‍👦', '👨‍👧‍👧', '🤲', '👐', '🙌', '👏', '🤝', '👍', '👎', '👊', '✊', '🤛', '🤜', '🤞', '✌️', '🤟', '🤘', '👌', '👈', '👉', '👆', '👇', '☝️', '✋', '🤚', '🖐', '🖖', '👋', '🤙', '💪', '🦵', '🦶', '🖕', '✍️', '🙏', '✅', '⚠️', '💍', '💄', '💋', '👄', '👅', '👂', '👃', '👣', '👁', '👀', '🧠', '🦴', '🦷', '🗣', '👤', '👥'];

var clothingAccessories = ['🧥', '👚', '👕', '👖', '👔', '👗', '👙', '👘', '👠', '👡', '👢', '👞', '👟', '🥾', '🥿', '🧦', '🧤', '🧣', '🎩', '🧢', '👒', '🎓', '⛑', '👑', '👝', '👛', '👜', '💼', '🎒', '👓', '🕶', '🥽', '🥼', '🌂', '🧵', '🧶'];

var paleEmojis = ['👶🏻', '👦🏻', '👧🏻', '👨🏻', '👩🏻', '👱🏻‍♀️', '👱🏻', '👴🏻', '👵🏻', '👲🏻', '👳🏻‍♀️', '👳🏻', '👮🏻‍♀️', '👮🏻', '👷🏻‍♀️', '👷🏻', '💂🏻‍♀️', '💂🏻', '🕵🏻‍♀️', '🕵🏻', '👩🏻‍⚕️', '👨🏻‍⚕️', '👩🏻‍🌾', '👨🏻‍🌾', '👩🏻‍🍳', '👨🏻‍🍳', '👩🏻‍🎓', '👨🏻‍🎓', '👩🏻‍🎤', '👨🏻‍🎤', '👩🏻‍🏫', '👨🏻‍🏫', '👩🏻‍🏭', '👨🏻‍🏭', '👩🏻‍💻', '👨🏻‍💻', '👩🏻‍💼', '👨🏻‍💼', '👩🏻‍🔧', '👨🏻‍🔧', '👩🏻‍🔬', '👨🏻‍🔬', '👩🏻‍🎨', '👨🏻‍🎨', '👩🏻‍🚒', '👨🏻‍🚒', '👩🏻‍✈️', '👨🏻‍✈️', '👩🏻‍🚀', '👨🏻‍🚀', '👩🏻‍⚖️', '👨🏻‍⚖️', '🤶🏻', '🎅🏻', '👸🏻', '🤴🏻', '👰🏻', '🤵🏻', '👼🏻', '🤰🏻', '🙇🏻‍♀️', '🙇🏻', '💁🏻', '💁🏻‍♂️', '🙅🏻', '🙅🏻‍♂️', '🙆🏻', '🙆🏻‍♂️', '🙋🏻', '🙋🏻‍♂️', '🤦🏻‍♀️', '🤦🏻‍♂️', '🤷🏻‍♀️', '🤷🏻‍♂️', '🙎🏻', '🙎🏻‍♂️', '🙍🏻', '🙍🏻‍♂️', '💇🏻', '💇🏻‍♂️', '💆🏻', '💆🏻‍♂️', '🕴🏻', '💃🏻', '🕺🏻', '🚶🏻‍♀️', '🚶🏻', '🏃🏻‍♀️', '🏃🏻', '🤲🏻', '👐🏻', '🙌🏻', '👏🏻', '🙏🏻', '👍🏻', '👎🏻', '👊🏻', '✊🏻', '🤛🏻', '🤜🏻', '🤞🏻', '✌🏻', '🤟🏻', '🤘🏻', '👌🏻', '👈🏻', '👉🏻', '👆🏻', '👇🏻', '☝🏻', '✋🏻', '🤚🏻', '🖐🏻', '🖖🏻', '👋🏻', '🤙🏻', '💪🏻', '🖕🏻', '✍🏻', '🤳🏻', '💅🏻', '👂🏻', '👃🏻'];

var creamWhiteEmojis = ['👶🏼', '👦🏼', '👧🏼', '👨🏼', '👩🏼', '👱🏼‍♀️', '👱🏼', '👴🏼', '👵🏼', '👲🏼', '👳🏼‍♀️', '👳🏼', '👮🏼‍♀️', '👮🏼', '👷🏼‍♀️', '👷🏼', '💂🏼‍♀️', '💂🏼', '🕵🏼‍♀️', '🕵🏼', '👩🏼‍⚕️', '👨🏼‍⚕️', '👩🏼‍🌾', '👨🏼‍🌾', '👩🏼‍🍳', '👨🏼‍🍳', '👩🏼‍🎓', '👨🏼‍🎓', '👩🏼‍🎤', '👨🏼‍🎤', '👩🏼‍🏫', '👨🏼‍🏫', '👩🏼‍🏭', '👨🏼‍🏭', '👩🏼‍💻', '👨🏼‍💻', '👩🏼‍💼', '👨🏼‍💼', '👩🏼‍🔧', '👨🏼‍🔧', '👩🏼‍🔬', '👨🏼‍🔬', '👩🏼‍🎨', '👨🏼‍🎨', '👩🏼‍🚒', '👨🏼‍🚒', '👩🏼‍✈️', '👨🏼‍✈️', '👩🏼‍🚀', '👨🏼‍🚀', '👩🏼‍⚖️', '👨🏼‍⚖️', '🤶🏼', '🎅🏼', '👸🏼', '🤴🏼', '👰🏼', '🤵🏼', '👼🏼', '🤰🏼', '🙇🏼‍♀️', '🙇🏼', '💁🏼', '💁🏼‍♂️', '🙅🏼', '🙅🏼‍♂️', '🙆🏼', '🙆🏼‍♂️', '🙋🏼', '🙋🏼‍♂️', '🤦🏼‍♀️', '🤦🏼‍♂️', '🤷🏼‍♀️', '🤷🏼‍♂️', '🙎🏼', '🙎🏼‍♂️', '🙍🏼', '🙍🏼‍♂️', '💇🏼', '💇🏼‍♂️', '💆🏼', '💆🏼‍♂️', '🕴🏼', '💃🏼', '🕺🏼', '🚶🏼‍♀️', '🚶🏼', '🏃🏼‍♀️', '🏃🏼', '🤲🏼', '👐🏼', '🙌🏼', '👏🏼', '🙏🏼', '👍🏼', '👎🏼', '👊🏼', '✊🏼', '🤛🏼', '🤜🏼', '🤞🏼', '✌🏼', '🤟🏼', '🤘🏼', '👌🏼', '👈🏼', '👉🏼', '👆🏼', '👇🏼', '☝🏼', '✋🏼', '🤚🏼', '🖐🏼', '🖖🏼', '👋🏼', '🤙🏼', '💪🏼', '🖕🏼', '✍🏼', '🤳🏼', '💅🏼', '👂🏼', '👃🏼'];

var moderateBrownEmojis = ['👶🏽', '👦🏽', '👧🏽', '👨🏽', '👩🏽', '👱🏽‍♀️', '👱🏽', '👴🏽', '👵🏽', '👲🏽', '👳🏽‍♀️', '👳🏽', '👮🏽‍♀️', '👮🏽', '👷🏽‍♀️', '👷🏽', '💂🏽‍♀️', '💂🏽', '🕵🏽‍♀️', '🕵🏽', '👩🏽‍⚕️', '👨🏽‍⚕️', '👩🏽‍🌾', '👨🏽‍🌾', '👩🏽‍🍳', '👨🏽‍🍳', '👩🏽‍🎓', '👨🏽‍🎓', '👩🏽‍🎤', '👨🏽‍🎤', '👩🏽‍🏫', '👨🏽‍🏫', '👩🏽‍🏭', '👨🏽‍🏭', '👩🏽‍💻', '👨🏽‍💻', '👩🏽‍💼', '👨🏽‍💼', '👩🏽‍🔧', '👨🏽‍🔧', '👩🏽‍🔬', '👨🏽‍🔬', '👩🏽‍🎨', '👨🏽‍🎨', '👩🏽‍🚒', '👨🏽‍🚒', '👩🏽‍✈️', '👨🏽‍✈️', '👩🏽‍🚀', '👨🏽‍🚀', '👩🏽‍⚖️', '👨🏽‍⚖️', '🤶🏽', '🎅🏽', '👸🏽', '🤴🏽', '👰🏽', '🤵🏽', '👼🏽', '🤰🏽', '🙇🏽‍���️', '🙇🏽', '💁🏽', '💁🏽‍♂️', '🙅🏽', '🙅🏽‍♂️', '🙆🏽', '🙆🏽‍♂️', '🙋🏽', '🙋🏽‍♂️', '🤦🏽‍♀️', '🤦🏽‍♂️', '🤷🏽‍♀️', '🤷🏽‍♂️', '🙎🏽', '🙎🏽‍♂️', '🙍🏽', '🙍🏽‍♂️', '💇🏽', '💇🏽‍♂️', '💆🏽', '💆🏽‍♂️', '🕴🏼', '💃🏽', '🕺🏽', '🚶🏽‍♀️', '🚶🏽', '🏃🏽‍♀️', '🏃🏽', '🤲🏽', '👐🏽', '🙌🏽', '👏🏽', '🙏🏽', '👍🏽', '👎🏽', '👊🏽', '✊🏽', '🤛🏽', '🤜🏽', '🤞🏽', '✌🏽', '🤟🏽', '🤘🏽', '👌🏽', '👈🏽', '👉🏽', '👆🏽', '👇🏽', '☝🏽', '✋🏽', '🤚🏽', '🖐🏽', '🖖🏽', '👋🏽', '🤙🏽', '💪🏽', '🖕🏽', '✍🏽', '🤳🏽', '💅🏽', '👂🏽', '👃🏽'];

var emoji_div_draw = () => {
    if (getCookie('recentEmo') != "") {
        var drawRecent = JSON.parse(getCookie('recentEmo'));
    } else {
        var drawRecent = 0;
    }

    var emojiNumber;
    emoCount = 0;
    var design = '<div class="emoji_div">';
    design += '<div class="remove" onclick="hide_Emoji_Div()"></div>';

    // design += '<div class="lodingDiv"><img src = "/images/typing-indicator.gif" ></div>';
    if (drawRecent.length > 0) {
        design += '<div class="emoji-container-name recentEmo">Recent reaction</div>';
        design += '<div class="emoji-container overlayScrollbars recentEmo" style="height: auto;">';
        var commonEmoji = [];
        $.each(drawRecent, function(k, v) {
            if (commonEmoji.indexOf(v) == -1) {
                if (commonEmoji.length < 6) {
                    commonEmoji.push(v);
                }
            }
        });
        $.each(commonEmoji, function(k, v) {
            design += '<span>' + v + '</span>';
        });
        design += '</div>';
    }
    design += '<div class="emoji-container-name">Pick your reaction</div>';
    design += '<div class="emoji-container overlayScrollbars pickingReactDiv">';
    // for (emojiNumber = 1; emojiNumber < 65; emojiNumber++) {
    // 	design += '<img src="'+ file_server +'emoji/hv' + emojiNumber + '.svg">';
    // 	emoCount++;
    // }
    // design += '<p class="emojiHeading">Custom</p>'
    for (var i = 0; i < emoCustom.length;) {
        design += '<span>' + emoCustom[i] + '</span>';
        i++;
    }

    design += '<p class="emojiHeading">Smileys</p>'
    for (var i = 0; i < emojiArray.length;) {
        design += '<span>' + emojiArray[i] + '</span>';
        i++;
    }

    design += '<p class="emojiHeading">People and Fantasy</p>'
    for (var i = 0; i < peopleFantasy.length;) {
        design += '<span>' + peopleFantasy[i] + '</span>';
        i++;
    }
    design += '<p class="emojiHeading">Clothing and Accessories</p>'
    for (var i = 0; i < clothingAccessories.length;) {
        design += '<span>' + clothingAccessories[i] + '</span>';
        i++;
    }
    design += '<p class="emojiHeading">Pale Emojis</p>'
    for (var i = 0; i < paleEmojis.length;) {
        design += '<span>' + paleEmojis[i] + '</span>';
        i++;
    }
    design += '<p class="emojiHeading">Cream White Emojis</p>'
    for (var i = 0; i < creamWhiteEmojis.length;) {
        design += '<span>' + paleEmojis[i] + '</span>';
        i++;
    }
    design += '<p class="emojiHeading">Moderate Brown Emojis</p>'
    for (var i = 0; i < moderateBrownEmojis.length;) {
        design += '<span>' + moderateBrownEmojis[i] + '</span>';
        i++;
    }
    design += '</div>';
    design += '</div>';
    return design;
};
var open_emoji = () => {
    // alert("A");
    if ($('.emoji_div').length == 0) {
        var design = emoji_div_draw();
        $('.send-msgs').append(design);
        if (emoCount === $('.emoji_div .pickingReactDiv>img').length) {
            $(".lodingDiv").fadeOut(300, function() { $(this).remove(); });
        }
        insert_emoji('msg');
    } else {
        $('.emoji_div').remove();
    }
    overlayScrollbars();

}
var insert_emoji = (id) => {
    $('.emoji_div .emoji-container>span').on('click', function() {
        var emoji_name = $(this).html();
        if (recentEmo.length == 6) {
            if (recentEmo.indexOf(emoji_name) == -1) {
                recentEmo.shift();
                // console.log('Shifted');
            }
        }
        if (recentEmo.indexOf(emoji_name) == -1) {
            recentEmo.push(emoji_name);
        }

        setCookie('recentEmo', JSON.stringify(recentEmo), 1);
        $('#' + id).append('<span>' + emoji_name + '</span>');
        // open_emoji();
        var el = document.getElementById(id);
        placeCaretAtEnd(el);
    });
};

var open_rep_emoji = (event) => {
    var offsetval = $(event.target).offset();
    if ($('.emoji_div').length == 0) {
        var design = emoji_div_draw();
        $(design).insertBefore('.rep-typing-indicator');
        if (emoCount === $(event.target).next('.emoji_div').find('.pickingReactDiv img').length) {
            $(".lodingDiv").fadeOut(300, function() { $(this).remove(); });
        }
        insert_emoji('msg_rep');
        // $('.emoji_div').css('top', offsetval.top - 314);
        // $('.emoji_div').css('left', offsetval.left);
        // $('.emoji_div').css('bottom', 'unset');
        $('.emoji_div').css('z-index', 9);
        // $('.emoji_div').css({'top': (offset.top - 314), 'left': offset.left, 'bottom': 'unset'});
    } else {
        $('.emoji_div').remove();
    }
};

var placeCaretAtEnd = (el) => {
    el.focus();
    if (typeof window.getSelection != "undefined" &&
        typeof document.createRange != "undefined") {
        var range = document.createRange();
        range.selectNodeContents(el);
        range.collapse(false);
        var sel = window.getSelection();
        sel.removeAllRanges();
        sel.addRange(range);
    } else if (typeof document.body.createTextRange != "undefined") {
        var textRange = document.body.createTextRange();
        textRange.moveToElementText(el);
        textRange.collapse(false);
        textRange.select();
    }
};
/* End emoji sending */
/**
 * When message form submit
 **/
var convert = (str) => {
    if (str.indexOf(file_server + 'emoji/hv') > -1) return str;
    else {
        var exp = /(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
        var text1 = str.replace(exp, "<a target='_blank' href='$1'>$1</a>");
        var exp2 = /(^|[^\/])(www\.[\S]+(\b|$))/gim;
        return text1.replace(exp2, '$1<a target="_blank" href="http://$2">$2</a>');
    }
};

function strip(html) {
    var tmp = document.createElement("DIV");
    tmp.innerHTML = html;
    return tmp.textContent || tmp.innerText || "";
}

function linkify(text) {
    var ytre = /(\b(https?|ftp|file):\/\/[\-A-Z0-9+&@#\/%?=~_|!:,.;]*[\-A-Z0-9+&@#\/%=~_|])/ig;
    var exp2 = /([^\S]|^)(((https?\:\/\/)|(www\.))(\S+))/gi;


    var resultArray = text.match(ytre);
    var returndata = '';
    if (resultArray == null) {
        resultArray = text.match(exp2);
    }

    if (resultArray != null) {
        for (i = 0; i < resultArray.length; i++) {
            returndata = returndata + '$_link_$' + resultArray[i] + '$_link_$';
        }
    }
    return returndata;
    // return (text || "").replace(
    //   /([^\S]|^)(((https?\:\/\/)|(www\.))(\S+))/gi,
    //   function(match, space, url){
    // 	var hyperlink = url;
    // 	if (!hyperlink.match('^https?:\/\/')) {
    // 	  hyperlink = 'http://' + hyperlink;
    // 	}
    // 	hyperlink = 	hyperlink.replace(/&nbsp;/gi,'');
    // 	return space + '$_link_$' + url + '$_link_$';
    //   }
    // );

};

function validURL(str) {
    var pattern = new RegExp('^(https?:\\/\\/)?' + // protocol
        '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
        '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR ip (v4) address
        '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*'); // fragment locator
    return !!pattern.test(str);
}

// const validURL = (string) => {
//   try {
//     new URL(string);
//     return true;
//   } catch (_) {
//     return false;
//   }
// }

var msg_form_submit = () => {
    // debugger;
    // $('#msg').find('a').attr('target','_blank')
    // $('#msg').find('a').attr('data-preview',true);
    // if($('#msgUrlPreview').is(':visible')){
    // }else{
    // 	$('#msg').find('a').attr('data-preview',false);
    // }
    var str = $('#msg').html();
    str = str.replace(/<script([\S\s]*?)>([\S\s]*?)<\/script>/ig, '$1'); // remove all script
    str = str.replace(/&nbsp;/gi, '').trim(); // remove all white space
    str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, ''); // remove all white new line

    // str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
    // console.log(5022, str);
    // str = convert(str);
    // var hasEmail = extractEmails($('#msg').html());
    // console.log(4629,hasEmail);
    // $.each(hasEmail,function(k,v){
    // 	// var html = '$_link_E' + v + '$_link_E';
    //  var html = '<a href="mailto:'+v+'" class="email_link">'+v+'</a>';
    // 	str =	str.replace(v, html);
    // 	console.log(str);
    // })

    // if(hasEmail != null){
    //
    // 	if(hasEmail.length > 0){
    // 		// var html = '<a href="mailto:'+hasEmail.join('; ')+'" class="msg_emailBtn">Send Email</a>';
    // 		// $('#msg').append(html);
    //
    // 			$('#msg').find('a').attr('data-preview',true);
    // 		// if($('#msgUrlPreview').is(':visible')){
    // 		// }else{
    // 		// 	$('#msg').find('a').attr('data-preview',false);
    // 		// }
    //
    // 		str = $('#msg').html();
    // 	}
    // }

    // str.replace('jony', 'rony');
    if (str != "") {
        var s = str.split('<br>');
        str = s.join(' <br> ')

        var d = str.split('<div>');
        str = d.join(' <div> ')

        var d2 = str.split('</div>');
        str = d2.join(' </div> ')

        var allLink = linkify(str).split('$_link_$');

        // if(allLink.length > 0){
        //     str.split('<br>');
        // }
        // if(str.indexOf('<br>') > -1){
        //     str.split('<>')
        // }
        // console.log(8371,allLink);
        // for(let i of allLink){
        //     if(i.indexOf('<br>') > -1){
        //         i.split('<br>')
        //     }
        // }

        // if(allLink.length > 0){
        // 	var allvalidLink = [];
        // 	$.each(allLink,function(k,v){
        // 		if(validURL(v.trim())){
        // 			if(allvalidLink.indexOf(v) == -1){

        // 			allvalidLink.push(v);
        // 			}
        // 		}
        // 	});
        // 	if(allvalidLink.length > 0){
        // 		var linkdata = {
        // 			 url_list:allvalidLink,
        // 			 conversation_id:conversation_id,
        // 			 user_id:user_id
        // 		}
        // 		socket.emit('create_conv_link',linkdata);
        // 	}
        // }
        str = createTextLinks_(str);
        str = str.replace(/\n/gi, '<br>');
        // console.log(5588, str);
        // var has_file_link = create_file_link(str);
        // $.each(has_file_link,function(k,v){
        // 	var html = '<a href="'+v+'" target="_blank">'+v+'</a> &nbsp;';
        // 	str = str.replace(v, html);
        // });
        // console.log(5080, str);
        if ($('#secretUserList .secret_heading.hideaftersent').length > 0) {
            var secret_user = [];
            if ($('#secretUserList .secret_heading.hideaftersent').attr('data-id') !== "") {
                secret_user = $('#secretUserList .secret_heading.hideaftersent').attr('data-id').split(',');

            }
            if (secret_user.indexOf(user_id) == -1) {
                secret_user.push(user_id);
            }
            var msg_status = [];

            $.each(participants, function(k, v) {
                if (secret_user.indexOf(v) == -1) {
                    msg_status.push(v);
                }
            })
            msg_status.push(user_id);

            var data = {
                type: 'secret_msg',
                sender: user_id,
                sender_name: user_fullname,
                sender_img: user_img,
                conversation_id: conversation_id,
                root_conv_id: root_conv_id,
                msg_type: 'text',
                msg_body: str,
                secret_user: secret_user,
                msg_status: msg_status,
                attach_files: filedata[0],
                mention_user: mentionUsers,
                tag_list: tempAttachmentTag,

            }
            var strnew = $('#msg').text()
            strnew = convert(strnew);
            strnew = strnew.replace(/&nbsp;/gi, '').trim();
            strnew = strnew.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');

            var hasEmail = extractEmails(str);
            $.each(hasEmail, function(k, v) {
                var html = '<a href="mailto:' + v + '" class="email_link">' + v + '</a>';
                str = str.replace(v, html);
            });
            //  console.log(7181,allLink)
            var filteredLink = [];
            $.each(allLink, function(k, v) {
                // if(validURL(v.trim())){
                if (v != '') {
                    if (filteredLink.indexOf(v.trim()) == -1) {
                        filteredLink.push(v.trim());
                    }
                }
                // }
            });
            data['allLink'] = filteredLink;

            if (strnew.length > 0) {

                sendNotificationMsg(data);
            } else if ($('#msg').html().indexOf('class="mention_user_msg"') > -1) {
                sendNotificationMsg(data);
            }
            // $('#secretUserList').html('');
        } else {
            var hasEmail = extractEmails(str);
            $.each(hasEmail, function(k, v) {
                var html = '<a href="mailto:' + v + '" class="email_link">' + v + '</a>';
                str = str.replace(v, html);
            });
            //  console.log(7181,allLink)
            var filteredLink = [];
            $.each(allLink, function(k, v) {
                // if(validURL(v.trim())){
                if (v != '') {
                    if (filteredLink.indexOf(v.trim()) == -1) {
                        filteredLink.push(v.trim());
                    }
                }
                // }
            });
            console.log(7192, filteredLink)

            msg_sending_process(str, filteredLink);
        }
        if ($('#msgUrlPreview').is(':visible')) {
            closeModal('msgUrlPreview');
        }
    }
    $('#msg').html('');
};

function isOdd(num) { return num % 2; }


function createTextLinks_(text) {
    // var ytre = /(\b(https?|ftp|file):\/\/[\-A-Z0-9+&@#\/%?=~_|!:,.;]*[\-A-Z0-9+&@#\/%=~_|])/ig;
    text = text.replace(/<br>/gi, ' \n ');
    return (text || "").replace(
        /([^\S]|^)(((https?\:\/\/)|(www\.))(\S+))/gi,
        function(match, space, url) {
            var hyperlink = url;
            // console.log(5674, hyperlink);
            if (!hyperlink.match('^https?:\/\/')) {
                // console.log(5676, hyperlink);
                hyperlink = 'http://' + hyperlink;
            }
            hyperlink = hyperlink.replace(/&nbsp;/gi, '');
            // console.log(5680, hyperlink);
            return space + '<a href="' + hyperlink + '" target="_blank" data-preview="true">' + url + '</a>';
        }
    );

};

function create_file_link(text) {
    // return text.match(/(http(s?):)([/|.|\w|\s|-])*\.(?:.{3,4})/gi);
    return text.match(/(?:www|https?)[^\s]+/gi);
}

function extractEmails(text) {
    if (text.indexOf('http') == -1 || text.indexOf('https') == -1) {
        return text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9._-]+)/gi);
    } else {
        return null;
    }
}

var draw_typing_indicator = (add_remove, img, name) => {
    if (add_remove) {
        if ($('.typing-indicator').html() == "") {
            $('.typing-indicator').html(name + '&nbsp;<span>is typing....</span>');

        }
    } else {
        $('.typing-indicator').html("");
    }
};
var draw_rep_typing_indicator = (add_remove, img, name) => {
    if (add_remove) {
        if ($('.rep-typing-indicator').html() == "") {
            $('.rep-typing-indicator').html(name + '&nbsp;<span>is typing....</span>');
        }
    } else {
        $('.rep-typing-indicator').html("");
    }
};


var itsSubConv = false;
var itsSubConvid = null;

function funForChangeSubConv(type, data) {
    if (type) {
        $('.name_and_profile .make_private').css('pointer-events', 'none');
        $('.name_and_profile .redioGroup').css('pointer-events', 'none');
        $('#business_unit').html("");
        $('#business_unit').prepend('<option value="">Select a work category</option>');
        $.each(allUnit, function(k, v) {
            if (v.unit_id == data.b_unit_id) {

                $('#business_unit').append('<option value="' + v.unit_id + '" selected>' + v.unit_name + '</option>');
            } else {
                $('#business_unit').append('<option value="' + v.unit_id + '">' + v.unit_name + '</option>');

            }
        });
        $("#select-ecosystem").html("");

        for (var i = 0; i < allteams.length; i++) {
            var selected = (allteams[i].team_id == data.group_keyspace) ? 'selected' : '';
            var opt = '<option value="' + allteams[i].team_id + '" ' + selected + '>' + allteams[i].team_title + '</option>';
            $("#select-ecosystem").append(opt);
        }
    } else {
        $('.name_and_profile .make_private').css('pointer-events', 'unset');
        $('.name_and_profile .redioGroup').css('pointer-events', 'unset');
    }
}

function createPopupforSub(subconv, convid) {
    if ($('.subconversation_create').hasClass('thisIsInactive')) {
        forWarningConvertConv();
    } else {
        $('#info_forSub').show();
        $('#continue_for_sub').attr('onclick', 'createChannel(\"' + subconv + '\",\"' + convid + '\")');
    }
}

function createChannel(subconv, conid) {
    $('#createChannelContainer [name="room_type"][value="work"]').trigger('click')
    $('#info_forSub').hide();
    if ($('.subconversation_create').hasClass('thisIsInactive')) {
        forWarningConvertConv();
    } else {
        itsSubConv = false;
        itsSubConvid = null;
        if (subconv == 'subConv') {
            itsSubConv = true;
            itsSubConvid = conid;
            if (user_id != conversation_id) {
                // console.log({conversation_id:(itsSubConvid != null ? itsSubConvid:conversation_id)})
                socket.emit('get_one_room_data', { company_id: company_id, conversation_id: (itsSubConvid != null ? itsSubConvid : conversation_id) }, function(respons) {
                    funForChangeSubConv(true, respons.data);
                })
            }
        } else if (subconv == 'project') {
            $('#createChannelContainer [name="room_type"][value="project_room"]').trigger('click');
        } else {
            funForChangeSubConv(false);
        }
        closeModal('warningsPopupConversation');
        wMembername = [];
        temppNewMemberuudi = [];
        temppNewSPuudi = [];
        temppNewAdminuudi = [];
        $(".create-channel-heading").text("Create Room");
        $(".connect_right_section").hide();
        $('#team-name').css('border', '1px solid #E1E4E8');
        $('#createChannelContainer').show();
        $('#createChannelContainer').attr('update-action', false);
        $('#createChannelContainer .submitBtn').removeClass('hideElm');
        // $('.photo-upload-invite-member').css('width', '50%');
        // $('#updatechannelContainer [name="room_type"]').prop('checked',false)


        // $('#team-name').focus();
        $('#business_unit').focus();

        if (!$("#defaultRoom").is(":visible")) {
            $('.side_bar_list_item li').removeClass('sideActive');
            $('.side_bar_list_item li').children(".hash, .online, .offline, .lock, .toDo, .protected").css('left', '12px');
            $("#conversation_list_sidebar").prepend('<li data-myid="' + user_id + '" data-createdby="0"  data-octr="' + user_id + '" id="defaultRoom" class="sideActive"><span class="hash"  style="left: 6px;"></span><span class="usersName"> New Room </span></li>');
        }

        $(".add-team-member").prop("disabled", false);
        $("#team-name").prop("disabled", false);
        $("#ml-admintype").hide();
        $("#ml-membertype").hide();
        $("#ml-listHA").html('');
        $("#ml-listHl").html('');
        $("#guestml-listHl").html('');
        $("#guestlistAddedmember").html('');
        $("#team-name").val('');
        $("#select-ecosystem").html("");

        $('#business_unit').html("");
        $('#business_unit').prepend('<option value="">Select a work category</option>');
        $.each(allUnit, function(k, v) {
            $('#business_unit').append('<option value="' + v.unit_id + '">' + v.unit_name + '</option>');
        });
        $('#business_unit').select2();

        $("#select-ecosystem").append('<option value=0>Select Team</option>');
        $.each(allteams, function(k, v) {
            // console.log(v.team_title);
            if (v.participants.indexOf(user_id) > -1) {
                var html = '<option value="' + v.team_id + '">' + v.team_title + '</option>';
                $("#select-ecosystem").append(html);
            }
        });
        $('#select-ecosystem').select2();
        $("#select-ecosystem option").prop("selected", false);
        $('#grpPrivacy').prop('checked', 'checked');
        $('#grpPrivacy').attr('checked', 'checked');

        $('#roomImg .file-up-div').css('pointer-events', 'auto')

        adminArra = [];
        participants = [];
        participants_guest = [];
        participants_sub = [];

        $("#roomIdDiv").attr('data-roomid', '');
        $("#roomIdDiv").attr('data-title', '');
        $("#roomIdDiv").attr('data-privecy', '');
        $("#roomIdDiv").attr('data-keyspace', '');
        $("#roomIdDiv").attr('data-rfu', '');
        $(".submitBtn").show();

        $("#demoImg").attr('src', '' + file_server + 'room-images-uploads/Photos/feelix.jpg');
        // $("#upload-channel-photo").attr("onchange", "getInfo(event)");

        $("#s-l-def").html("");
        $("#directMsgUserList").html("");

        $.each(allUserdata[0].users, function(ky, va) {
            var definedList = '<li>';
            definedList += '      <img src="' + file_server + 'profile-pic/Photos/' + va.img + '" class="profile">';
            definedList += '      <span class="name s-l-def-clas" data-uuid="' + va.id + '">' + va.fullname + '</span><span class="designation-name">, ' + va.designation + '</span>';
            definedList += '    </li>';

            $("#s-l-def").append(definedList);
            $("#directMsgUserList").append(definedList);
        });
        if ($('#mediaFilePreview').is(':visible') == true) {
            $('#mediaFilePreview').hide();
            $('#mediaFilePreview').attr('view-type', '');
        }
        $('#newlyAddmembers .email_profile').remove();
        drawnewRoomMemberList();
        all_action_for_selected_member();

        temTNA = [];
        $('#temmpTagContainer').html('');

        $('#newCovTagall').html("");

        $.each(allUserTagList, function(k, v) {
            if (v != undefined) {
                if (v.visibility !== 'hidden') {
                    $('#newCovTagall').prepend('<div onclick="addReadytag(this)" class="tag tag_id_' + v.tag_id + '" data-id="' + v.tag_id + '">' + v.title + '</div>')
                }
            }
        });

        $('#listAddedmember').html('');
        $.each(user_list, function(k, v) {
            if (v.id == user_id) {
                var html = '<li class="showEl">' +
                    '<span class="online online_' + v.id + '" style="top: 32px; left: 6px; position: absolute;"></span>' +
                    '<img src="' + file_server + 'profile-pic/Photos/' + v.img + '" class="profile">' +
                    '<span class="name s-l-def-clas" data-uuid="' + v.id + '" onclick="actionMentionUser(event,\'' + v.id + '\')">' + v.fullname + '</span>' +
                    '<span class="designation-name">[Creator]</span>' +
                    '</li>';
                $('#listAddedmember').prepend(html);

            }
        });

        $('#createChannelContainer').addClass('inactive');
        // $.each($('#business_unit').find('option'),function(k,v){
        // 	if($(v).html() == '# Support Room #'){
        // 		$(v).hide();
        // 	}
        // })
    }
    check_permission();
}

function viewtemamemberlists(e, elm) {
    // //debugger
    var teamid = $("#select-ecosystem").val();
    // console.log(teamid);
    if (teamid != 0 && e.target.id != 'guest_member_emails1') {
        $(".hayven_Modal_heading h1").text("Add Member(s)");
        $('#userListFornewRoom').html('');
        for (var i = 0; i < allteams.length; i++) {
            if (allteams[i].team_id == teamid) {
                if (allteams[i].participants.length == 1) { alert("Please add team member, then create room by this team"); return false; }

                user_list = _.orderBy(allUserdata[0].users, [username => username.fullname.toLowerCase()], ["asc"]);

                $.each(user_list, function(k, v) {
                    if (allteams[i].participants.indexOf(v.id) > -1) {
                        if (v.id !== user_id) {
                            if (v.is_active !== 0 && v.is_delete == 0) {
                                if ($("input[name='room_type']:checked").val() == 'work' || $("input[name='room_type']:checked").val() == 'project_room') {
                                    if (memberListUUID.indexOf(v.id) == -1) {
                                        if (!has_permission(v.id, GUEST)) {
                                            var html = '<li class="showEl findMember" onclick="addNewMemberForGroup(this,\'' + v.id + '\',\'' + v.fullname + '\',\'' + v.img + '\')">' +
                                                '<div class="addMember-on-off-pop">' +
                                                '<img src="' + file_server + 'profile-pic/Photos/' + v.img + '" class="profile">';
                                            if (onlineUserList.indexOf(v.id) == -1) {
                                                html += '<span class="offline online_' + v.id + '" style="top: 30px; left: 6px; z-index: 1; position: absolute;"></span>';
                                            } else {
                                                html += '<span class="online online_' + v.id + '" style="top: 30px; left: 6px; z-index: 1; position: absolute;"></span>';
                                            }
                                            html += '</div>' +
                                                '<span class="name s-l-def-clas" data-uuid="' + v.id + '">' + v.fullname + ' <span class="id-beside-name">[' + v.email + ']</span></span>'
                                                //+'<span class="designation-name">, '+findObjForUser(v).designation+'</span>'													
                                                +
                                                '</li>';
                                            $('#userListFornewRoom').append(html);
                                        }
                                    }

                                } else {

                                    if (memberListUUID.indexOf(v.id) == -1) {
                                        if (!has_permission(v.id, GUEST)) {
                                            var html = '<li class="showEl findMember _support_room_member_' + v.id + '">'
                                                // +'<img src="'+ file_server +'profile-pic/Photos/'+v.img+'" class="profile">'
                                                // +'<span class="name s-l-def-clas" data-uuid="'+v.id+'">'+v.fullname+'</span>'
                                                // //+'<span class="designation-name">, '+findObjForUser(v).designation+'</span>'
                                                +
                                                '<div class="addMember-on-off-pop">' +
                                                '<img src="' + file_server + 'profile-pic/Photos/' + v.img + '" class="profile">';
                                            if (onlineUserList.indexOf(v.id) == -1) {
                                                html += '<span class="offline online_' + v.id + '" style="top: 30px; left: 6px; z-index: 1; position: absolute;"></span>';
                                            } else {
                                                html += '<span class="online online_' + v.id + '" style="top: 30px; left: 6px; z-index: 1; position: absolute;"></span>';
                                            }
                                            html += '</div>' +
                                                '<span class="name s-l-def-clas" data-uuid="' + v.id + '">' + v.fullname + ' <span class="id-beside-name">[' + v.email + ']</span></span>'

                                            +
                                            '<div class="actions"><span class="action_item" onclick="addNewMemberAs(\'ADMIN\',\'' + v.id + '\')">ADMIN</span><span class="action_item" onclick="addNewMemberAs(\'SERVICE PROVIDER\',\'' + v.id + '\')">SERVICE PROVIDER</span><span class="action_item" onclick="addNewMemberAs(\'MEMBER\',\'' + v.id + '\')">MEMBER</span></div>' +
                                                '</li>';
                                            $('#userListFornewRoom').append(html);
                                        }
                                    }
                                }
                            }
                        }
                    }
                });

                temppNewMembername = [];
                temppNewMemberuudi = [];
                $('#addnewMemberMini').html('');
                $('#addMemberPopup').css('display', 'flex');
                $('#addMemberPopup input').focus();
                $('#addMemberPopup input').val('');
                escToClose = '#addMemberPopup .closeModal';
            }
        }
    } else if (e.target.id == 'guest_member_emails1') {
        $('#userListFornewRoom').html('');
        user_list = _.orderBy(allUserdata[0].users, [username => username.fullname.toLowerCase()], ["asc"]);
        $(".hayven_Modal_heading h1").html("Guest List(s) <span class='addnewguest' onclick='open_add_new_guest_Pop()'>Add New</span>");
        $.each(user_list, function(k, v) {
            if (memberListUUID.indexOf(v.id) == -1) {
                if (has_permission(v.id, GUEST)) {
                    var html = '<li class="showEl findMember" onclick="addNewMemberForGroup(this,\'' + v.id + '\',\'' + v.fullname + '\',\'' + v.img + '\')">' +
                        '<div class="addMember-on-off-pop">' +
                        '<img src="' + file_server + 'profile-pic/Photos/' + v.img + '" class="profile">';
                    if (onlineUserList.indexOf(v.id) == -1) {
                        html += '<span class="offline online_' + v.id + '" style="top: 30px; left: 6px; z-index: 1; position: absolute;"></span>';
                    } else {
                        html += '<span class="online online_' + v.id + '" style="top: 30px; left: 6px; z-index: 1; position: absolute;"></span>';
                    }
                    html += '</div>' +
                        '<span class="name s-l-def-clas" data-uuid="' + v.id + '">' + v.fullname + ' <span class="id-beside-name">[' + v.email + ']</span></span>'
                        //+'<span class="designation-name">, '+findObjForUser(v).designation+'</span>'													
                        +
                        '</li>';
                    $('#userListFornewRoom').append(html);
                }
            }
        });
        temppNewMembername = [];
        temppNewMemberuudi = [];
        $('#addnewMemberMini').html('');
        $('#addMemberPopup').css('display', 'flex');
        $('#addMemberPopup input').focus();
        $('#addMemberPopup input').val('');
        escToClose = '#addMemberPopup .closeModal';

    } else {
        // alert("Please select a team");
        $('#warningsPopup').css('display', 'flex');
        escToClose = '#warningsPopup .closeModal';
        $('#warningsPopup .warningMsg').text('Please select a team.');
    }
}



function open_add_new_guest_Pop() {
    $("#add_new_guest_Pop").css('display', 'flex');
}

function addNewMemberAs(type, id) {
    var data = {
        id: id,
        fullname: findObjForUser(id).fullname,
        img: findObjForUser(id).img
    }
    $('._support_room_member_' + id).remove();
    if ($("#roomIdDiv").attr('data-rfu') == 'ready') {
        $('#memberAddBtn').show();
        var subtitle = type;
        $('#inviteMemberBox').prepend(returnRoomMinide(mydata, 'tempo'));
        tempoRoomUpdateArray.push(mydata.id);
        $('#updatenewMemberMini').next('input').val('');
        $('#updatenewMemberMini').next('input').focus();

    } else {
        // memberList.push(fullname);
        // memberListUUID.push(id);
        temppNewMembername.push(data.fullname);
        temppNewMemberuudi.push(data.id);

        if (type == 'ADMIN') {
            temppNewAdminuudi.push(data.id);
        } else if (type == 'SERVICE PROVIDER') {
            temppNewSPuudi.push(data.id);
        }

        $("#numbers").text(parseInt(memberList.length) + 1);

        // $('#newlyAddmembers').prepend(mini_itemDesign(data,'add'));
        $('#addnewMemberMini').prepend(mini_itemDesign(data, 'add'));
        $('#addnewMemberMini').next('input').val('');
        $('#addnewMemberMini').next('input').focus();
    }
    submitActiveClass('addMemberPopup', temppNewMembername.length);

}

function changeteammember(id) {
    for (var i = 0; i < allteams.length; i++) {
        if (allteams[i].team_id == id) {
            $.each(allteams[i].participants, function(ky, va) {
                var definedList = '<li>';
                definedList += '      <img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(va).img + '" class="profile">';
                definedList += '      <span class="name s-l-def-clas" data-uuid="' + findObjForUser(va).id + '">' + findObjForUser(va).fullname + '</span><span class="designation-name">, ' + findObjForUser(va).designation + '</span>';
                definedList += '    </li>';

                $("#s-l-def").append(definedList);
                $("#directMsgUserList").append(definedList);
            });
        }
    }
}

function createDirMsg_old() {
    $('#createDirMsgContainer').show();
    $('.add-direct-member').focus();
    $('.add-direct-member').attr('spellcheck', false);

    // $("#ml-admintype").hide();
    // $("#ml-membertype").hide();
    // $(".ml-listHA").html('');
    // $(".ml-listHl").html('');

    $("#s-l-def").html("");
    $("#directMsgUserList").html("");
    $('.suggested-type-list').show();
    $('#createChannelContainer .submitBtn').hide();
    $('#createChannelContainer .member_list').hide();
    $('#createChannelContainer .adminList').hide();
    $('.suggested-type-list>ul').css('width', '323px !important');
    $('.remove-suggested-type-list').hide();
    var user_list = access_user_list;
    $.each(user_list, function(ky, va) {
        if (va.id !== user_id) {
            var definedList = '<li class="showEl">';
            definedList += '      <img src="' + file_server + 'profile-pic/Photos/' + va.img + '" class="profile">';
            definedList += '      <span class="name s-l-def-clas" data-uuid="' + va.id + '">' + va.fullname + '</span></span>';
            definedList += '    </li>';

            $("#s-l-def").append(definedList);
            $("#directMsgUserList").append(definedList);
            $("#directMsgUserList li.showEl:first").addClass('selected default');
        }
    });

    if ($('#mediaFilePreview').is(':visible') == true) {
        $('#mediaFilePreview').hide();
        $('#mediaFilePreview').attr('view-type', '');
    }

    all_action_for_selected_member();
    // $('#createDirMsgContainer').height($( window ).height() -130 );
    popupMouseEnter();

}

function createDirMsg() {
    closeModal('warningsPopupConversation');
    $('#createDirConv').css('display', 'flex');
    $('#dconvUsers').html('');
    $('#temppdconvM').html('');
    var user_list = access_user_list;
    // console.log(5112, user_list);
    $.each(user_list, function(k, v) {
        if (v.id !== user_id) {
            if (v.is_active !== 0 && v.is_delete == 0) {
                if (!has_permission(v.id, 1600)) {
                    $('#dconvUsers').append(getUserConvcdesign(v));
                }
            }
        }
    });

    $('#createDirConv .sub_btn').removeClass('active');
    $('#createDirConv .sub_btn').text('Start');
    temppconvSingle = false;
    temppconvSingleGo = false;
    temppconvSingleFriendId = null;
    $('#createDirConv input').show();
    $('#createDirConv input').val('');
    $('#createDirConv input').focus();
}

function temmpSingleConv(id, img, fullname, designation) {
    if (temppconvSingle) {

    } else {

        $('.userSingleconv_' + id).remove();
        temppconvSingle = true;
        $('#createDirConv input').hide();
        $('#createDirConv input').val('');
        socket.emit('findConvExistornot', { friend_id: id, user_id: user_id }, function(res) {
            if (res.exist) {
                goconvId = res.result;
                if (res.pinned) {
                    goconvId['pinned'] = true;
                }
                if ($('#conv' + goconvId.conversation_id).is(':visible')) {
                    $('#createDirConv .sub_btn').text('Go');
                } else {
                    $('#createDirConv .sub_btn').text('Start');
                }
                $('#createDirConv .sub_btn').addClass('active');
                temppconvSingleGo = true;
                temppconvSingleFriendId = id;

            } else {
                $('#createDirConv .sub_btn').text('Start');
                $('#createDirConv .sub_btn').addClass('active');
                temppconvSingleGo = false;
                temppconvSingleFriendId = id;
            }
            $('#dconvUsers li').addClass('inactive');

            if ($('#myModalImgview').is(':visible')) {
                submitnewSingleConv();
                closeModal('myModalImgview');
            }

        })
        var design = '<div class="item convCreateMini_' + id + '">' +
            '<p class="valtext">' + fullname + '</p>' +
            '<span class="valremove" onclick="removetemppSingConv(\'' + id + '\')"></span>' +
            '</div>'
        $('#temppdconvM').prepend(design);
        $('#dconvUsers li').show();
        $('#dconvUsers span').removeClass('highlight');
    }
}

function submitnewSingleConv() {
    if (temppconvSingleGo) {
        // console.log(6081,goconvId);
        if ($('#conv' + goconvId.conversation_id).is(':visible')) {
            $('#conv' + goconvId.conversation_id).trigger('click');
        } else {
            var conv_Id = goconvId.conversation_id;
            var design = '<li data-privacy="private" data-myid="' + user_id + '" data-createdby="0"  data-octr="' + user_id + '"  onclick="start_conversation(event)" data-nor="0" data-id="' + temppconvSingleFriendId + '" data-subtitle="' + goconvId.group_keyspace + '" data-conversationtype="personal" data-conversationid="' + conv_Id + '" data-name="' + findObjForUser(temppconvSingleFriendId).fullname + '" data-img="' + findObjForUser(temppconvSingleFriendId).img + '" id="conv' + conv_Id + '">';
            design += '<span class="online_' + temppconvSingleFriendId + ' ' + (onlineUserList.indexOf(temppconvSingleFriendId) === -1 ? "offline" : "online") + '"></span><span class="usersName">' + findObjForUser(temppconvSingleFriendId).fullname + '</span>';
            design += '<span class="subroomunread"></span>';
            design += '<span class="unreadMsgCount"></span>';
            design += '</li>';
            if (goconvId.pinned) {
                $("#pintul").append(design);
            } else {
                $("#conversation_list_sidebar").append(design);
            }
            $('#conv' + conv_Id).click();
            addSidebarListUser(temppconvSingleFriendId, conv_Id);
        }
        closeModal('createDirConv');
    } else {
        var data = {
            created_by: user_id,
            participants: [user_id, temppconvSingleFriendId],
            company_id: company_id

        }
        console.log(9181, data)
        socket.emit('createNewSingleconv', data, function(res) {
            if (res.status) {
                var conv_Id = res.result.conversation_id;
                var design = '<li data-privacy="private" data-myid="' + user_id + '" data-createdby="0"  data-octr="' + user_id + '"  onclick="start_conversation(event)" data-nor="0" data-id="' + temppconvSingleFriendId + '" data-subtitle="' + res.result.group_keyspace + '" data-conversationtype="personal" data-conversationid="' + conv_Id + '" data-name="' + findObjForUser(temppconvSingleFriendId).fullname + '" data-img="' + findObjForUser(temppconvSingleFriendId).img + '" id="conv' + conv_Id + '">';
                design += '<span class="online_' + temppconvSingleFriendId + ' ' + (onlineUserList.indexOf(temppconvSingleFriendId) === -1 ? "offline" : "online") + '"></span><span class="usersName">' + findObjForUser(temppconvSingleFriendId).fullname + '</span>';
                design += '<span class="subroomunread"></span>';
                design += '<span class="unreadMsgCount"></span>';
                design += '</li>';
                $("#conversation_list_sidebar").append(design);
                $('#conv' + conv_Id).click();
                addSidebarListUser(temppconvSingleFriendId, conv_Id);
            } else {
                // console.log(3330,res)
            }
            closeModal('createDirConv');
        })
    }
}

function removetemppSingConv(id) {
    $('.convCreateMini_' + id).remove();
    $.each(user_list, function(k, v) {
        if (v.id == id) {
            $('#dconvUsers').prepend(getUserConvcdesign(v));
        }
    });
    $('#createDirConv .sub_btn').removeClass('active');
    $('#createDirConv .sub_btn').text('Start');
    temppconvSingle = false;
    temppconvSingleGo = false;
    temppconvSingleFriendId = null;
    $('#createDirConv input').show();
    $('#createDirConv input').focus();
    $('#dconvUsers li').show();
    $('#dconvUsers li').removeClass('inactive');
    $('#dconvUsers li').removeClass('highlight');

}

function getUserConvcdesign(data) {
    // console.log('onlineUserList', onlineUserList);
    var design = '<li class="showEl findMember userSingleconv_' + data.id + '" onclick="temmpSingleConv(\'' + data.id + '\',\'' + data.img + '\',\'' + data.fullname + '\',\'' + data.designation + '\')">' +
        '<div class="addMember-on-off-pop">' +
        '<img src="' + file_server + 'profile-pic/Photos/' + data.img + '" class="profile">';
    if (onlineUserList.indexOf(data.id) == -1) {
        design += '<span class="offline online_' + data.id + '" style="top: 32px; left: 6px; position: absolute;"></span>';
    } else {
        design += '<span class="online online_' + data.id + '" style="top: 32px; left: 6px; position: absolute;"></span>';
    }
    design += '</div>' +
        '<span class="name s-l-def-clas" data-uuid="' + data.id + '">' + data.fullname + ' <span class="id-beside-name">[' + data.email + ']</span></span>'
        //design += '<span class="designation-name">, '+data.designation+'</span>';
        +
        '</li>';

    // 	if(onlineUserList.indexOf(data.id) == -1){
    // 			design += '<span class="offline online_'+data.id+'" style="top: 32px; left: 6px; position: absolute;"></span>';
    // 	} else {
    // 			design += '<span class="online online_'+data.id+'" style="top: 32px; left: 6px; position: absolute;"></span>';
    // 	}
    // 	design += '<img src="'+file_server+'profile-pic/Photos/'+data.img+'" class="profile">';
    // 	design += '<span class="name s-l-def-clas">'+data.fullname+'</span>';
    // 	//design += '<span class="designation-name">, '+data.designation+'</span>';
    // design += '</li>';
    return design;
}

function closeRightSection() {
    if ($("#guestml-listHl").find(".add-admin").length > 0) {
        var flag = false;
        $.each($("#guestml-listHl .add-admin"), function(k, v) {
            if ($(v).attr("data-type") == "invite") {
                flag = true;
                return false;
            }
        });
        if (flag) {
            // $("#warnignMsgText").html("Session has cancelled. You may close this tab/window now");
            $("#warnignMsgText").html("Before close this tab/window, Please send guest invitation or remove them.");
            $("#warningsPopup").css('display', 'flex');
            return false;
        }
    }
    // console.log(83625);
    if ($('.info_tooltip').is(':visible')) {
        $('.i-conv').removeClass('active');
        $('.info_tooltip').removeClass('active');
        $('.info_tooltip').hide();
    }
    if (lastPopup == 'updateRoom') {
        joinChannelPanel();
    } else {
        if ($('li.temppSideli').length > 0) {
            $('li.temppSideli').remove();
            $('#conv' + prevConvid).trigger('click');
        }

        if ($("#divCheck").val() == '1') {
            // console.log(8361)
            if ($("#createChannelContainer").is(":visible") && $("#defaultRoom").is(":visible")) {
                $("#defaultRoom").remove();
                $('#conv' + prevConvid).trigger('click');

            }

            $(".connect_right_section").hide();
            $('#groupChatContainer').show();

            $(".add-team-member").prop("disabled", false);
            $('#grpPrivacy').prop("disabled", false);
            $(".add-direct-member").html('');
            $(".add-team-member").val('');

            memberList = [];
            memberListUUID = [];
            directMsgCont = 1;

            $("#ml-admintype").hide();
            $("#ml-membertype").hide();

            $(".ml-listHA").html('');
            $(".ml-listHl").html('');
            $("#team-name").val('');
            $("#select-ecosystem option").prop("selected", false);
            $('#grpPrivacy').attr('checked', false);

            $(".submitBtn").show();
            // forlastActiveconv();
            $("#groupChatContainer").show();

        } else if ($("#divCheck").val() == '2') {
            // console.log(8363)
            joinChannelPanel();
            $("#divCheck").val('1');
        }

        if ($("#right-section-area-todo").is(':visible')) {
            // console.log(8364)
            $("#right-section-area-todo").hide();
            $("#right-section-area-connect").show();
            $('.more').css('pointer-events', 'auto');
            $('.flag').css('pointer-events', 'auto');
        }
        if ($('#right-section-area').is(":visible")) {
            // console.log(8365)

            if (PVM) {
                // console.log(8366)
                joinChannelPanel();
            } else {
                // console.log(8367)
                $('#right-section-area').hide();
                $('#right-section-area-connect').show();
                $('.onTask').hide();
                $('.onConnect').show();
            }
        }

        if ($('#notificaitonClickItem').hasClass('sideActive')) {
            // console.log(8368)
            $('#NotificationContainer').show();
        }
    }

}




// function closeRightSection(e) {
// if ($('#right-section-area').is(":visible")) {
// 	$('#right-section-area').hide();
// 	$('#right-section-area-connect').show();
// 	$('.onTask').hide();
// 	$('.onConnect').show();
// }
// }

function searchConversation(e) {
    if ($('.search-panel').is(":visible") == false) {
        $('.search-panel').show();
        $('#searchConversation').hide();
        $('.search-panel input').focus();
    }
}

function todoToggleAdvance() {
    if ($("#todoAdvanceOption").is(":visible") == true) {
        $("#todoAdvanceOption").hide();
    } else {
        $("#todoAdvanceOption").show();
        $('.channel-member-search input').focus();
    }
}

function searchFilter() {
    // if($('.filterMainContainer').is(":visible")){
    // 	$('.filterMainContainer').hide();
    // 	$('.side-bar-filter-icon').removeClass('active');
    // }else{
    // 	$('.filterMainContainer').show();
    // 	$('.side-bar-filter-icon').addClass('active');
    var userid = user_id;
    socket.emit('myTopicList', { userid }, (respons) => {
        if (respons.staus) {
            // console.log(respons.rooms);
            allRooms = respons.rooms;
            $("#topicItem").html("");
            $.each(respons.rooms, function(k, v) {
                if (v.single == 'no') {
                    if (v.title != '' && v.title != null) {
                        if (currentConv_list.indexOf(v.conversation_id.toString()) > -1 && v.title.indexOf(',') == -1) {
                            var design = '<li  class="added-tag-list" id="topicLi_' + v.conversation_id.toString() + '">';
                            design += '	<label for="tag_' + v.conversation_id.toString() + '"> ' + v.title + '';
                            design += '	<input id="tag_' + v.conversation_id.toString() + '" data-tagid="' + v.conversation_id.toString() + '" data-tagtitle="' + v.title + '" class="checkmember checkTopic" type ="checkbox" checked>';
                            design += '	<span class="checkmark"></span>';
                            design += '	</label>';
                            design += '</li>';
                            $("#topicItem").append(design);
                        }
                    }
                }
            });

            $.each(respons.rooms, function(k, v) {
                if (v.single == 'no') {
                    if (v.title != '' && v.title != null) {
                        if (currentConv_list.indexOf(v.conversation_id.toString()) == -1 && v.title.indexOf(',') == -1) {
                            var design = '<li  class="added-tag-list" id="topicLi_' + v.conversation_id.toString() + '">';
                            design += '	<label for="tag_' + v.conversation_id.toString() + '"> ' + v.title + '';
                            design += '	<input id="tag_' + v.conversation_id.toString() + '" data-tagid="' + v.conversation_id.toString() + '" data-tagtitle="' + v.title + '" class="checkmember checkTopic" type ="checkbox">';
                            design += '	<span class="checkmark"></span>';
                            design += '	</label>';
                            design += '</li>';
                            $("#topicItem").append(design);
                        }
                    }
                }
            });
        }
    });
    // }
}

function chooseTag() {
    if ($('.filterMainContainer').is(":visible") == true) {
        $('.chooseTag').show();
        $('.chooseTopic').hide();
    }
}

function chooseTopic() {
    if ($('.filterMainContainer').is(":visible") == true) {
        $('.chooseTopic').show();
        $('.chooseTag').hide();
    }
}

function moreMenuPopup(e, type) {
    var lastActive = $('#lastActive').val();
    var left = $(e.target).offset().left,
        top = $(e.target).offset().top;
    if (type == 'FilterPopup') {
        e.preventDefault();
        e.stopImmediatePropagation();

        if ($('.filterListPopup').is(":visible") == false) {
            $('.filterListPopup').css({
                'left': left,
                'top': Number(top + 30),
                'position': 'fixed'
            });
            $('.filterListPopup').show();
        } else {
            $('.filterListPopup').hide();
        }
    } else {

        if ($('.moreMenuPopup').is(":visible") == false) {
            // console.log(left,top)
            $('.moreMenuPopup').css({
                'left': left,
                'top': Number(top + 30),
                'position': 'fixed'
            });

            if ($('.msgs-form-users.deleted').length > 0) {
                $('#clear_all_deleted_msg').show();
            } else {
                $('#clear_all_deleted_msg').hide();
            }
            if (!$('#conv' + user_id).hasClass('sideActive')) {
                // if($('#conv'+lastActive +' .mute_bell').is(':visible')){
                // if($('#conv'+lastActive).attr('data-mute') != 'unmute'){
                // 	$('#viewMuteNotification').text('Change mute option');
                // }else{
                // 	$('#viewMuteNotification').text('Mute Notifications')
                // }

                $('.moreMenuPopup').show();
                if ($('#conv' + lastActive).attr('data-name').indexOf(',') > -1) {
                    $('#reopenThisRoom').text('Re-open this Group');
                    $('#closeThisRoom').text('Close this Group');
                } else {
                    $('#reopenThisRoom').text('Re-open this Room');
                    $('#closeThisRoom').text('Close this Room');
                }
            } else if ($('#conv' + user_id).hasClass('sideActive')) {
                $('.moreMenuPopup').show();
                $('#viewMuteNotification').hide();
                $('#closeThisRoom').hide();
                $('#hideThisRoom').hide();
            }
        } else {
            $('.moreMenuPopup').hide();
        }

        var dontDisturb = localStorage.getItem('dontDisturb' + user_id);
        dontDisturb = JSON.parse(dontDisturb);
        if (dontDisturb == null) {
            dontDisturb = [];
        }
        if (dontDisturb.indexOf(conversation_id) > -1) {

            $('#unMuteThis').text('Unmute this room only').attr('type', 'unmute');
            $('#setNotify').hide();
        } else {

            $('#unMuteThis').text('Mute Notification Sound').attr('type', 'mute');
            $('#setNotify').show();
        }

        leaveRoomShowFun();
    }
}

function tagOptionOpen() {

    $('.conv_tagOptions').find('.srcConv_tag').removeClass('activeUl');
    if ($('.conv_tagOptions').is(":visible")) {
        $('.conv_tagOptions').hide();
    } else {
        // $('.conv_tagOptions').show();
        if (!$('#mediaFilePreview').is(':visible')) {
            $('.chat-head-calling').hide();

            $('#input_values').show().focus();
            $('#headSearchClose').show();
            $('.src_total_msg').show();
            $('#input_values input').attr('id', "searchAfter").attr('placeholder', "Type and enter search message(s) in conversation").attr('onkeyup', 'searchThisThread(event,this)').focus().val('');
            $('.search-close .searchCount').hide();
        }
        var leftWidth = $('.chat-head-name').width();
        var headWidth = $('#personalConnectActive').width();
        var _wid = headWidth - leftWidth;
        _wid = _wid - 50;
        // console.log(leftWidth,headWidth, _wid);
        $('.src_total_msg').width(_wid);

        $('.headTagIconAppend').find('.per_tag_li').remove();
        allUserTagList = _.orderBy(allUserTagList, [allUserTagList => allUserTagList.title.toLowerCase()], ["ASC"]);
        $.each(allUserTagList, function(k, v) {
            if (v != undefined) {
                if (filterOnlyTagMsgA.indexOf(v.tag_id) > -1) {
                    //$('#headTagIconAppend').append('<li class="per_tag_li active" onclick="filterOnlyTagMsg(this)" tag-id="'+v.tag_id+'">'+v.title+'</li>');
                } else {
                    $('.headTagIconAppend').append(getSearchTagLi(v));
                }
            }
        });
        getRoomWiseShareTag(conversation_id);
        if (filterOnlyTagMsgA.length == 0) {
            $('.convTagOpt').removeClass('active');
        }

        $('#input_values input').attr('id', "searchAfter").attr('placeholder', "Search  tag(s)").attr('onkeyup', 'searchTagConvHead(event,this)').focus();

        $('.taglisttag').show();
        // tagOptionOpen();
        $('.headTagIconAppend').show();



        var leftWidth = $('.chat-head-name').width();
        var headWidth = $('#personalConnectActive').width();
        var _wid = headWidth - leftWidth;
        _wid = _wid - 100;
        // var ww = $('.src_total_msg').width();
        $('.taglisttag').width(_wid);


    }
}

function checkEligibilty(user_id, createdby, adminList) {
    if (createdby === user_id) {
        if (adminList != null) {
            if (adminList.length > 1) {
                if (adminList.indexOf(user_id) > -1) {
                    return true;
                } else {
                    return false;
                }
            } else {
                return false;
            }
        } else {
            return false;
        }
    } else {
        if (adminList != null) {
            if (adminList.length > 1) {
                if (adminList.indexOf(user_id) > -1) {
                    return true;
                } else {
                    return false;
                }
            } else {
                return false;
            }
        } else {
            return false;
        }
    }
}

function leaveRoomDraw(v, type) {
    var ststus = (v.privacy == "public" ? "hash" : "lock");

    var totalAdmin = v.participants_admin.length;
    var totalMember = 0;
    if (v.participants !== null) {
        $.each(v.participants, function(ka, va) {
            if (v.participants_admin.indexOf(va) == -1) {
                totalMember = totalMember + 1;
            }
        });
    }
    var roomDesign = '<div class="added-channels lr" id="channel_' + v.conversation_id + '" >';
    roomDesign += '		<div class="channel-joined" id="roomJoin' + v.conversation_id + '" style="display:blockrr;"><img src="/images/basicAssets/joined.png" alt="">Joined</div>';
    roomDesign += '		<h3 class="chanel-name" id="joinChanelTile' + v.conversation_id + '" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '" onclick="roomFromJOin(event,$(this).attr(\'data-participants\'),$(this).attr(\'data-admin\'),$(this).attr(\'data-roomid\'),$(this).attr(\'data-title\'),$(this).attr(\'data-privecy\'),$(this).attr(\'data-keyspace\'))"><span class="' + ststus + '"></span><span id="roomTitle' + v.conversation_id + '" class="roomDrawTitle" data-title="' + v.title + '">' + v.title + '<span></h3>';
    roomDesign += '		<p class="channel-members" onclick="triggerJoinChannelTitle(this)"><img src="/images/basicAssets/Users.svg" alt="">' + totalAdmin + ((totalAdmin > 1) ? ' Admins' : ' Admin') + ' and ' + totalMember + ((totalMember > 1) ? ' Members' : ' Member') + '</p>';
    roomDesign += '		<div class="channel-tags">';
    roomDesign += '		</div>';
    roomDesign += '<div class="roomFoot">';

    if (v.is_active != null) {
        if (v.is_active.indexOf(user_id) > -1) {
            roomDesign += '<h3 class="click-to-leave" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3><h3 class="click-to-leave" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef">Show on left panel</h3>';
        } else {
            roomDesign += '<h3 class="click-to-leave width100" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3><h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef">Show on left panel</h3>';
        }
    } else {
        roomDesign += '<h3 class="click-to-leave width100" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3><h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef">Show on left panel</h3>';
    }

    roomDesign += '</div>';
    roomDesign += '</div>';

    if (type == 'JD') {
        if (v.created_by == user_id) {
            $("#myroomSdiv").append(roomDesign);
        } else {
            $("#joinedDiv").append(roomDesign);
        }

    } else {
        $("#joinDiv").append(roomDesign);
    }

    checkRoomChannelHide();
    checkRoomJoinHide();
    checkRoomMyHide();


}

function joinRoomDraw(v, type) {
    var ststus = (v.privacy == "public" ? "hash" : "lock");

    var totalAdmin = v.participants_admin.length;
    var totalMember = 0;
    var allMemberName = [];
    if (v.participants !== null) {
        $.each(v.participants, function(ka, va) {
            if (v.participants_admin.indexOf(va) == -1) {
                totalMember = totalMember + 1;
                allMemberName.push(findObjForUser(va).fullname);
            }
        });
    }
    $.each(v.participants_admin, function(k, v) {
        allMemberName.push(findObjForUser(v).fullname);
    })

    totalMember = totalMember + totalAdmin;
    var roomDesign = '<div class="added-channels jr" id="channel_' + v.conversation_id + '">';
    // roomDesign += '		<div class="channel-joined" id="roomJoin' + v.conversation_id + '" style="display:none;"><img src="/images/basicAssets/joined.png" alt="">Joined</div>';
    roomDesign += '		<h3 class="chanel-name" id="joinChanelTile' + v.conversation_id + '" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '" ><span class="' + ststus + '"></span><span id="roomTitle' + v.conversation_id + '" class="roomDrawTitle"  data-title="' + v.title + '">' + v.title + '<span></h3>';
    roomDesign += '		<p class="channel-members" onclick="triggerJoinChannelTitle(this)"><img src="/images/basicAssets/Users.svg" alt="">' + totalMember + ((totalMember > 1) ? ' Members' : ' Member') + '</p>';
    roomDesign += '		<div class="customToolTip roomView">' + allMemberName.join('<br>') + '</div>';
    roomDesign += '		<div class="channel-tags">';
    roomDesign += '		</div>';
    roomDesign += '<div class="roomFoot">';

    if (v.status != null) {
        if (v.status == 'close') {
            roomDesign += '<h3 class="click-to-join width100" id="roomBtn' + v.conversation_id + '" style="color:red;">Closed Room</h3>';
        } else {
            roomDesign += '<h3 class="click-to-join width100" id="roomBtn' + v.conversation_id + '" onclick="joinRoom(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')">Join this room</h3>';
        }
    } else {
        roomDesign += '<h3 class="click-to-join width100" id="roomBtn' + v.conversation_id + '" onclick="joinRoom(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')">Join this room</h3>';
    }


    roomDesign += '<h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';

    roomDesign += '</div>';

    roomDesign += '</div>';

    if (!$('#channel_' + v.conversation_id).is(':visible')) {

        if (type == 'JD') {
            if (v.privacy !== null) {
                if (v.created_by == user_id) {
                    $("#myroomSdiv").append(roomDesign);
                } else {
                    $("#joinedDiv").append(roomDesign);
                }
            }
        } else {
            if (v.privacy == 'public') {
                $("#joinDiv").append(roomDesign);
            }
        }
    }
    checkRoomChannelHide();
    checkRoomJoinHide();
    checkRoomMyHide();
}

function privateRoomDraw_f_admin(v, type) {
    var ststus = (v.privacy == "public" ? "hash" : "lock");

    var totalAdmin = v.participants_admin.length;
    var totalMember = 0;
    var allMemberName = []
    if (v.participants !== null) {
        $.each(v.participants, function(ka, va) {
            if (v.participants_admin.indexOf(va) == -1) {
                totalMember = totalMember + 1;
                allMemberName.push(findObjForUser(va).fullname);
            }
        });
    }
    totalMember = totalMember + totalAdmin;

    $.each(v.participants_admin, function(k, v) {
        allMemberName.push(findObjForUser(v).fullname);
    })

    var roomDesign = '<div class="added-channels pr" id="channel_' + v.conversation_id + '">';
    // roomDesign += '		<div class="channel-joined" id="roomJoin' + v.conversation_id + '" style="display:blockrr;"><img src="/images/basicAssets/joined.png" alt="">Joined</div>';
    roomDesign += '		<h3 class="chanel-name" id="joinChanelTile' + v.conversation_id + '" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '" onclick="roomFromJOin($(this).attr(\'data-participants\'),$(this).attr(\'data-admin\'),$(this).attr(\'data-roomid\'),$(this).attr(\'data-title\'),$(this).attr(\'data-privecy\'),$(this).attr(\'data-keyspace\'))"><span class="' + ststus + '"></span><span id="roomTitle' + v.conversation_id + '" class="roomDrawTitle"  data-title="' + v.title + '">' + v.title + '<span></h3>';
    roomDesign += '		<p class="channel-members" onclick="triggerJoinChannelTitle(this)"><img src="/images/basicAssets/Users.svg" alt=""> ' + totalMember + ((totalMember > 1) ? ' Members' : ' Member') + '</p>';
    roomDesign += '		<div class="customToolTip roomView">' + allMemberName.join('<br>') + '</div>';
    roomDesign += '		<div class="channel-tags">';
    roomDesign += '		</div>';
    roomDesign += '<div class="roomFoot">';

    if (v.is_active != null) {
        if (v.is_active.indexOf(user_id) > -1) {
            roomDesign += '<h3 class="click-to-leave" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3><h3 class="click-to-leave" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
        } else {
            roomDesign += '<h3 class="click-to-leave width100" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3>';
            roomDesign += '<h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
        }
    } else {
        roomDesign += '<h3 class="click-to-leave width100" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3>';
        roomDesign += '<h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
    }

    roomDesign += '</div>';
    roomDesign += '</div>';
    if (!$('#channel_' + v.conversation_id).is(':visible')) {
        if (type == 'JD') {
            if (v.privacy !== null) {
                if (v.created_by == user_id) {
                    $("#myroomSdiv").append(roomDesign);
                } else {
                    $("#joinedDiv").append(roomDesign);
                }
            }
        } else {
            if (v.privacy == 'public') {
                $("#joinDiv").append(roomDesign);
            }
        }
    }
    checkRoomChannelHide();
    checkRoomJoinHide();
    checkRoomMyHide();
}

function privateRoomDraw_f_member(v, type) {
    var ststus = (v.privacy == "public" ? "hash" : "lock");
    var totalAdmin = v.participants_admin.length;
    var totalMember = 0;
    var allMemberName = [];
    if (v.participants !== null) {
        $.each(v.participants, function(ka, va) {
            if (v.participants_admin.indexOf(va) == -1) {
                totalMember = totalMember + 1;
                allMemberName.push(findObjForUser(va).fullname);
            }
        });
    }

    $.each(v.participants_admin, function(k, v) {
        allMemberName.push(findObjForUser(v).fullname);
    })

    totalMember = totalMember + totalAdmin;

    var roomDesign = '<div class="added-channels pr" id="channel_' + v.conversation_id + '">';
    // roomDesign += '		<div class="channel-joined" id="roomJoin' + v.conversation_id + '" style="display:blockrr;"><img src="/images/basicAssets/joined.png" alt="">Joined</div>';
    roomDesign += '		<h3 class="chanel-name" id="joinChanelTile' + v.conversation_id + '" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '" onclick="roomFromJOin($(this).attr(\'data-participants\'),$(this).attr(\'data-admin\'),$(this).attr(\'data-roomid\'),$(this).attr(\'data-title\'),$(this).attr(\'data-privecy\'),$(this).attr(\'data-keyspace\'))"><span class="' + ststus + '"></span><span id="roomTitle' + v.conversation_id + '" class="roomDrawTitle"  data-title="' + v.title + '">' + v.title + '<span></h3>';
    roomDesign += '		<p class="channel-members" onclick="triggerJoinChannelTitle(this)" ><img src="/images/basicAssets/Users.svg" alt="">' + totalMember + ((totalMember > 1) ? ' Members' : ' Member') + '</p>';
    // roomDesign += '		<p class="channel-members"><img src="/images/basicAssets/Users.svg" alt="">' + totalMember.length + ' Members</p>';
    roomDesign += '		<div class="customToolTip roomView">' + allMemberName.join('<br>') + '</div>';
    roomDesign += '		<div class="channel-tags">';
    roomDesign += '		</div>';
    roomDesign += '<div class="roomFoot">';

    if (v.is_active != null) {
        if (v.is_active.indexOf(user_id) > -1) {
            roomDesign += '<h3 class="click-to-leave" id="roomBtn' + v.conversation_id + '" onclick="makeAdminToast()">Leave this room</h3><h3 class="click-to-leave" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
        } else {
            if (v.participants_admin.indexOf(user_id) == -1) {

                roomDesign += '<h3 class="click-to-leave width100"  id="roomBtn' + v.conversation_id + '" onclick="makeAdminToast()">Leave this room</h3>';
            } else {
                roomDesign += '<h3 class="click-to-leave width100 inactive" data-balloon="Add a member first" data-balloon-pos="up" id="roomBtn' + v.conversation_id + '" onclick="makeAdminToast()">Leave this room</h3>';

            }
            roomDesign += '<h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" stlpe="color:#5cd4ef" >Show on left panel</h3>';
        }
    } else {
        if (v.participants_admin.indexOf(user_id) == -1) {

            roomDesign += '<h3 class="click-to-leave width100"  id="roomBtn' + v.conversation_id + '" onclick="makeAdminToast()">Leave this room</h3>';
        } else {
            roomDesign += '<h3 class="click-to-leave width100 inactive" data-balloon="Add a member first" data-balloon-pos="up" id="roomBtn' + v.conversation_id + '" onclick="makeAdminToast()">Leave this room</h3>';

        }
        roomDesign += '<h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
    }

    roomDesign += '</div>';
    roomDesign += '</div>';

    if (!$('#channel_' + v.conversation_id).is(':visible')) {
        if (type == 'JD') {
            if (v.privacy !== null) {
                if (v.created_by == user_id) {
                    $("#myroomSdiv").append(roomDesign);
                } else {
                    $("#joinedDiv").append(roomDesign);
                }
            }
        } else {
            if (v.privacy == 'public') {
                $("#joinDiv").append(roomDesign);
            }
        }
    }
    checkRoomChannelHide();
    checkRoomJoinHide();
    checkRoomMyHide();



}

var allRooms = [];

function joinChannelPanel() {
    if (has_permission(user_id, GUEST)) {
        return false;
    }

    lastPopup = '';
    if ($('#defaultRoom').is(':visible')) {
        $('#defaultRoom').remove();
        $('.side_bar_list_item li.selected').addClass('sideActive');
    }
    var keySpace = 'Navigate';
    socket.emit('public_conversation_history', { keySpace }, (respons) => {

        if (respons.staus) {
            allRooms = respons.rooms;
            $("#allPrivateRoomsView").html("");
            $("#allClosedRoomView").html("");
            $("#allPublicRoomsView").html("");

            $(".connect_right_section").hide();
            $('#joinChannelPanel').show();
            if ($('#mediaFilePreview').is(':visible')) {
                backToMediaTab();
                $('#mediaFilePreview').hide();
                $('#mediaFilePreview').attr('view-type', '');
            }

            // $.each(respons.rooms, function (k, v) {
            // 	if(v.title != null){
            // 		if (v.title.indexOf(',') === -1) {

            // 			if (v.privacy === 'private'){
            // 				if (checkEligibilty(user_id, v.created_by, v.participants_admin)) {
            // 					if (v.created_by === user_id && v.privacy === 'private') {
            // 						privateRoomDraw_f_admin(v, 'JD');
            // 					}
            // 				} else {
            // 					if(v.participants_admin != null){

            // 						if (v.participants_admin.indexOf(user_id) > -1 && v.participants.indexOf(user_id) > -1 && v.participants_admin.length == 1 && v.privacy === 'private') {
            // 							privateRoomDraw_f_member(v, 'JD');
            // 						} else if (v.participants_admin.indexOf(user_id) === -1 && v.participants.indexOf(user_id) > -1 && v.privacy === 'private') {

            // 							privateRoomDraw_f_admin(v, 'JD');
            // 						}
            // 					}
            // 				}
            // 			}else{

            // 				if (checkEligibilty(user_id, v.created_by, v.participants_admin)) {
            // 					if (v.created_by === user_id && v.privacy === 'public') {
            // 						privateRoomDraw_f_admin(v, 'JD');
            // 					}
            // 				} else {
            // 					if(v.participants_admin != null){

            // 						if (v.participants_admin.indexOf(user_id) > -1 && v.participants.indexOf(user_id) > -1 && v.participants_admin.length == 1 && v.privacy === 'public') {
            // 							privateRoomDraw_f_member(v, 'JD');
            // 						} else if (v.participants_admin.indexOf(user_id) === -1 && v.participants.indexOf(user_id) > -1 && v.privacy === 'public') {
            // 							privateRoomDraw_f_admin(v, 'JD');
            // 						}else{
            // 							joinRoomDraw(v,'J');
            // 						}
            // 					}
            // 				}

            // 				// if ($.inArray(user_id, v.participants) === -1 && v.privacy === 'public') {
            // 				// 	joinRoomDraw(v)
            // 				// }
            // 			}
            // 		}
            // 	}
            // });

            $.each(respons.rooms, function(k, v) {
                if (v.participants_admin != null && v.participants != null) {
                    if (v.title != null) {
                        if (v.title.indexOf(',') === -1) {
                            if (v.status != 'close') {
                                if (v.privacy == 'private') {
                                    if (v.participants.indexOf(user_id) > -1) {
                                        if (v.participants_admin.indexOf(user_id) > -1) {
                                            if (v.participants_admin.length != 1) {
                                                $('#allPrivateRoomsView').append(returnroomsDesign(v, 'leave', true));
                                            } else {
                                                $('#allPrivateRoomsView').append(returnroomsDesign(v, 'leave', false));
                                            }
                                        } else {
                                            $('#allPrivateRoomsView').append(returnroomsDesign(v, 'leave', true));
                                        }
                                    }
                                } else if (v.privacy == 'public') {
                                    if (v.participants.indexOf(user_id) > -1) {
                                        if (v.participants_admin.indexOf(user_id) > -1) {
                                            if (v.participants_admin.length != 1) {
                                                $('#allPublicRoomsView').append(returnroomsDesign(v, 'leave', true));
                                            } else {
                                                $('#allPublicRoomsView').append(returnroomsDesign(v, 'leave', false));
                                            }
                                        } else {
                                            $('#allPublicRoomsView').append(returnroomsDesign(v, 'leave', true));
                                        }
                                    } else {
                                        $('#allPublicRoomsView').append(returnroomsDesign(v, 'join', true));
                                    }
                                }
                            } else {
                                if (v.participants.indexOf(user_id) != -1) {
                                    $("#allClosedRoomView").append(returnroomsDesign(v, 'closed'));
                                }
                            }
                        }
                    }
                }
            })

            if ($('.jr').length > 0) {
                $('#teamSearch').show();
                $('#publicRoomsList').show();
            } else {
                $('#teamSearch').hide();
                $('#publicRoomsList').hide();

            }


            tooltipForOverLength();
            counterAllRooms();

        }
    });
    $('#joinChannelPanel').height($(window).height() - 130);
    if (windowWidth <= 415) {
        $('#hayvenSidebar').hide();
    }
    checkRoomChannelHide();
    checkRoomJoinHide();
    checkRoomMyHide();
    counterAllRooms();
}

function counterAllRooms() {
    $('#private_rooms .roomCounter').text($('#allPrivateRoomsView .added-channels.pr').length);
    $('#public_rooms .roomCounter').text($('#allPublicRoomsView .added-channels.pr').length);
    $('#closed_rooms .roomCounter').text($('#allClosedRoomView .added-channels.pr').length);

    if ($('#allPrivateRoomsView .added-channels.pr').length > 6) {
        $.each($('#allPrivateRoomsView .added-channels.pr'), function(k, v) {
            if (k > 5) {
                $(v).hide();
            }
        });
        $('#private_rooms .more_channel').show();
        $('#private_rooms .more_channel .counter').text(($('#allPrivateRoomsView .added-channels.pr').length) - 6);
    } else {
        $('#private_rooms .more_channel').hide();
    }

    if ($('#allPublicRoomsView .added-channels.pr').length > 6) {
        $.each($('#allPublicRoomsView .added-channels.pr'), function(k, v) {
            if (k > 5) {
                $(v).hide();
            }
        });
        $('#public_rooms .more_channel').show();
        $('#public_rooms .more_channel .counter').text(($('#allPublicRoomsView .added-channels.pr').length) - 6);
    } else {
        $('#public_rooms .more_channel').hide();
    }

    if ($('#allClosedRoomView .added-channels.pr').length > 6) {
        $.each($('#allClosedRoomView .added-channels.pr'), function(k, v) {
            if (k > 5) {
                $(v).hide();
            }
        });
        $('#closed_rooms .more_channel').show();
        $('#closed_rooms .more_channel .counter').text(($('#allClosedRoomView .added-channels.pr').length) - 6);
    } else {
        $('#closed_rooms .more_channel').hide();
    }
}
var returnroomsDesign = (v, text, type) => {
    // console.log(4865, v.participants_admin.indexOf(user_id) > -1)
    var icon = (v.privacy == "public" ? "hash" : "lock");
    var roomDesign = '';
    if (v.is_active == null) {
        v.is_active = [];
    }
    if (v.conv_img == null) {
        v.conv_img = 'feelix.jpg'
    }

    if (v.participants.indexOf(user_id) == -1) {
        roomDesign = '<div class="added-channels pr" id="channel_' + v.conversation_id + '">';
        roomDesign += '		<div class="roomGallary" onclick="showJoinPopupforPublicRoom(\'' + v.conversation_id + '\')">';
    } else {
        roomDesign = '<div class="added-channels pr" id="channel_' + v.conversation_id + '" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '" onclick="roomFromJOin(event,$(this).attr(\'data-participants\'),$(this).attr(\'data-admin\'),$(this).attr(\'data-roomid\'),$(this).attr(\'data-title\'),$(this).attr(\'data-privecy\'),$(this).attr(\'data-keyspace\'))">';
        roomDesign += '		<div class="roomGallary">';
    }
    if (v.is_active.indexOf(user_id) > -1) {
        roomDesign += '		<h3 class="chanel-name" id="joinChanelTile' + v.conversation_id + '" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '"><span class="' + icon + '"></span><span id="roomTitle' + v.conversation_id + '" class="roomDrawTitle"  data-title="' + v.title + '">' + v.title + '<span></h3>';
    } else {
        roomDesign += '		<h3 class="chanel-name" id="joinChanelTile' + v.conversation_id + '" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '" ><span class="' + icon + '"></span><span id="roomTitle' + v.conversation_id + '" class="roomDrawTitle"  data-title="' + v.title + '">' + v.title + '<span></h3>';
    }
    roomDesign += '		<p class="channel-members" ><img src="/images/basicAssets/Users.svg" alt=""> ' + v.participants.length + ((v.participants.length > 1) ? ' Members' : ' Member') + '' + ((v.participants_admin.indexOf(user_id) > -1) ? ', Admin (You)' : '') + '</p>';
    // roomDesign += '		<div class="customToolTip roomView">Click to view room details</div>';

    if (v.participants_admin.indexOf(user_id) > -1) {
        roomDesign += '		<div class="imgHolder" style="' + ((v.created_by == user_id) ? '' : 'pointer-events: none') + '"><img data-value="room-images-uploads/Photos/' + v.conv_img + '" src="' + file_server + 'room-images-uploads/Photos/' + v.conv_img + '" ></div>';
    } else {
        roomDesign += '<div class="imgHolder"><img data-value="room-images-uploads/Photos/' + v.conv_img + '" src="' + file_server + 'room-images-uploads/Photos/' + v.conv_img + '"></div>';
    }
    roomDesign += '		</div>';
    if (v.participants.indexOf(user_id) == -1) {
        roomDesign += '<div class="roomFoot" onclick="showJoinButtonPopupforPublicRoom(\'' + v.conversation_id + '\', this)">';
    } else {
        roomDesign += '<div class="roomFoot">';
    }
    if (v.is_active.indexOf(user_id) > -1) {
        roomDesign += '<h3 class="click-to-join width100 colorjoin" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')"   >JOIN</h3>';
    } else {
        if (text == 'join') {
            roomDesign += '<h3 class="click-to-join width100 colorjoin" id="roomBtn' + v.conversation_id + '"  >JOIN</h3> <span  id="roomBtnforClick' + v.conversation_id + '" onclick="joinRoom(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="display:none;"></span>';
        } else {
            roomDesign += '<h3 class="click-to-join width100" id="roomBtn' + v.conversation_id + '" onclick="goToThisRoom(event,\'' + v.conversation_id + '\')">GO</h3> <div data-balloon="Click to view settings" data-balloon-pos="right" style="float:left"><span class="settings" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '" onclick="roomFromJOin(event,$(this).attr(\'data-participants\'),$(this).attr(\'data-admin\'),$(this).attr(\'data-roomid\'),$(this).attr(\'data-title\'),$(this).attr(\'data-privecy\'),$(this).attr(\'data-keyspace\'))"></span></div>'
        }
    }

    roomDesign += '</div>';

    // if(v.status == 'close'){

    // 	// roomDesign += '		<div class="channel-tags">';
    // 	// roomDesign += '		</div>';
    // 	//roomDesign += '<h3 class="click-to-leave width100" id="roomBtn' + v.conversation_id + '">Closed</h3>';
    // 	if(v.is_active.indexOf(user_id) > -1){
    // 		roomDesign +='<h3 class="click-to-join width100 closedRoom" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3> <span class="settings" onclick="triggerJoinChannelTitle(this)"></span>';
    // 	}else{

    // 		roomDesign +='<h3 class="click-to-join width100" id="roomBtn'+v.conversation_id+'" onclick="goToThisRoom(\''+v.conversation_id+'\')">Go to this room</h3> <span class="settings" onclick="triggerJoinChannelTitle(this)"></span>'
    // 	}

    // }else{
    // if(v.privacy == 'private'){
    // 	// roomDesign += '		<div class="channel-joined" id="roomJoin' + v.conversation_id + '" style="display:blockrr;"><img src="/images/basicAssets/joined.png" alt="">Joined</div>';
    // 	roomDesign += '		<div class="roomGallary">';
    // 	roomDesign += '		<h3 class="chanel-name" id="joinChanelTile' + v.conversation_id + '" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '" onclick="roomFromJOin($(this).attr(\'data-participants\'),$(this).attr(\'data-admin\'),$(this).attr(\'data-roomid\'),$(this).attr(\'data-title\'),$(this).attr(\'data-privecy\'),$(this).attr(\'data-keyspace\'))"><span class="'+icon+'"></span><span id="roomTitle' + v.conversation_id + '" class="roomDrawTitle"  data-title="' + v.title + '">' + v.title + '<span></h3>';
    // 	roomDesign += '		<p class="channel-members" onclick="triggerJoinChannelTitle(this)"><img src="/images/basicAssets/Users.svg" alt=""> '+v.participants.length + ((v.participants.length > 1)? ' Members':' Member')+''+((v.participants_admin.indexOf(user_id) > -1)? ', Admin (You)':'')+'</p>';
    // 	// roomDesign += '		<div class="customToolTip roomView"></div>';
    // 	roomDesign += '		<div class="customToolTip roomView">Click to view room details</div>';
    // 	// roomDesign += '		<div class="channel-tags">';
    // 	// roomDesign += '		</div>';
    // 	roomDesign += '		<div class="imgHolder" style="'+((v.created_by == user_id)? '':'pointer-events: none')+'"><img onclick="viewRoomImg(event,\''+file_server+'\',this)" src="'+file_server+'room-images-uploads/Photos/'+v.conv_img+'" data-value="room-images-uploads/Photos/'+v.conv_img+'"></div>';
    // 	roomDesign += '		</div>';
    // 	roomDesign += '<div class="roomFoot">';

    // 	// if (v.is_active != null) {
    // 	// 	// if (v.is_active.indexOf(user_id) > -1) {
    // 	// 	// 	if(type){
    // 	// 	// 		roomDesign += '<h3 class="click-to-leave" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3>';
    // 	// 	// 	}else{
    // 	// 	// 		roomDesign +='<h3 class="click-to-leave width100 inactive" data-balloon="Add a member first" data-balloon-pos="up" id="roomBtn'+v.conversation_id+'" onclick="makeAdminToast()">Leave this room</h3>'
    // 	// 	// 	}

    // 	// 	// 	roomDesign += '<h3 class="click-to-leave" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
    // 	// 	// } else {
    // 	// 	// 	if(type){

    // 	// 	// 		roomDesign += '<h3 class="click-to-leave width100" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3>';
    // 	// 	// 	}else{
    // 	// 	// 		roomDesign +='<h3 class="click-to-leave width100 inactive" data-balloon="Add a member first" data-balloon-pos="up" id="roomBtn'+v.conversation_id+'" onclick="makeAdminToast()">Leave this room</h3>'
    // 	// 	// 	}
    // 	// 	// 	roomDesign += '<h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
    // 	// 	// }

    // 	// } else {
    // 	// 	if(type){

    // 	// 		roomDesign += '<h3 class="click-to-leave width100" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3>';
    // 	// 	}else{
    // 	// 		roomDesign +='<h3 class="click-to-leave width100 inactive" data-balloon="Add a member first" data-balloon-pos="up" id="roomBtn'+v.conversation_id+'" onclick="makeAdminToast()">Leave this room</h3>'
    // 	// 	}
    // 	// 	roomDesign += '<h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
    // 	// }
    // 	if(v.is_active.indexOf(user_id) > -1){
    // 		roomDesign +='<h3 class="click-to-join width100" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3> <span class="settings" onclick="triggerJoinChannelTitle(this)"></span>';
    // 	}else{

    // 		roomDesign +='<h3 class="click-to-join width100" id="roomBtn'+v.conversation_id+'" onclick="goToThisRoom(\''+v.conversation_id+'\')">Go to this room</h3> <span class="settings" onclick="triggerJoinChannelTitle(this)"></span>'
    // 	}
    // 	// roomDesign +='<h3 class="click-to-join width100" id="roomBtn'+v.conversation_id+'" onclick="goToThisRoom(\''+v.conversation_id+'\')">Go to this room</h3><span class="settings" onclick="triggerJoinChannelTitle(this)"></span>'

    // 	roomDesign += '</div>';
    // }else if(v.privacy == 'public'){
    // 	// roomDesign += '		<div class="channel-joined" id="roomJoin' + v.conversation_id + '" style="display:blockrr;"><img src="/images/basicAssets/joined.png" alt="">Joined</div>';
    // 	roomDesign += '		<div class="roomGallary">';
    // 	if(v.participants.indexOf(user_id) > -1){

    // 		roomDesign += '		<h3 class="chanel-name" id="joinChanelTile' + v.conversation_id + '" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '" onclick="roomFromJOin($(this).attr(\'data-participants\'),$(this).attr(\'data-admin\'),$(this).attr(\'data-roomid\'),$(this).attr(\'data-title\'),$(this).attr(\'data-privecy\'),$(this).attr(\'data-keyspace\'))"><span class="' + icon + '"></span><span id="roomTitle' + v.conversation_id + '" class="roomDrawTitle"  data-title="' + v.title + '">' + v.title + '<span></h3>';
    // 	}else{
    // 		roomDesign += '		<h3 class="chanel-name" id="joinChanelTile' + v.conversation_id + '" data-roomid="' + v.conversation_id + '" data-rfu="join" data-title="' + v.title + '" data-privecy="' + v.privacy + '" data-keyspace="' + v.group_keyspace + '" data-participants="' + v.participants + '" data-admin="' + v.participants_admin + '" onclick="showJoinPopupforPublicRoom(\''+v.conversation_id+'\')"><span class="' + icon + '"></span><span id="roomTitle' + v.conversation_id + '" class="roomDrawTitle"  data-title="' + v.title + '">' + v.title + '<span></h3>';

    // 	}
    // 	roomDesign += '		<p class="channel-members" onclick="triggerJoinChannelTitle(this)"><img src="/images/basicAssets/Users.svg" alt=""> '+v.participants.length + ((v.participants.length > 1)? ' Members':' Member')+''+((v.participants_admin.indexOf(user_id) > -1)? ', Admin (You)':'')+'</p>';
    // 	// roomDesign += '		<div class="customToolTip roomView">'+ allMemberName.join('<br>') +'</div>';
    // 	roomDesign += '		<div class="customToolTip roomView">Click to view room details</div>';
    // 	// roomDesign += '		<div class="channel-tags">';
    // 	// roomDesign += '		</div>';
    // 	if(text == 'join'){
    // 		roomDesign += '		<div class="imgHolder" style="'+((v.created_by == user_id)? '':'pointer-events: none')+'"><img onclick="triggerJoinChannelTitle(this)" data-value="room-images-uploads/Photos/'+v.conv_img+'" src="'+file_server+'room-images-uploads/Photos/'+v.conv_img+'"></div>';
    // 		roomDesign += '		</div>';
    // 	}else{
    // 		roomDesign += '		<div class="imgHolder" style="'+((v.created_by == user_id)? '':'pointer-events: none')+'"><img onclick="viewRoomImg(event,\''+file_server+'\',this)" data-value="room-images-uploads/Photos/'+v.conv_img+'" src="'+file_server+'room-images-uploads/Photos/'+v.conv_img+'"></div>';
    // 		roomDesign += '		</div>';
    // 	}
    // 	roomDesign += '<div class="roomFoot">';
    // 	if(text == 'join'){
    // 		roomDesign += '<h3 class="click-to-join width100 colorjoin" id="roomBtn' + v.conversation_id + '" onclick="triggerJoinChannelTitle(this)" style="width:100% !important" >Join this room</h3> <span  id="roomBtnforClick' + v.conversation_id + '" onclick="joinRoom(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="display:none;"></span>';
    // 	}else{
    // 		if(v.is_active.indexOf(user_id) > -1){
    // 			roomDesign +='<h3 class="click-to-join width100 closedRoom" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3> <span class="settings" onclick="triggerJoinChannelTitle(this)"></span>';
    // 		}else{

    // 			roomDesign +='<h3 class="click-to-join width100" id="roomBtn'+v.conversation_id+'" onclick="goToThisRoom(\''+v.conversation_id+'\')">Go to this room</h3> <span class="settings" onclick="triggerJoinChannelTitle(this)"></span>'
    // 		}
    // 		// roomDesign +='<h3 class="click-to-join width100" id="roomBtn'+v.conversation_id+'" onclick="goToThisRoom(\''+v.conversation_id+'\')">Go to this room</h3> <span class="settings" onclick="triggerJoinChannelTitle(this)"></span>'
    // 		// if (v.is_active != null) {
    // 		// 	if (v.is_active.indexOf(user_id) > -1) {
    // 		// 		roomDesign += '<h3 class="click-to-leave" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3><h3 class="click-to-leave" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + totalMember.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
    // 		// 	} else {
    // 		// 		roomDesign += '<h3 class="click-to-leave width100" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3>';
    // 		// 		roomDesign += '<h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
    // 		// 	}
    // 		// } else {
    // 		// 	roomDesign += '<h3 class="click-to-leave width100" id="roomBtn' + v.conversation_id + '" onclick="leaveRoom(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\')">Leave this room</h3>';
    // 		// 	roomDesign += '<h3 class="click-to-leave addlistHide" id="addtoList' + v.conversation_id + '" onclick="addtoList(\'' + v.participants.length + '\',\'' + v.created_by + '\',\'' + v.privacy + '\',\'' + v.group_keyspace + '\',\'' + v.conversation_id + '\',\'' + user_id + '\',\'' + v.title + '\')" style="color:#5cd4ef" >Show on left panel</h3>';
    // 		// }
    // 	}

    // 	roomDesign += '</div>';
    // }
    roomDesign += '</div>';
    return roomDesign;
}
var msgMoreBtn = (event) => {
    $(event.target).parents('.msgs-form-users-options').css('display', 'block');
    $(event.target).children('.msg-more-popup').attr('data-type', 'visible').show();
    var chat_Page_height = $('.chat-page').height();
    var scrollY = event.pageY;
    var total = chat_Page_height - scrollY;
    if (total < 90) {
        $(event.target).children('.msg-more-popup').css('top', '-' + ($(event.target).children('.msg-more-popup').height() + 35) + 'px');
    }
}

function TextDropText() {
    $('.TextDrop').text('Conversation');
    $('.individual-tab-seach-con .TextDrop').text('File Search');
    // $('#search_different_tab').attr('onkeyup','searchTagConvHead(event,this)');
    $('#search_different_tab').attr('onkeyup', 'searchMedia(event)');
}
$(document).mouseup(function(e) {
    var createToDoPop = $(".create-todo-popup");
    var searchPanel = $('.search-panel');
    var moreMenuPopup = $('.moreMenuPopup');
    var filterListPopup = $('.filterListPopup');
    var conv_tagOptions = $('.conv_tagOptions');
    var checklist_more_option = $('.checklist_more_option');
    var conv_tagged = $('.conv_tagged');
    var moreMenumsgPopup = $('.msg-more-popup');
    var repEmojiDiv = $('.emojiListContainer');
    var emoji_div = $('.emoji_div');
    var info_tooltip = $('.info_tooltip');

    var sendEmoji = $('.send-emoji');
    var mention_user_list = $('.mention_user_list');
    var taggedList = $('.addTagConv');
    var menuMore = $('.more-menu');
    var videoCallMenuPopup = $('.videoCallMenuPopup');
    var videocall = $('.video-call');
    var RoomImgOptDiv = $('.RoomImgOptDiv');
    var accessControlDiv = $('.accessControlDiv');
    var checkLIstItemContainer = $('.editMessageBody #msgCheckItemContainer');
    var invite_member = $('.photo-upload-invite-member .invite-member');
    var imgviewModal = $('#myModalImgview .modal-content');
    var src_filter = $('.src_total_msg_content');
    var item_more_popUp = $('.item_more_popUp');
    var filterBy_popup = $('.filterBy_popup');
    var searchAssign = $('#dueDatePickerChecklist .searchDivAction');
    // var allUser_list = $('._searchForm ul.allUser_list');
    // var _searchForm = $('.searchAndFilter ._searchForm');


    if (!$('.groupHvIn input').is(e.target) && $('.groupHvIn input').has(e.target).length === 0 && !$('.oldTagholder').is(e.target) && $('.oldTagholder').has(e.target).length == 0) {
        // $('.oldTagholder').hide();
    }
    // if(!imgviewModal.is(e.target) && imgviewModal.has(e.target).length === 0){
    // 	closeModal('myModalImgview');
    // }
    if (!invite_member.is(e.target) && invite_member.has(e.target).length === 0) {
        $('#updateRoomListMember').hide();
        $('#newRoomMemberList').hide();
        $('#viewlistUpdateroom').show();
    }

    // if(!_searchForm.is(e.target) && _searchForm.has(e.target).length === 0){
    // 	_searchForm.hide();
    // }

    // if(!allUser_list.is(e.target) && allUser_list.has(e.target).length === 0){
    // 	allUser_list.hide();
    // }

    //per msg more option

    if (info_tooltip.is(':visible')) {
        if (!$('.tooltip_target').is(e.target) && !info_tooltip.is(e.target) && info_tooltip.has(e.target).length === 0) {
            $('.i-conv').removeClass('active');
            $('.info_tooltip').removeClass('active');
            info_tooltip.hide();
        }
    }
    if (searchAssign.is(':visible')) {
        if (!searchAssign.is(e.target) && !$('#normalAssineeSec input').is(":focus") && $(e.target).parents('.searchDivAction').length == 0 && searchAssign.has(e.target).length === 0) {
            searchAssign.hide();
        }
    }

    if (src_filter.is(':visible')) {
        if (!$('.dropbtn').is(e.target) && !$('.searchplot').is(e.target) && $('.searchplot').has(e.target).length === 0 && !$('.TextDrop').is(e.target)) {
            $('.dropbtn').removeClass('rotate');
            src_filter.hide();
        }
    }

    if (item_more_popUp.is(':visible')) {
        if (!item_more_popUp.is(e.target) && !$('.item_more_tool').is(e.target) && $('.item_more_tool').has(e.target).length === 0) {
            $('.editMessageBody').find('.checkListItem').removeClass('active_an_more');
            $('.editMessageBody').find('.checkListItem').removeClass('active_more');
            // console.log($(e.target))
        }
    }
    if (filterBy_popup.is(':visible')) {
        if (!filterBy_popup.is(e.target) && !$('.item_more_tool').is(e.target) && $('.item_more_tool').has(e.target).length === 0) {
            filterBy_popup.hide();
            $('.filter_by').removeClass('active');
            // console.log($(e.target))
        }
    }


    if ($('.taglisttag').is(':visible')) {
        if (!$('.taglisttag').is(e.target) && !$('.searchplot').is(e.target) && $('.searchplot').has(e.target).length === 0) {
            $('.taglisttag').hide();
            TextDropText()
            $('#input_values input').attr('id', "searchAfter").attr('placeholder', "Type and enter to search message(s) in conversation").attr('onkeyup', 'searchThisThread(event,this)').focus().val('');


        }
    }



    if (moreMenumsgPopup.is(':visible')) {
        if (!moreMenumsgPopup.is(e.target) && moreMenumsgPopup.has(e.target).length === 0) {
            moreMenumsgPopup.hide();
            $(".msg-more-popup[data-type='visible']").parents('.msgs-form-users-options').removeAttr('style');
        }
    }

    if (!taggedList.is(e.target) && taggedList.has(e.target).length === 0) {
        taggedList.hide();
        if (conversation_id !== user_id) {
            $('.tagged').show();
        }

        $('.msg-separetor_head').css('z-index', '99');
        var checkNewTag = $('#CustagItemList').text().length;
        if (checkNewTag !== 0) {
            if ($('#CustagItemList').text() == '') {
                $('.CustagItemList').text('Tag upload(s) to be more organized...');
            } else {
                $('.CustagItemList').text($('#CustagItemList').text());
            }
            $('.CustagItemList').css("background-image", "url(/images/basicAssets/custom_tagged.svg)");
        } else {
            if ($('#CustagItemList').text() == '') {
                $('.CustagItemList').text('Tag upload(s) to be more organized...');
            } else {
                $('.CustagItemList').text($('#CustagItemList').text());
            }
            $('.CustagItemList').css("background-image", "url(/images/basicAssets/custom_not_tag.svg)");
        }
    }


    // if the target of the click isn't the container nor a descendant of the container
    if (!createToDoPop.is(e.target) && createToDoPop.has(e.target).length === 0) {
        createToDoPop.hide();
        $('#createTodo').show();
    }
    if (!searchPanel.is(e.target) && searchPanel.has(e.target).length === 0) {
        searchPanel.hide();
        $('#searchConversation').show();
    }

    if (moreMenuPopup.is(':visible') == true) {
        if (!moreMenuPopup.is(e.target) && moreMenuPopup.has(e.target).length === 0 && !menuMore.is(e.target) && menuMore.has(e.target).length === 0) {
            // open_emoji()
            moreMenuPopup.hide();
        }
    }
    if (filterListPopup.is(':visible') == true) {
        if (!filterListPopup.is(e.target) && filterListPopup.has(e.target).length === 0 && !$('#viewFilterPopup').is(e.target) && $('#viewFilterPopup').has(e.target).length === 0) {
            // open_emoji()
            filterListPopup.hide();
        }
    }

    if (conv_tagOptions.is(':visible') == true) {
        if (!conv_tagOptions.is(e.target) && conv_tagOptions.has(e.target).length === 0 && !conv_tagged.is(e.target) && conv_tagged.has(e.target).length === 0) {
            // open_emoji()
            conv_tagOptions.hide();
        }
    }
    if (checklist_more_option.is(':visible') == true) {
        if (!checklist_more_option.is(e.target) && checklist_more_option.has(e.target).length === 0) {
            // open_emoji()
            if ($(e.target).attr('id') !== 'checkListCounter' && !$(e.target).hasClass('classForChecklist')) {

                checklist_more_option.hide();
            }
        }
    }

    if (!repEmojiDiv.is(e.target) && repEmojiDiv.has(e.target).length === 0) {
        repEmojiDiv.remove();
    }

    if (emoji_div.is(':visible') == true) {
        // console.log('visibled popup')
        if (!emoji_div.is(e.target) && emoji_div.has(e.target).length === 0 && !sendEmoji.is(e.target) && sendEmoji.has(e.target).length === 0) {
            // open_emoji()
            emoji_div.remove();
        }
    }
    if (mention_user_list.is(':visible') == true) {
        // console.log('visibled popup')
        if (!mention_user_list.is(e.target) && mention_user_list.has(e.target).length === 0) {
            // open_emoji()

            if ($('#mention_user_list_file').is(':visible')) {

                placeCaretAtEnd(document.getElementById('FileComment'));
            } else if ($('#replymention_user').is(':visible')) {
                placeCaretAtEnd(document.getElementById('msg_rep'));
            } else {
                placeCaretAtEnd(document.getElementById('msg'));
            }
            mention_user_list.hide();
        }
    }


    if (videoCallMenuPopup.is(':visible') == true) {
        if (!videoCallMenuPopup.is(e.target) && videoCallMenuPopup.has(e.target).length === 0 && !videocall.is(e.target) && videocall.has(e.target).length === 0) {

            videoCallMenuPopup.hide();
        }
    }

    if (RoomImgOptDiv.is(':visible') == true) {
        if (!RoomImgOptDiv.is(e.target) && RoomImgOptDiv.has(e.target).length === 0 && !$('.img-div').is(e.target) && $('.img-div').has(e.target).length === 0) {
            RoomImgOptDiv.hide();
        }
    }

    if (accessControlDiv.is(':visible') == true) {
        if (!accessControlDiv.is(e.target) && accessControlDiv.has(e.target).length === 0) {
            accessControlDiv.hide();
        }
    }


    // if(checkLIstItemContainer.is(':visible')){
    // 	if(checkLIstItemContainer.parents('.msgs-form-users').has(e.target).length === 0 ){
    // 		$('.editMessageAction .saveBtn').trigger('click');
    // 	}
    // }
});

$(document).mousedown(function(e) {
    var checklistFilterPopup = $('.checklistFilterPopup');
    var _searchForm = $('#_searchForm');
    var gotopage = $('#gotopage');
    var allUser_list = $('#_searchForm .allUser_list');
    if (checklistFilterPopup.is(':visible')) {
        if ($(e.target).parents('.flatpickr-calendar').length == 0 && !$('.flatpickr-day').is(e.target) && !$('.checklistfilter_item').is(e.target) && !checklistFilterPopup.is(e.target) && checklistFilterPopup.has(e.target).length === 0) {
            checklistFilterPopup.hide();
        }
    } else if (allUser_list.is(':visible')) {
        if (!allUser_list.is(e.target) && allUser_list.has(e.target).length === 0) {
            allUser_list.hide();
        }
    } else if (_searchForm.is(':visible')) {
        if ($(e.target).parents('.flatpickr-calendar').length == 0 && !$('.submit_inputBar').is(e.target) && !$('.flatpickr-innerContainer').is(e.target) && !$('.flatpickr-calendar').is(e.target) && !$('.flatpickr-day').is(e.target) && _searchForm.is(e.target)) {
            _searchForm.hide();
            $('#hayvenSidebar').css('z-index', '9999');
            $('#personalConnectActive').css('z-index', '4');
        }
    } else if (gotopage.is(':visible')) {
        console.log(9980, e.target)
        if (!gotopage.is(e.target) && gotopage.has(e.target).length === 0) {
            gotopage.hide();
        }
    }
});

// create to do popup

var sideBarSearchcollapses = () => {

    $(".side-bar-filter-icon.checklist_fil").click(function() {
        if ($(this).hasClass('activeFil')) {
            $(this).removeClass('activeFil');
        } else {
            $(this).addClass('activeFil');
        }
    });
    // $(".side-bar-search-icon").mouseenter(function () {
    // 	if ($(".thread_active").is(":visible") !== true ) {
    // 		// $(".side_bar_thread_ico").show();
    // 		$(this).hide();
    // 		if ($('#sideBarSearch').is(':visible') == false) {
    // 			$('#sideBarSearch').show();
    // 		}
    // 	}

    // });

    $(".side-bar-search-icon").click(function() {
        if ($(".thread_active").is(":visible") !== true) {
            // $(".side_bar_thread_ico").show();
            $(this).hide();
            $('.side-bar-filter-icon').hide();
            $('.sidebarSearchremove').show();
            if ($('#sideBarSearch').is(':visible') == false) {
                $('#sideBarSearch').show();
                $('#sideBarSearch').focus();
            }
        }

    });

    $('.sidebarSearchremove').click(function() {
        if ($(".thread_active").is(":visible") !== true) {
            $(".side-bar-search-icon").show();
            $(".side-bar-filter-icon").show();
            $(this).hide();
            if ($('#sideBarSearch').is(':visible')) {
                $('#sideBarSearch').hide();
                $('#sideBarSearch').val('');
                $('.side_bar_list_item li').show();
                $('.side_bar_list_item li').unhighlight();
                $('#errMsg').html('');
                $('#errMsg').hide();

                clear_search();
            }
        }

    });


    $('#sideBarSearch').mouseleave(function() {

        if ($('#sideBarSearch').is(':focus') == false && $('#sideBarSearch').val().length < 1) {
            $(this).hide();
            $(".side-bar-search-icon").show();
            $(".side-bar-filter-icon").show();
            $('.sidebarSearchremove').hide();
        }

    });

    $('#sideBarSearch').blur(function() {
        if ($('#sideBarSearch').val().length < 1) {
            $(this).hide();
            $(".side-bar-search-icon").show();
            $(".side-bar-filter-icon").show();
            $('.sidebarSearchremove').hide();
        }

    });
}
sideBarSearchcollapses();

$(".thread_active").on('click', function() {
    // $('#connectAsideContainer').hide();
    $(".label_head_aside").hide();
    $(".threadasideContainer").show();
    $.each($(".side_bar_list_item li"), function(k, per_li) {
        if ($(per_li).hasClass('has_unread_replay')) {
            $(per_li).show();
            var nor = $(per_li).attr('data-nor');
            // console.log(8762,nor)
            $(per_li).find('.unreadMsgCount').html(nor);
        } else
            $(per_li).hide();
    });
});
var ur_replay2ur_msg = () => {
    $.each($(".side_bar_list_item li"), function(k, per_li) {
        var nom = Number($(per_li).attr('data-nom')) > 0 ? Number($(per_li).attr('data-nom')) : "";
        // console.log(8772,nom)
        $(per_li).find('.unreadMsgCount').html(nom);
    });
};
var actionConvID = '';
var threadReplySecrectuser = [];
var threadReplyMsgStatus = [];
var threadReply = (event) => {
    console.log(9970, event, conversation_id);
    if (conversation_id == undefined) {
        conversation_id = $(event.target).attr('conv-id')
    }
    findMyLinks(conversation_id);
    $('._replayConv_name').text(' on ' + $('#conv_title').find('.converstaion_name').text());
    $('#threadReplyPopUp').removeClass('fileActive');
    if (checklistRepText != null) {
        $('#define_thread_text').text(checklistRepText + ':');
        checklistRepText = null;
    } else {
        $('#define_thread_text').text('');
    }
    // console.log("Thread reply click");
    var msgid_call = $(event.target).closest('.msgs-form-users').attr('data-msgid');
    // socket.emit('call_running_status', { // first check if user is busy in calling
    // 	user_id : user_id,
    // 	msg_id : msgid_call,
    // 	conversation_id : conversation_id
    // }, function (status) {
    console.log("call__running__status", status);
    // if(status && status.msg_id == msgid_call){
    // 	// console.log(111112)
    // 	// find_and_show_reply_msg(msgid_call);
    // 	var win_call = window.open("", "calling");
    // 	if(win_call.document.getElementById("chat_container").style.display == 'block'){
    // 		win_call.document.getElementById('msg_rep').focus();
    // 		win_call.focus();
    // 	}else{
    // 		win_call.openChatShare();
    // 		win_call.document.getElementById('msg_rep').focus();
    // 		win_call.focus();
    // 	}

    // }else{ // if not then show reply window
    // console.log(222223)
    threadReplyMsgStatus = [];
    $('#unreadthreadMsgCounter').attr('data-counter', 0);
    $('#msg_rep').html('');
    $('.nextThread').attr("data-ano_msg_id", "");
    $('.pevThread').attr("data-ano_msg_id", "");
    if ($('#threadReplyPopUp').is(":visible") == false) {
        var conversation_id = $(event.target).attr('conv-id');
        actionConvID = conversation_id;
        console.log(10726, conversation_id)
        var msgid = $(event.target).closest('.msgs-form-users').attr('data-msgid');
        var msgtype = $(event.target).closest('.msgs-form-users').attr('data-msg-type');
        $('.msg_id_' + msgid).find('.countReply').removeClass('unreadOn');

        var tor = Number($('.msg_id_' + msgid).find('.readunreadreply').attr('data-count'));
        $('.msg_id_' + msgid).find('.readunreadreply').attr('data-unread_reply', 0);
        $('#msgThread_' + msgid).find('.view_threaded_chat_str').html('View threaded chat (<span class="no-of-replies" >' + tor + '</span>) ');

        
        console.log(10011, 'click')
        $.ajax({
            url: "/alpha2/open_thread",
            type: "POST",
            data: { msg_id: msgid, conversation_id: conversation_id },
            dataType: "JSON",
            success: function(threadrep) {
                // console.log(5867, threadrep);
                threadReplySecrectuser = [];

                if ($('#msgThread_' + msgid).hasClass('secret_message_found')) {
                    // var allsecretUser2 = $('#msgThread_' + msgid).find('.secret_heading').attr('data-id');
                    var allsecretUser = $('#msgThread_' + msgid).attr('data-secret-user');
                    if (allsecretUser != '') {
                        allsecretUser = allsecretUser.split(',');

                        threadReplySecrectuser = allsecretUser;
                        // if (threadReplySecrectuser.indexOf(user_id) == -1) {
                        //     threadReplySecrectuser.push(user_id);
                        // }

                        $.each(participants, function(k, v) {
                            if (threadReplySecrectuser.indexOf(v) > -1) {
                                threadReplyMsgStatus.push(v);
                            }
                        })

                    }
                }

                thread_id = threadrep;
                thread_root_id = msgid;

                $('#threadReplyPopUp .replies-container').html("");
                $('#threadReplyPopUp').attr('thread_root', thread_id);

                /* main thread msg html design */
                var design = $('#msgThread_' + msgid).find('.user-msg').html();
                design = $.parseHTML(design);
                design[0] = '';


                $('#threadReplyPopUp').find('#old_main_msg .thread-user-msg p').html(design);
                $('#threadReplyPopUp').find('#old_main_msg .thread-user-msg p').removeAttr('id');

                // console.log(7929, design)
                draw_reply_popup_html(
                    conversation_id,
                    msgid,
                    $('.msg_id_' + msgid).find('.msg-user-photo>img').attr('alt'),
                    $('.msg_id_' + msgid).find('.user-msg').attr('data-sendername'),
                    $('.msg_id_' + msgid).find('.msg-time').html(),
                    $('#threadReplyPopUp').find('#old_main_msg .thread-user-msg p').html());

                $('#msg_rep').attr('placeholder', 'Reply to ' + $('.msg_id_' + msgid).find('.user-msg').attr('data-sendername') + '');

                /* end of main thread msg html design */

                // $('#threadReplyPopUp .replies-container').html("");
                $('.pevThread').hide();
                $('.nextThread').hide();
                var all_rep_btn = $(".msgReply");
                for (var i = 0; i < all_rep_btn.length; i++) {
                    if ($(all_rep_btn[i]).closest('.msgs-form-users').attr('data-msgid') == msgid) {
                        if (i > 0) {
                            $('.pevThread').show();
                            $('.pevThread').attr("data-ano_msg_id", $(all_rep_btn[i - 1]).closest('.msgs-form-users').attr('data-msgid'));
                        }
                        if (i + 1 < all_rep_btn.length) {
                            $('.nextThread').show();
                            $('.nextThread').attr("data-ano_msg_id", $(all_rep_btn[i + 1]).closest('.msgs-form-users').attr('data-msgid'));
                        }
                    }
                }
                // console.log(10119,$(event.target).attr('click-type'))
                // if ($(event.target).attr('click-type') == 'reaply') {
                //     $('#threadReplyPopUp').show();
                //     $('#msg_rep').focus();
                // } else {
                //     uploadPopup_visible = 'msg';
                //     $('#repAttachFconnect').trigger('click');
                // }
                if ($(event.target).attr('click-type') == 'attach') {
                    uploadPopup_visible = 'msg';
                    $('#repAttachFconnect').trigger('click');
                } else {
                    $('#threadReplyPopUp').show();
                    $('#msg_rep').focus();
                }

                find_and_show_reply_msg(msgid, conversation_id);
                // hide write reply when message type is call
                if (msgtype == "call") {
                    $('.write-thread-msgs').hide();
                    //$('.pevThread,.nextThread').hide();
                } else {
                    $('.write-thread-msgs').show();

                    // $('.pevThread,.nextThread').show();
                }
                if ($('.nextThread').attr("data-ano_msg_id") == '') {
                    $('.nextThread').hide();
                } else if ($('.pevThread').attr("data-ano_msg_id") == '') {
                    $('.pevThread').hide();
                }
                inviewfun();
                $('#threadReplyPopUp .main-thread-msgs').removeAttr('style');
                var height = $('#threadReplyPopUp .main-thread-msgs').height();
                $('#threadFullmsg').remove();
                $('#threadReplyPopUp').removeClass('small_div');
                if (height > 85) {
                    $('#threadReplyPopUp .main-thread-msgs .thread-msg-time').after('<span id="threadFullmsg" onclick="showFullMsgThread()">Show full message</span>');
                    $('#threadReplyPopUp .main-thread-msgs').css({
                        'overflow-y': 'hidden',
                        'max-height': ' 85px'
                    });
                    showFullMsgThread();
                }
            },
            error: function(err) {
                console.log(3676, err.responseText);
            }
        });
    }
    // }
    // });
};

var read_rep_counter = 0;
var find_and_show_reply_msg = (msgid, conversation_id) => {
    console.log(10126, msgid)
    var noofreply;
    if ($('.msg_id_' + msgid).find('.no-of-replies').text() == '') {
        noofreply = 'No';

    } else {
        noofreply = parseInt($('.msg_id_' + msgid).find('.no-of-replies').text());
    }
    if (noofreply == 1) {

        $('.reply-separetor p').html(noofreply + ' Reply');
    } else {
        $('.reply-separetor p').html(noofreply + ' Replies');

    }
    // console.log(6827, unread_replay_data);
    $.each(unread_replay_data, function(k, v) {
        if (v.root_msg_id == msgid) {
            var nor = Number($('#conv' + v.root_conv_id).attr('data-nor'));
            $('#conv' + v.root_conv_id).attr('data-nor', (nor - 1 > 0) ? nor - 1 : "");
            // console.log(8952,(nor - 1 > 0) ? nor - 1 : "")
            if ($('.threadasideContainer').is(':visible')) {
                $('#conv' + v.root_conv_id).find('.unreadMsgCount').text((nor - 1 > 0) ? nor - 1 : "");
            }
            $('.msg_id_' + msgid).css('background', 'transparent');
            v.root_msg_id = 0;
            v.root_conv_id = 0;
            read_rep_counter++;
        }
    });
    if ((unread_replay_data.length - read_rep_counter) == 0) {
        $(".thread_active").hide();
        $(".thread_message").hide();
        read_rep_counter = 0;
    }
    reply_msg_counter();
    console.log(10161, noofreply)
    if (noofreply > 0) {
        socket.emit('find_reply', { msg_id: msgid, conversation_id: conversation_id }, (reply_list) => {
            console.log(10163, reply_list)
            if (reply_list.status) {
                if (reply_list.data.length > 0) {
                    // console.log(5692,reply_list)
                    var reply_list_data = _.sortBy(reply_list.data, ["created_at", ]);

                    var need_update_reply_message_seen_list = [];
                    // console.log(5928,reply_list_data);
                    var rep_conv_id = reply_list_data[0].conversation_id;
                    $('#threadReplyPopUp').attr('thread_root', rep_conv_id);
                    $.each(reply_list_data, function(key, row) {
                        if (row.msg_status == null) {
                            if (row.sender == user_id) {
                                // This msg send by this user; so no need to change any seen status
                            } else {
                                // This msg receive by this user; so need to change seen status
                                // need_update_reply_message_seen_list.push(row.msg_id);
                            }
                        }
                        // If msg status have some user id, then
                        else {
                            if (row.msg_status.indexOf(user_id) > -1) {
                                // This msg already this user seen
                                if (row.sender != user_id) {
                                    // This msg receive by this user; so need to change seen status
                                    need_update_reply_message_seen_list.push(row.msg_id);
                                }
                            } else {

                            }
                        }
                        if (need_update_reply_message_seen_list.length == 1)
                            draw_rep_urhr();
                        draw_rep_msg(row);
                    });
                    scrollToBottom('#repChatContainer', 0);
                    inviewfun();
                    changeMsgLinkTitle();

                    if (need_update_reply_message_seen_list.length > 1)
                        find_rep_urhr_add_s(need_update_reply_message_seen_list.length);

                    if (need_update_reply_message_seen_list.length > 0) {
                        $.ajax({
                            url: '/alpha2/update_msg_status',
                            type: 'POST',
                            data: {
                                msgid_lists: JSON.stringify(need_update_reply_message_seen_list),
                                user_id: user_id,
                                conversation_id: rep_conv_id
                            },
                            dataType: 'JSON',
                            success: function(res) {
                                socket.emit('update_msg_seen', {
                                    msgid: need_update_reply_message_seen_list,
                                    senderid: to,
                                    receiverid: user_id,
                                    conversation_id: conversation_id
                                });
                            },
                            error: function(err) {
                                console.log(err);
                            }
                        });
                    }

                    // separetor_show_hide();
                    inviewfun();
                }
            } else {
                // console.log('replay search query error', reply_list); // error meessage here
            }
        });
    }
};
var find_and_show_reply_msg_popup = (msgid, convid) => {
    // console.log(6919, unread_replay_data);
    $.each(unread_replay_data, function(k, v) {
        if (v.root_msg_id == msgid) {
            var nor = Number($('#conv' + v.root_conv_id).attr('data-nor'));
            $('#conv' + v.root_conv_id).attr('data-nor', (nor - 1 > 0) ? nor - 1 : "");
            // console.log(9046,(nor - 1 > 0) ? nor - 1 : "")
            $('#conv' + v.root_conv_id).find('.unreadMsgCount').text((nor - 1 > 0) ? nor - 1 : "");
            $('.msg_id_' + msgid).css('background', 'transparent');
            v.root_msg_id = 0;
            v.root_conv_id = 0;
            read_rep_counter++;
        }
    });
    if ((unread_replay_data.length - read_rep_counter) == 0) {
        $(".thread_active").hide();
        $(".thread_message").hide();
        read_rep_counter = 0;
    }
    // if (noofreply > 0) {
    socket.emit('find_reply', { msg_id: msgid, conversation_id: convid }, (reply_list) => {
        if (reply_list.status) {
            var reply_list_data = _.sortBy(reply_list.data, ["created_at", ]);

            var need_update_reply_message_seen_list = [];
            var rep_conv_id = reply_list_data[0].conversation_id;
            $.each(reply_list_data, function(key, row) {
                if (row.msg_status == null) {
                    if (row.sender == user_id) {
                        // This msg send by this user; so no need to change any seen status
                    } else {
                        // This msg receive by this user; so need to change seen status
                        // need_update_reply_message_seen_list.push(row.msg_id);

                    }
                }
                // If msg status have some user id, then
                else {
                    if (row.msg_status.indexOf(user_id) > -1) {
                        // This msg already this user seen
                        if (row.sender != user_id) {
                            // This msg receive by this user; so need to change seen status
                            need_update_reply_message_seen_list.push(row.msg_id);
                        }
                    } else {

                    }
                }
                if (need_update_reply_message_seen_list.length == 1)
                    draw_rep_urhr();
                draw_rep_msg(row);
            });
            scrollToBottom('#repChatContainer', 0);
            inviewfun();

            if (need_update_reply_message_seen_list.length > 1)
                find_rep_urhr_add_s(need_update_reply_message_seen_list.length);

            var thisconv_count = 0;
            for (var m = 0; m < urrm_pn.length; m++) {
                if (urrm_pn[m].root_conv_id == convid)
                    thisconv_count++;
                else
                    thisconv_count = 1;
                if (urrm_pn[m].root_conv_id == convid && urrm_pn[m].root_msg_id == msgid) {
                    if (thisconv_count > 1) {
                        if (urrm_pn[m - 1].root_conv_id == convid) {
                            $('.pevThread').show();
                            $('.pevThread').attr("data-ano_msg_id", urrm_pn[m - 1].root_msg_id);
                            $('.pevThread').attr("data-conv_id", urrm_pn[m - 1].root_conv_id);
                        }
                    }
                    if (m + 1 < urrm_pn.length) {
                        if (urrm_pn[m + 1].root_conv_id == convid) {
                            $('.nextThread').show();
                            $('.nextThread').attr("data-ano_msg_id", urrm_pn[m + 1].root_msg_id);
                            $('.nextThread').attr("data-conv_id", urrm_pn[m + 1].root_conv_id);
                        }
                    }
                }
            }

            if (need_update_reply_message_seen_list.length > 0) {
                $.ajax({
                    url: '/alpha2/update_msg_status',
                    type: 'POST',
                    data: {
                        msgid_lists: JSON.stringify(need_update_reply_message_seen_list),
                        user_id: user_id,
                        conversation_id: rep_conv_id
                    },
                    dataType: 'JSON',
                    success: function(res) {
                        // socket.emit('update_msg_seen', {
                        //   msgid: need_update_reply_message_seen_list,
                        //   senderid: to,
                        //   receiverid: user_id,
                        //   conversation_id: convid
                        // });
                    },
                    error: function(err) {
                        console.log(err);
                    }
                });
            }

            // separetor_show_hide();
        } else {
            // console.log('replay search query error', reply_list); // error meessage here
        }
    });
    // }
    reply_msg_counter();
};
var draw_reply_popup_html = (rep_con_id, rep_msg_id, img, name, time, body) => {
    var main_msg_body = '<div class="main-thread-msgs main_thread">';
    main_msg_body += '<div class="thread-user-photo"><img src="' + file_server + 'profile-pic/Photos/' + img + '" alt="' + img + '"></div>';
    main_msg_body += '<div class="thread-user-msg" data-rep_con_id="' + rep_con_id + '" data-rep_msg_id="' + rep_msg_id + '"><h4>';
    main_msg_body += name;
    main_msg_body += '&nbsp;<span class="thread-msg-time">' + time + '</span>';
    main_msg_body += '</h4>';
    if (body) main_msg_body += '<p>' + body + '</p>';
    else main_msg_body += '<p></p>';
    main_msg_body += '</div>';
    main_msg_body += '</div>';
    // $('#threadReplyPopUp .main-thread-msgs').html(main_msg_body);
    $('#threadReplyPopUp .replies-container').prepend(main_msg_body);
    $('#threadReplyPopUp .main-thread-msgs').find('.attach_tag,.replies').remove();
    $('#threadReplyPopUp .main-thread-msgs').find('.checkListItem').removeClass('hiddenCl');
    $('#threadReplyPopUp .updatedTextOriginal').removeClass('hiddenCl');
    $('#threadReplyPopUp .main-thread-msgs').find('.showMoreEditedmsg').remove();
    $('#threadReplyPopUp').attr('data-conv', rep_con_id);

};

function drawDeleteText(msgid) {
    if ($('.delete_text' + msgid).is(':visible')) {
        let t = Number($('.delete_text' + msgid).attr('data-length'));
        t = t + 1;
        $('.delete_text' + msgid).attr('data-length', t);
        $('.delete_text' + msgid).text(t + ' file(s) deleted.');

    } else {
        $('.delete_text' + msgid).attr('data-length', 1);
        $('.delete_text' + msgid).text('1 file(s) deleted.');
    }
}
var draw_rep_msg = (row, recentdraw = false) => {
    var nowFilesLength = getMyFilesLengthTotal(row);
    row['delete_text'] = '';
    row['total_delete'] = 0;
    if (row.total_files == 'null') {
        row.total_files = 0;
    } else {
        if (Number(row.total_files) > nowFilesLength) {
            row['delete_text'] = Number(row.total_files) - nowFilesLength + ' file(s) deleted.'
            row['total_delete'] = Number(row.total_files) - nowFilesLength;
        }
    }
    // console.log('draw_rep_msg',row);

    // if(row.created_at > '2020-12-24T12:13:41.046Z'){
    // 	var bytes  = CryptoJS.AES.decrypt(row.msg_body, 'freeli_01');
    // 	row['msg_body'] = bytes.toString(CryptoJS.enc.Utf8);
    // }

    /* Start Date Group By */
    if (row.msg_body.indexOf('~@') > -1) {
        row.msg_body = row.msg_body.split('  ').join('~@');
        // data.msg_body = data.msg_body.replace("@~", "~@");
        var arr = row.msg_body.split('~@');
        var text = ''
        for (u in arr) {
            var user_info = findObjFromUserName(arr[u]).id;
            if (arr[u] == 'Everyone') {
                text = text + '<div onclick="actionMentionUser(event,\'Everyone\')" data-id="Everyone" class="mention_user_msg solid_mention" data-mention="@Everyone"></div>'
            } else {
                if (user_info) {
                    text = text + '<div onclick="actionMentionUser(event,\'' + user_info + '\')" data-id="' + user_info + '" class="mention_user_msg solid_mention" data-mention="@' + arr[u] + '"></div>'
                } else {
                    text = text + arr[u];
                }
            }
        }
        row.msg_body = text;
    }
    if (row.msg_body.indexOf('href') > -1) {
        $('#forTextModify').html(row.msg_body);
        let urlLength = $('#forTextModify').find('a').length;

        if (urlLength == 1) {
            let pendata = '';
            if (row.sender == user_id) {
                if (row.msg_body.indexOf('email_link') == -1) {

                    pendata = '<span class="edit_pen flag_forLater" onclick="editMyOwnLink(this)" data-value="' + row.msg_id + '"></span><br>'
                }
                row.msg_body = '<h1 class="view_link_title onlyLinkTitle' + row.msg_id + '" onclick="editMyOwnLink(this)" data-value="' + row.msg_id + '"></h1>' + pendata + '' + row.msg_body;
            } else {
                row.msg_body = '<h1 class="view_link_title onlyLinkTitle' + row.msg_id + '"></h1><br>' + pendata + '' + row.msg_body;
            }


        }
    }
    var msg_date = moment(row.created_at).calendar(null, {
        sameDay: '[Today]',
        lastDay: '[Yesterday]',
        lastWeek: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; },
        sameElse: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; }
    });
    var temp_date = msg_date;
    if ($('#threadReplyPopUp').is(':visible')) {
        if ($('#threadReplyPopUp').attr('thread_root') == undefined || $('#threadReplyPopUp').attr('thread_root') == '') {
            $('#threadReplyPopUp').attr('thread_root', row.conversation_id)
        }
    }
    // if (append) {
    $.each($('.replies-container .msg-separetor'), function(k, v) {
        if ($(v).text() == msg_date) {
            msg_date = null;
            return 0;
        }
    });
    // && $('.replies-container .msg-separetor-unread').length == 0
    if (msg_date !== null) {
        var date_html = '<div class="msg-separetor" data-format="' + moment(row.created_at).format('YYYY-MM-DD') + '" data-date="' + msg_date + '"><p>' + msg_date + '</p></div>';
        $("#threadReplyPopUp .replies-container").append(date_html);
    }
    // }

    var msg_append = true;
    var msg_deleted = false;

    if (row.has_delete != null) {
        if (row.has_delete.indexOf('delete_for_all') == -1) {
            if (row.has_delete.indexOf(user_id) > -1) {
                msg_deleted = true;
            }
        } else {
            msg_deleted = true;
        }
    }
    if (row.has_hide != null) {
        if (row.has_hide.indexOf(user_id) > -1) {
            msg_append = false;
        }
    }
    var has_title = findObjForUser(row.sender).fullname;
    if (row.sender == user_id) {
        has_title = "You";
    }
    if (msg_deleted) {
        row.msg_body = '<i><img src="/images/delete_msg.png" class="deleteicon"> ' + has_title + ' deleted this message.</i><span onclick="permanent_delete_silently(\'' + row.msg_id + '\')" class="silent_delete"> (Remove this line)</span>';
        // row.msg_body = '<i><img src="/images/delete_msg.png" class="deleteicon"> '+has_title+' deleted this message.</i>';
    }
    // var isiturl = isURL(row.msg_body);
    if (row.attch_imgfile == null) {
        row.attch_imgfile = [];
    }
    if (row.attch_videofile == null) {
        row.attch_videofile = [];
    }
    if (row.attch_otherfile == null) {
        row.attch_otherfile = [];
    }
    if (row.attch_audiofile == null) {
        row.attch_audiofile = [];
    }

    var filesClass = '';
    if (row.attch_imgfile.length > 0 || row.attch_videofile.length > 0 || row.attch_otherfile.length > 0 || row.attch_audiofile.length > 0) {
        filesClass = 'msg_files';
    } else {
        filesClass = 'msg_text';
    }

    var isiturl = false;
    var html = '<div class="' + filesClass + ' main-thread-msgs rep_msg_' + row.msg_id + '" data-msgid="' + row.msg_id + '" msg-type="' + row.msg_type + '">';
    html += '<div class="thread-user-photo">';
    html += '<img class="' + (findObjForUser(row.sender).fullname ? 'user_img' + row.sender + '' : '') + '" src="' + file_server + 'profile-pic/Photos/' + (findObjForUser(row.sender).img ? findObjForUser(row.sender).img : 'img.png') + '" alt="">';
    html += '</div>';
    html += '<div class="thread-user-msg">';
    html += '<h4 class="' + (findObjForUser(row.sender).fullname ? 'user_name' + row.sender + '' : '') + '">' + (findObjForUser(row.sender).fullname ? findObjForUser(row.sender).fullname : row.sender_name) + '&nbsp;<span class="thread-msg-time">' + moment(row.created_at).format('h:mm a') + '</span></h4>';
    if (msg_deleted) {
        html += '<p>' + row.msg_body + '</p>'
    } else {
        // if (row.msg_body == 'No Comments')
        // 	html += '<div class="reaplied_text" id="data_msg_body_rep'+row.msg_id+'"> </div>';
        // else
        if (row.attch_imgfile.length > 0 || row.attch_videofile.length > 0 || row.attch_otherfile.length > 0) {
            if (row.edit_history != null) {
                html += returnedithistoryDesignrep(row.edit_history, row, 'reaplied_text');
            } else {

                if (isiturl) {
                    html += '<div class="reaplied_text" id="data_msg_body_rep' + row.msg_id + '"><a style="text-decoration: none;" href="' + row.msg_body + '" target="_blank">' + row.msg_body + '</a></div>';
                } else {
                    html += '<div class="reaplied_text" id="data_msg_body_rep' + row.msg_id + '">' + row.msg_body + '</div>';
                }
            }
        } else {
            if (row.edit_history != null) {
                html += returnedithistoryDesignrep(row.edit_history, row, 'reaplied_text');
            } else {

                if (row.msg_body.indexOf('thread_chk_item') == -1) {
                    if (isiturl) {
                        html += '<div class="reaplied_text" id="data_msg_body_rep' + row.msg_id + '"><a style="text-decoration: none;" href="' + row.msg_body + '" target="_blank">' + row.msg_body + '</a></div>';
                    } else {
                        html += '<div class="reaplied_text" id="data_msg_body_rep' + row.msg_id + '">' + row.msg_body + '</div>';
                    }
                } else {
                    var thread_chk_item = row.msg_body.match(/<p class="thread_chk_item">([^\<]*?)<\/p>/g);
                    var msg_body = row.msg_body.split(thread_chk_item)[row.msg_body.split(thread_chk_item).length - 1];

                    html += '' + thread_chk_item + '';
                    if (isiturl) {
                        html += '<div class="reaplied_text" id="data_msg_body_rep' + row.msg_id + '"><a style="text-decoration: none;" href="' + msg_body + '" target="_blank">' + row.msg_body + '</a></div>';
                    } else {
                        html += '<div class="reaplied_text" id="data_msg_body_rep' + row.msg_id + '">' + msg_body + '</div>';
                    }
                }
            }
        }

        var multi_type_file = 0;
        if (row.attch_imgfile === null || row.attch_imgfile.length == 0)
            row.attch_imgfile = [];
        else multi_type_file = row.attch_imgfile.length;
        if (row.attch_videofile === null || row.attch_videofile.length == 0)
            row.attch_videofile = [];
        else multi_type_file += row.attch_videofile.length;
        if (row.attch_audiofile === null || row.attch_audiofile.length == 0)
            row.attch_audiofile = [];
        else multi_type_file++;
        if (row.attch_otherfile === null || row.attch_otherfile.length == 0)
            row.attch_otherfile = [];
        else multi_type_file++;

        var totalattachLength = 0;

        if (row.attch_videofile !== null) {
            if (multi_type_file == 1)
                html += per_msg_video_attachment(row.attch_videofile);
            else {
                html += per_msg_file_attachment(row.attch_videofile, user_id_to_fullname[row.sender], totalattachLength);
                totalattachLength += row.attch_videofile.length;
            }
        }
        if (row.attch_imgfile != null) {
            if (recentdraw) {
                if (multi_type_file == row.attch_imgfile.length)
                    html += per_msg_img_attachment_without_inview(row.attch_imgfile, row.sender_name, row.sender_img);
                else {
                    html += per_msg_file_attachment(row.attch_imgfile, user_id_to_fullname[row.sender], totalattachLength);
                    totalattachLength += row.attch_imgfile.length;
                }
            } else {
                // console.log(8003, row.attch_imgfile.length)
                if (multi_type_file == row.attch_imgfile.length && row.attch_imgfile.length < 2) {
                    html += per_msg_img_attachment(row.attch_imgfile, user_id_to_fullname[row.sender], user_id_to_img[row.sender], row.msg_body, totalattachLength);
                    totalattachLength += row.attch_imgfile.length;
                } else {
                    html += per_msg_file_attachment(row.attch_imgfile, user_id_to_fullname[row.sender], totalattachLength);
                    totalattachLength += row.attch_imgfile.length;
                }
            }
        }
        if (row.attch_audiofile !== null) {
            // html += per_msg_audio_attachment(row.attch_audiofile);
            html += per_msg_file_attachment(row.attch_audiofile, user_id_to_fullname[row.sender], totalattachLength);
            totalattachLength += row.attch_audiofile.length;
        }
        if (row.attch_otherfile !== null) {
            html += per_msg_file_attachment(row.attch_otherfile, user_id_to_fullname[row.sender], totalattachLength);
            totalattachLength += row.attch_otherfile.length;
        }
    }
    html += '<span class="item_delete_text delete_text' + row.msg_id + '" data-total="' + row.total_files + '" data-length="' + row.total_delete + '">' + row.delete_text + '</span>';
    // design += '<div class="item_delete_text">'+data.delete_text+'</div>';
    html += '</div>';

    html += '<div class="replies">';
    // Check emoji reaction message
    if (row.has_emoji !== null) {
        $.each(row.has_emoji, function(k, v) {
            if (v > 0)
                html += emoji_html(k, k, v);
        });
    }
    html += '</div>';

    if (!msg_deleted) {
        html += '<div class="msgs-form-users-options">';
        html += '<div data-balloon="Add Reaction" data-balloon-pos="up" class="call-rep-emoji" onclick="viewEmojiList(event)"></div>';
        html += '<div class="replys" data-msgid="' + row.msg_id + '" ></div>';
        html += '<div data-balloon="Upload a file" data-balloon-pos="up" class="replys replyAttach" onclick="$(\'#repAttachFconnect\').trigger(\'click\')"></div>';
        if (row.sender == user_id) {
            html += '<div class="hovOption editmsg" onclick="editReplyMsg(this)" data-id="' + row.msg_id + '" data-balloon="Edit Reply" data-balloon-pos="up"></div>';
        }

        // html += '<div style="display:none" class="tagOP" data-balloon="Add a Tag" data-balloon-pos="down" onclick="viewMessageTag(this)" msg-id="' + row.msg_id + '"></div>';
        html += '<div class="hovOption deletemsg" created-by="' + row.sender + '" msg-id="' + row.msg_id + '" onclick="deleteThreadMsg(this)" data-balloon="Delete Reply" data-balloon-pos="up"></div>';
        html += '</div>';
    }
    html += '</div>';
    if (msg_append) {

        $('#threadReplyPopUp .replies-container').append(html);
    }
    var containerHeight = $(".replies-container").height();
    // $('.forScrollBar .os-viewport').animate({ scrollTop: containerHeight }, 1);
    // scrollToBottom('#repChatContainer');
    // $('#repChatContainer').scrollTop($('#repChatContainer')[0].scrollHeight);
    messageEllipsis(row.msg_id, 'reply');
}

var draw_rep_urhr = () => {
    // var html = '<div class="msg-separetor-unread"><p>1 new reply</p></div>';
    // $("#threadReplyPopUp .replies-container").append(html);
    $('#unreadthreadMsgCounter').html(' New Reply')
    $('#unreadthreadMsgCounter').attr('data-counter', 1);
};

var find_rep_urhr_add_s = (nour) => {
    // $("#threadReplyPopUp .replies-container").find('.msg-separetor-unread>p').html(nour + ' new replies');
    $('#unreadthreadMsgCounter').html(' New Replies')
    $('#unreadthreadMsgCounter').attr('data-counter', nour);
};

var draw_rep_count = (msgid, rep_name, formThreadid) => {
    console.log(msgid, rep_name, formThreadid);
    var conv_id = $('.msg_id_' + msgid).attr('conv-id');
    var noofreply = Number($('.msg_id_' + msgid).find('.msgReply.readunreadreply').attr('data-count'));
    
    console.log('noofreply:', noofreply);
    if(isNaN(noofreply)){
        noofreply = 0;
    }
    if (noofreply > 0) {
        $('.msg_id_' + msgid).find('.no-of-replies').text(noofreply + 1);
        $('.msg_id_' + msgid).find('.msgReply').attr('data-count', noofreply + 1);
        $('.msg_id_' + msgid).find('.last_rep_text').html('Last reply ' + moment(new Date()).fromNow() + ' ' + rep_name);
    } else {
        var html = per_msg_rep_btn(conv_id, noofreply + 1, new Date(), rep_name, '');
        $('.msg_id_' + msgid).find('.msgReply').attr('data-count', noofreply + 1);
        $('.msg_id_' + msgid).find('.user-msg').append(html);
    }

    if (rep_name != 'You') {
        unread_thread_out_of_txt(msgid);
    }
    $('.msg_id_' + msgid).attr('show-toolbar', true);
    if (thread_id == formThreadid) {
        var checkScroll = ($('.msgs-form-users').last()[0].offsetTop - $('.msgs-form-users').last()[0].scrollHeight) - $('.chat-page .os-viewport').innerHeight();

        if (checkScroll <= $('.chat-page .os-viewport').scrollTop()) {
            $('#threadReplyPopUp .reply-separetor>p').html((noofreply + 1) + ' Reply');
            scrollToBottom('.chat-page .os-viewport', 0);
        } else {
            $('#threadReplyPopUp .reply-separetor>p').html((noofreply + 1) + ' Reply');
        }
    }
};

var open_another_rep = (event) => {
    var msg_id = $(event.target).attr('data-ano_msg_id');
    if ($('.msg_id_' + msg_id).length) {
        closeAllPopUp();
        $('.msg_id_' + msg_id).find('.msgReply p').trigger('click');
    } else {
        var conv_id = $(event.target).attr('data-conv_id');
        closeAllPopUp();
        $('#conv' + conv_id).attr('data-tmp_msgid', msg_id);
        $('#conv' + conv_id).trigger('click');
    }
};

function backToChat(param = true) {
    $(".threadasideContainer").hide();
    $('#connectAsideContainer').show();
    ur_replay2ur_msg();
    $(".side_bar_list_item li").css('display', 'inline-block');
    $(".label_head_aside").show();
    $('#connectAsideContainer .backToChat').hide();
    $('#filterUnread_msg').removeClass('activeComFilter');
    $("#conv" + conversation_id).removeClass('sideActive');
    $("#conv" + conversation_id).trigger('click');
    $('#errMsg').hide();
    $('#errMsg').html('');
    $('#unreadMsgFBar').remove();
    if (param) {
        cancelAllFilter();
    }
    $('body').removeClass('filter_thread_msg');
    $('.filter_thread_open').removeClass('filter_thread_open');
    if ($('#convFilterBar').length > 0) {
        reset_filter_conv('close');
    }
    if ($('#activityPanelContainer').is(':visible')) {
        $('#activityPanelContainer').hide();
        $('#activityPanelContainer').remove('sideActive').remove('selected');
    }


}

function viewCreateTodoPopupNew(event, title, id) {

    if (title.length > 0) {
        var imgsrc = [];
        $(".msg_id_" + id + " .img_attach").each(function(i, obj) {
            var file = $(obj).attr('src').split('/');
            if (imgsrc.indexOf(file[file.length - 1]) === -1) {
                imgsrc.push(file[file.length - 1]);
            }
        })

        $(".msg_id_" + id + " .fil_attach").each(function(i, obj) {
            var file = $(obj).attr('data-src').split('/');
            if (imgsrc.indexOf(file[file.length - 1]) === -1) {
                imgsrc.push(file[file.length - 1]);
            }
        })

        $(".msg_id_" + id + " .vdo_attach").each(function(i, obj) {
            var file = $(obj).attr('src').split('/');
            if (imgsrc.indexOf(file[file.length - 1]) === -1) {
                imgsrc.push(file[file.length - 1]);
            }
        })

        $(".msg_id_" + id + " .ado_attach").each(function(i, obj) {
            var file = $(obj).attr('src').split('/');
            if (imgsrc.indexOf(file[file.length - 1]) === -1) {
                imgsrc.push(file[file.length - 1]);
            }

        })

        $("#right-section-area-connect").hide();
        $("#right-section-area-todo").show();

        setCookie("create_to_f_con", title, 1);
        setCookie("create_to_f_participant", participants, 1);
        setCookie("create_to_f_atached", imgsrc, 1);

        createNewTodo();
        //window.location.href = "/basic_to_do";
    } else {
        var msgid = $(event.target).closest('.msgs-form-users').attr('data-msgid');
        var newtitle = 'New To Do';
        $('.msg-more-popup').hide();
        $('#delete_msg_div').css('display', 'flex');
        $('.del_msg_title').text('Create To Do')
        $('.main-deleted-msg').html($('.msg_id_' + msgid).find('.msg-user-photo')[0].outerHTML);
        $('.main-deleted-msg').append('<div class="delbody">' + $('.msg_id_' + msgid).find('.user-msg').html() + '</div>');
        $('#delete_msg_div').find('.delete_msg_sec_title').html('<strong>To Do title not found.  </strong> Are you sure you want to create a new To Do ?</span>');
        $('.btn-msg-del , .btn-cancel').hide();
        $('.delete_msg_div .btn_div').append('<button class="btn-cancel forcreateTodo" style="margin-right:18px;" onclick="closeAllPopUp()">No</button> <button class="btn-msg-del forcreateTodo" onclick="viewCreateTodoPopupNew(event,\'' + newtitle + '\',\'' + msgid + '\')">Yes</button>');
    }



}

function viewtodoAdOp() {
    viewMemberImg = [];
    sharedMemberList = [];
    currentMemberList = [];
    if ($('#toggle_area').is(':visible') == true) {
        $('#toggle_area').hide();
        $("#title_textbox").val('');
        $("#notes_area").val('');
        $("#timeFrom").val('');
        $("#timeTo").val('');
        $("#ReminderTime").val('');
        $('.ownerThisToDo').remove();
        $('.sharedIMG').remove();
        $('.share_textbox').val("");
    } else if ($('#toggle_area').is(':visible') == false) {
        $('#toggle_area').show();
        if ($('#sharePeopleList').find('.ownerThisToDo').length < 1) {
            $('#sharePeopleList .sharing_label').after('<img onclick="viewShareList(event)" src="' + file_server + 'profile-pic/Photos/' + user_img + '" data-uuid="' + user_id + '" class="ownerThisToDo">');
            currentMemberList.push(user_id);
            viewMemberImg.push(user_id);
            sharedMemberList.push(user_id);
        }

    }

}

function viewAllThread() {
    $('#threadReplyPopUpSlider').show();
}

/* Flag and unflag */
var flagunflag = (ele) => {
    // <img src="/images/basicAssets/Flagged.svg">
    var flaggedMsg = '<span class="flaggedMsg" onclick="flaggedUserMsg(event)"></span>';
    var flagged = '<img  src="/images/basicAssets/Flagged.svg" alt="Flagged">';
    var not_flagged = '<img src="/images/basicAssets/NotFlagged.svg" alt="Not Flagged">';

    var msgid = $(ele).closest('.msgs-form-users').attr('data-msgid');
    var conv_id = $(ele).closest('.msgs-form-users').attr('conv-id');
    var totalcount = Number($('#flagged_icon_filter').attr('data-count'));
    if ($(ele).closest('.msgs-form-users').find(".flaggedMsg").length == 1) {
        $.ajax({
            url: '/alpha2/flag_unflag',
            type: 'POST',
            data: { uid: user_id, msgid: msgid, is_add: 'no', conversation_id: conv_id },
            dataType: 'JSON',
            success: function(res) {
                if (res.status) {
                    $(ele).closest(".msgs-form-users").removeClass('flagged_background')
                    $(ele).closest(".msgs-form-users").find(".flaggedMsg").remove();
                    if ($(ele).closest(".msgs-form-users").find(".user-msg h4").find('.flag_forLater').length == 0) {

                        $(ele).closest(".msgs-form-users").find(".user-msg h4 .reply_btn_n").insertBefore('<span class="flag_forLater" onclick="triggerFlagForlater(this)"><span class="color_white" data-balloon="Flag for later " data-balloon-pos="right">Flag</span></span>');
                    }
                    $(ele).closest(".msgs-form-users").css('background-color', 'transparent');
                    $(ele).closest(".msgs-form-users").find(".flag").removeClass('flagged');
                    //update_local_conv_msg_flag(has_conv_into_local(conversation_id), msgid);
                    socket.emit('refresh_flag_msg', { user_id: user_id, msg_id: msgid, conversation_id: conv_id, is_add: 'no' })
                        // add_conv_into_local('html', $("#msg-container").html().toString(), user_id+conversation_id);
                    socket.emit('broadCastFlagged', { msg_id: msgid, type: 'no', user_id: user_id });
                    totalcount = totalcount - 1;
                    $('#flagged_icon_filter').attr('data-count', totalcount);

                    if (allFilteredItem.indexOf('flag') > -1) {
                        if (totalcount == 0) {
                            showFreeliToaster(false);
                        }
                    }

                }
            },
            error: function(err) {
                console.log(err.responseText);
            }
        });
    } else {
        $.ajax({
            url: '/alpha2/flag_unflag',
            type: 'POST',
            data: { uid: user_id, msgid: msgid, is_add: 'yes', conversation_id: conv_id },
            dataType: 'JSON',
            success: function(res) {
                if (res.status) {
                    $(ele).closest(".msgs-form-users").addClass('flagged_background')
                    $(ele).closest(".msgs-form-users").find(".user-msg h4 .reply_btn_n").insertBefore(flaggedMsg);
                    $(ele).closest(".msgs-form-users").find(".user-msg h4").find('.flag_forLater').remove();

                    // $(ele).closest(".msgs-form-users").css('background-color', 'rgba(224, 60, 49, 0.04)');
                    $(ele).closest(".msgs-form-users").find(".flag").addClass('flagged');
                    socket.emit('refresh_flag_msg', { user_id: user_id, msg_id: msgid, conversation_id: conv_id, is_add: 'yes' })
                    update_local_conv_msg_flag(has_conv_into_local(conv_id), msgid);
                    socket.emit('broadCastFlagged', { msg_id: msgid, type: 'yes', user_id: user_id });
                    if (totalcount == 0) {
                        $('#flagged_icon_filter').attr('data-balloon-visible', "");
                        setTimeout(function() {
                            $('#flagged_icon_filter').removeAttr('data-balloon-visible');
                        }, 2000)
                    }
                    $('#flagged_icon_filter').attr('data-count', (totalcount + 1));


                }
            },
            error: function(err) {
                console.log(err.responseText);
            }
        });
    }
};

function changeFlagAttr(data) {
    // console.log(6815,data)
    if ($('#msgThread_' + data.msg_id).is(':visible')) {
        var flaged_users = []
        var users = $('#msgThread_' + data.msg_id).attr('flaged-data');

        if (users == '' || users == 'null' || users == null) {
            flaged_users = [];
        } else {
            flaged_users = users.split(',');
        }
        if (data.type == 'no') {
            removeA(flaged_users, data.user_id);
        } else {
            if (flaged_users.indexOf(data.user_id) == -1) {
                flaged_users.push(data.user_id);
            }
        }
        $('#msgThread_' + data.msg_id).attr('flaged-data', flaged_users.join(','));

    }
}
socket.on('broadCastFlagged', function(data) {
    changeFlagAttr(data);
})
socket.on('refresh_flag', function(res) {
    // <img src="/images/basicAssets/Flagged.svg">
    var flaggedMsg = '<span class="flaggedMsg" onclick="flaggedUserMsg(event)"></span>';
    if (res.is_add == 'yes') {
        $('#msgThread_' + res.msg_id).addClass('flagged_background');
        $('#msgThread_' + res.msg_id).find(".flaggedMsg").remove();
        $('#msgThread_' + res.msg_id).find(".flag").removeClass('flagged');
        $('#msgThread_' + res.msg_id).find(".user-msg h4").find('.flag_forLater').remove();
        $('#msgThread_' + res.msg_id).find(".user-msg h4").append(flaggedMsg);

        // $('#msgThread_'+res.msg_id).css('background-color', 'rgba(224, 60, 49, 0.04)');
        $('#msgThread_' + res.msg_id).find(".flag").addClass('flagged');
    } else {
        $('#msgThread_' + res.msg_id).removeClass('flagged_background');
        $('#msgThread_' + res.msg_id).find(".flaggedMsg").remove();
        if ($('#msgThread_' + res.msg_id).find(".user-msg h4").find('.flag_forLater').length == 0) {

            $('#msgThread_' + res.msg_id).find(".user-msg h4").append('<span class="flag_forLater" onclick="triggerFlagForlater(this)"><span class="color_white" data-balloon="Flag for later " data-balloon-pos="right">Flag</span></span>');
        }
        $('#msgThread_' + res.msg_id).css('background-color', 'transparent');
        $('#msgThread_' + res.msg_id).find(".flag").removeClass('flagged');
    }
})
socket.on('msg_remove_IO_io', function(res) {
    var h4data = $('.msg_id_' + res.msg_id).find('.user-msg>h4').html();
    var delhtml = '<p> <i><img src="/images/delete_msg.png" class="deleteicon"> You deleted this message.</i><span onclick="permanent_delete_silently(\'' + res.msg_id + '\')" class="silent_delete"> (Remove this line)</span></p>';
    $('.msg_id_' + res.msg_id).find('.user-msg').html('<h4>' + h4data + '</h4>' + delhtml);
    $('.msg_id_' + res.msg_id).find('.createNTFC').remove();
    alldeletemsgid.push(res.msg_id);
    countAndGetchecklist();
});
var flggUserMsg = (event) => {
    flagunflag($(event.target));
};
/* End flag */
var flaggedUserMsg = (event) => {
    var msgid = $(event.target).closest('.msgs-form-users').attr('data-msgid');
    $(event.target).closest('.msgs-form-users.msg_id_' + msgid + '').find('.flag').click()
}

/* Start Emoji */
var viewEmojiList = (event) => {
    var design = '<div class="emojiListContainer">';
    design += '<span data-name="grinning" onclick="add_reac_into_replies(event)">😄</span>';
    design += '<span data-name="joy" onclick="add_reac_into_replies(event)">😂</span>';
    design += '<span data-name="open_mouth" onclick="add_reac_into_replies(event)">😮</span>';
    design += '<span data-name="disappointed_relieved" onclick="add_reac_into_replies(event)">😥</span>';
    design += '<span data-name="rage" onclick="add_reac_into_replies(event)">😡</span>';
    design += '<span data-name="thumbsup" onclick="add_reac_into_replies(event)">👍</span>';
    design += '<span data-name="thumbsdown" onclick="add_reac_into_replies(event)">👎</span>';
    design += '<span data-name="heart" onclick="add_reac_into_replies(event)">❤️</span>';
    design += '<span data-name="folded_hands" onclick="add_reac_into_replies(event)">🙏</span>';
    design += '<span data-name="check_mark" onclick="add_reac_into_replies(event)">✅</span>';
    // design += 	'<span data-name="warning" onclick="add_reac_into_replies(event)">⚠️</span>';
    design += '</div>';

    var divindex = $(event.target).parents('.msgs-form-users').index();

    if (!$(event.target).closest(".call-rep-emoji").find(".emojiListContainer").length == 1) {
        $(event.target).closest(".call-rep-emoji").append(design);
    }
    if (divindex == 1) {
        $(event.target).closest(".call-rep-emoji").find('.emojiListContainer').css({ 'bottom': '-68px' });
    } else {
        $('.emojiListContainer').css({ 'bottom': '30px' });
    }
    // else{
    // 	$(event.target).closest(".emoji").find(".emojiListContainer").remove();
    // }
};
var add_reac_into_replies = (event) => {
    if ($("#threadReplyPopUp").is(":visible")) {
        var convid = $("#threadReplyPopUp").attr("thread_root");
        var msg_id = $(event.target).closest('.main-thread-msgs').attr('data-msgid');
    } else {
        var convid = $(event.target).closest('.msgs-form-users').attr('conv-id');
        var msg_id = $(event.target).closest('.msgs-form-users').attr('data-msgid');
    }
    var src = $(event.target).attr('data-name');
    var emojiname = $(event.target).attr('data-name');

    $.ajax({
        url: '/alpha2/add_reac_emoji',
        type: 'POST',
        data: { msgid: msg_id, conversation_id: convid, emoji: emojiname },
        dataType: 'JSON',
        beforeSend: function() {
            // get_conversation_obj
            console.log({ msgid: msg_id, conversation_id: convid, emoji: emojiname, user_fullname, company_id, user_img, participants });
        },
        success: function(res) {
            if (res.status) {
                if (res.rep == 'add') {
                    append_reac_emoji(msg_id, src, 1);
                    socket.emit("emoji_emit", { msgid: msg_id, emoji_name: emojiname, src: src, type: res.rep, sender_id: user_id, conversation_id: convid, user_fullname, company_id, user_img, participants });
                } else if (res.rep == 'delete') {
                    update_reac_emoji(msg_id, src, -1);
                    socket.emit("emoji_emit", { msgid: msg_id, emoji_name: emojiname, src: src, type: res.rep, sender_id: user_id, conversation_id: convid, user_fullname, company_id, user_img, participants });
                } else if (res.rep == 'update') {
                    var oldsrc = res.old_rep;
                    update_reac_emoji(msg_id, oldsrc, -1);
                    append_reac_emoji(msg_id, src, 1);
                    socket.emit("emoji_emit", { msgid: msg_id, emoji_name: emojiname, src: src, oldsrc: oldsrc, type: res.rep, sender_id: user_id, conversation_id: convid, user_fullname, company_id, user_img, participants });
                }
            }
        },
        error: function(err) {
            console.log(err.responseText);
        }
    });
};
var append_reac_emoji = (msgid, src, count) => {
    if ($("#threadReplyPopUp").is(":visible")) {
        var allemoji = $('.rep_msg_' + msgid).find('.emoji span');
    } else {
        var allemoji = $('.msg_id_' + msgid).find('.emoji span');
    }
    if (allemoji == undefined) {
        emoji_html_append(msgid, src, count);
    } else {
        var noe = 0;
        $.each(allemoji, function(k, v) {
            if ($(v).attr('src') == src) {
                noe = parseInt($(v).next('.count-emoji').text());
                $(v).next('.count-emoji').text(noe + 1);
            }
        });
        if (noe === 0) {
            emoji_html_append(msgid, src, count);
        }
    }
    $('.emojiListContainer').remove();
};
var update_reac_emoji = (msgid, src, count) => {
    if ($("#threadReplyPopUp").is(":visible")) {
        var allemoji = $('.rep_msg_' + msgid).find('.emoji span');
    } else {
        var allemoji = $('.msg_id_' + msgid).find('.emoji span');
    }

    var noe = 0;
    $.each(allemoji, function(k, v) {
        if ($(v).attr('data-name') == src) {
            noe = parseInt($(v).next('.count-emoji').text());
            if (noe == 1)
                $(v).closest('.emoji').remove();
            else
                $(v).next('.count-emoji').text(noe - 1);
        }
    });

    $('.emojiListContainer').remove();
};
var emoji_html_append = (msgid, src, count) => {
    // var emoji_name = ((src.split('/'))[3]).replace('.svg', '');
    var emoji_name = src;
    var html = emoji_html(emoji_name, src, count);
    if ($("#threadReplyPopUp").is(":visible")) {
        $('.rep_msg_' + msgid).find('.replies').append(html);
    } else {
        $('.msg_id_' + msgid).find('.replies').append(html);
    }
    if ($('#msg-container .msgs-form-users').last().attr('data-msgid') == msgid) {
        scrollToBottom('.chat-page .os-viewport', 0);
    }
};


function getEmojiData(emoji_name) {
    var name = emoji_name
    switch (emoji_name) {
        case 'grinning':
            name = '😄';
            break;
        case 'joy':
            name = '😂';
            break;
        case 'open_mouth':
            name = '😮';
            break;
        case 'disappointed_relieved':
            name = '😥';
            break;
        case 'rage':
            name = '😡';
            break;
        case 'thumbsup':
            name = '👍';
            break;
        case 'thumbsdown':
            name = '👎';
            break;
        case 'heart':
            name = '❤️';
            break;
        case 'folded_hands':
            name = '🙏';
            break;
        case 'check_mark':
            name = '✅';
            break;
            // case 'warning':
            // 	name = '⚠️';
            //   break;
        default:
            name = '😄';
    }
    return name;
}
var emoji_html = (emoji_name, src, count) => {
    var src = getEmojiData(emoji_name);
    var html = '<span data-msg="only" class="emoji ' + emoji_name + ' "  onmouseover="open_rep_user_emo(event)" onmouseout="close_rep_user_emo(event)">';
    html += '<span  data-name="' + emoji_name + '" onclick="add_reac_into_replies(event)">' + src + '</span>';
    html += '<span class="count-emoji">' + count + '</span>';
    html += '</span>';
    return html;
}
var open_rep_user_emo = (event) => {
    if ($('.rep_user_emo_list').length == 0) {
        if ($('#threadReplyPopUp').is(':visible')) {
            var msg_id = $(event.target).closest('.main-thread-msgs').attr('data-msgid');
        } else {
            var msg_id = $(event.target).closest('.msgs-form-users').attr('data-msgid');
        }
        var emoji_name = $(event.target).closest('.emoji').find('span').attr('data-name');
        // console.log(msg_id,emoji_name);
        $.ajax({
            url: '/alpha2/emoji_rep_list',
            type: 'POST',
            data: { msgid: msg_id, emojiname: emoji_name },
            dataType: 'JSON',
            success: function(res) {

                // console.log('res', res);
                if (res.length > 0) {
                    var nameList = [];
                    var na = "";
                    var html = '<div class="rep_user_emo_list">';
                    $.each(res, function(k, v) {
                        nameList.push(v.user_fullname);
                    });
                    if (nameList.indexOf(user_fullname) !== -1) {
                        if (nameList.length > 1) {
                            na = "You & "
                        } else {
                            na = "You"
                        }
                        var tempIndx = nameList[0];
                        nameList[0] = na;
                        nameList[nameList.indexOf(user_fullname)] = tempIndx;
                    }
                    $.each(nameList, function(k, v) {
                        html += v + " ";
                    });
                    html += '</div>';
                    //$('.msg_id_' + msg_id).find('.' + emoji_name).append(html);
                    //var allName =
                    if ($('#threadReplyPopUp').is(':visible')) {
                        if (nameList.length > 1) {

                            $('.rep_msg_' + msg_id).find('.' + emoji_name).attr({
                                "data-balloon": '' + nameList.join(" ") + '',
                                "data-balloon-pos": 'right'
                            });
                        } else {
                            $('.rep_msg_' + msg_id).find('.' + emoji_name).attr({
                                "data-balloon": '' + nameList.join(" ") + '',
                                "data-balloon-pos": 'up'
                            });
                        }
                    } else {

                        if (nameList.length > 1) {

                            $('.msg_id_' + msg_id).find('.' + emoji_name).attr({
                                "data-balloon": '' + nameList.join(" ") + '',
                                "data-balloon-pos": 'right'
                            });
                        } else {
                            $('.msg_id_' + msg_id).find('.' + emoji_name).attr({
                                "data-balloon": '' + nameList.join(" ") + '',
                                "data-balloon-pos": 'up'
                            });
                        }
                    }
                    var div_offset = $(event.target).closest('.emoji').offset();
                    $('.rep_user_emo_list').css('left', div_offset.left - 290);
                }
            },
            error: function(err) {
                console.log(err.responseText);
            }
        });
    }
};
var close_rep_user_emo = (event) => {
    $('.rep_user_emo_list').remove();
};
/* End Emoji */

/* Start messages searching */
$("#search-msg").on('keyup', function(event) {
    var str = $('#search-msg').val();
    str = str.replace(/<\/?[^>]+(>|$)/g, "");
    $('.user-msg>p').unhighlight();
    $('.user-msg>p').highlight(str);
    if (str.length > 0) {
        $.each($('.msgs-form-users'), function() {
            if ($(this).find('.highlight').length == 0) {
                $(this).prev('.msg-separetor').hide();
                $(this).hide();
            } else {
                $(this).prev('.msg-separetor').show();
                $(this).show();
            }
        });
    } else {
        $('.msg-separetor').show();
        $('.msgs-form-users').show();
    }
});
/* End messages searching */


var filter_unread = () => {
    if (allFilteredItem.length > 0) {
        cancelAllFilter();

    } else if ($('.threadasideContainer').is(':visible')) {
        backToChat();
    }
    if (!$('#filterUnread_msg').hasClass('activeComFilter')) {
        $('#filterUnread_msg').addClass('activeComFilter');
        $('#connectAsideContainer .backToChat').show();
        $('#conv' + user_id + '').hide();
        var click_1st_unread_thread = false;

        $('.chooseTopic').hide();
        $('.chooseTag').hide();

        $.each($(".side_bar_list_item li"), function(k, per_li) {
            var has_unread = Number($(per_li).find(".unreadMsgCount").html());
            if (has_unread < 1) {
                $(per_li).hide();
            }
        });

        $.each($(".side_bar_list_item li:visible"), function(k, per_li) {
            var has_unread = Number($(per_li).find(".unreadMsgCount").html());
            if (has_unread > 0 && click_1st_unread_thread === false) {
                $('.side_bar_list_item li').removeClass('sideActive selected');
                $(per_li).trigger("click");
                click_1st_unread_thread = true;
                return false;
            }
        });

        if ($(".side_bar_list_item li:visible").length > 0) {
            $('#errMsg').hide();
            $('#errMsg').html('');

        } else {
            $('#errMsg').html('You are all up to date, no unread messages');
            $('#errMsg').show();
        }
        var design = '<div class="tag_item" id="unreadMsgFBar"><img src="/images/basicAssets/inactiveSvg/new-email-notification-white.svg" class="flagged"><p>Unread</p><img onclick="filter_unread()" src="/images/basicAssets/Close.svg"></div>';
        if ($('#unreadMsgFBar').length == 0) {
            $('#connectAsideContainer').find('.tagg_list').append(design);
        }
        $('#connectAsideContainer').find('.tagg_list').show();
    } else {
        backToChat();
    }
    searchFilter()
};
/* End Filtaring */


// media popup
$('.media-tabs>li').click(function() {
    if ($('.info_tooltip').is(':visible')) {
        $('.i-conv').removeClass('active');
        $('.info_tooltip').removeClass('active');
        $('.info_tooltip').hide();
    }
    $('.media-tabs>li').removeClass("active");
    $(this).addClass("active");
});

function changeFileViewAttr() {
    setTimeout(function() {
        var attr = $('#mediaFilePreview .media-tabs li.active').attr('id');
        // console.log(attr)
        $('#mediaFilePreview').attr('data-active', attr);
        $('#mediaFilePreview').attr('data-filter', 'file');
    }, 100)
}

// mediaAllFiles
function viewAllFilesDivFun(elm) {
    selectedDataID = [];
    recent_allFileNameListForFilter = [];
    recent_allPersonListForFilter = [];
    recent_allRoomListForFilter = [];
    recent_allFileTypeListForFilter = [];
    recent_allDateListForFilter = [];
    $('.oneTimeSearchButton').hide();
    $('#mediaAllFiles_table_table_child').html("");
    // console.log(elm);
    if ($('#hayvenFilePage').hasClass('active')) {

        resetAllFilesFiltersItem();
    }
    $('.date-by-all div').unhighlight();
    $('.ellipsis_text').unhighlight();
    $('.body_tab_val').show();
    $('.date-by-all').show();
    $('#search_different_tab').focus();
    $('.individual-tab-seach-con').removeClass('ActiveLinkFull');
    $('.individual-tab-seach-con').hide();
    remove_tag_css();
    $('#media_Action_Div').removeClass('delete_link');
    $('#media_Action_Div .download').text('Download');
    media_view_change('grid');
    media_view_change('list');
    if (!$("#mediaAllFiles").find('.notFoundMsg').length) {
        $('.media_Tab_Content').removeClass("flex_class");
        $('#mediaFilePreview .media_view').show();

    } else {
        // $('.individual-tab-seach-con').show();
        $('.notFoundMsg').hide();
        $('.media_Tab_Content').removeClass("flex_class");
        $("#mediaAllFiles").find('.notFoundMsg').show();
        $("#mediaAllFiles").addClass("flex_class");
        $('#mediaFilePreview .media_view').hide();
    }
    $('#tagListFormediaView').hide();
    $('.media_Tab_Content').hide();
    $("#mediaAllFiles").show();
    $('.media-file-popup #searchMediaFilter[type="text"]').attr('class', "");
    $('.media-file-popup #searchMediaFilter[type="text"]').addClass('Search-file').attr('placeholder', "Search file(s)");
    $('.media-file-popup #search_different_tab[type="text"]').addClass('Search-file').attr('placeholder', "Search file(s)").focus();
    $('.media-file-popup input[type="text"]').val('');
    mediaFileSearch();
    $('#mediaAllFiles .all-images .img-name p').unhighlight();
    $('#mediaTagsDatabase').hide();

    if (!$('#mediaAllFiles .notFoundMsg').is(':visible')) {
        $('#mediaAllFiles').show();
        $('#mediaAllFiles .all-images').show();
        $('#mediaAllFiles .date-by-images').show();
        $('.individual-tab-seach-con').show();
    }
    $('#mediaAllFiles .search_msg').remove();
    $('#mediaAllFiles .date-by-images').show();
    $('#mediaAllFiles .all-images').show();
    $('.clear_text').hide();

    if (selectedMediaImgTempArray.length > 0) {
        $('#media_Action_Div').show();
    } else {
        $('#media_Action_Div').hide();
    }
    setTimeout(function() {
        inviewFunForgallery();
    }, 2000)
    setTimeout(function() {
        inviewFunForgallery();
    }, 3000)
    setTimeout(function() {
        inviewFunForgallery();
    }, 5000)
    changeFileViewAttr();
    if ($('#hayvenFilePage').hasClass('active')) {
        if (allMediaFilesData.length == 0) {
            setTimeout(function() {
                filterAllMyFiles_for_tab(allMediaFilesData);
                callActiveShareLinkWithdata(allMediaFilesData);

            }, 1500)
        } else {
            filterAllMyFiles_for_tab(allMediaFilesData);
            callActiveShareLinkWithdata(allMediaFilesData);
        }
    }
    showMoretableDataHtml()
}

function callActiveShareLinkWithdata(data) {
    thisConvAllFilesNames = [];
    thisConvAllFilesLocations = [];
    $.each(data, function(k, v) {
        thisConvAllFilesNames.push(v.key);
        thisConvAllFilesLocations.push(v.location);
    });
    activeShareIconLink();
}

function viewImgDiv(elm) {
    $('#search_different_tab').focus();
    $('.individual-tab-seach-con').removeClass('ActiveLinkFull');
    $('.individual-tab-seach-con').hide();
    remove_tag_css();
    $('#media_Action_Div').removeClass('delete_link');
    $('#media_Action_Div .download').text('Download');
    media_view_change('grid');
    media_view_change('list');
    if (!$("#mediaImages").find('.notFoundMsg').length) {
        $('.media_Tab_Content').removeClass("flex_class");
        $('#mediaFilePreview .media_view').show();

    } else {
        // $('.individual-tab-seach-con').show();
        $('.notFoundMsg').hide();
        $('.media_Tab_Content').removeClass("flex_class");
        $("#mediaImages").find('.notFoundMsg').show();
        $("#mediaImages").addClass("flex_class");
        $('#mediaFilePreview .media_view').hide();
    }
    $('#tagListFormediaView').hide();
    $('.media_Tab_Content').hide();
    $("#mediaImages").show();
    $('.media-file-popup #searchMediaFilter[type="text"]').attr('class', "");
    $('.media-file-popup #searchMediaFilter[type="text"]').addClass('Search-img').attr('placeholder', "Search image(s)");
    $('.media-file-popup #search_different_tab[type="text"]').addClass('Search-img').attr('placeholder', "Search image(s)").focus();
    $('.media-file-popup input[type="text"]').val('');
    mediaFileSearch();
    $('#mediaImages .all-images .img-name p').unhighlight();
    $('#mediaTagsDatabase').hide();

    if (!$('#mediaImages .notFoundMsg').is(':visible')) {
        $('#mediaImages').show();
        $('#mediaImages .all-images').show();
        $('#mediaImages .date-by-images').show();
        $('.individual-tab-seach-con').show();
    }
    $('#mediaImages .search_msg').remove();
    $('#mediaImages .date-by-images').show();
    $('#mediaImages .all-images').show();
    $('.clear_text').hide();

    if (selectedMediaImgTempArray.length > 0) {
        $('#media_Action_Div').show();
    } else {
        $('#media_Action_Div').hide();
    }
    setTimeout(function() {
        inviewFunForgallery();
    }, 2000)
    setTimeout(function() {
        inviewFunForgallery();
    }, 3000)
    setTimeout(function() {
        inviewFunForgallery();
    }, 5000)
    if ($('#hayvenFilePage').hasClass('active')) {
        if (allMediaFilesData.length == 0) {
            setTimeout(function() {
                filterAllMyImage_for_tab(allMediaFilesData);
                callActiveShareLinkWithdata(allMediaFilesData);
            }, 1500)
        } else {
            filterAllMyImage_for_tab(allMediaFilesData);
            callActiveShareLinkWithdata(allMediaFilesData);
        }
    }
    showMoretableDataHtml()
    changeFileViewAttr();
}

function viewvideoDiv(elm) {
    $('#search_different_tab').focus();
    $('.individual-tab-seach-con').removeClass('ActiveLinkFull');
    $('.individual-tab-seach-con').hide();
    remove_tag_css();
    $('#media_Action_Div').removeClass('delete_link');
    $('#media_Action_Div .download').text('Download');
    media_view_change('list');
    if (!$("#mediaVideos").find('.notFoundMsg').length) {
        $('.media_Tab_Content').removeClass("flex_class");
        $('#mediaFilePreview .media_view').show();
    } else {
        $('.notFoundMsg').hide();
        // $('.individual-tab-seach-con').show();
        $('.media_Tab_Content').removeClass("flex_class");
        $("#mediaVideos").find('.notFoundMsg').css('display', 'block');
        $("#mediaVideos").addClass("flex_class");
        $('#mediaFilePreview .media_view').hide();
    }
    $('#tagListFormediaView').hide();
    $('#media_Action_Div').hide();
    $('.media_Tab_Content').hide();
    $("#mediaVideos").show();
    $('.media-file-popup #searchMediaFilter[type="text"]').attr('class', "").attr('placeholder', "Search video(s)");
    $('.media-file-popup #search_different_tab[type="text"]').addClass('Search-videos').attr('placeholder', "Search video(s)").focus();
    $('.media-file-popup #searchMediaFilter[type="text"]').addClass('Search-videos');
    $('.media-file-popup input[type="text"]').val('');
    mediaFileSearch();

    $('#mediaVideos .all-videos .name_span').unhighlight();
    $('#mediaTagsDatabase').hide();
    if (!$('#mediaVideos .notFoundMsg').is(':visible')) {
        $('#mediaVideos').show();
        $('#mediaVideos .date-by-videos').show();
        $('#mediaVideos .all-videos').show();
        $('.individual-tab-seach-con').show();
    }

    $('#mediaVideos .search_msg').remove();
    $('#mediaVideos .date-by-videos').show();
    $('#mediaVideos .all-videos').show();
    $('.clear_text').hide();

    if (selectedMediaVidTempArray.length > 0) {
        $('#media_Action_Div').show();
    } else {
        $('#media_Action_Div').hide();
    }
    if ($('#hayvenFilePage').hasClass('active')) {
        if (allMediaFilesData.length == 0) {
            setTimeout(function() {
                filterAllMyVideos_for_tab(allMediaFilesData);
                callActiveShareLinkWithdata(allMediaFilesData);
            }, 1500)
        } else {
            filterAllMyVideos_for_tab(allMediaFilesData);
            callActiveShareLinkWithdata(allMediaFilesData);
        }
    }
    showMoretableDataHtml()
    changeFileViewAttr();
}

function viewaudiosDiv(elm) {
    $('#search_different_tab').focus();
    $('.individual-tab-seach-con').removeClass('ActiveLinkFull');
    $('.individual-tab-seach-con').hide();
    // console.log(111)

    remove_tag_css();
    $('#media_Action_Div').removeClass('delete_link');
    $('#media_Action_Div .download').text('Download');
    media_view_change('list');
    if (!$("#mediaAudios").find('.notFoundMsg').length) {
        $('.media_Tab_Content').removeClass("flex_class");
        $('#mediaFilePreview .media_view').show();
        // console.log(222)
    } else {
        $('.notFoundMsg').hide();
        // $('.individual-tab-seach-con').show();
        $('.media_Tab_Content').removeClass("flex_class");
        $("#mediaAudios").find('.notFoundMsg').show();
        $("#mediaAudios").addClass("flex_class");
        $('#mediaFilePreview .media_view').hide();

        // console.log(333)
    }
    $('#tagListFormediaView').hide();
    $('.media_Tab_Content').hide();
    $("#mediaAudios").show();
    $('.media-file-popup #searchMediaFilter[type="text"]').attr('class', "").attr('placeholder', "Search audio(s)");
    $('.media-file-popup #search_different_tab[type="text"]').addClass('Search-audios').attr('placeholder', "Search audio(s)").focus();
    $('.media-file-popup #searchMediaFilter[type="text"]').addClass('Search-audios');
    $('.media-file-popup input[type="text"]').val('');
    mediaFileSearch();
    $('#mediaAudios .all-audios .name_span').unhighlight();
    $('#mediaTagsDatabase').hide();
    if (!$('#mediaAudios .notFoundMsg').is(':visible')) {
        $('#mediaAudios').show();
        $('#mediaAudios .date-by-audios').show();
        $('#mediaAudios .all-audios').show();
        $('.individual-tab-seach-con').show();
    }

    $('#mediaAudios .search_msg').remove();
    $('#mediaAudios .date-by-audios').show();
    $('#mediaAudios .all-audios').show();
    $('.clear_text').hide();

    if (selectedMediaAudTempArray.length > 0) {
        $('#media_Action_Div').show();
    } else {
        $('#media_Action_Div').hide();
    }
    if ($('#hayvenFilePage').hasClass('active')) {
        if (allMediaFilesData.length == 0) {
            setTimeout(function() {
                filterAllMyAudios_for_tab(allMediaFilesData);
                callActiveShareLinkWithdata(allMediaFilesData);
            }, 1500)
        } else {
            filterAllMyAudios_for_tab(allMediaFilesData);
            callActiveShareLinkWithdata(allMediaFilesData);
        }
    }
    showMoretableDataHtml()


    changeFileViewAttr();
}

function viewFilesDiv(elm) {
    $('#search_different_tab').focus();
    $('.individual-tab-seach-con').removeClass('ActiveLinkFull');
    $('.individual-tab-seach-con').hide();
    remove_tag_css();
    $('#media_Action_Div').removeClass('delete_link');
    $('#media_Action_Div .download').text('Download');
    media_view_change('list');
    if (!$("#mediaFiles").find('.notFoundMsg').length) {
        $('.media_Tab_Content').removeClass("flex_class");
        $('#mediaFilePreview .media_view').show();
    } else {
        $('.notFoundMsg').hide();
        // $('.individual-tab-seach-con').show();
        $('.media_Tab_Content').removeClass("flex_class");
        $("#mediaFiles").find('.notFoundMsg').show();
        $("#mediaFiles").addClass("flex_class");
        $('#mediaFilePreview .media_view').hide();
    }
    $('#tagListFormediaView').hide();

    $('.media_Tab_Content').hide();
    $("#mediaFiles").show();
    $('.media-file-popup #searchMediaFilter[type="text"]').attr('class', "").attr('placeholder', "Search file(s)");
    $('.media-file-popup #search_different_tab[type="text"]').addClass('Search-files').attr('placeholder', "Search file(s)").focus();
    $('.media-file-popup #searchMediaFilter[type="text"]').addClass('Search-files');
    $('.media-file-popup input[type="text"]').val('');
    mediaFileSearch();
    $('#mediaFiles .all-files .name_span').unhighlight();
    $('#mediaTagsDatabase').hide();
    if (!$('#mediaFiles .notFoundMsg').is(':visible')) {
        $('#mediaFiles').show();
        $('#mediaFiles .date-by-files').show();
        $('#mediaFiles .all-files').show();
        $('.individual-tab-seach-con').show();
    }

    $('#mediaFiles .search_msg').remove();
    $('#mediaFiles .date-by-files').show();
    $('#mediaFiles .all-files').show();
    $('.clear_text').hide();

    if (selectedMediaFileTempArray.length > 0) {
        $('#media_Action_Div').show();
    } else {
        $('#media_Action_Div').hide();
    }
    if ($('#hayvenFilePage').hasClass('active')) {
        if (allMediaFilesData.length == 0) {
            setTimeout(function() {
                filterAllMyOthers_for_tab(allMediaFilesData);
                callActiveShareLinkWithdata(allMediaFilesData);
            }, 1500)
        } else {
            filterAllMyOthers_for_tab(allMediaFilesData);
            filterAllMyOthers_for_tab(allMediaFilesData);
        }
    }
    showMoretableDataHtml()
    changeFileViewAttr();
}

function viewPersonalDiv(elm) {
    conversation_id = user_id;
    $('#search_different_tab').focus();
    $('.individual-tab-seach-con').removeClass('ActiveLinkFull');
    $('.individual-tab-seach-con').hide();
    remove_tag_css();
    $('#media_Action_Div').removeClass('delete_link');
    $('#media_Action_Div .download').text('Download');
    media_view_change('list');
    if (!$("#mediaPersonal").find('.notFoundMsg').length) {
        $('.media_Tab_Content').removeClass("flex_class");
        $('#mediaFilePreview .media_view').show();
    } else {
        $('.notFoundMsg').hide();
        // $('.individual-tab-seach-con').show();
        $('.media_Tab_Content').removeClass("flex_class");
        $("#mediaPersonal").find('.notFoundMsg').show();
        $("#mediaPersonal").addClass("flex_class");
        $('#mediaFilePreview .media_view').hide();
    }
    $('#tagListFormediaView').hide();

    $('.media_Tab_Content').hide();
    $("#mediaPersonal").show();
    $('.media-file-popup #searchMediaFilter[type="text"]').attr('class', "").attr('placeholder', "Search file(s)");
    $('.media-file-popup #search_different_tab[type="text"]').addClass('Search-files').attr('placeholder', "Search file(s)").focus();
    $('.media-file-popup #searchMediaFilter[type="text"]').addClass('Search-files');
    $('.media-file-popup input[type="text"]').val('');
    mediaFileSearch();
    $('#mediaPersonal .all-files .name_span').unhighlight();
    $('#mediaTagsDatabase').hide();
    if (!$('#mediaPersonal .notFoundMsg').is(':visible')) {
        $('#mediaPersonal').show();
        $('#mediaPersonal .date-by-files').show();
        $('#mediaPersonal .all-files').show();
        $('.individual-tab-seach-con').show();
    }

    $('#mediaPersonal .search_msg').remove();
    $('#mediaPersonal .date-by-files').show();
    $('#mediaPersonal .all-files').show();
    $('.clear_text').hide();

    if (selectedMediaFileTempArray.length > 0) {
        $('#media_Action_Div').show();
    } else {
        $('#media_Action_Div').hide();
    }
    if ($('#hayvenFilePage').hasClass('active')) {
        if (allMediaMyFilesData.length == 0) {
            setTimeout(function() {
                filterAllMyPersonal_for_tab(allMediaMyFilesData);
                callActiveShareLinkWithdata(allMediaMyFilesData);
            }, 1500)
        } else {
            filterAllMyPersonal_for_tab(allMediaMyFilesData);
            callActiveShareLinkWithdata(allMediaMyFilesData);
        }
    }
    showMoretableDataHtml()
    changeFileViewAttr();
}

function viewLinksDiv(elm) {
    $('.oneTimeSearchButton').hide();
    $('.ellipsis_text').unhighlight();
    $('.body_tab_val').show();
    $('#search_different_tab').focus();
    $('.individual-tab-seach-con').hide();
    $('.individual-tab-seach-con').addClass('ActiveLinkFull');
    // 	remove_tag_css ();
    $('#media_Action_Div').addClass('delete_link');
    $('#media_Action_Div .download').text('Delete');
    $('#mediaFilePreview .media_view').hide();
    if (!$("#mediaLinks").find('.notFoundMsg').length) {
        $('.media_Tab_Content').removeClass("flex_class");
    } else {
        $('.notFoundMsg').hide();
        // $('.individual-tab-seach-con').show();
        $('.media_Tab_Content').removeClass("flex_class");
        $("#mediaLinks").find('.notFoundMsg').show();
        $("#mediaLinks").addClass("flex_class");
    }
    $('#tagListFormediaView').hide();
    $('#media_Action_Div').hide();
    $('.media_Tab_Content').hide();
    $("#mediaLinks").show();
    $('.media-file-popup #searchMediaFilter[type="text"]').attr('class', "").attr('placeholder', "Search link(s)");
    $('.media-file-popup #search_different_tab[type="text"]').addClass('Search-links').attr('placeholder', "Search link(s)").focus();
    $('.media-file-popup #searchMediaFilter[type="text"]').addClass('Search-links');
    $('.media-file-popup input[type="text"]').val('');
    mediaFileSearch();
    $('#mediaLinks .link-details .name_span').unhighlight();
    $('#mediaTagsDatabase').hide();
    if (!$('#mediaLinks .notFoundMsg').is(':visible')) {
        $('#mediaLinks').show();
        $('.individual-tab-seach-con').show();
        $('#mediaLinks .date-by-links').show();
        $('#mediaLinks .link-details').show();
    }

    $('#mediaLinks .search_msg').remove();
    $('#mediaLinks .date-by-links').show();
    $('#mediaLinks .link-details').show();
    $('#mediaLinks .all-links').show();
    $('.clear_text').hide();

    if (selectedMediaLinkTempArray.length > 0) {
        $('#media_Action_Div').show();
    } else {
        $('#media_Action_Div').hide();
    }
    changeFileViewAttr();
    if ($('#hayvenFilePage').hasClass('active')) {
        filterAllMyLinks(allMediaLinksData);
    }
    showMoretableDataHtml();
}

function viewTagsDiv(elm) {
    $('#search_different_tab').focus();
    $('.individual-tab-seach-con').removeClass('ActiveLinkFull');
    $('#mediaTags').removeClass('flex_class');
    $('#mediaTags').find('.notFoundMsg').remove();
    $('.individual-tab-seach-con').hide();
    $(".media-tab-body .media_view").addClass("tag_media_pos");
    $('#mediaFilePreview').removeClass('AllActiveCls');
    $('#mediaFilePreview').addClass('AllActiveCls');
    if (!$("#mediaTags").find('.notFoundMsg').length) {
        $('.media_Tab_Content').removeClass("flex_class");
        $('#mediaFilePreview .media_view').show();
    } else {

        $('.notFoundMsg').hide();
        // $('.individual-tab-seach-con').show();
        $('.media_Tab_Content').removeClass("flex_class");
        $("#mediaTags").find('.notFoundMsg').show();
        $("#mediaTags").addClass("flex_class");
        $('#mediaFilePreview .media_view').hide();
    }


    if ($('#mediaTags .date-by-tags').length == 0) {
        $('#tagListFormediaView').hide();
        var html = '<h2 class="notFoundMsg" style="display: block;">No Tag File(s) were found in this channel !</h2>'
        $('#mediaTags').addClass('flex_class');
        $('#mediaTags').append(html);
        $('#mediaFilePreview .media_view').hide();
    } else {
        $('#tagListFormediaView').show();
    }
    $('.media_Tab_Content').hide();
    $("#mediaTags").show();
    $('.media-file-popup #searchMediaFilter[type="text"]').attr('class', "").attr('placeholder', "Search File(s)");
    $('.media-file-popup #search_different_tab[type="text"]').addClass('Search-tags').attr('placeholder', "Search File(s)").focus();
    $('.media-file-popup #searchMediaFilter[type="text"]').addClass('Search-tags');
    $('.media-file-popup input[type="text"]').val('');
    mediaFileSearch();
    $('#mediaTags .all-files .name_span').unhighlight();
    $('#mediaTags .all-audios.name_span').unhighlight();
    $('#mediaTags .all-videos .name_span').unhighlight();
    $('#mediaTags .all-images .name_span').unhighlight();
    if (!$('#mediaTags .notFoundMsg').is(':visible')) {
        $('#mediaTagsDatabase').show();
        $('#mediaTags').show();
        $('#mediaTags .date-by-tags').show();
        $('#mediaTags .all-images ').show();
        $('#mediaTags .all-videos ').show();
        $('#mediaTags .all-audios ').show();
        $('#mediaTags .all-files ').show();
        $('.individual-tab-seach-con').show();
    }

    $('#mediaTags .search_msg').remove();
    $('#mediaTags .date-by-tags').show();
    $('#mediaTags .all-images ').show();
    $('#mediaTags .all-videos ').show();
    $('#mediaTags .all-audios ').show();
    $('#mediaTags .all-files ').show();
    $('.clear_text').hide();

    if (selectedMediaTagTempArray.length > 0) {
        $('#media_Action_Div').show();
    } else {
        $('#media_Action_Div').hide();
    }
    $('#visibleTagMedia').find('span').removeClass('active');
    $('#visibleTagMedia').find('span').removeClass('inactive');
    $('#visibleTagMedia').find('span').addClass('inactive');
    $('#visibleTagMedia').find('span').attr('data-type', 'add');

    checkViewAllBtnStatus();
    changeFileViewAttr();
}

function clear_media_popup() {
    $("#mediaImages").html("");
    $('#mediaVideos').html("");
    $('#mediaAudios').html("");
    $('#mediaFiles').html("");
    $('#mediaTags').html("");
}

function urlify(text) {
    var urlRegex = /(https?:\/\/[^\s]+)/g;
    return text.replace(urlRegex, function(url) {
        return url;
    });
}

function viewAllFilesPop() {
    $('#hayvenConnectPage').removeClass('active');
    $('#hayvenFilePage').addClass('active');
    $('#mediaFilePreview').addClass('width100_full');
    $('body').addClass('files_loader');
    mediaFilePopup();
    showMoretableDataHtml();
    // if($('#hayvenFilePage').hasClass('active')){
    // 	$('#hayvenConnectPage').removeClass('active');
    // }else{
    // 	$('#hayvenFilePage').addClass('active')
    // }
}

function sortTable(n, tblid) {
    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    table = document.getElementById(tblid);
    switching = true;
    // Set the sorting direction to ascending:
    dir = "asc";
    /* Make a loop that will continue until
    no switching has been done: */
    while (switching) {
        // Start by saying: no switching is done:
        switching = false;
        rows = table.rows;
        /* Loop through all table rows (except the
        first, which contains table headers): */
        for (i = 1; i < (rows.length - 1); i++) {
            // Start by saying there should be no switching:
            shouldSwitch = false;
            /* Get the two elements you want to compare,
            one from current row and one from the next: */
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            /* Check if the two rows should switch place,
            based on the direction, asc or desc: */
            if (n == 3 && tblid == 'mediaFiles_table') {
                // console.log(11817,n,tblid)
                if (dir == "asc") {
                    if (x.attr('data-val').toLowerCase() > y.attr('data-val').toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.attr('data-val').toLowerCase() < y.attr('data-val').toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            } else {

                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
            }
        }
        if (shouldSwitch) {
            /* If a switch has been marked, make the switch
            and mark that a switch has been done: */
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            // Each time a switch is done, increase this count by 1:
            switchcount++;
        } else {
            /* If no switching has been done AND the direction is "asc",
            set the direction to "desc" and run the while loop again. */
            if (switchcount == 0 && dir == "asc") {
                dir = "desc";
                switching = true;
            }
        }
    }
}

function bytesToSize(bytes) {
    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
    if (bytes == 0) return '0 Byte';
    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
}

function getFileTabTableDesign(type) {
    var tableDesign = '<div id="' + type + '_table_child" class="table_filter_child"></div><table id="' + type + '" class="file_view_table" >'
    tableDesign += '<thead><tr>'
    tableDesign += '<th style="width:6%"><span class="hvSelect" onclick="//selectAllFiles(this)" style="display:block;opacity:0"></span></th>'
    tableDesign += '<th onclick="sortTable(1,\'' + type + '\')" style="width:30%">' + (type == 'mediaLinks_table' ? 'Link Title' : 'File Name') + '</th>'
    if (type == 'mediaLinks_table') {

        tableDesign += '<th onclick="sortTable(2,\'' + type + '\')" style="width:14%">' + (type == 'mediaLinks_table' ? 'Url' : 'Extension') + '</th>'
        tableDesign += '<th onclick="sortTable(3,\'' + type + '\')" style="width:12%">Date</th>'
        tableDesign += '<th onclick="sortTable(4,\'' + type + '\')" style="width:14%">Uploaded by</th>'
        tableDesign += '<th onclick="sortTable(5,\'' + type + '\')" style="width:14%">Room Name</th>'
        tableDesign += '<th onclick="sortTable(6,\'' + type + '\')" style="width:10%">Actions</th>'
    } else {

        tableDesign += '<th onclick="sortTable(2,\'' + type + '\')" style="width:8%">' + (type == 'mediaLinks_table' ? 'Url' : 'Extension') + '</th>'
        tableDesign += '<th onclick="sortTable(3,\'' + type + '\')" style="width:8%">File Size</th>'
        tableDesign += '<th onclick="sortTable(4,\'' + type + '\')" style="width:12%">Date</th>'
        tableDesign += '<th onclick="sortTable(5,\'' + type + '\')" style="width:12%">Uploaded by</th>'
        tableDesign += '<th onclick="sortTable(6,\'' + type + '\')" style="width:14%">Room Name</th>'
        tableDesign += '<th onclick="sortTable(7,\'' + type + '\')" style="width:10%">Actions</th>'
    }
    tableDesign += '</tr></thead>'
    tableDesign += '<tbody id="' + type + 'data"></tbody>'
    tableDesign += '</table>';
    return tableDesign;
}
var allShortUrl = {};

function getAllShortUrl() {
    socket.emit('SetURLshortenAll', function(res) {
        allShortUrl = res;
        // console.log(11503,allShortUrl)
    })
}

function viewMyFileOn(file_id) {
    if (!$('#mediaPersonalDivHead').hasClass('active')) {

        $.each(allMediaFilesData, function(k, v) {
            if (v.id == file_id) {
                if (v.file_type.indexOf('image') > -1) {
                    $('#mediaFilePreview').attr('view-type', 'gallery');
                    $('#mediaFilePreview').attr('data-active', 'allFilesMediaDiv');
                    $('#mediaFilePreview').attr('data-filter', 'file');
                    $('#mediaFilePreview').attr('thread-view', false);
                    file_view_data = v;
                    showImageSlider('', '', '');
                } else {
                    file_view_data = v;
                    tempdownloadAnyFile('', '')
                }

            }
        })
    } else {
        $.each(allMediaMyFilesData, function(k, v) {
            if (v.id == file_id) {
                if (v.file_type.indexOf('image') > -1) {
                    $('#mediaFilePreview').attr('view-type', 'gallery');
                    $('#mediaFilePreview').attr('data-active', 'allFilesMediaDiv');
                    $('#mediaFilePreview').attr('data-filter', 'file');
                    $('#mediaFilePreview').attr('thread-view', false);
                    file_view_data = v;
                    showImageSlider('', '', '');
                } else {
                    file_view_data = v;
                    tempdownloadAnyFile('', '')
                }

            }
        })

    }
}

function getFileDesingForTable(type, data) {
    var onclickAttr = '';
    var datasrc = '';
    var original_name = '';
    var file_name = '';
    var sender_name = '';
    var sender_img = '';
    var file_size = '';
    var file_title = ''
    var short_url = '';
    var file_type = '';
    var cssAdd = '';
    var selectedActiveClass = "";
    var isImageClass = '';
    var hoveHtml = '';
    var datalocation = '';
    if (type == 'mediaLinks_table') {
        cssAdd = "opacity:0; display:none"

        hoveHtml += '<div class="hover_for_file">';

        hoveHtml += '<p class="img_action share_ico" data-balloon="Share" data-balloon-pos="left" onclick="viewShreImgPop(event,this)" data-value="' + data.url + '"></p>'
        if (data.user_id == user_id) {
            //hoveHtml += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteLink(\''+data.url_id+'\',event,this)"  data-value="'+data.url+'"></p>';
            hoveHtml += '<p class="img_action edit_ico" data-balloon="Add a nick name" data-balloon-pos="left" onclick="editLinkName(event, \'link\',\'' + data.url_id + '\',\'' + data.title + '\')" data-value="' + data.url + '" conv-id="' + data.conversation_id + '"></p>';
        } else {
            hoveHtml += '<p class="img_action edit_ico" data-balloon="Add a nick name" data-balloon-pos="left" onclick="editCustomTitle(event, \'link\',\'' + data.url_id + '\',\'' + data.title + '\')" data-value="' + data.url + '"></p>';
        }
        hoveHtml += '</div>';
    } else {

        if (data.file_type.indexOf('image') > -1) {
            // onclickAttr = "showImageSlider(event,this, '"+data.file_size+"');"
        }
        datasrc = file_server + data.location;
        original_name = data.originalname;
        file_name = data.originalname;
        sender_name = findObjForUser(data.user_id).fullname;
        sender_img = findObjForUser(data.user_id).img;
        file_size = data.file_size;
        file_title = data.originalname.split('.');
        file_title = file_title[0];
        var fileNamewithTime = data.location.split('/');
        fileNamewithTime = fileNamewithTime[fileNamewithTime.length - 1] + user_id;
        if (allShortUrl[fileNamewithTime] != undefined) {
            short_url = mywindowUrl + '/url/' + allShortUrl[fileNamewithTime].shortid;
        }
        file_type = data.file_type.split('/');
        file_type = file_type[file_type.length - 1];
        datalocation = data.location;
        if (allLinkFordownload.indexOf(file_server + data.location) > -1) {
            selectedActiveClass = 'active';
        }
        if (data.file_type.indexOf('image') > -1) {
            isImageClass = 'table_image';
        }
        hoveHtml += '<div class="hover_for_file">';
        hoveHtml += '<p class="img_action view_ico" onclick="viewImgHov(this,\'mediaImg\')" data-balloon="Preview" data-balloon-pos="left" data-originalname="' + data.originalname + '"></p>';
        hoveHtml += '<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" file-name="' + data.originalname + '" data-href="' + file_server + data.location + '" data-balloon="Download" data-balloon-pos="left"></p>';
        hoveHtml += '<p class="img_action forward_icon" onclick="shareMessage(\'file\')" data-balloon="Forward File" data-balloon-pos="down"></p>';
        hoveHtml += '<p class="img_action edit_ico" data-balloon="Add a nick name" data-balloon-pos="left" onclick="editCustomTitle(event, \'file\',\'' + data.id + '\',\'' + data.originalname + '\')" data-value="' + file_server + data.location + '"></p>';
        hoveHtml += '<p class="img_action share_ico" data-balloon="Share by Link" data-balloon-pos="left" onclick="viewShreImgPop(event,this)" data-value="' + file_server + data.location + '"></p>'
        if (data.user_id == user_id) {
            hoveHtml += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteItem(event,\'img\')" msg-id="' + data.msg_id + '"  data-value="' + file_server + data.location + '"></p>';
        }
        hoveHtml += '</div>';
    }




    var fileDesign = '<tr onclick="' + onclickAttr + '" data-location="' + datalocation + '" data-sender_name="' + sender_name + '" data-filesize="' + file_size + '" data-sender_img="' + sender_img + '"  data-filename="' + file_name + '" data-originalname="' + original_name + '" data-src="' + datasrc + '" class="body_tab_val ' + isImageClass + '">'

    fileDesign += '<td style="width:6%"><span class="hvSelect ' + selectedActiveClass + '" onclick="selectOptionFileT(this)" data-link="' + file_server + data.location + '" style="' + cssAdd + '"></span> <p class="img_action share_ico" data-balloon="Share by Link" data-balloon-pos="right" onclick="viewShreImgPop(event,this)" data-value="' + (type == 'mediaLinks_table' ? data.url : file_server + data.location) + '"></p> </td>'

    if (type == 'mediaLinks_table') {
        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:30%"><span class="file_name_tooltip" data-balloon="' + (type == 'mediaLinks_table' ? data.title : file_title) + '" data-balloon-pos="up"><span class="ellipsis_text ' + (type == 'mediaLinks_table' ? 'conv_nickname_' + data.url_id : 'file_title_' + data.id) + '" data-original="' + (type == 'mediaLinks_table' ? data.title : data.originalname) + '">' + (type == 'mediaLinks_table' ? data.title : file_title) + '</span></span></td>'
        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:14%"><span class="file_name_tooltip" data-balloon-length="fit" data-balloon="' + (type == 'mediaLinks_table' ? data.url : data.file_type) + '" data-balloon-pos="up"><span class="ellipsis_text">' + (type == 'mediaLinks_table' ? data.url : file_type) + '</span></span></td>'

        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:12%"><span class="file_name_tooltip" data-balloon-length="fit" data-balloon="' + moment(data.created_at).format('DD-MMM-YYYY') + '" data-balloon-pos="up"><span class="ellipsis_text">' + moment(data.created_at).format('DD-MMM-YYYY') + '</span></span></td>'

        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:14%"><span class="file_name_tooltip" data-balloon-length="fit" data-balloon="' + findObjForUser(data.user_id).fullname + '" data-balloon-pos="up"><span class="ellipsis_text">' + findObjForUser(data.user_id).fullname + '</span></span></td>'

        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:14%"><span class="file_name_tooltip" data-balloon-length="fit" data-balloon="' + $('#conv' + data.conversation_id).attr('data-name') + '" data-balloon-pos="up"><span class="ellipsis_text">' + $('#conv' + data.conversation_id).attr('data-name') + '</span></span></td>'

        // fileDesign +='<td style="width:16%"><span class="file_name_tooltip" ><span class="ellipsis_text">'+short_url+'</span></span>'+hoveHtml+'</td>'
        fileDesign += '<td style="width:10%">' + hoveHtml + '</td>'
    } else {
        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:30%"><span class="file_name_tooltip" data-balloon="' + (type == 'mediaLinks_table' ? data.title : file_title) + '" data-balloon-pos="up" ><span class="ellipsis_text ' + (type == 'mediaLinks_table' ? 'conv_nickname_' + data.url_id : 'file_title_' + data.id) + '" data-original="' + (type == 'mediaLinks_table' ? data.title : data.originalname) + '">' + (type == 'mediaLinks_table' ? data.title : file_title) + '</span></span></td>'
        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:8%"><span class="file_name_tooltip" data-balloon-length="fit" data-balloon="' + (type == 'mediaLinks_table' ? data.url : data.file_type) + '" data-balloon-pos="up"><span class="ellipsis_text">' + (type == 'mediaLinks_table' ? data.url : file_type) + '</span></span></td>'
        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:8%" data-val="' + data.file_size + '"><span class="file_name_tooltip" data-balloon-length="fit" data-balloon="' + bytesToSize2(Number(file_size)) + '" data-balloon-pos="up"><span class="ellipsis_text">' + bytesToSize2(Number(file_size)) + '</span></span></td>'

        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:12%"><span class="file_name_tooltip" data-balloon-length="fit" data-balloon="' + moment(data.created_at).format('DD-MMM-YYYY') + '" data-balloon-pos="up"><span class="ellipsis_text">' + moment(data.created_at).format('DD-MMM-YYYY') + '</span></span></td>'

        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:12%"><span class="file_name_tooltip" data-balloon-length="fit" data-balloon="' + findObjForUser(data.user_id).fullname + '" data-balloon-pos="up"><span class="ellipsis_text">' + findObjForUser(data.user_id).fullname + '</span></span></td>'

        fileDesign += '<td ' + (type == 'mediaLinks_table' ? '' : 'onclick="viewMyFileOn(\'' + data.id + '\')"') + ' style="width:14%"><span class="file_name_tooltip" data-balloon-length="fit" data-balloon="' + $('#conv' + data.conversation_id).attr('data-name') + '" data-balloon-pos="up"><span class="ellipsis_text">' + $('#conv' + data.conversation_id).attr('data-name') + '</span></span></td>'

        fileDesign += '<td style="width:10%">' + hoveHtml + '</td>'
            // fileDesign +='<td style="width:16%"><span class="file_name_tooltip" ><span class="ellipsis_text">'+short_url+'</span></span>'+hoveHtml+'</td>'
    }

    fileDesign += '</tr>'
    return fileDesign;
}
var thisConvAllFilesNames = [];
var thisConvAllFilesLocations = [];
var laterAppendFiles = [];
var file_view_data = {}

function appendNewFiles() {
    $.each(laterAppendFiles, function(k, v) {
        $("#mediaAllFiles_table").append(getFileDesingForTable('mediaAllFiles_table', v));
    });
    changeAllCustomTitle();
}

function mediaFilePopup(t = '') {

    allLinkFordownload = [];
    allMediaFilesData = [];
    allMediaMyFilesData = [];
    $('#media_Action_Div').hide();
    $('body').addClass('files_loader');
    clear_media_popup();
    $('#mediaFilePreview').attr('view-type', 'gallery');
    selectedMediaImgTempArray = [];
    selectedMediaVidTempArray = [];
    selectedMediaAudTempArray = [];
    selectedMediaFileTempArray = [];
    selectedMediaTagTempArray = [];
    selectedMediaLinkTempArray = [];
    $('#mediaImgsTab a').text('Images (0)');
    $('#mediaImgsTab').attr('data-len', 0);
    $('#mediaViedeosTab a').text('Videos (0)');
    $('#mediaViedeosTab').attr('data-len', 0);
    $('#mediaAudiosTab a').text('Audios (0)');
    $('#mediaAudiosTab').attr('data-len', 0);
    $('#mediaFilesTab a').text('Docs (0)');
    $('#mediaFilesTab').attr('data-len', 0);
    $('#mediaTagDivHead a').text('View By Tag(s) (0)');
    $('#mediaTagDivHead').attr('data-len', 0);
    if ($('#hayvenFilePage').hasClass('active')) {
        $('#mediaLinksTab a').text('All Links (0)');
    } else {

        $('#mediaLinksTab a').text('Links (0)');
    }

    $('#mediaLinksTab').attr('data-len', 0);
    $('.media-tabs .mediaimgTab').trigger('click');

    if ($('#mediaTagDivHead').hasClass('active')) {
        $('#tagListFormediaView').show();

    } else {
        $('#tagListFormediaView').hide();

    }
    $('#media_Action_Div').hide();
    $('#mediaFilePreview').show();
    $('.media-file-popup').show();
    $('.media-file-popup input[type="text"]').val('').focus();
    $('.close-media-popup').addClass('allAttachmentView');
    // $('#roomIdDiv').attr('data-roomid')
    // user_id+'/allConv'
    var fileConvId = $('#roomIdDiv').attr('data-roomid');
    if ($('#hayvenFilePage').hasClass('active')) {
        fileConvId = user_id + '/allConv';
        $('.media_view').hide();
        $('.galleryFilterOption .fileSearch').hide();
    } else {
        $('.media_view').show();
        $('.galleryFilterOption .fileSearch').show();
    }

    socket.emit('find_all_files', { conversation_id: fileConvId }, function(res) {
        $('body').removeClass('files_loader');
        // setTimeout(function(){
        // },1000)
        // setTimeout(function(){
        // 	appendNewFiles();

        // },3000)

        // console.log(8204, res);
        if (res.status == true) {
            allMediaMyFilesData = res.my_files;
            allMediaFilesData = res.files;
            allMediaLinksData = res.msg_links;
            var allMediaMsgId = [];
            var allMediaImg = [];
            var allMediaAudio = [];
            var allMediaVideo = [];
            var allMediaOthers = [];
            var allMediaLink = [];
            var allTagMsg = [];
            var allcomtagid = [];
            var alltagfiles = [];
            var all_showFiles = [];
            var my_files = [];
            thisConvAllFilesNames = [];
            thisConvAllFilesLocations = [];
            $.each(res.files, function(k, v) {
                thisConvAllFilesNames.push(v.key);
                thisConvAllFilesLocations.push(v.location);
                // console.log(6895,v);
                if (v.mention_user == null) {
                    v.mention_user = [];
                }
                var thisFileShow = true;
                if (v.user_id !== user_id) {
                    if (has_permission(user_id, 1602)) {
                        if (has_permission(user_id, 1601)) {
                            if (v.mention_user.indexOf(user_id) != -1) {
                                thisFileShow = true;
                            } else {
                                thisFileShow = false;
                            }
                        }
                    } else if (has_permission(user_id, 1603)) {
                        if (moment(v.created_at).unix() > moment(findObjForUser(user_id).createdat).unix()) {
                            if (has_permission(user_id, 1601)) {
                                if (v.mention_user.indexOf(user_id) != -1) {
                                    thisFileShow = true;
                                } else {
                                    thisFileShow = false;
                                }
                            }
                        } else {
                            thisFileShow = false;
                        }
                    }
                }
                if (thisFileShow) {
                    if (v.mention_user == null) {
                        v.mention_user = [];
                    }

                    // allMediaMsgId.push(v.msg_id);
                    if (v.file_type !== null) {
                        all_showFiles.push(v);
                        if (v.file_type.indexOf('image/') > -1)
                            allMediaImg.push(v);
                        else if (v.file_type.indexOf('audio/') > -1)
                            allMediaAudio.push(v);
                        else if (v.file_type.indexOf('video') > -1)
                            allMediaVideo.push(v);
                        else
                            allMediaOthers.push(v);
                    }
                    if (v.tag_list != null) {
                        $.each(v.tag_list, function(ka, va) {
                            if (allcomtagid.indexOf(va) == -1) {
                                allcomtagid.push(va);
                            }
                        });
                        if (alltagfiles.indexOf(v) == -1) {
                            alltagfiles.push(v);
                        }
                    }
                    // if(v.url_title !== null){
                    // 	allMediaLink.push(v);
                    // }
                }
            });
            $.each(res.my_files, function(k, v) {
                thisConvAllFilesNames.push(v.key);
                thisConvAllFilesLocations.push(v.location);
                // console.log(6895,v);
                if (v.mention_user == null) {
                    v.mention_user = [];
                }
                var thisFileShow = true;
                if (v.user_id !== user_id) {
                    if (has_permission(user_id, 1602)) {
                        if (has_permission(user_id, 1601)) {
                            if (v.mention_user.indexOf(user_id) != -1) {
                                thisFileShow = true;
                            } else {
                                thisFileShow = false;
                            }
                        }
                    } else if (has_permission(user_id, 1603)) {
                        if (moment(v.created_at).unix() > moment(findObjForUser(user_id).createdat).unix()) {
                            if (has_permission(user_id, 1601)) {
                                if (v.mention_user.indexOf(user_id) != -1) {
                                    thisFileShow = true;
                                } else {
                                    thisFileShow = false;
                                }
                            }
                        } else {
                            thisFileShow = false;
                        }
                    }
                }
                if (thisFileShow) {
                    if (v.mention_user == null) {
                        v.mention_user = [];
                    }
                    my_files.push(v);

                }
            });
            $.each(res.msg_links, function(k, v) {
                if (!has_permission(user_id, 1600)) {

                    // console.log(11, v);
                    // console.log(22, validURL(v.url));
                    if (v.has_delete == null) {
                        v.has_delete = [];
                    }
                    if (v.has_delete.indexOf(user_id) == -1) {
                        if (validURL(v.url)) {

                            allMediaLink.push(v);
                        }
                    }
                    // if(v.has_delete != null){
                    // 	if(v.has_delete.indexOf(user_id) == -1 && v.has_delete.indexOf('delete_for_all') == -1){
                    // 		allMediaLink.push(v);
                    // 	}
                    // }

                    // }else{
                    // }


                    // if(v.has_delete != null){
                    // 	if(v.has_delete.indexOf(user_id) == -1){
                    // 		allMediaLink.push(v);
                    // 	}
                    // }else{
                    // }
                    //allMediaLink.push(v);
                }
            })

            $('#mediaTagDivHead a').text('View By Tag(s) (' + allcomtagid.length + ')');
            $('#mediaTagDivHead').attr('data-len', allcomtagid.length);

            // for new All files
            $("#mediaAllFiles").html("");
            var allimg = $('.msgs-form-users .img_attach');

            if (all_showFiles.length == 0) {
                var notFoundMsg = '<h2 class="notFoundMsg">No image(s) were found in this channel !</h2>'
                $("#mediaAllFiles").append(notFoundMsg);
                $("#mediaAllFiles").css('style', '');
                $("#mediaAllFiles").addClass('flex_class');
                $("#mediaAllFiles .notFoundMsg").show();
                $('#mediaFilePreview .media_view').hide();
                $('.individual-tab-seach-con').hide();
            } else {
                $('#mediaFilePreview .media_view').show();
                $('.individual-tab-seach-con').show();
            }

            var lastid_f_A;
            var countAllF = 0;
            var myhtmlString = "";
            $.each(all_showFiles, function(k, v) {
                var secret = true;
                // console.log(v.secret_user,v.secret_user == null,v.secret_user === 'null')
                if (v.secret_user !== null) {
                    if (v.secret_user.indexOf(user_id) == -1) {
                        secret = false;
                    }
                }
                if (secret) {

                    // console.log(6991,v);
                    $('#mediaAllFiles').removeClass('flex_class');
                    var imgname = file_server + v.location;
                    var sender = findObjForUser(v.user_id);

                    var msg_date = moment(v.created_at).calendar(null, {
                        sameDay: '[Today]',
                        lastDay: '[Yesterday]',
                        lastWeek: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; },
                        sameElse: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; }
                    });

                    $.each($('.date-by-all h3'), function(dk, dv) {
                        if ($(dv).text() == msg_date) {
                            msg_date = null;
                            return 0;
                        }
                    });
                    if ($('#hayvenFilePage').hasClass('active')) {

                        if ($('#mediaAllFiles_table').length == 0) {

                            $("#mediaAllFiles").append(getFileTabTableDesign('mediaAllFiles_table'));
                        }
                        if (k < 100) {
                            myhtmlString += getFileDesingForTable('mediaAllFiles_table', v);

                        }
                        // if(countAllF < 20){

                        // 	$("#mediaAllFiles_table").append(getFileDesingForTable('mediaAllFiles_table',v));
                        // }else{
                        // 	laterAppendFiles.push(v);
                        // }
                        if ($('#mediaAllFilesgetFilesPagination').length == 0) {
                            $('#filter_tab_for_all_files').before('<div id="mediaAllFilesgetFilesPagination" class="file_pagination"></div>');
                            // console.log()
                            // $('#mediaFilesgetFilesPagination').pagination({
                            // 	dataSource: all_showFiles,
                            // 	pageSize: 50,
                            // 	autoHidePrevious: true,
                            // 	autoHideNext: true,
                            // 	callback: function(data, pagination) {
                            // 		// template method of yourself
                            // 		var html = "";
                            // 		$.each(data, function(index, item){
                            // 			html += getFileDesingForTable('mediaAllFiles_table',item);
                            // 		});

                            // 		$('#mediaAllFiles_tabledata').html(html);
                            // 	}
                            // })
                            // $('#mediaAllFiles_table').after(getFilesPagination('mediaFilesgetFilesPagination',all_showFiles.length));
                        }
                    } else {
                        if (msg_date !== null) {
                            lastid_f_A = msg_date.replace(/[\s,]+/g, ' ').trim().replace(/\s/g, '') + "all";
                            var dataofimg = '<div class="date-by-all" id="' + lastid_f_A + '"><h3>' + msg_date + '</h3></div>';
                            $("#mediaAllFiles").append(dataofimg);
                        }

                        if (v.file_type.indexOf('image/') > -1) {
                            $("#mediaAllFiles #" + lastid_f_A).append(getImgMediaHtml(v));
                        } else if (v.file_type.indexOf('audio/') > -1) {
                            $("#mediaAllFiles #" + lastid_f_A).append(getAudioMediaHtml(v));
                        } else if (v.file_type.indexOf('video') > -1) {
                            $("#mediaAllFiles #" + lastid_f_A).append(getVideoMediaHtml(v));
                        } else {
                            $("#mediaAllFiles #" + lastid_f_A).append(getFilesMediaHtml(v));

                        }
                    }
                    countAllF = countAllF + 1;
                    $('#allFilesMediaDiv a').text('All Files (' + countAllF + ')');
                    $('#allFilesMediaDiv').attr('data-len', countAllF);
                }
            });
            // $('#mediaAllFiles_table').append(myhtmlString);



            // for new All files


            $("#mediaImages").html("");
            var allimg = $('.msgs-form-users .img_attach');

            if (allMediaImg.length == 0) {
                var notFoundMsg = '<h2 class="notFoundMsg">No image(s) were found in this channel !</h2>'
                $("#mediaImages").append(notFoundMsg);
                $("#mediaImages").css('style', '');
                $("#mediaImages").addClass('flex_class');
                $("#mediaImages .notFoundMsg").show();
                $('#mediaFilePreview .media_view').hide();
                $('.individual-tab-seach-con').hide();
            } else {
                $('#mediaFilePreview .media_view').show();
                $('.individual-tab-seach-con').show();
            }

            var lastid_f_i;
            var countImg = 0;
            $.each(allMediaImg, function(k, v) {
                var secret = true;
                if (v.secret_user !== null) {
                    if (v.secret_user.indexOf(user_id) == -1) {
                        secret = false;
                    }
                }
                if (secret) {
                    // console.log(6991,v);
                    $('#mediaImages').removeClass('flex_class');
                    var imgname = file_server + v.location;
                    var sender = findObjForUser(v.user_id);

                    var msg_date = moment(v.created_at).calendar(null, {
                        sameDay: '[Today]',
                        lastDay: '[Yesterday]',
                        lastWeek: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; },
                        sameElse: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; }
                    });

                    $.each($('.date-by-images h3'), function(dk, dv) {
                        if ($(dv).text() == msg_date) {
                            msg_date = null;
                            return 0;
                        }
                    });
                    if ($('#hayvenFilePage').hasClass('active')) {

                        if ($('#mediaImages_table').length == 0) {

                            $("#mediaImages").append(getFileTabTableDesign('mediaImages_table'));
                        }
                        if (k < 100) {
                            myhtmlString += getFileDesingForTable('mediaImages_table', v);

                        }
                        // if(countAllF < 20){

                        // 	$("#mediaAllFiles_table").append(getFileDesingForTable('mediaAllFiles_table',v));
                        // }else{
                        // 	laterAppendFiles.push(v);
                        // }
                        if ($('#mediaImagesgetFilesPagination').length == 0) {
                            $('#filter_tab_for_all_files').before('<div id="mediaImagesgetFilesPagination" class="file_pagination"></div>');
                            // console.log()
                            // $('#mediaFilesgetFilesPagination').pagination({
                            // 	dataSource: all_showFiles,
                            // 	pageSize: 50,
                            // 	autoHidePrevious: true,
                            // 	autoHideNext: true,
                            // 	callback: function(data, pagination) {
                            // 		// template method of yourself
                            // 		var html = "";
                            // 		$.each(data, function(index, item){
                            // 			html += getFileDesingForTable('mediaAllFiles_table',item);
                            // 		});

                            // 		$('#mediaAllFiles_tabledata').html(html);
                            // 	}
                            // })
                            // $('#mediaAllFiles_table').after(getFilesPagination('mediaFilesgetFilesPagination',all_showFiles.length));
                        }
                    } else {
                        if (msg_date !== null) {
                            lastid_f_i = msg_date.replace(/[\s,]+/g, ' ').trim().replace(/\s/g, '') + "img";
                            var dataofimg = '<div class="date-by-images" id="' + lastid_f_i + '"><h3>' + msg_date + '</h3></div>';
                            $("#mediaImages").append(dataofimg);
                        }

                        var html = getImgMediaHtml(v);
                        $("#mediaImages #" + lastid_f_i).append(html);
                    }
                    countImg = countImg + 1;
                    $('#mediaImgsTab a').text('Images (' + countImg + ')');
                    $('#mediaImgsTab').attr('data-len', countImg);
                }
            });

            var lastid_f_p;
            var countPersonal = 0;
            $.each(my_files, function(k, v) {
                var secret = true;
                if (v.secret_user !== null) {
                    if (v.secret_user.indexOf(user_id) == -1) {
                        secret = false;
                    }
                }
                if (secret) {
                    // console.log(6991,v);
                    $('#mediaPersonal').removeClass('flex_class');
                    var imgname = file_server + v.location;
                    var sender = findObjForUser(v.user_id);

                    var msg_date = moment(v.created_at).calendar(null, {
                        sameDay: '[Today]',
                        lastDay: '[Yesterday]',
                        lastWeek: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; },
                        sameElse: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; }
                    });

                    $.each($('.date-by-images h3'), function(dk, dv) {
                        if ($(dv).text() == msg_date) {
                            msg_date = null;
                            return 0;
                        }
                    });
                    if ($('#hayvenFilePage').hasClass('active')) {

                        if ($('#mediaPersonal_table').length == 0) {

                            $("#mediaPersonal").append(getFileTabTableDesign('mediaPersonal_table'));
                        }
                        if (k < 100) {
                            myhtmlString += getFileDesingForTable('mediaPersonal_table', v);

                        }
                        // if(countAllF < 20){

                        // 	$("#mediaAllFiles_table").append(getFileDesingForTable('mediaAllFiles_table',v));
                        // }else{
                        // 	laterAppendFiles.push(v);
                        // }
                        if ($('#mediaPersonalgetFilesPagination').length == 0) {
                            $('#filter_tab_for_all_files').before('<div id="mediaPersonalgetFilesPagination" class="file_pagination"></div>');
                            // console.log()
                            // $('#mediaFilesgetFilesPagination').pagination({
                            // 	dataSource: all_showFiles,
                            // 	pageSize: 50,
                            // 	autoHidePrevious: true,
                            // 	autoHideNext: true,
                            // 	callback: function(data, pagination) {
                            // 		// template method of yourself
                            // 		var html = "";
                            // 		$.each(data, function(index, item){
                            // 			html += getFileDesingForTable('mediaAllFiles_table',item);
                            // 		});

                            // 		$('#mediaAllFiles_tabledata').html(html);
                            // 	}
                            // })
                            // $('#mediaAllFiles_table').after(getFilesPagination('mediaFilesgetFilesPagination',all_showFiles.length));
                        }
                    } else {
                        if (msg_date !== null) {
                            lastid_f_p = msg_date.replace(/[\s,]+/g, ' ').trim().replace(/\s/g, '') + "img";
                            var dataofimg = '<div class="date-by-images" id="' + lastid_f_p + '"><h3>' + msg_date + '</h3></div>';
                            $("#mediaPersonal").append(dataofimg);
                        }

                        var html = getImgMediaHtml(v);
                        $("#mediaPersonal #" + lastid_f_p).append(html);
                    }
                    countPersonal = countPersonal + 1;
                    $('#mediaPersonalDivHead a').text('Personal Files (' + countPersonal + ')');
                    $('#mediaPersonalDivHead').attr('data-len', countPersonal);
                }
            });

            $('#mediaVideos').html("");
            var allVideos = $('.msgs-form-users .vdo_attach');

            if (allMediaVideo.length === 0) {
                var notFoundMsg = '<h2 class="notFoundMsg">No video file(s) were found in this channel !</h2>'
                $("#mediaVideos").append(notFoundMsg);
                $("#mediaVideos").addClass('flex_class');
                $("#mediaVideos .notFoundMsg").show();
                // $('.individual-tab-seach-con').hide();
            } else {
                $('.individual-tab-seach-con').show();
            }




            var lastid_f_V;
            var countvideo = 0;
            $.each(allMediaVideo, function(k, v) {
                var secret = true;
                if (v.secret_user !== null) {
                    if (v.secret_user.indexOf(user_id) == -1) {
                        secret = false;
                    }
                }
                if (secret) {

                    var name = file_server + v.location;
                    var sender = findObjForUser(v.user_id);
                    var vidName = file_server + v.location;
                    var vidType = name.split('.');
                    var actType = vidType[vidType.length - 1];
                    var videoname = vidName[0] + '.' + actType;
                    var v1 = vidName[0].split('/');
                    var v2 = v1[v1.length - 1];
                    var classN4 = v2 + Date.now();
                    classN4 = classN4.replace(/[\s&\/\\@#,+()$~%.'":*?<>{}]/g, '');

                    var msg_date = moment(v.created_at).calendar(null, {
                        sameDay: '[Today]',
                        lastDay: '[Yesterday]',
                        lastWeek: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; },
                        sameElse: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; }
                    });

                    $.each($('.date-by-videos h3'), function(dk, dv) {
                        if ($(dv).text() == msg_date) {
                            msg_date = null;
                            return 0;
                        }
                    });
                    if ($('#hayvenFilePage').hasClass('active')) {

                        if ($('#mediaVideos_table').length == 0) {

                            $("#mediaVideos").append(getFileTabTableDesign('mediaVideos_table'));
                        }
                        if (k < 100) {
                            myhtmlString += getFileDesingForTable('mediaVideos_table', v);

                        }
                        // if(countAllF < 20){

                        // 	$("#mediaAllFiles_table").append(getFileDesingForTable('mediaAllFiles_table',v));
                        // }else{
                        // 	laterAppendFiles.push(v);
                        // }
                        if ($('#mediaVideosgetFilesPagination').length == 0) {
                            $('#filter_tab_for_all_files').before('<div id="mediaVideosgetFilesPagination" class="file_pagination"></div>');
                            // console.log()
                            // $('#mediaFilesgetFilesPagination').pagination({
                            // 	dataSource: all_showFiles,
                            // 	pageSize: 50,
                            // 	autoHidePrevious: true,
                            // 	autoHideNext: true,
                            // 	callback: function(data, pagination) {
                            // 		// template method of yourself
                            // 		var html = "";
                            // 		$.each(data, function(index, item){
                            // 			html += getFileDesingForTable('mediaAllFiles_table',item);
                            // 		});

                            // 		$('#mediaAllFiles_tabledata').html(html);
                            // 	}
                            // })
                            // $('#mediaAllFiles_table').after(getFilesPagination('mediaFilesgetFilesPagination',all_showFiles.length));
                        }
                    } else {
                        if (msg_date !== null) {
                            lastid_f_V = msg_date.replace(/[\s,]+/g, ' ').trim().replace(/\s/g, '') + "vdo";
                            var dataofvdo = '<div class="date-by-videos" id="' + lastid_f_V + '"><h3>' + msg_date + '</h3></div>';
                            $("#mediaVideos").append(dataofvdo);
                        }
                        var eachVideo = getVideoMediaHtml(v);

                        $('#mediaVideos #' + lastid_f_V).append(eachVideo);
                    }
                    countvideo = countvideo + 1;
                    $('#mediaViedeosTab a').text('Videos (' + countvideo + ')');
                    $('#mediaViedeosTab').attr('data-len', countvideo);
                }
            });

            ///for audios
            $('#mediaAudios').html("");
            var allAudios = $('.msgs-form-users .ado_attach');
            if (allMediaAudio.length === 0) {
                var notFoundMsg = '<h2 class="notFoundMsg">No audio file(s) were found in this channel !</h2>'
                $("#mediaAudios").append(notFoundMsg);
                $("#mediaAudios").addClass('flex_class');
                $("#mediaAudios .notFoundMsg").show();
                // $('.individual-tab-seach-con').hide();
            } else {
                $('.individual-tab-seach-con').show();
            }
            var countAudio = 0;
            var lastid_f_A;
            $.each(allMediaAudio, function(k, v) {
                var secret = true;
                if (v.secret_user !== null) {
                    if (v.secret_user.indexOf(user_id) == -1) {
                        secret = false;
                    }
                }
                if (secret) {

                    var name = file_server + v.location;
                    var sender = findObjForUser(v.user_id);
                    var audName = name.split('@');
                    var audType = name.split('.');
                    var actType = audType[audType.length - 1];
                    var audioname = audName[0] + '.' + actType;
                    var a1 = audName[0].split('/');
                    var a2 = a1[a1.length - 1];
                    var classN5 = a2 + Date.now();
                    classN5 = classN5.replace(/[\s&\/\\@#,+()$~%.'":*?<>{}]/g, '');

                    var msg_date = moment(v.created_at).calendar(null, {
                        sameDay: '[Today]',
                        lastDay: '[Yesterday]',
                        lastWeek: function(now) {
                            return '[' + this.format("MMM Do, YYYY") + ']';
                        },
                        sameElse: function(now) {
                            return '[' + this.format("MMM Do, YYYY") + ']';
                        }
                    });

                    $.each($('.date-by-audios h3'), function(dk, dv) {
                        if ($(dv).text() == msg_date) {
                            msg_date = null;
                            return 0;
                        }
                    });
                    if ($('#hayvenFilePage').hasClass('active')) {
                        if ($('#mediaAudios_table').length == 0) {

                            $("#mediaAudios").append(getFileTabTableDesign('mediaAudios_table'));
                        }
                        if (k < 100) {
                            myhtmlString += getFileDesingForTable('mediaAudios_table', v);

                        }
                        // if(countAllF < 20){

                        // 	$("#mediaAllFiles_table").append(getFileDesingForTable('mediaAllFiles_table',v));
                        // }else{
                        // 	laterAppendFiles.push(v);
                        // }
                        if ($('#mediaAudiosgetFilesPagination').length == 0) {
                            $('#filter_tab_for_all_files').before('<div id="mediaAudiosgetFilesPagination" class="file_pagination"></div>');
                            // console.log()
                            // $('#mediaFilesgetFilesPagination').pagination({
                            // 	dataSource: all_showFiles,
                            // 	pageSize: 50,
                            // 	autoHidePrevious: true,
                            // 	autoHideNext: true,
                            // 	callback: function(data, pagination) {
                            // 		// template method of yourself
                            // 		var html = "";
                            // 		$.each(data, function(index, item){
                            // 			html += getFileDesingForTable('mediaAllFiles_table',item);
                            // 		});

                            // 		$('#mediaAllFiles_tabledata').html(html);
                            // 	}
                            // })
                            // $('#mediaAllFiles_table').after(getFilesPagination('mediaFilesgetFilesPagination',all_showFiles.length));
                        }
                    } else {
                        if (msg_date !== null) {
                            lastid_f_A = msg_date.replace(/[\s,]+/g, ' ').trim().replace(/\s/g, '') + "ado";
                            var dataofado = '<div class="date-by-audios" id="' + lastid_f_A + '"><h3>' + msg_date + '</h3></div>';
                            $("#mediaAudios").prepend(dataofado);
                        }
                        var eachaudio = getAudioMediaHtml(v);;
                        $('#mediaAudios #' + lastid_f_A).append(eachaudio);
                    }
                    countAudio = countAudio + 1;
                    $('#mediaAudiosTab a').text('Audios (' + countAudio + ')');
                    $('#mediaAudiosTab').attr('data-len', countAudio);
                }
            });

            ////end audios
            $('#mediaFiles').html("");
            var allfiles = $('.msgs-form-users .fil_attach');

            if (allMediaOthers.length === 0) {
                var notFoundMsg = '<h2 class="notFoundMsg">No file(s) were found in this channel !</h2>'
                $("#mediaFiles").append(notFoundMsg);
                $("#mediaFiles").addClass('flex_class');
                $("#mediaFiles .notFoundMsg").show();
                // $('.individual-tab-seach-con').hide();
            } else {
                $('.individual-tab-seach-con').show();
            }

            var lastid_f_f;
            var countFiles = 0;
            $.each(allMediaOthers, function(k, v) {
                var secret = true;
                if (v.secret_user !== null) {
                    if (v.secret_user.indexOf(user_id) == -1) {
                        secret = false;
                    }
                }
                if (secret) {
                    var sender = findObjForUser(v.user_id);
                    var name = file_server + v.location;
                    var namespl = name.split('/');
                    var filename = namespl[namespl.length - 1];
                    var f_nameSpl = filename.split('@');
                    var f_nameOrg = f_nameSpl[0];
                    var f_typeSpl = f_nameSpl[f_nameSpl.length - 1].split('.');
                    var f_type = f_typeSpl[f_typeSpl.length - 1];

                    var classN6 = f_nameOrg + Date.now();
                    classN6 = classN6.replace(/[\s&\/\\@#,+()$~%.'":*?<>{}]/g, '');

                    var msg_date = moment(v.created_at).calendar(null, {
                        sameDay: '[Today]',
                        lastDay: '[Yesterday]',
                        lastWeek: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; },
                        sameElse: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; }
                    });

                    $.each($('.date-by-files h3'), function(dk, dv) {
                        if ($(dv).text() == msg_date) {
                            msg_date = null;
                            return 0;
                        }
                    });
                    if ($('#hayvenFilePage').hasClass('active')) {

                        if ($('#mediaFiles_table').length == 0) {

                            $("#mediaFiles").append(getFileTabTableDesign('mediaFiles_table'));
                        }
                        if (k < 100) {
                            myhtmlString += getFileDesingForTable('mediaFiles_table', v);

                        }
                        // if(countAllF < 20){

                        // 	$("#mediaAllFiles_table").append(getFileDesingForTable('mediaAllFiles_table',v));
                        // }else{
                        // 	laterAppendFiles.push(v);
                        // }
                        if ($('#mediaFilesgetFilesPagination').length == 0) {
                            $('#filter_tab_for_all_files').before('<div id="mediaFilesgetFilesPagination" class="file_pagination"></div>');
                            // console.log()
                            // $('#mediaFilesgetFilesPagination').pagination({
                            // 	dataSource: all_showFiles,
                            // 	pageSize: 50,
                            // 	autoHidePrevious: true,
                            // 	autoHideNext: true,
                            // 	callback: function(data, pagination) {
                            // 		// template method of yourself
                            // 		var html = "";
                            // 		$.each(data, function(index, item){
                            // 			html += getFileDesingForTable('mediaAllFiles_table',item);
                            // 		});

                            // 		$('#mediaAllFiles_tabledata').html(html);
                            // 	}
                            // })
                            // $('#mediaAllFiles_table').after(getFilesPagination('mediaFilesgetFilesPagination',all_showFiles.length));
                        }

                        // if($('#mediaFiles_table').length == 0){

                        // 	$("#mediaFiles").append(getFileTabTableDesign('mediaFiles_table'));
                        // }

                        // $("#mediaFiles_table").append(getFileDesingForTable('mediaFiles_table',v));
                    } else {
                        if (msg_date !== null) {
                            lastid_f_f = msg_date.replace(/[\s,]+/g, ' ').trim().replace(/\s/g, '') + "file";
                            var dataofFile = '<div class="date-by-files" id="' + lastid_f_f + '"><h3>' + msg_date + '</h3></div>';
                            $("#mediaFiles").append(dataofFile);
                        }
                        var eachFiles = getFilesMediaHtml(v);
                    }
                    countFiles = countFiles + 1;
                    $('#mediaFiles #' + lastid_f_f).append(eachFiles);
                    $('#mediaFilesTab a').text('Docs (' + countFiles + ')');
                    $('#mediaFilesTab').attr('data-len', countFiles);
                }
            });

            $('#mediaLinks').html("");
            var alllink = $('.msgs-form-users .has_url');
            var countLinks = 0;
            var lastid_f_l;
            if (allMediaLink.length === 0) {
                var notFoundMsg = '<h2 class="notFoundMsg">No link(s) were found in this channel !</h2>'
                $("#mediaLinks").append(notFoundMsg);
                $("#mediaLinks").addClass('flex_class');
                $("#mediaLinks .notFoundMsg").show();
                // $('.individual-tab-seach-con').hide();
            } else {
                $('.individual-tab-seach-con').show();
            }
            allMediaLink.reverse()
            var myLinkhtmlString = "";
            $.each(allMediaLink, function(k, v) {
                // console.log(6581,v)
                if (v.has_delete == null) {
                    v.has_delete = [];
                }
                var secret = true;
                if (v.secret_user !== null) {
                    if (v.secret_user.indexOf(user_id) == -1) {
                        secret = false;
                    }
                }
                if (v.has_delete.indexOf('delete_for_all') == -1 && secret == true) {


                    var senderName = findObjForUser(v.user_id).fullname;

                    var unixt = v.created_at;

                    var msg_date = moment(unixt).calendar(null, {
                        sameDay: '[Today]',
                        lastDay: '[Yesterday]',
                        lastWeek: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; },
                        sameElse: function(now) { return '[' + this.format("MMM Do, YYYY") + ']'; }
                    });

                    $.each($('.date-by-links h3'), function(dk, dv) {
                        if ($(dv).text() == msg_date) {
                            msg_date = null;
                            return 0;
                        }
                    });
                    if ($('#hayvenFilePage').hasClass('active')) {

                        if ($('#mediaLinks_table').length == 0) {

                            $("#mediaLinks").append(getFileTabTableDesign('mediaLinks_table'));
                        }
                        // if(k < 100){
                        // 	myLinkhtmlString += getFileDesingForTable('mediaLinks_table',v);
                        // }
                        if ($('#mediaLinksgetFilesPagination').length == 0) {
                            $('#mediaLinks').before('<div id="mediaLinksgetFilesPagination" class="file_pagination"></div>');
                            // console.log()
                            filterAllMyLinks(allMediaLink)
                        }
                        // $("#mediaLinks_table").append(getFileDesingForTable('mediaLinks_table',v));
                    } else {
                        if (msg_date !== null) {
                            lastid_f_l = msg_date.replace(/[\s,]+/g, ' ').trim().replace(/\s/g, '') + "link";
                            var dataofLink = '<div class="date-by-links" id="' + lastid_f_l + '"><h3>' + msg_date + '</h3></div>';
                            $("#mediaLinks").append(dataofLink);
                        }
                        var msgurl = v.url;

                        // console.log(9108, validURL(msgurl));
                        var eachurl = '<div class="all-links" onclick=window.open("' + msgurl + '","_blank") id="links' + v.url_id + '" data_id="' + v.url_id + '" style="cursor:pointer">';
                        eachurl += '<span class="hyvenCheckbox" onclick="customChekbox(event, this,\'all_link\')" data="' + msgurl + '"></span>';
                        eachurl += '<div class="links-logo" onclick=//window.open("' + msgurl + '","_blank")>';
                        // eachurl+= 		'<img src="'+ v.url_image +'" alt="">';
                        eachurl += '</div>';
                        eachurl += '<div class="link-details" onclick=//window.open("' + msgurl + '","_blank")>';
                        eachurl += '<h4 class="bold_title" id="url_title_' + v.url_id + '" onclick=//window.open("' + msgurl + '","_blank")>' + (v.title == 'null' ? '' : v.title) + '</h4>';
                        eachurl += '<h4  class="before_nickname conv_nickname_' + v.url_id + ' .onlyLinkTitle' + v.msg_id + '" onclick=//window.open("' + msgurl + '","_blank")></h4>';
                        eachurl += '<h4 style="height:21px;overflow:hidden;" class="link_url"><a target="_blank" href="' + msgurl + '">' + msgurl + '</a></h4>';
                        // eachurl+= 		'<p style="height:30px;overflow:hidden;">' + v.url_body + '</p>';
                        eachurl += '<p>Shared by ' + senderName + ' <span>' + moment(unixt).format('MMMM Do YYYY, h:mm a') + '</span></p>';
                        eachurl += '</div>';
                        eachurl += '<div class="linkHovitem">';
                        eachurl += '<div class="shareIcon go_msg" data-balloon="Go to message" data-balloon-pos="left" onclick="gotoThisMessage(event,this)" data-msg="' + v.msg_id + '" data-conv="' + v.root_conv_id + '"></div>'
                        if (v.user_id == user_id) {
                            eachurl += '<div class="edit_link" data-balloon="Change Link Title" data-balloon-pos="left" onclick="editLinkTitle(event, \'link\',\'' + v.url_id + '\',\'\')" data-value="' + msgurl + '"></div>'
                        } else {
                            eachurl += '<div class="edit_link" data-balloon="Add a nick name" data-balloon-pos="left" onclick="editCustomTitle(event, \'link\',\'' + v.url_id + '\',\'\')" data-value="' + msgurl + '"></div>'
                        }
                        eachurl += '<div class="shareIcon share_ico" data-balloon="Share" data-balloon-pos="left" onclick="viewShreImgPop(event,this)" data-value="' + msgurl + '"></div>'
                        eachurl += '<div class="shareIcon delete_ico ' + (v.user_id == user_id ? 'creator_you' : '') + '" data-balloon="Delete" data-balloon-pos="left" onclick="deleteLink(\'' + v.url_id + '\',event,this)" data-value="' + msgurl + '"></div>'
                        eachurl += '</div>';
                        eachurl += '</div>';


                        $('#mediaLinks #' + lastid_f_l).append(eachurl);
                    }
                    countLinks = countLinks + 1;
                    if ($('#hayvenFilePage').hasClass('active')) {
                        $('#mediaLinksTab a').text('All Links (' + countLinks + ')');
                    } else {

                        $('#mediaLinksTab a').text('Links (' + countLinks + ')');
                    }
                    $('#mediaLinksTab').attr('data-len', countLinks);


                }







            });
            // $('#mediaLinks_table').append(myLinkhtmlString)

            if (!$('#hayvenFilePage').hasClass('active')) {
                $('#mediaTagDivHead').show();
                $('#mediaFilesTab').show();
                $('#mediaAudiosTab').show();
                $('#mediaViedeosTab').show();
                $('#mediaImgsTab').show();
                //for tags
                $('#mediaTags').html("");
                var allTags = $('.msgs-form-users .attach_tag');

                // var allmessageTaglist = [];
                var allmessageTagTitles = [];
                var allmessageTagIds = [];

                // $.each(mediaMsg,function(k,v){
                // 	if(v.tag_list != null){
                // 		$.each(v.tag_list,function(ka,va){
                // 			if(allmessageTaglist.indexOf(va) == -1){
                // 				allmessageTaglist.push(va);
                // 			}
                // 		});
                // 		allTagMsg.push(v);
                // 	}
                // });



                if (allcomtagid.length == 0) {
                    var notFoundMsg = '<h2 class="notFoundMsg">No tag(s) were found in this channel !</h2>';
                    $("#mediaTags").append(notFoundMsg);
                    $('#tagListFormediaView').hide();
                    $("#mediaTags").addClass('flex_class');
                    $("#mediaTags .notFoundMsg").show();
                    // $('.individual-tab-seach-con').hide();

                } else {
                    $('.tagListFormediaView').removeAttr('style');
                    $('#tagListFormediaView').show();
                    $('.individual-tab-seach-con').show();
                }
                var allTitleandTagFiles = {};
                $.each(allUserTagList, function(k, v) {
                    if (v != undefined) {
                        if (allcomtagid.indexOf(v.tag_id) > -1) {
                            if (allmessageTagTitles.indexOf(v.title) == -1) {
                                allmessageTagTitles.push(v.title);
                                allmessageTagIds.push(v.tag_id);
                                allTitleandTagFiles[v.title] = [];
                                $.each(alltagfiles, function(ka, va) {
                                    if (va.tag_list != null) {
                                        if (va.tag_list.indexOf(v.tag_id) > -1) {
                                            if (va.mention_user == null) {
                                                va.mention_user = [];
                                            }
                                            var thisFileShow = true;
                                            if (va.user_id !== user_id) {
                                                if (has_permission(user_id, 1602)) {
                                                    if (has_permission(user_id, 1601)) {
                                                        if (va.mention_user.indexOf(user_id) != -1) {
                                                            thisFileShow = true;
                                                        } else {
                                                            thisFileShow = false;
                                                        }
                                                    }
                                                } else if (has_permission(user_id, 1603)) {
                                                    if (moment(va.created_at).unix() > moment(findObjForUser(user_id).createdat).unix()) {
                                                        if (has_permission(user_id, 1601)) {
                                                            if (va.mention_user.indexOf(user_id) != -1) {
                                                                thisFileShow = true;
                                                            } else {
                                                                thisFileShow = false;
                                                            }
                                                        }
                                                    } else {
                                                        thisFileShow = false;
                                                    }
                                                }
                                            }
                                            if (thisFileShow) {
                                                allTitleandTagFiles[v.title].push(va);
                                            }
                                        }
                                    }
                                })
                            }
                        }
                    }
                });

                // allmessageTagTitles.sort();
                $('#mediaTagDivHead a').text('View By Tag(s) (' + allmessageTagTitles.length + ')');
                $('#mediaTagDivHead').attr('data-len', allmessageTagTitles.length);
                var myalltagAttach = allTagMsg;
                $('#visibleTagMedia').html('');
                $('#hiddenTagMedia').html('');
                $('#visibleTagList').show();
                $('#hiddenTagList').hide();
                $.each(allmessageTagTitles, function(k, v) {
                    $('#visibleTagMedia').append('<span class="active" id="viewByTags' + allmessageTagIds[k] + '" onclick="filterTagMedia(this,$(this).attr(\'data-type\'),\'' + v.replace(/\s/g, '') + '\')" data-type="remove"> ' + v + '</span>');
                    var dataofLink = '<div class="date-by-tags" id="tagCustomid' + v.replace(/\s/g, '') + '"><h3>Tag Name :<span style="background-color: var(--PrimaryC);border-radius: 14px;padding: 0px 8px;color: #ffffff;margin-left:8px;">' + v + '</span></h3></div>';
                    $("#mediaTags").append(dataofLink);


                });
                getRoomWiseShareTag(conversation_id);
                $('#visibleTagMedia').prepend('<span id="viewAllTagActive" class="" data-type="remove">View All</span>');

                $.each(allTitleandTagFiles, function(ka, va) {
                    if (va.length > 0) {
                        $.each(va, function(k, v) {
                            if (v.file_type.indexOf('image/') > -1) {
                                $("#tagCustomid" + ka.replace(/\s/g, '')).append(getImgMediaHtml(v));
                            } else if (v.file_type.indexOf('audio/') > -1) {
                                $("#tagCustomid" + ka.replace(/\s/g, '')).append(getAudioMediaHtml(v));
                            } else if (v.file_type.indexOf('video') > -1) {
                                $("#tagCustomid" + ka.replace(/\s/g, '')).append(getVideoMediaHtml(v));
                            } else {
                                $("#tagCustomid" + ka.replace(/\s/g, '')).append(getFilesMediaHtml(v));

                            }
                        });
                    }
                });
            } else {
                $('#mediaTagDivHead').hide();
                // $('#mediaFilesTab').hide();
                // $('#mediaAudiosTab').hide();
                // $('#mediaViedeosTab').hide();
                // $('#mediaImgsTab').hide();
            }




            activeShareIconLink();
            onsearchMedia();

            //  if($('#searchAfter').val()) {
            // 	onsearchMedia();
            // }
            // else{
            //     $('.seach_box_all').val('');
            //     searchMedia();
            // }
            //$('#mediaTags').css('height','calc(100vh - '+($('#tagListFormediaView').height()+200)+'px)');
            ///end tags
            mediaFileSearch();
        }
        inviewFunForgallery();
        if (t != '') {
            $('#' + t).click();
        }
        changeAllCustomTitle();

    });
    if (!$('#hayvenFilePage').hasClass('active')) {
        $('#mediaTagDivHead').show();
        $('#mediaFilesTab').show();
        $('#mediaAudiosTab').show();
        $('#mediaViedeosTab').show();
        $('#mediaImgsTab').show();
    } else {
        $('#mediaTagDivHead').hide();
        $('#mediaFilesTab').show();
        $('#mediaAudiosTab').show();
        $('#mediaViedeosTab').show();
        $('#mediaImgsTab').show();
    }


}

function deleteLink(id, e, ele) {
    e.preventDefault();
    e.stopImmediatePropagation();
    // $('#warningPopup').css('display','flex');
    // $('#warningPopup').attr('data-type', 'delete_link_signle');
    // $('#warningPopup').attr('link-id',id );
    // $('#warningTitle').text('Delete Link');
    // $('#warningMessage').html('<h3 style="font-weight:600;">Are you sure you want to Delete this link?</h3>');
    // $('.buttonCancel').text('Cancel');
    // $('.buttonAction').addClass('bg_danger').text('Delete');

    var all_active = ($(ele).hasClass('creator_you') ? true : false);

    $('#delete_msg_div').css('display', 'flex');
    $('#delete_msg_div').find('.delete_msg_sec_title').html('Are you sure you want to Delete this link? This cannot be <span class="undone">undone</span>.');
    $('#delete_msg_div').attr('msg-id', id);
    $('#delete_msg_div').attr('delete_type', 'link');
    $('#delete_msg_div').attr('all_active', all_active);
    if (all_active) {
        $('#deleteForAll').show();
    } else {
        $('#deleteForMe').text('Delete for me');
        $('#deleteForAll').hide();
    }
}

// function inviewFunForgallery(){
// 	inView('.msg_per_img_div.fileviewBlazy').on( 'enter', function( figure ) {
// 		var img = figure.querySelector( '.blazy' );
// 		if(img !== null){
// 			console.log(6788,img)
// 			if (  'undefined' !== typeof $(img).attr('src') ) {
// 				newImg = new Image();
// 				newImg.src = img.dataset.src;
// 				newImg.dataset.src = img.dataset.src;
// 				newImg.addEventListener( 'load', function() {
// 					var maxWidth = 250; // Max width for the image
// 					var maxHeight = 200;    // Max height for the image
// 					var ratio = 0;  // Used for aspect ratio
// 					var width = this.width;    // Current image width
// 					var height = this.height;  // Current image height
// 					console.log(6800,width,height)

// 					// Check if the current width is larger than the max
// 					if(width > maxWidth || height > maxHeight){
// 						if(height > width){
// 							if(maxWidth > width){
// 								$(this).css({'width':this.width+'px','height':this.height+'px'});
// 								$(this).css({'transform': 'unset','top':'unset'});
// 							}else{
// 								ratio = maxWidth / width;
// 								$(this).css("width", maxWidth);
// 								$(this).css("height", height * ratio);
// 								$(this).css({'transform': 'unset','top':'unset'});
// 							}
// 						}else{
// 							if(width > maxWidth && height > maxHeight){
// 								ratio = maxHeight / height;   // get ratio for scaling image
// 								$(this).css("width", width * ratio); // Set new width
// 								$(this).css("height", maxHeight);  // Scale height based on ratio
// 							}else if(height > maxHeight){
// 								$(this).css({'width':this.width+'px','height':this.height+'px'});
// 							}else if(width > maxWidth){
// 								$(this).css({'width':this.width+'px','height':this.height+'px'});
// 							}
// 						}
// 						height = height * ratio;    // Reset height to match scaled image
// 						width = width * ratio;    // Reset width to match scaled image
// 					}else{
// 						$(this).css({'width':this.width+'px','height':this.height+'px'});
// 					}
// 					figure.classList.remove( 'is-loading' );
// 					figure.innerHTML = '';
// 					figure.appendChild(this);
// 					// $(img).removeClass('blazy');
// 				} );
// 			}
// 		}
// 	});
// }

function inviewFunForgallery() {
    inView('.msg_per_img_div.fileviewBlazy').on('enter', function(figure) {
        // console.log(10391,figure);
        var img = figure.querySelector('.blazy');
        if (img !== null) {
            if ('undefined' !== typeof $(img).attr('src')) {
                newImg = new Image();
                newImg.src = img.dataset.src;
                newImg.dataset.src = img.dataset.src;
                newImg.addEventListener('load', function() {
                    if (this.width < 250) {
                        $(this).addClass('resize_parent');
                    }

                    figure.classList.remove('is-loading');
                    figure.innerHTML = '';
                    figure.appendChild(this);
                    if ($('.resize_parent').length > 0) {
                        $('.resize_parent').closest('.all-images').addClass('widthauto');
                        $('.widthauto').find('.resize_parent').removeClass('resize_parent');
                    }
                });
            }
        }
    });
}

function getImgMediaHtml(v) {
    console.log(v);
    // debugger
    var sender = findObjForUser(v.user_id);
    var imgname = file_server + v.location;
    var thumb = imgname.replace('/Photos/', '/Photos/thumb-');
    var imgSize = bytesToSize2(v.file_size);
    var html = '';
    html += '<div class=" all-images file_media_' + v.id + '" javascript:this.src="images/nothumb.png" tag_array="' + v.tag_list + '" view_type="gallery" onclick="showImageSlider(event,this, \'' + imgSize + '\'); //openImage(event,this)" data-msg="" data-src="' + imgname + '" data-originalname="' + v.originalname + '" data-filename="' + v.originalname + '" data-sender_name="' + sender.fullname + '" data-sender_img="' + sender.img + '" data-filesize="' + imgSize + '">';
    html += '<span class="hyvenCheckbox" onclick="customChekbox(event, this,\'imageMedia\')" data-id="' + v.id + '" data="' + imgname + '"></span>';
    // if(v.is_secret){
    //     html += '<div class="private-attach-files">private</div>';
    // }
    html += '<div class="msg_per_img_div fileviewBlazy is-loading">';
    html += '<img class="img_attach _only_img blazy"  src="' + thumb + '" onerror="javascript:this.src=\'images/nothumb.png\'" data-src="' + imgname + '" alt="' + v.originalname + '" style="pointer-events: none;">';
    html += '</div>';
    html += '<div class="per_img_hover_opt">';
    html += '<div class="img_action shareIcon go_msg" data-balloon="Go to message" data-balloon-pos="left" onclick="gotoThisMessage(event,this)" data-msg="' + v.msg_id + '" data-conv="' + v.root_conv_id + '"></div>';
    html += '<p class="img_action view_ico"  onclick="viewImgHov(this,\'mediaImg\')" data-balloon="Preview" data-balloon-pos="left" data-originalname="' + v.originalname + '"></p>';
    html += '<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" file-name="' + v.originalname + '" data-href="' + imgname + '" data-balloon="Download" data-balloon-pos="left">';
    // html +=                 	'<img src="/images/basicAssets/Download.svg" alt=""/>';
    html += '</p>';
    html += '<p class="img_action edit_ico" data-balloon="Add a nick name" data-balloon-pos="left" onclick="editCustomTitle(event, \'file\',\'' + v.id + '\',\'' + v.originalname + '\')" data-value="' + imgname + '"></p>';
    html += '<p class="img_action forward_ico" data-balloon="forward" data-balloon-pos="up"  onclick="forwardOneFileFun(event,this)" data-id="' + v.id + '"><img style="width:16px;" src="/images/basicAssets/shareHayven_white.svg" alt=""/></p>';
    html += '<p class="img_action share_ico" data-balloon="Share" data-balloon-pos="left" onclick="viewShreImgPop(event,this)" data-value="' + imgname + '"></p>';
    if (sender.fullname == user_fullname)
        html += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteItem(event,\'img\')" msg-id="' + v.msg_id + '" data-value="' + imgname + '"></p>';
    html += '</div>';
    html += '<div class="img-name" onclick="//showImageSlider(event,this)"  data-msg="" data-src="' + imgname + '" data-originalname="' + v.originalname + '"  data-filename="' + v.originalname + '" data-sender_name="' + sender.fullname + '" data-sender_img="' + sender.img + '">';
    html += '<div class="customToolTip">' + v.originalname + '<br>' + sender.fullname + '<br> uploaded on ' + moment(v.created_at).format('MMMM Do YYYY, h:mm a') + '</div>';
    html += '<p data-msg="" data-src="' + imgname + '" data-filename="' + v.originalname + '" data-sender_name="' + sender.fullname + '" data-sender_img="' + sender.img + '"><span class="name_span file_title_' + v.id + '" data-original="' + v.originalname + '" >' + v.originalname + '</span><span class="fileSize">&nbsp;(' + imgSize + ')</span></p>';
    html += '<p class="for_list_view cus_title" style="display:none !important" data-msg="" data-src="' + imgname + '" data-filename="' + v.originalname + '" data-sender_name="' + sender.fullname + '" data-sender_img="' + sender.img + '"><span class="name_span file_cus_title_' + v.id + '" data-original="' + v.originalname + '" >' + v.originalname + '</span></p>';
    html += '<p class="for_list_view" data-msg="" data-src="' + imgname + '" data-filename="' + v.originalname + '" data-sender_name="' + sender.fullname + '" data-sender_img="' + sender.img + '"><span class="name_span" data-original="' + v.originalname + '" >' + v.originalname + '</span><span class="fileSize">&nbsp;(' + imgSize + ')</span></p>';
    html += '<div class="updated_by">Uploaded by ' + sender.fullname + ' on ' + moment(v.created_at).format('MMMM Do YYYY, h:mm a') + '</div>';
    html += getFileTagHtml(v.id, v.tag_list, v.is_secret);
    html += '</div>';
    html += '</div>';

    return html;
}

function getFileTagHtml(file_id, tag_list, is_secret = false) {
    // debugger;
    if (tag_list == null) {
        tag_list = [];
    }
    var tagDesign = '';
    if (is_secret) {
        tagDesign += '<div class="tag_design tag_private_file" style="padding-left: 8px !important;"><span>Shared in a private chat</span></div>'
    }
    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            var st = '';
            if (v.shared_tag != null) {
                st = ' shared_tag_user ';
                if (v.shared_tag !== user_id) {
                    st = st + ' others_userTag ';
                }
            }
            if (tag_list.indexOf(v.tag_id) > -1) {
                tagDesign += '<div style="background-color:'+v.tag_color+'" class="tag_design tag_name_view_' + v.tag_id + ' ' + st + '" ' + getTooltipForshareTag(v.tag_id) + '><span>' + v.title + '</span></div>'
            }
        }
    });

    var html = '';
    html += '<div class="attach_tag onlyFileTag forGridView">';
    html += gethtmlForFileTagMedia(file_id, tag_list);
    html += '</div>';
    html += '<div class="attach_tag onlyFileTag forNormarView">';
    html += tagDesign;
    html += '</div>';
    return html
}

function gethtmlForFileTagMedia(file_id, file_tags) {
    var html = '<span class="attach_tag onlyFileTag active"  data-id="' + file_tags.join(',') + '">';
    var useLength = 0;
    var tooltipcount = 0;
    var newHtml = '';
    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            if (file_tags.indexOf(v.tag_id) > -1) {
                var st = '';
                if (v.shared_tag != null) {
                    st = ' shared_tag_user ';
                    if (v.shared_tag !== user_id) {
                        st = st + ' others_userTag ';
                    }
                }
                // if(useLength < 2){
                // 	if(v.tag_type == 'public'){
                // 		newHtml += '<span onclick="triggerfileTagIco(event,\''+file_id+'\')" class="file_id_cls tag_design public_tag_team tag_name_view_'+v.tag_id+'" style="'+(v.tag_color != null ? 'background-color:'+v.tag_color+'':'')+'" '+getTooltipForshareTag(v.tag_id)+' ><span class="file_id_cls">'+v.title+'</span> </span>';
                // 	}else{
                // 		newHtml += '<span onclick="triggerfileTagIco(event,\''+file_id+'\')" class=" file_id_cls tag_design  tag_name_view_'+v.tag_id+st+'" '+getTooltipForshareTag(v.tag_id)+' ><span class="file_id_cls">'+v.title+'</span> </span>';
                // 	}


                // }else{
                tooltipcount++;
                // }

                // if(useLength == 0){
                // 	html += '<span> '+v.title+' </span>';
                // }else{
                // 	if(this_tag_list.length == (useLength+1)){
                // 		html += ' & <span> '+v.title+' </span>';
                // 	}else{
                // 		html += '<span>, '+v.title+' </span>';
                // 	}
                // }
                useLength++;
            }
        }
    });
    if (useLength > 0) {
        html += '<span class="ToggleTagActionMsg counter_tag' + useLength + '" onclick="thisMsgTags(this)">(' + useLength + ')</span>'
    }
    html += newHtml;
    if (tooltipcount > 0) {
        // onclick="triggerfileTagIco(event,\''+file_id+'\')"
        html += '<span class="file_id_cls tag_design moreTooltipBtn " >' + tooltipcount + '</span>'
        html += '<div class="tag_toolTip for_tag" data-pos="top">'
            // html += 	'<span class="tooltip_close" onclick="tooltip_close()"></span>'
        html += '<div class="tooltip_body">'
        useLength = 0;
        $.each(allUserTagList, function(k, v) {
            if (v != undefined) {
                if (file_tags.indexOf(v.tag_id) > -1) {
                    var st = '';
                    if (v.shared_tag != null) {
                        st = ' shared_tag_user ';
                        if (v.shared_tag !== user_id) {
                            st = st + ' others_userTag ';
                        }
                    }
                    // if(useLength > 2){
                    // 	if(v.tag_type == 'public'){
                    // 		html += '<li class="tag_name_view_'+v.tag_id+'" style="'+(v.tag_color != null ? 'color:'+v.tag_color+'':'var(--PrimaryC)')+'" '+getTooltipForshareTag(v.tag_id)+'><span>'+v.title+'</span> </li>';
                    // 	}else{
                    var sc = ''
                    if (v.shared_tag != null) {
                        if (v.shared_tag !== user_id) {
                            sc = 'color:#F55';
                        } else {
                            sc = 'color:var(--PrimaryC)';
                        }
                    }
                    html += '<li class="modified_tooltip tag_name_view_' + v.tag_id + st + '" style="' + sc + '"><span>' + v.title + '<span class="miniTitle">[' + findObjForUser(v.tagged_by).fullname + ']</span></span> </li>';
                    // 	}
                    // }
                    useLength++;
                }
            }
        });
        html += '</div>'
        html += '</div>'
    }
    html += '</span>';

    return html;
}

function getVideoMediaHtml(v) {
    var sender = findObjForUser(v.user_id);
    var name = file_server + v.location;
    var vidName = file_server + v.location;
    var vidType = name.split('.');
    var actType = vidType[vidType.length - 1];
    var videoname = vidName[0] + '.' + actType;
    var v1 = vidName[0].split('/');
    var v2 = v1[v1.length - 1];

    // console.log(actType)
    if (actType == 'avi' || actType == 'wmv' || actType == 'mov') {
        var eachVideo = '<div class="all-videos file_media_' + v.id + '" tag_array="' + v.tag_list + '" view-type="list" file-type="' + actType + '" onclick="triggerAviFile(event,this)">';
    } else {
        var eachVideo = '<div class="all-videos file_media_' + v.id + '" tag_array="' + v.tag_list + '" view-type="list" file-type="' + actType + '" onclick="triggerAviFile(event,this)">';
    }
    eachVideo += '<span class="hyvenCheckbox" onclick="customChekbox(event, this,\'videoMedia\')" data-id="' + v.id + '" data="' + file_server + v.location + '"></span>';
    if (actType == 'avi' || actType == 'wmv' || actType == 'mov' || actType == '3gp' || actType == 'mkv' || actType == 'mpg') {
        eachVideo += '<div class="msg_per_img_div">';
        eachVideo += '<img src="/images/basicAssets/' + actType + '.svg" alt="' + v.originalname + '" style="pointer-events: none;">';
        eachVideo += '</div>';
        eachVideo += '<div class="per_img_hover_opt">';
        eachVideo += '<p class="img_action view_ico" onclick="downloadFilePopup(event, this,\'frmGlry\')" data-href="' + file_server + v.location + '" file-name="' + v.originalname + '" data-balloon="Preview" data-balloon-pos="left">';
        eachVideo += '</p>';
        eachVideo += '<a download="' + v.originalname + '" class="download_link" target="_blank" style="display:none" href="' + file_server + v.location + '">';
        eachVideo += '</a>';
        // eachVideo += 			'</p>';
        // eachVideo += 				'<p class="img_action download_ico" data-balloon="Download" data-balloon-pos="left">';
        // eachVideo +=					'<a download="'+ v.originalname +'" onclick="show_noti(event)" target="_blank" href="/alpha2/download/' + v.key + '" style="">';
        // // eachVideo +=                 		'<img src="/images/basicAssets/Download.svg" alt=""/>';
        // eachVideo +=					'</a>';
        // eachVideo +=              	'</p>';
        eachVideo += '<p class="img_action download_ico" onclick="tempdownloadAnyFile(event, this)" data-href="' + file_server + v.location + '" file-name="' + v.originalname + '" data-balloon="Download" data-balloon-pos="left">';
        eachVideo += '		<img src="/images/basicAssets/Download.svg" alt=""/>';
        eachVideo += '</p>';

        eachVideo += '<p class="img_action edit_ico" data-balloon="Add a nick name" data-balloon-pos="left" onclick="editCustomTitle(event, \'file\',\'' + v.id + '\',\'' + v.originalname + '\')" data-value="' + name + '"></p>';
        eachVideo += '<p class="img_action forward_ico" data-balloon="forward" data-balloon-pos="up"  onclick="forwardOneFileFun(event,this)" data-id="' + v.id + '"><img style="width:16px;" src="/images/basicAssets/shareHayven_white.svg" alt=""/></p>';
        eachVideo += '<p class="img_action share_ico" data-balloon="Share" data-balloon-pos="left" onclick="viewShreImgPop(event,this)" data-value="' + name + '"></p>';
        if (sender.fullname == user_fullname)
            eachVideo += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteItem(event,\'video\')"  msg-id="' + v.msg_id + '" data-value="' + name + '"></p>';
        eachVideo += '</div>';
    } else {
        eachVideo += '<div class="msg_per_img_div">';
        eachVideo += '<img style="display:none" src="/images/basicAssets/wmv.svg" alt="msg type problem.wmv" style="pointer-events: none;">';
        eachVideo += '<video controls class="msg_per_img_div">';
        eachVideo += '<source class="vdo_attach" src="' + file_server + v.location + '" type="' + v.file_type + '" data-file_name="' + v.originalname + '">';
        eachVideo += '</video>';
        eachVideo += '</div>';
        eachVideo += '<div class="per_img_hover_opt">';
        eachVideo += '<p style="display:none" class="img_action" onclick="downloadFilePopup(event, this,\'frmGlry\')" data-href="' + file_server + v.location + '" data-type="downloadAnyFile" file-name="' + v.originalname + '" data-balloon="Preview" data-balloon-pos="up">';
        eachVideo += '</p>';
        eachVideo += '<a download="' + v.originalname + '" class="download_link" target="_blank" style="display:none" href="' + file_server + v.location + '">';
        eachVideo += '</a>';
        // eachVideo += 			'</p>';

        // eachVideo += 				'<p class="img_action download_ico" data-balloon="Download" data-balloon-pos="left">';
        // eachVideo +=					'<a download="'+ v.originalname +'" onclick="show_noti(event)" target="_blank" href="/alpha2/download/' + v.key + '" style="">';
        // // eachVideo +=                 		'<img src="/images/basicAssets/Download.svg" alt=""/>';
        // eachVideo +=					'</a>';
        // eachVideo +=              	'</p>';

        eachVideo += '<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" data-href="' + file_server + v.location + '" file-name="' + v.originalname + '" data-balloon="Download" data-balloon-pos="left">';
        eachVideo += '		<img src="/images/basicAssets/Download.svg" alt=""/>';
        eachVideo += '</p>';

        eachVideo += '<p class="img_action edit_ico" data-balloon="Add a nick name" data-balloon-pos="left" onclick="editCustomTitle(event, \'file\',\'' + v.id + '\',\'' + v.originalname + '\')" data-value="' + name + '"></p>';
        eachVideo += '<p class="img_action share_ico" data-balloon="Share" data-balloon-pos="left" onclick="viewShreImgPop(event,this)" data-value="' + name + '"></p>';
        if (sender.fullname == user_fullname)
            eachVideo += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteItem(event,\'video\')" msg-id="' + v.msg_id + '" data-value="' + name + '"></p>';
        eachVideo += '</div>';
    }
    eachVideo += '<div class="video-name img-name">';
    eachVideo += '<div class="customToolTip">' + v.originalname + '<br>' + sender.fullname + '<br> uploaded on ' + moment(v.created_at).format('MMMM Do YYYY, h:mm a') + '</div>';
    eachVideo += '<p><span class="name_span file_title_' + v.id + '" data-original="' + v.originalname + '">' + v.originalname + '</span><span class="fileSize">&nbsp;(' + bytesToSize2(v.file_size) + ')</span></p>';
    eachVideo += '<p class="for_list_view cus_title" style="display:none !important"><span class="name_span file_cus_title_' + v.id + '" data-original="' + v.originalname + '">' + v.originalname + '</span></p>';
    eachVideo += '<p class="for_list_view"><span class="name_span " data-original="' + v.originalname + '">' + v.originalname + '</span><span class="fileSize">&nbsp;(' + bytesToSize2(v.file_size) + ')</span></p>';
    eachVideo += '<div class="updated_by">Uploaded by ' + sender.fullname + ' on ' + moment(v.created_at).format('MMMM Do YYYY, h:mm a') + '</div>';

    eachVideo += getFileTagHtml(v.id, v.tag_list, v.is_secret);
    eachVideo += '</div>';
    eachVideo += '</div>';
    if (actType == 'avi') {
        eachVideo += '</div>';
    }

    return eachVideo;
}
var download_win = "";

function show_noti(e) {
    e.preventDefault();
    e.stopImmediatePropagation();
    // $("#prepar_download").show();
    download_win = window.open($(e.target).attr('href'), "Download", "width=200,height=100");
}
socket.on("download_completed", (res) => {
    // $("#prepar_download").hide();
    download_win.close();
});

function playmusic(elm, id) {
    var x = document.getElementById("audio_" + id);
    var y = document.getElementById("msgaudio_" + id);
    // console.log(16623,$(elm));
    if ($(elm).hasClass('all-audios')) {
        if (!$(elm).hasClass('active')) {
            x.play();
            $(elm).addClass('active');
        } else {
            x.pause();
            $(elm).removeClass('active');
        }
    } else {
        if (!$(elm).hasClass('active')) {
            y.play();
            $(elm).addClass('active');
        } else {
            y.pause();
            $(elm).removeClass('active');
        }
    }
}

function getAudioMediaHtml(v) {
    var sender = findObjForUser(v.user_id);
    var name = file_server + v.location;
    var audName = name.split('@');
    var audType = name.split('.');
    var actType = audType[audType.length - 1];
    var audioname = audName[0] + '.' + actType;
    var a1 = audName[0].split('/');
    var a2 = a1[a1.length - 1];
    var classN5 = a2 + Date.now();
    classN5 = classN5.replace(/[\s&\/\\@#,+()$~%.'":*?<>{}]/g, '');
    var eachaudio = '<div class="all-audios file_media_' + v.id + '" tag_array="' + v.tag_list + '" onclick=playmusic(this,\'' + v.id + '\')>';
    eachaudio += '	<span class="hyvenCheckbox" onclick="customChekbox(event, this,\'audioMedia\')" data-id="' + v.id + '" data="' + file_server + v.location + '"></span>';
    eachaudio += '	<audio controls id="audio_' + v.id + '">';
    eachaudio += '		<source class="ado_attach" src="' + file_server + v.location + '" type="' + v.file_type + '" data-file_name="' + v.originalname + '">';
    eachaudio += '	</audio>';

    eachaudio += '<div class="per_img_hover_opt">';
    eachaudio += '<div class="img_action shareIcon go_msg" data-balloon="Go to message" data-balloon-pos="left" onclick="gotoThisMessage(event,this)" data-msg="' + v.msg_id + '" data-conv="' + v.root_conv_id + '"></div>';
    // eachaudio += 			'<p class="img_action" onclick="downloadFilePopup(this,\'frmGlry\')" file-name="'+ v.originalname +'" data-balloon="Preview" data-balloon-pos="up">';
    // eachaudio +=				'</p>';
    // eachaudio += 				'<a download="'+ v.originalname +'" class="download_link" target="_blank" style="display:none" href="' + file_server + v.location + '">';
    // eachaudio += 				'</a>';
    // eachaudio += 			'</p>';

    // eachaudio += 				'<p class="img_action download_ico" data-balloon="Download" data-balloon-pos="left">';
    // eachaudio +=					'<a download="'+ v.originalname +'" onclick="show_noti(event)" target="_blank" href="/alpha2/download/' + v.key + '" style="">';
    // // eachaudio +=                 		'<img src="/images/basicAssets/Download.svg" alt=""/>';
    // eachaudio +=					'</a>';
    // eachaudio +=              	'</p>';

    eachaudio += '<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" data-href="' + file_server + v.location + '" file-name="' + v.originalname + '" data-balloon="Download" data-balloon-pos="left">';
    eachaudio += '		<img src="/images/basicAssets/Download.svg" alt=""/>';
    eachaudio += '</p>';

    eachaudio += '<p class="img_action edit_ico" data-balloon="Add a nick name" data-balloon-pos="left" onclick="editCustomTitle(event, \'file\',\'' + v.id + '\',\'' + v.originalname + '\')" data-value="' + name + '"></p>';
    eachaudio += '<p class="img_action share_ico" data-balloon="Share" data-balloon-pos="left" onclick="viewShreImgPop(event,this)" data-value="' + name + '"></p>';
    if (sender.fullname == user_fullname)
        eachaudio += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteItem(event,\'audio\')" msg-id="' + v.msg_id + '" data-value="' + name + '"></p>';
    eachaudio += '</div>';

    eachaudio += '	<div class="audio-name" onclick="//editCustomTitle(event, \'file\',\'' + v.id + '\',\'' + v.originalname + '\')">';
    eachaudio += '		<div class="customToolTip">' + v.originalname + '<br>' + sender.fullname + '<br> uploaded on ' + moment(v.created_at).format('MMMM Do YYYY, h:mm a') + '</div>';
    eachaudio += '		<p><span class="name_span file_title_' + v.id + '" data-original="' + v.originalname + '">' + v.originalname + '</span><span class="fileSize">&nbsp;(' + bytesToSize2(v.file_size) + ')</span></p>';
    eachaudio += '		<p class="for_list_view cus_title" style="display:none !important"><span class="name_span file_cus_title_' + v.id + '" data-original="' + v.originalname + '">' + v.originalname + '</span></p>';
    eachaudio += '		<p class="for_list_view"><span class="name_span" data-original="' + v.originalname + '">' + v.originalname + '</span><span class="fileSize">&nbsp;(' + bytesToSize2(v.file_size) + ')</span></p>';
    eachaudio += '		<div class="updated_by">Uploaded by ' + sender.fullname + ' on ' + moment(v.created_at).format('MMMM Do YYYY, h:mm a') + '</div>';
    eachaudio += getFileTagHtml(v.id, v.tag_list, v.is_secret);;
    eachaudio += '	</div>';
    eachaudio += '</div>';

    return eachaudio;
}

function getFilesMediaHtml(v) {
    var sender = findObjForUser(v.user_id);
    var name = file_server + v.location;
    var namespl = name.split('/');
    var filename = namespl[namespl.length - 1];
    var f_nameSpl = filename.split('@');
    var f_nameOrg = f_nameSpl[0];
    var f_typeSpl = f_nameSpl[f_nameSpl.length - 1].split('.');
    var f_type = f_typeSpl[f_typeSpl.length - 1];

    switch (f_type) {
        case 'ai':
        case 'mp3':
        case 'mp4':
        case 'mkv':
        case 'avi':
        case 'wmv':
        case 'm4v':
        case 'mpg':
        case 'doc':
        case 'docx':
        case 'indd':
        case 'js':
        case 'sql':
        case 'pdf':
        case 'ppt':
        case 'pptx':
        case 'psd':
        case 'svg':
        case 'xls':
        case 'xlsx':
        case 'zip':
        case 'rar':
            f_type = f_type;
            break;
        default:
            f_type = 'other';
    }

    var eachFiles = '';
    if (f_type == 'pdf') {
        eachFiles += '<div class="all-files file_media_' + v.id + '" tag_array="' + v.tag_list + '" onclick="window.open(\'' + file_server + v.location + '\',\'_blank\')"  data-msg="" data-src="' + file_server + v.location + '" data-filename="' + file_server + v.location + '" data-sender_name="' + sender.fullname + '" data-sender_img="' + sender.img + '">';

    } else {
        eachFiles += '<div class="all-files file_media_' + v.id + '" tag_array="' + v.tag_list + '" onclick="openImage(event,this)" data-msg="" data-src="' + file_server + v.location + '" data-filename="' + file_server + v.location + '" data-sender_name="' + sender.fullname + '" data-sender_img="' + sender.img + '">';
    }
    eachFiles += '<span class="hyvenCheckbox" onclick="customChekbox(event, this,\'imageMedia\')" data-id="' + v.id + '" data="' + file_server + v.location + '"></span>';
    eachFiles += '<div class="msg_per_img_div">';
    if (f_type == 'pdf') {
        eachFiles += '<a download="' + v.originalname + '" style="height: 100%;display: contents;" target="_blank" href="' + file_server + v.location + '">';
        eachFiles += '<img src="/images/basicAssets/' + f_type + '.svg" alt="' + file_server + v.location + '" style="pointer-events: none;">';
        eachFiles += '</a>';
    } else {
        eachFiles += '<img src="/images/basicAssets/' + f_type + '.svg" alt="' + file_server + v.location + '" style="pointer-events: none;">';
    }
    eachFiles += '</div>';
    eachFiles += '<div class="per_img_hover_opt">';
    eachFiles += '<div class="img_action shareIcon go_msg" data-balloon="Go to message" data-balloon-pos="left" onclick="gotoThisMessage(event,this)" data-msg="' + v.msg_id + '" data-conv="' + v.root_conv_id + '"></div>';
    if (f_type == 'pdf') {
        eachFiles += '<p class="img_action view_ico" data-balloon="Preview" data-balloon-pos="left">';
        eachFiles += '<a style="width:28px !important;height:28px !important" download="' + v.originalname + '" target="_blank" href="' + file_server + v.location + '">';
        eachFiles += '</p>';
        eachFiles += '</a>';
        eachFiles += '</p>';
    } else {
        eachFiles += '<p class="img_action view_ico" onclick="downloadFilePopup(event, this,\'frmGlry\')" data-href="' + file_server + v.location + '" file-name="' + v.originalname + '" data-balloon="Preview" data-balloon-pos="left">';
        eachFiles += '</p>';
        eachFiles += '<a download="' + v.originalname + '" class="download_link" target="_blank" style="display:none" href="' + file_server + v.location + '">';
        eachFiles += '</a>';
        // 	eachFiles += 			'</p>';
    }
    // eachFiles += 				'<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" file-name="'+ v.originalname +'" data-href="' + file_server + v.location + '" data-balloon="Download" data-balloon-pos="left">';
    // eachFiles +=              	'<a download target="_blank" href="' +imgname + '">';
    // eachFiles +=                 	'<img src="/images/basicAssets/Download.svg" alt=""/>';
    // eachFiles +=                 '</a>';
    // eachFiles +=              	'</p>';

    if (f_type == 'pdf') {
        eachFiles += '<p class="img_action download_ico" onclick="downloadAnyFile(event, this)" data-href="' + file_server + v.location + '" file-name="' + v.originalname + '" data-balloon="Download" data-balloon-pos="left">';
        eachFiles += '		<img src="/images/basicAssets/Download.svg" alt=""/>';
        eachFiles += '</p>';
    } else {
        eachFiles += '<p class="img_action download_ico" onclick="tempdownloadAnyFile(event, this)" data-href="' + file_server + v.location + '" file-name="' + v.originalname + '" data-balloon="Download" data-balloon-pos="left">';
        eachFiles += '		<img src="/images/basicAssets/Download.svg" alt=""/>';
        eachFiles += '</p>';
    }

    eachFiles += '<p class="img_action edit_ico" data-balloon="Add a nick name" data-balloon-pos="left" onclick="editCustomTitle(event, \'file\',\'' + v.id + '\',\'' + v.originalname + '\')" data-value="' + name + '"></p>';
    eachFiles += '<p class="img_action forward_ico" data-balloon="forward" data-balloon-pos="up"  onclick="forwardOneFileFun(event,this)" data-id="' + v.id + '"><img style="width:16px;" src="/images/basicAssets/shareHayven_white.svg" alt=""/></p>';
    eachFiles += '<p class="img_action share_ico" data-balloon="Share" data-balloon-pos="left" onclick="viewShreImgPop(event,this)" data-value="' + name + '"></p>';
    if (sender.fullname == user_fullname)
        eachFiles += '<p class="img_action deleteitem delete_ico" data-balloon="Delete" data-balloon-pos="left" onclick="deleteItem(event,\'other\')" msg-id="' + v.msg_id + '" data-value="' + name + '"></p>';
    eachFiles += '</div>';
    eachFiles += '<div class="img-name"  data-msg="" data-src="' + file_server + v.location + '" data-filename="' + file_server + v.location + '" data-sender_name="' + sender.fullname + '" data-sender_img="">';
    eachFiles += '<div class="customToolTip">' + v.originalname + '<br>' + sender.fullname + '<br> uploaded on ' + moment(v.created_at).format('MMMM Do YYYY, h:mm a') + '</div>';
    eachFiles += '<p data-msg="" class="fileInf" data-src="' + file_server + v.location + '" data-filename="' + file_server + v.location + '" data-sender_name="' + sender.fullname + '" data-sender_img=""><span class="name_span file_title_' + v.id + '" data-original="' + v.originalname + '">' + v.originalname + '</span><span class="fileSize">&nbsp;(' + bytesToSize2(v.file_size) + ')</span></p>';
    eachFiles += '<p class="for_list_view cus_title" style="display:none !important" data-msg="" class="fileInf" data-src="' + file_server + v.location + '" data-filename="' + file_server + v.location + '" data-sender_name="' + sender.fullname + '" data-sender_img=""><span class="name_span file_cus_title_' + v.id + '" data-original="' + v.originalname + '">' + v.originalname + '</span></p>';
    eachFiles += '<p class="for_list_view custitlenop" data-msg="" class="fileInf" data-src="' + file_server + v.location + '" data-filename="' + file_server + v.location + '" data-sender_name="' + sender.fullname + '" data-sender_img=""><span class="name_span" data-original="' + v.originalname + '">' + v.originalname + '</span><span class="fileSize">&nbsp;(' + bytesToSize2(v.file_size) + ')</span></p>';
    eachFiles += '<div class="updated_by custitlenod">Uploaded by ' + sender.fullname + ' on ' + moment(v.created_at).format('MMMM Do YYYY, h:mm a') + '</div>';
    eachFiles += getFileTagHtml(v.id, v.tag_list, v.is_secret);;
    eachFiles += '</div>';
    eachFiles += '</div>';

    return eachFiles;
}

function designForMediaTag(v, type) {
    var design = '';
    if (type == 'img') {
        var datamsg = v.msg.msg_body;
        var imgname = v.value;
        var name = imgname.split('/');
        var imgName = name[name.length - 1].split('@');
        var imgFormate = name[name.length - 1].split('.');
        var imgFullName = imgName[0] + '.' + imgFormate[imgFormate.length - 1];
        var sender = v.msg.serder_name;
        var src = file_server + v.value;


        var unixt = Number((v.value).substring((v.value).lastIndexOf('@') + 1, (v.value).lastIndexOf('.')));

        design += '<div class="all-images"  data-msg="' + datamsg + '"  data-src="' + src + '" data-filename="' + imgFullName + '" data-sender_name="' + v.msg.sender_name + '" data-sender_img="' + v.msg.sender_img + '">';
        design += '<span class="hyvenCheckbox" onclick="customChekbox(event, this,\'tagMedia\')" data="' + src + '"></span>';
        design += '<img class="_only_img" data-sender_name="' + v.msg.sender_name + '" src="' + src + '" alt="' + imgFullName + '" style="pointer-events: none;">';
        design += '<div class="img-name" javascript:this.src="images/nothumb.png" data-msg="' + datamsg + '" view_type="gallery" onclick="showImageSlider(event,this, \'Unknown Size\')" data-src="' + src + '" data-originalname="' + v.imgFullName + '"  data-filename="' + imgFullName + '" data-sender_name="' + v.msg.sender_name + '" data-sender_img="' + v.msg.sender_img + '">';
        design += '<div class="customToolTip">' + imgFullName + '<br>' + v.msg.sender_name + '<br> uploaded on ' + moment(unixt).format('MMMM Do YYYY, h:mm a') + '</div>';
        design += '<p data-msg="' + datamsg + '" view_type="gallery" onclick="showImageSlider(event,this, \'Unknown Size\')" data-src="' + src + '" data-originalname="' + v.imgFullName + '" data-filename="' + imgFullName + '" data-sender_name="' + v.msg.sender_name + '" data-sender_img="' + v.msg.sender_img + '">' + imgFullName + '</p>';
        design += '</div>';
        design += '</div>';

    } else if (type == 'audio') {
        var name = v.value;
        var senderName = v.msg.sender_name;
        var audName = name.split('@');
        var audType = name.split('.');
        var actType = audType[audType.length - 1];
        var audioname = audName[0] + '.' + actType;

        var unixt = Number(name.substring(name.lastIndexOf('@') + 1, name.lastIndexOf('.')));
        var file_type = name.split('.').pop().toLowerCase();
        design += '<div class="all-audios">';
        design += '<span class="hyvenCheckbox" onclick="customChekbox(event, this,\'tagMedia\')" data="' + file_server + name + '"></span>';
        design += '<audio controls>';
        design += '<source class="ado_attach" src="' + file_server + name + '" type="audio/' + file_type + '" data-file_name="' + name + '">';
        design += '</audio>';
        design += '<div class="audio-name">';
        design += '<div class="customToolTip">' + audioname + '<br>' + senderName + '<br> uploaded on ' + moment(unixt).format('MMMM Do YYYY, h:mm a') + '</div>';
        design += '<p>' + audioname + '</p>';
        design += '<div class="updated_by">Uploaded by ' + senderName + ' on ' + moment(unixt).format('MMMM Do YYYY, h:mm a') + '</div>';
        design += '</div>';
        design += '</div>';

    } else if (type == 'video') {
        var name = v.value;
        var senderName = v.msg.sender_name;
        var vidName = name.split('@');
        var vidType = name.split('.');
        var actType = vidType[vidType.length - 1];
        var videoname = vidName[0] + '.' + actType;

        var unixt = Number(name.substring(name.lastIndexOf('@') + 1, name.lastIndexOf('.')));
        var file_type = name.split('.').pop().toLowerCase();
        design += '<div class="all-videos">';
        design += '<span class="hyvenCheckbox" onclick="customChekbox(event, this,\'tagMedia\')" data="' + file_server + name + '"></span>';
        design += '<video controls>';
        design += '<source class="vdo_attach" src="' + file_server + name + '" type="video/' + file_type + '" data-file_name="' + name + '">';
        design += '</video>';
        design += '<div class="video-name">';
        design += '<div class="customToolTip">' + videoname + '<br>' + senderName + '<br> uploaded on ' + moment(unixt).format('MMMM Do YYYY, h:mm a') + '</div>';
        design += '<p>' + videoname + '</p>';
        design += '<div class="updated_by">Uploaded by ' + senderName + ' on ' + moment(unixt).format('MMMM Do YYYY, h:mm a') + '</div>';
        design += '</div>';
        design += '</div>';

    } else if (type == 'file') {
        var name = v.value;
        var unixt = Number(name.substring(name.lastIndexOf('@') + 1, name.lastIndexOf('.')));
        var senderName = v.msg.sender_name;
        design += '<div class="all-images">';
        design += '<span class="hyvenCheckbox" onclick="customChekbox(event, this,\'tagMedia\')" data="' + file_server + v.value + '"></span>';
        design += '<img src="/images/basicAssets/other.svg" alt="' + v.value + '" style="pointer-events: none;">';
        design += '<div class="img-name">';
        design += '<div class="customToolTip">' + v.value + '</div>';
        design += '<p><a href="' + file_server + v.value + '" target="_blank">' + v.value + '</a></p>';
        design += '<div class="updated_by">Uploaded by ' + senderName + ' on ' + moment(unixt).format('MMMM Do YYYY, h:mm a') + '</div>';
        design += '</div>';
        design += '</div>';
    }
    return design;
}


function bytesToSize2(bytes) {
    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
    if (bytes == 0) return '0 Byte';
    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
    var size = Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
    return size;
}



var notShowThisCLass = ['img_action tag_ico'];
var showImageSlider = (event, elm, imgSize) => {
    threadToBackwrap = false;
    if ($('#hayvenFilePage').hasClass('active')) {
        var changeText = $('.image-popup-header>h2');
        var repdiv = false;
        if (!$('.close-media-popup').hasClass('allAttachmentView')) {
            $('.close-image-popup-slider').addClass('openForMsg full_width100');
            $(changeText).html('<img class="back-to-media-tab" onclick="backToMediaTab()" src="/images/basicAssets/BackArrow.svg" alt=""> Chat');
        } else {
            $(changeText).html('<img class="back-to-media-tab" onclick="backToMediaTab()" src="/images/basicAssets/BackArrow.svg" alt=""> Images');
        }
        var curimg = file_server + file_view_data.location;

        var imgsn = findObjForUser(file_view_data.user_id).fullname;
        var img = findObjForUser(file_view_data.user_id).img;
        var msgBody = '';
        // var original_name = $(event.target).attr('data-originalname');
        var original_name = file_view_data.originalname;

        var allthisdateimg = $('#mediaAllFiles_tabledata').find('.table_image');

        // console.log('11829');
        $('#mediaFilePreview').show();
        $('.media-file-popup').hide();
        $('.image-popup-slider').show();
        $('.images-slider-footer').html("");
        $('.show-picture-comment>p').html("");
        $.each(allthisdateimg, function(k, v) {
            // console.log("allthisdateimg", v);
            var src = $(v).attr('data-src');
            var name = $(v).attr('data-sender_name');
            var img = $(v).attr('data-sender_img');
            var msgBody = $(v).attr('data-msg');
            var original_name = $(v).attr('data-originalname');
            let indivisualImgSize = $(v).attr("data-filesize");
            // console.log("indivisualImgSize", indivisualImgSize);
            var html = '<div class="slider-footer-all-images" onclick="activethisimg(\'' + src + '\', \'' + name + '\', \'' + img + '\', \'' + msgBody + '\', \'' + original_name + '\', \'' + indivisualImgSize + '\')">';
            html += '<img src="' + $(v).attr('data-src') + '" data-msg="' + msgBody + '" alt="">';
            html += '</div>';
            $('.images-slider-footer').append(html);
        });

        if (allthisdateimg.length == 1) {
            $('.slider-left-arrow').hide();
            $('.slider-right-arrow').hide();
            $('.images-slider-footer').hide();
        } else {
            $('.slider-left-arrow').show();
            $('.slider-right-arrow').show();
            $('.images-slider-footer').show();
        }

        call_panzoom();
        activethisimg(curimg, imgsn, img, msgBody, original_name, Math.floor(Number(file_view_data.file_size) / 1024) + 'KB');
    } else {

        if ($('#threadReplyPopUp').is(':visible')) {
            threadToBackwrap = true;
        }
        $('#mediaFilePreview').attr('view-type', $(elm).attr('view_type'))
        if (notShowThisCLass.indexOf($(event.target).attr('class')) > -1) {
            return false;
        }

        if ($(event.targe).parent('.per_img_hover_opt').length > 0 || $(event.target).parent('.img_action').length > 0 || $(event.target).hasClass('deleteitem')) {
            return false;
        } else {
            var changeText = $('.image-popup-header>h2');
            var repdiv = false;

            if ($('#threadReplyPopUp').is(':visible')) {
                repdiv = true;
                $('#mediaFilePreview').attr('thread-view', true);
                if (typeof callCleanupLogic !== 'function' && window.name !== 'calling') $('#threadReplyPopUp').hide();
            } else {
                $('#mediaFilePreview').attr('thread-view', false);
            }

            if (!$('.close-media-popup').hasClass('allAttachmentView')) {
                $('.close-image-popup-slider').addClass('openForMsg');
                $(changeText).html('<img class="back-to-media-tab" onclick="backToMediaTab()" src="/images/basicAssets/BackArrow.svg" alt=""> Chat');
            } else {
                $(changeText).html('<img class="back-to-media-tab" onclick="backToMediaTab()" src="/images/basicAssets/BackArrow.svg" alt=""> Images');
            }

            var curimg = '';

            if ($(elm).hasClass('all-images')) {
                curimg = $(elm).attr('data-src');
            } else if ($(event.target).attr('data-src') == undefined) {
                curimg = $(event.target).attr('src');
                if ($(event.target).parents('.file-name').length > 0) {
                    curimg = $(event.target).parents('.file-name').attr('data-src');
                }
            } else {
                curimg = $(event.target).attr('data-src');
            }
            var imgsn = $(elm).attr('data-sender_name');

            if (imgsn == undefined) {
                imgsn = $(event.target).parents('.all-images').attr('data-sender_name');
            }
            var img = $(event.target).attr('data-sender_img');
            var msgBody = $(event.target).attr('data-msg');
            // var original_name = $(event.target).attr('data-originalname');
            var original_name = $(elm).attr('data-originalname');

            if (original_name == undefined) {
                original_name = $(event.target).innerText;
            }
            if ($('#mediaFilePreview').is(':visible') && $('#mediaFilePreview').attr('view-type') == 'gallery') {

                if ($('#mediaImages').is(':visible')) {
                    var allthisdateimg = $(event.target).closest('#mediaImages').find('.all-images');
                } else if ($('#mediaAllFiles').is(':visible')) {
                    var allthisdateimg = $(event.target).closest('#mediaAllFiles').find('.all-images');
                } else {
                    var allthisdateimg = $(event.target).closest('#mediaTags').find('.all-images');
                }
            } else if (repdiv) {
                var allthisdateimg = $(event.target).closest('.thread-user-msg').find('._only_img');
                // var allthisdateimg = $(event.target).closest('.thread-user-msg').find('.img_attach');
            } else {

                var allthisdateimg = $(event.target).closest('.user-msg').find('._only_img');
                // var allthisdateimg = $(event.target).closest('.user-msg').find('.img_attach');
                // var allthisdateimg = $(event.target).closest('.user-msg').find('.attach-file');
                $('.back-to-media-tab').addClass('openForMsg');
            }

            // console.log('11829');
            $('#mediaFilePreview').show();
            $('.media-file-popup').hide();
            $('.image-popup-slider').show();
            $('.images-slider-footer').html("");
            $('.show-picture-comment>p').html("");
            $.each(allthisdateimg, function(k, v) {
                // console.log("allthisdateimg", v);
                var src = $(v).attr('data-src');
                var name = $(v).attr('data-sender_name');
                var img = $(v).attr('data-sender_img');
                var msgBody = $(v).attr('data-msg');
                var original_name = $(v).attr('data-originalname');
                let indivisualImgSize = $(v).attr("data-filesize");
                // console.log("indivisualImgSize", indivisualImgSize);
                var html = '<div class="slider-footer-all-images" onclick="activethisimg(\'' + src + '\', \'' + name + '\', \'' + img + '\', \'' + msgBody + '\', \'' + original_name + '\', \'' + indivisualImgSize + '\')">';
                html += '<img src="' + $(v).attr('data-src') + '" data-msg="' + msgBody + '" alt="">';
                html += '</div>';
                $('.images-slider-footer').append(html);
            });

            if (allthisdateimg.length == 1) {
                $('.slider-left-arrow').hide();
                $('.slider-right-arrow').hide();
                $('.images-slider-footer').hide();
            } else {
                $('.slider-left-arrow').show();
                $('.slider-right-arrow').show();
                $('.images-slider-footer').show();
            }

            call_panzoom();
            activethisimg(curimg, imgsn, img, msgBody, original_name, imgSize);
        }
    }

    $('#reset').trigger('click');
    setTimeout(() => {
        $('#reset').trigger('click');
    }, 200);
    setTimeout(() => {
        $('#reset').trigger('click');
    }, 500);
    setTimeout(() => {
        $('#reset').trigger('click');
    }, 1000);

};

var activethisimg = (curimg, imgsn, img, msgBody, original_name, imgSize) => {
    // console.log("imgSize2", imgSize);
    // console.log(curimg);
    var name = curimg.split('/');
    var unixt = Number(name[name.length - 1].substring(name[name.length - 1].lastIndexOf('%') + 1, name[name.length - 1].lastIndexOf('.')));
    if (!unixt > 0)
        unixt = Number(name[name.length - 1].substring(name[name.length - 1].lastIndexOf('@') + 1, name[name.length - 1].lastIndexOf('.')));
    $('.image-popup-slider').find('.currentimg').attr('src', curimg);
    $('.image-popup-slider').find('.shared-by-user-photo>img').attr('src', file_server + 'profile-pic/Photos/' + img);
    $('.image-popup-slider').find('.shared-by-user-photo').remove();
    var newsplitimg = curimg.split('/');
    var imgorginalnamesplit = newsplitimg[newsplitimg.length - 1].split('@');
    var thisimgext = imgorginalnamesplit[imgorginalnamesplit.length - 1].split('.');
    thisimgext = thisimgext[thisimgext.length - 1];
    imgorginalnamesplit[imgorginalnamesplit.length - 1] = '.' + thisimgext;
    imgorginalnamesplit = imgorginalnamesplit.join('');

    $('.image-popup-slider').find('.shared-by-user-details>h3').html(original_name + " (" + imgSize + ")");

    $('.image-popup-slider').find('.shared-by-user-details>p').html('Uploaded by ' + imgsn + ' on ' + moment(unixt).format('MMMM Do YYYY @ h:mm a'));
    $('.image-popup-slider').find('.show-picture-comment>p').html(msgBody);
    $('.image-popup-slider').find('.slide-image-download').attr('data-href', curimg);
    $('.image-popup-slider').find('.slide-image-download').attr('file-name', original_name);
    $('.image-popup-slider').find('.slide-image-share').attr('data-value', curimg);
    $('.slider-footer-all-images img').removeClass('active');
    $.each($('.slider-footer-all-images img'), function(k, v) {
        if ($(v).attr('src') == curimg)
            $(v).addClass('active');
    });
    // reset_zoom();
    call_panzoom();
};
// slider left arrow a click = sla
var slaclick = () => {
    var pref_el = $('img.active').closest('.slider-footer-all-images').prev();
    if (pref_el.length) {
        $(pref_el).click();
    } else {
        $('.slider-footer-all-images').last().trigger('click');
    }
    // reset_zoom();
    reset_panzoom();
};
// slider right arrow a click = sra
var sraclick = () => {
    var next_el = $('img.active').closest('.slider-footer-all-images').next();
    if (next_el.length) {
        $(next_el).click();
    } else {
        $('.slider-footer-all-images').first().trigger('click');
    }
    reset_panzoom();
};

function mediaFileSearch() {


}































function onsearchMedia() {
    // if($(event.target).val().trim() != ''){
    // 	$(event.target).next('.clear_text').show();
    // }else{
    // 	$(event.target).next('.clear_text').hide();
    // }
    var input_val = $('#search_different_tab').val();
    if ($('#searchMediaFilter').hasClass('Search-img')) {

        $("#mediaImages .all-images .img-name").each(function() {
            if (input_val != '') {

                if ($(this).text().toLowerCase().search(input_val.toLowerCase()) > -1) {
                    $(this).parents('.all-images').show();
                    $(this).parents('.date-by-images').show();

                    if ($('.date-by-images:visible').length > 0) {
                        if ($('#mediaImages .search_msg').is(':visible')) {
                            $('#mediaImages .search_msg').remove();
                        }
                    }
                } else {
                    $(this).parents('.all-images').hide();
                    if ($(this).parents('.date-by-images').find('.all-images:visible').length == 0) {
                        $(this).parents('.date-by-images').hide();
                    }

                    if ($('.date-by-images:visible').length == 0) {
                        if (!$('#mediaImages .search_msg').is(':visible')) {
                            $('#mediaImages').prepend('<h2 class="search_msg">No image(s) were found in this channel !</h2>');
                        }
                    }
                }
            }
        });
        $('#mediaImages .all-images .img-name').unhighlight();
        $('#mediaImages .all-images .img-name').highlight(input_val);

        if (input_val == '') {
            $('#mediaTagsDatabase').hide();
            if (!$('#mediaImages .notFoundMsg').is(':visible')) {
                $('#mediaImages').show();
            }
        }

    } else if ($('#searchMediaFilter').hasClass('Search-videos')) {

        // if(e.keyCode == 13){
        // 	e.preventDefault();
        // 	searchTagData(e,searchTagVal,'videos');
        // }

        $("#mediaVideos .all-videos .img-name").each(function() {
            if (input_val != '') {

                if ($(this).text().toLowerCase().search(input_val.toLowerCase()) > -1) {
                    $(this).parents('.all-videos').show();
                    $(this).parents('.date-by-videos').show();

                    if ($('.date-by-videos:visible').length > 0) {
                        if ($('#mediaVideos .search_msg').is(':visible')) {
                            $('#mediaVideos .search_msg').remove();
                        }
                    }
                } else {
                    $(this).parents('.all-videos').hide();
                    if ($(this).parents('.date-by-videos').find('.all-videos:visible').length == 0) {
                        $(this).parents('.date-by-videos').hide();
                    }

                    if ($('.date-by-videos:visible').length == 0) {
                        if (!$('#mediaVideos .search_msg').is(':visible')) {
                            $('#mediaVideos').prepend('<h2 class="search_msg">No video file(s) were found in this channel !</h2>');
                        }
                    }
                }
            }
        });
        $('#mediaVideos .all-videos .img-name').unhighlight();
        $('#mediaVideos .all-videos .img-name').highlight(input_val);

        if (input_val == '') {
            $('#mediaTagsDatabase').hide();
            if (!$('#mediaVideos .notFoundMsg').is(':visible')) {
                $('#mediaVideos').show();
            }
        }

    } else if ($('#searchMediaFilter').hasClass('Search-files')) {


        $("#mediaFiles .all-files .img-name").each(function() {
            if (input_val != '') {

                if ($(this).text().toLowerCase().search(input_val.toLowerCase()) > -1) {
                    $(this).parents('.all-files').show();
                    $(this).parents('.date-by-files').show();

                    if ($('.date-by-files:visible').length > 0) {
                        if ($('#mediaFiles .search_msg').is(':visible')) {
                            $('#mediaFiles .search_msg').remove();
                        }
                    }
                } else {
                    $(this).parents('.all-files').hide();
                    if ($(this).parents('.date-by-files').find('.all-files:visible').length == 0) {
                        $(this).parents('.date-by-files').hide();
                    }
                    if ($('.date-by-files:visible').length == 0) {
                        if (!$('#mediaFiles .search_msg').is(':visible')) {
                            $('#mediaFiles').prepend('<h2 class="search_msg">No file(s) were found in this channel !</h2>');
                        }
                    }
                }
            }
        });
        $('#mediaFiles .all-files .img-name').unhighlight();
        $('#mediaFiles .all-files .img-name').highlight(input_val);

        if (input_val == '') {
            $('#mediaTagsDatabase').hide();
            if (!$('#mediaFiles .notFoundMsg').is(':visible')) {
                $('#mediaFiles').show();
            }
        }

    } else if ($('#searchMediaFilter').hasClass('Search-audios')) {

        // if(e.keyCode == 13){
        // 	e.preventDefault();
        // 	searchTagData(e,searchTagVal,'audios');
        // }
        $("#mediaAudios .all-audios .audio-name").each(function() {
            if (input_val != '') {

                if ($(this).text().toLowerCase().search(input_val.toLowerCase()) > -1) {
                    $(this).parents('.all-audios').show();
                    $(this).parents('.date-by-audios').show();

                    if ($('.date-by-audios:visible').length > 0) {
                        if ($('#mediaAudios .search_msg').is(':visible')) {
                            $('#mediaAudios .search_msg').remove();
                        }
                    }
                } else {
                    $(this).parents('.all-audios').hide();
                    if ($(this).parents('.date-by-audios').find('.all-audios:visible').length == 0) {
                        $(this).parents('.date-by-audios').hide();
                    }

                    if ($('.date-by-audios:visible').length == 0) {
                        if (!$('#mediaAudios .search_msg').is(':visible')) {
                            $('#mediaAudios').prepend('<h2 class="search_msg">No audio file(s) were found in this channel !</h2>');
                        }
                    }
                }
            }
        });
        $('#mediaAudios .all-audios .audio-name').unhighlight();
        $('#mediaAudios .all-audios .audio-name').highlight(input_val);

        if (input_val == '') {
            $('#mediaTagsDatabase').hide();
            if (!$('#mediaAudios .notFoundMsg').is(':visible')) {
                $('#mediaAudios').show();
            }
        }

    } else if ($('#searchMediaFilter').hasClass('Search-tags')) {


        $("#mediaTags .all-audios .audio-name").each(function() {
            if (input_val != '') {

                if ($(this).text().toLowerCase().search(input_val.toLowerCase()) > -1) {
                    $(this).parents('.all-audios').show();
                    $(this).parents('.date-by-tags').show();
                } else {
                    $(this).parents('.all-audios').hide();
                    if ($(this).parents('.date-by-tags').find('.all-audios:visible').length == 0) {
                        $(this).parents('.date-by-tags').hide();
                    }
                }
            }
        });
        $('#mediaTags .all-audios .audio-name').unhighlight();
        $('#mediaTags .all-audios .audio-name').highlight(input_val);

        $("#mediaTags .all-files .img-name").each(function() {
            if (input_val != '') {

                if ($(this).text().toLowerCase().search(input_val.toLowerCase()) > -1) {
                    $(this).parents('.all-files').show();
                    $(this).parents('.date-by-tags').show();
                } else {
                    $(this).parents('.all-files').hide();
                    if ($(this).parents('.date-by-tags').find('.all-files:visible').length == 0) {
                        $(this).parents('.date-by-tags').hide();
                    }
                }
            }
        });
        $('#mediaTags .all-files .img-name').unhighlight();
        $('#mediaTags .all-files .img-name').highlight(input_val);

        $("#mediaTags .all-videos .img-name").each(function() {
            if (input_val != '') {

                if ($(this).text().toLowerCase().search(input_val.toLowerCase()) > -1) {
                    $(this).parents('.all-videos').show();
                    $(this).parents('.date-by-tags').show();
                } else {
                    $(this).parents('.all-videos').hide();
                    if ($(this).parents('.date-by-tags').find('.all-videos:visible').length == 0) {
                        $(this).parents('.date-by-tags').hide();
                    }
                }
            }
        });
        $('#mediaTags .all-videos .img-name').unhighlight();
        $('#mediaTags .all-videos .img-name').highlight(input_val);

        $("#mediaTags .all-images .img-name").each(function() {
            if (input_val != '') {

                if ($(this).text().toLowerCase().search(input_val.toLowerCase()) > -1) {
                    $(this).parents('.all-images').show();
                    $(this).parents('.date-by-tags').show();
                } else {
                    $(this).parents('.all-images').hide();
                    if ($(this).parents('.date-by-tags').find('.all-images:visible').length == 0) {
                        $(this).parents('.date-by-tags').hide();
                    }
                }
            }
        });
        $('#mediaTags .all-images .img-name').unhighlight();
        $('#mediaTags .all-images .img-name').highlight(input_val);


        if (input_val == '') {
            $('#mediaTagsDatabase').hide();
            if (!$('#mediaTags .notFoundMsg').is(':visible')) {
                $('#tagListFormediaView').show();
                $('#mediaTags').show();
            }
        }

        if (!$('#mediaTags .notFoundMsg').is(':visible')) {
            if ($('#mediaTags .date-by-tags:visible').length > 0) {
                if ($('#mediaTags .search_msg').is(':visible')) {
                    $('#mediaTags .search_msg').remove();
                }
            } else if ($('#mediaTags .date-by-tags:visible').length == 0) {
                if (!$('#mediaTags .search_msg').is(':visible')) {
                    $('#mediaTags').prepend('<h2 class="search_msg">No tag(s) were found in this channel !</h2>');
                }
            }
        }

    } else if ($('#searchMediaFilter').hasClass('Search-links')) {

        // if(e.keyCode == 13){
        // 	e.preventDefault();
        // 	searchTagData(e,searchTagVal,'links');
        // }

        $("#mediaLinks .link-details h4").each(function() {
            if (input_val != '') {

                if ($(this).parent('.link-details').text().toLowerCase().search(input_val.toLowerCase()) > -1) {
                    $(this).parents('.all-links').show();
                    $(this).parents('.date-by-links').show();

                    if ($('.date-by-links:visible').length > 0) {
                        if ($('#mediaLinks .search_msg').is(':visible')) {
                            $('#mediaLinks .search_msg').remove();
                        }
                    }
                } else {
                    $(this).parents('.all-links').hide();
                    if ($(this).parents('.date-by-links').find('.all-links:visible').length == 0) {
                        $(this).parents('.date-by-links').hide();
                    }

                    if ($('.date-by-links:visible').length == 0) {
                        if (!$('#mediaLinks .search_msg').is(':visible')) {
                            $('#mediaLinks').prepend('<h2 class="search_msg">No link(s) were found in this channel !</h2>');
                        }
                    }
                }
            }
        });
        $('#mediaLinks .link-details h4').unhighlight();
        $('#mediaLinks .link-details h4').highlight(input_val);

        if (input_val == '') {
            $('#mediaTagsDatabase').hide();
            if (!$('#mediaLinks .notFoundMsg').is(':visible')) {
                $('#mediaLinks').show();
            }
        }
    }
}




$('.individual-tab-seach-con .remove').click(function() {
    var id = $('.media-tabs li').find('.active').attr('id');

    $('.date-by-tags div').unhighlight();
    $('.date-by-tags div').highlight('');
    $('.date-by-links div').unhighlight();
    $('.date-by-links div').highlight('');
    $('.date-by-files div').unhighlight();
    $('.date-by-files div').highlight('');
    $('.date-by-all div').unhighlight();
    $('.date-by-all div').highlight('');
    $('.date-by-images div').unhighlight();
    $('.date-by-images div').highlight('');
    $('.date-by-videos div').unhighlight();
    $('.date-by-videos div').highlight('');
    $('.date-by-audios div').unhighlight();
    $('.date-by-audios div').highlight('');
    $('#' + id).removeClass('active');
    $('#' + id).click();
    //   $('.individual-tab-seach-con input').val('').focus();
    //   searchMedia();
    //   $('#mediaFilePreview .media-tabs li.active').trigger('click');

});

















function triggerFilterTag(text) {
    if (text == 'tag :' || text == 'tag:') {
        if ($('#mediaFilePreview').is(':visible')) {
            $('.individual-tab-seach-con .itm').click();
            $('#search_different_tab').val('');
            $('.oneTimeSearchButton').hide();
        } else {
            $('#personalConnectActive .src_total_msg_content .itm').first().click();
            $('#searchAfter').val('');
        }
    }
}

function searchMediaImgOnly(id, event, dateby = '.date-by-images') {
    // console.log(12579,dateby);
    var Searchfiles = $(event.target).val();
    var searchTagVal = $(event.target).val();
    // console.log('searchval',searchTagVal);
    // console.log('imgLength',$(id+" .all-images .img-name").length);

    $(id + " .all-images .img-name").each(function() {
        if ($(this).text().toLowerCase().search(searchTagVal.toLowerCase()) > -1) {
            $(this).parents('.all-images').show();
            $(this).parents(dateby).show();

            if ($(dateby + ':visible').length > 0) {
                if ($(id + ' .search_msg').is(':visible')) {
                    $(id + ' .search_msg').remove();
                }
            }
        } else {
            $(this).parents('.all-images').hide();
            if ($(this).parents(dateby).find('.all-images:visible').length == 0) {
                $(this).parents(dateby).hide();
            }

            if ($(dateby + ':visible').length == 0) {
                if (!$(id + ' .search_msg').is(':visible')) {
                    // $('#mediaImages').prepend('<h2 class="search_msg">No image(s) were found in this channel !</h2>');
                    $(id).prepend('<h2 class="search_msg">Nothing Found.</h2>');
                }
            }
        }
    });
    $(id + ' .all-images .img-name').unhighlight();
    $(id + ' .all-images .img-name').highlight(searchTagVal);
    triggerFilterTag(searchTagVal);
    if (searchTagVal == '') {
        $('#mediaTagsDatabase').hide();
        if (!$(id + ' .notFoundMsg').is(':visible')) {
            $(id).show();
        }
    }
}

function searchVideosOnly(id, event, dateby = '.date-by-videos') {
    var Searchfiles = $(event.target).val();
    var searchTagVal = $(event.target).val();
    // if(e.keyCode == 13){
    // 	e.preventDefault();
    // 	searchTagData(e,searchTagVal,'videos');
    // }

    $(id + " .all-videos .img-name").each(function() {
        if ($(this).text().toLowerCase().search(searchTagVal.toLowerCase()) > -1) {
            $(this).parents('.all-videos').show();
            $(this).parents(dateby).show();

            if ($(dateby + ':visible').length > 0) {
                if ($(id + ' .search_msg').is(':visible')) {
                    $(id + ' .search_msg').remove();
                }
            }
        } else {
            $(this).parents('.all-videos').hide();
            if ($(this).parents(dateby).find('.all-videos:visible').length == 0) {
                $(this).parents(dateby).hide();
            }

            if ($(dateby + ':visible').length == 0) {
                if (!$(id + ' .search_msg').is(':visible')) {
                    $(id).prepend('<h2 class="search_msg">Nothing Found.</h2>');
                    // $('#mediaVideos').prepend('<h2 class="search_msg">No video file(s) were found in this channel !</h2>');
                }
            }
        }
    });
    $(id + ' .all-videos .img-name').unhighlight();
    $(id + ' .all-videos .img-name').highlight(searchTagVal);
    triggerFilterTag(searchTagVal);
    if (searchTagVal == '') {
        $('#mediaTagsDatabase').hide();
        if (!$(id + ' .notFoundMsg').is(':visible')) {
            $(id).show();
        }
    }
}

function searchMediaFilesOnly(id, event, dateby = '.date-by-files') {
    var Searchfiles = $(event.target).val();
    var searchTagVal = $(event.target).val();

    $(id + " .all-files .img-name").each(function() {
        if ($(this).text().toLowerCase().search(searchTagVal.toLowerCase()) > -1) {
            $(this).parents('.all-files').show();
            $(this).parents(dateby).show();

            if ($(dateby + ':visible').length > 0) {
                if ($(id + ' .search_msg').is(':visible')) {
                    $(id + ' .search_msg').remove();
                }
            }
        } else {
            $(this).parents('.all-files').hide();
            if ($(this).parents(dateby).find('.all-files:visible').length == 0) {
                $(this).parents(dateby).hide();
            }
            if ($(dateby + ':visible').length == 0) {
                if (!$(id + ' .search_msg').is(':visible')) {
                    $(id + '').prepend('<h2 class="search_msg">Nothing Found.</h2>');
                    // $('#mediaFiles').prepend('<h2 class="search_msg">No file(s) were found in this channel !</h2>');
                }
            }
        }
    });
    // console.log(id,searchTagVal)
    $(id + ' .all-files .img-name').unhighlight();
    $(id + ' .all-files .img-name').highlight(searchTagVal);
    // triggerFilterTag(searchTagVal);
    if (searchTagVal == '') {
        $('#mediaTagsDatabase').hide();
        if (!$(id + ' .notFoundMsg').is(':visible')) {
            $(id).show();
        }
    }
}

function searchMediaAudios(id, event, dateby = '.date-by-audios') {
    var searchTagVal = $(event.target).val();
    // console.log(12699,searchTagVal)
    // if(e.keyCode == 13){
    // 	e.preventDefault();
    // 	searchTagData(e,searchTagVal,'audios');
    // }
    $(id + " .all-audios .audio-name").each(function() {
        if ($(this).text().toLowerCase().search(searchTagVal.toLowerCase()) > -1) {
            $(this).parents('.all-audios').show();
            $(this).parents(dateby).show();

            if ($(dateby + ':visible').length > 0) {
                if ($(id + ' .search_msg').is(':visible')) {
                    $(id + ' .search_msg').remove();
                }
            }
        } else {
            $(this).parents('.all-audios').hide();
            if ($(this).parents(dateby).find('.all-audios:visible').length == 0) {
                $(this).parents(dateby).hide();
            }

            if ($(dateby + ':visible').length == 0) {
                if (!$(id + ' .search_msg').is(':visible')) {
                    $(id).prepend('<h2 class="search_msg">Nothing Found.</h2>');
                    // $('#mediaAudios').prepend('<h2 class="search_msg">No audio file(s) were found in this channel !</h2>');
                }
            }
        }
    });
    $(id + ' .all-audios .audio-name').unhighlight();
    $(id + ' .all-audios .audio-name').highlight(searchTagVal);
    triggerFilterTag(searchTagVal);
    if (searchTagVal == '') {
        $('#mediaTagsDatabase').hide();
        if (!$(id + ' .notFoundMsg').is(':visible')) {
            $(id).show();
        }
    }
}

function searchMediaTagsOnly(id, event) {
    var searchTagVal = $(event.target).val();

    $(id + " .all-audios .audio-name").each(function() {
        if ($(this).text().toLowerCase().search(searchTagVal.toLowerCase()) > -1) {
            $(this).parents('.all-audios').show();
            $(this).parents('.date-by-tags').show();
        } else {
            $(this).parents('.all-audios').hide();
            if ($(this).parents('.date-by-tags').find('.all-audios:visible').length == 0) {
                $(this).parents('.date-by-tags').hide();
            }
        }
    });
    $(id + ' .all-audios .audio-name').unhighlight();
    $(id + ' .all-audios .audio-name').highlight(searchTagVal);

    $(id + " .all-files .img-name").each(function() {
        if ($(this).text().toLowerCase().search(searchTagVal.toLowerCase()) > -1) {
            $(this).parents('.all-files').show();
            $(this).parents('.date-by-tags').show();
        } else {
            $(this).parents('.all-files').hide();
            if ($(this).parents('.date-by-tags').find('.all-files:visible').length == 0) {
                $(this).parents('.date-by-tags').hide();
            }
        }
    });
    $(id + ' .all-files .img-name').unhighlight();
    $(id + ' .all-files .img-name').highlight(searchTagVal);

    $(id + " .all-videos .img-name").each(function() {
        if ($(this).text().toLowerCase().search(searchTagVal.toLowerCase()) > -1) {
            $(this).parents('.all-videos').show();
            $(this).parents('.date-by-tags').show();
        } else {
            $(this).parents('.all-videos').hide();
            if ($(this).parents('.date-by-tags').find('.all-videos:visible').length == 0) {
                $(this).parents('.date-by-tags').hide();
            }
        }
    });
    $(id + ' .all-videos .img-name').unhighlight();
    $(id + ' .all-videos .img-name').highlight(searchTagVal);

    $(id + " .all-images .img-name").each(function() {
        if ($(this).text().toLowerCase().search(searchTagVal.toLowerCase()) > -1) {
            $(this).parents('.all-images').show();
            $(this).parents('.date-by-tags').show();
        } else {
            $(this).parents('.all-images').hide();
            if ($(this).parents('.date-by-tags').find('.all-images:visible').length == 0) {
                $(this).parents('.date-by-tags').hide();
            }
        }
    });
    $(id + ' .all-images .img-name').unhighlight();
    $(id + ' .all-images .img-name').highlight(searchTagVal);


    if (searchTagVal == '') {
        $('#mediaTagsDatabase').hide();
        if (!$(id + ' .notFoundMsg').is(':visible')) {
            $('#tagListFormediaView').show();
            $(id).show();
        }
    }

    if (!$(id + ' .notFoundMsg').is(':visible')) {
        if ($(id + ' .date-by-tags:visible').length > 0) {
            if ($(id + ' .search_msg').is(':visible')) {
                $(id + ' .search_msg').remove();
            }
        } else if ($(id + ' .date-by-tags:visible').length == 0) {
            if (!$(id + ' .search_msg').is(':visible')) {
                $(id).prepend('<h2 class="search_msg">Nothing Found.</h2>');
                // $('#mediaTags').prepend('<h2 class="search_msg">No tag(s) were found in this channel !</h2>');
            }
        }
    }
}

function searchFilterHalfFun() {
    var val = $('#search_different_tab').val().toLowerCase();
    recent_allFileNameListForFilter = [];
    recent_allPersonListForFilter = [];
    recent_allRoomListForFilter = [];
    recent_allFileTypeListForFilter = [];
    recent_allDateListForFilter = [];

    recent_allFileNameListForFilter = [];
    recent_allPersonListForFilter = [];
    recent_allRoomListForFilter = [];
    recent_allFileTypeListForFilter = [];
    recent_allDateListForFilter = [];

    $('.filterItemList li').removeClass('active');
    $('#mediaAllFiles_table_table_child').html("");

    if ($('#mediaLinksTab').hasClass('active')) {
        var filterLinksData = [];
        $.each(allMediaLinksData, function(index, v) {
            // console.log(v)
            var title = (v.title != null ? v.title.toLowerCase() : 'null');
            var owner = (findObjForUser(v.user_id).fullname != undefined ? findObjForUser(v.user_id).fullname.toLowerCase() : 'null');
            var channel = ($('#conv' + v.conversation_id).attr('data-name') == undefined ? 'null' : $('#conv' + v.conversation_id).attr('data-name').toLowerCase());
            var url = (v.url == null ? 'null' : v.url.toLowerCase());
            var date = moment(v.created_at).format('DD-MMM-YYYY').toLowerCase();
            if (date.indexOf(val) > -1 || url.indexOf(val) > -1 || title.indexOf(val) > -1 || owner.indexOf(val) > -1 || channel.indexOf(val) > -1) {
                filterLinksData.push(v);
            }
        });
        filterAllMyLinks(filterLinksData);
    } else {
        var filterFilesData = [];
        $.each(allMediaFilesData, function(index, v) {
            var title = v.originalname.toLowerCase();
            var owner = findObjForUser(v.user_id).fullname.toLowerCase();
            var channel = ($('#conv' + v.conversation_id).attr('data-name') == undefined ? '' : $('#conv' + v.conversation_id).attr('data-name').toLowerCase());
            var url = file_server + v.location.toLowerCase();
            var file_type = v.file_type.toLowerCase();
            var date = moment(v.created_at).format('DD-MMM-YYYY').toLowerCase();
            if (date.indexOf(val) > -1 || url.indexOf(val) > -1 || title.indexOf(val) > -1 || owner.indexOf(val) > -1 || channel.indexOf(val) > -1 || file_type.indexOf(val) > -1) {
                filterFilesData.push(v);
            }
        });
        if ($('#allFilesMediaDiv').hasClass('active')) {
            filterAllMyFiles_for_tab(filterFilesData);
            callActiveShareLinkWithdata(filterFilesData);
        } else if ($('#mediaImgsTab').hasClass('active')) {
            filterAllMyImage_for_tab(filterFilesData);
            callActiveShareLinkWithdata(filterFilesData);
        } else if ($('#mediaViedeosTab').hasClass('active')) {
            filterAllMyVideos_for_tab(filterFilesData);
            callActiveShareLinkWithdata(filterFilesData);
        } else if ($('#mediaAudiosTab').hasClass('active')) {
            filterAllMyAudios_for_tab(filterFilesData);
            callActiveShareLinkWithdata(filterFilesData);
        } else if ($('#mediaFilesTab').hasClass('active')) {
            filterAllMyOthers_for_tab(filterFilesData);
            callActiveShareLinkWithdata(filterFilesData);


        } else if ($('#mediaPersonalDivHead').hasClass('active')) {
            var filterFilesData2 = [];
            $.each(allMediaMyFilesData, function(index, v) {
                var title = v.originalname.toLowerCase();
                var owner = findObjForUser(v.user_id).fullname.toLowerCase();
                var channel = ($('#conv' + v.conversation_id).attr('data-name') == undefined ? '' : $('#conv' + v.conversation_id).attr('data-name').toLowerCase());
                var url = file_server + v.location.toLowerCase();
                var file_type = v.file_type.toLowerCase();
                var date = moment(v.created_at).format('DD-MMM-YYYY').toLowerCase();
                if (date.indexOf(val) > -1 || url.indexOf(val) > -1 || title.indexOf(val) > -1 || owner.indexOf(val) > -1 || channel.indexOf(val) > -1 || file_type.indexOf(val) > -1) {
                    filterFilesData2.push(v);
                }
            });
            filterAllMyPersonal_for_tab(filterFilesData2);
            callActiveShareLinkWithdata(filterFilesData2);
        }

    }
    $('#search_different_tab').focus();
}

function searchMedia(event) {
    // console.log(event);
    if ($('#hayvenFilePage').hasClass('active')) {
        var val = $('#search_different_tab').val().toLowerCase();
        if ($('#mediaLinksTab').hasClass('active')) {
            if (event.keyCode == '13') {

                searchFilterHalfFun()
            }
        } else {
            if (event.keyCode == '13') {

                searchFilterHalfFun()
            }
        }
        if (val.length > 0) {
            $('.width100_full .oneTimeSearchButton').css('display', 'flex');
        } else {
            $('.width100_full .oneTimeSearchButton').hide();
            $('#search_different_tab').next().click();
        }

    } else {

        if ($('#searchMediaFilter').hasClass('Search-img')) {
            searchMediaImgOnly('#mediaImages', event);

        } else if ($('#searchMediaFilter').hasClass('Search-videos')) {

            searchVideosOnly('#mediaVideos', event);

        } else if ($('#searchMediaFilter').hasClass('Search-files')) {
            // mediaFiles
            searchMediaFilesOnly('#mediaFiles', event);


        } else if ($('#searchMediaFilter').hasClass('Search-audios')) {
            // mediaAudios
            searchMediaAudios('#mediaAudios', event);

        } else if ($('#searchMediaFilter').hasClass('Search-tags')) {
            // mediaTags
            searchMediaTagsOnly('#mediaTags', event);


        } else if ($('#searchMediaFilter').hasClass('Search-links')) {
            if ($('#hayvenFilePage').hasClass('active')) {
                var val = $('#search_different_tab').val();
                // $('#mediaLinks_table .body_tab_val').each(function () {
                // 	if ($(this).text().toLowerCase().search(val.toLowerCase()) > -1) {
                // 		$(this).show();
                // 	}else{
                // 		$(this).hide();

                // 	}
                // });
                // $('#mediaLinks_table .ellipsis_text').unhighlight();
                // $('#mediaLinks_table .ellipsis_text').highlight(val);
                if (event.keyCode == '13') {
                    var filterLinksData = [];
                    $.each(allMediaLinksData, function(index, v) {
                        var title = v.title;
                        var owner = findObjForUser(v.user_id).fullname;
                        var channel = $('#conv' + conversation_id).attr('data-name');
                        var url = v.url;
                        var date = moment(v.created_at).format('DD-MMM-YYYY');
                        // console.log(14165,date.indexOf(val) > -1);
                        if (date.indexOf(val) > -1 || url.indexOf(val) > -1 || title.indexOf(val) > -1 || owner.indexOf(val) > -1 || channel.indexOf(val) > -1) {
                            filterLinksData.push(v);
                        }
                    });
                    // console.log(14167,filterLinksData);
                    filterAllMyLinks(filterLinksData);
                }

            } else {

                var searchLinkVal = $(event.target).val();
                var searchTagVal = $(event.target).val();
                // if(e.keyCode == 13){
                // 	e.preventDefault();
                // 	searchTagData(e,searchTagVal,'links');
                // }

                $("#mediaLinks .link-details h4").each(function() {
                    if ($(this).parent('.link-details').text().toLowerCase().search(searchTagVal.toLowerCase()) > -1) {
                        $(this).parents('.all-links').show();
                        $(this).parents('.date-by-links').show();

                        if ($('.date-by-links:visible').length > 0) {
                            if ($('#mediaLinks .search_msg').is(':visible')) {
                                $('#mediaLinks .search_msg').remove();
                            }
                        }
                    } else {
                        $(this).parents('.all-links').hide();
                        if ($(this).parents('.date-by-links').find('.all-links:visible').length == 0) {
                            $(this).parents('.date-by-links').hide();
                        }

                        if ($('.date-by-links:visible').length == 0) {
                            if (!$('#mediaLinks .search_msg').is(':visible')) {
                                $('#mediaLinks').prepend('<h2 class="search_msg">Nothing Found.</h2>');
                                // $('#mediaLinks').prepend('<h2 class="search_msg">No link(s) were found in this channel !</h2>');
                            }
                        }
                    }
                });
                $('#mediaLinks .link-details h4').unhighlight();
                $('#mediaLinks .link-details h4').highlight(searchTagVal);

                if (searchTagVal == '') {
                    $('#mediaTagsDatabase').hide();
                    if (!$('#mediaLinks .notFoundMsg').is(':visible')) {
                        $('#mediaLinks').show();
                    }
                }
            }
        } else {
            // console.log(event.target)
            searchMediaImgOnly('#mediaAllFiles', event, '.date-by-all');
            searchVideosOnly('#mediaAllFiles', event, '.date-by-all');
            searchMediaFilesOnly('#mediaAllFiles', event, '.date-by-all');
            searchMediaAudios('#mediaAllFiles', event, '.date-by-all');

        }
    }
}

function changeFilterAction() {
    if ($('#searchMediaFilter').hasClass('Search-img')) {

        if ($('.date-by-images:visible').length == 0) {
            if (!$('#mediaImages .search_msg').is(':visible')) {
                $('#mediaImages').prepend('<h2 class="search_msg">No image(s) were found in this channel !</h2>');
            }
        }

    } else if ($('#searchMediaFilter').hasClass('Search-videos')) {
        if ($('.date-by-videos:visible').length == 0) {
            if (!$('#mediaVideos .search_msg').is(':visible')) {
                $('#mediaVideos').prepend('<h2 class="search_msg">No video file(s) were found in this channel !</h2>');
            }
        }

    } else if ($('#searchMediaFilter').hasClass('Search-files')) {
        if ($('.date-by-files:visible').length == 0) {
            if (!$('#mediaFiles .search_msg').is(':visible')) {
                $('#mediaFiles').prepend('<h2 class="search_msg">No file(s) were found in this channel !</h2>');
            }
        }

    } else if ($('#searchMediaFilter').hasClass('Search-audios')) {
        if ($('.date-by-audios:visible').length == 0) {
            if (!$('#mediaAudios .search_msg').is(':visible')) {
                $('#mediaAudios').prepend('<h2 class="search_msg">No audio file(s) were found in this channel !</h2>');
            }
        }

    }
}

// taglisttag
function clearSearchBtn(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
    var reset = false;
    if ($('#search_for').val() != '' || $('#allUser_input').val() != '' || $('#select_startDate').val() != '' || $('#select_endDate').val() != '' || $('#selectedUserli .mini_item').length > 0) {
        reset = true;
    }
    if (reset) {
        $('#_inputBar').val('');
        $('#search_for').val('');
        $('.filter_group input').val('');
        $('.searchAndFilter').removeClass('btn_active');

        $('#selectedUserli .mini_item').remove();
        $('#select_startDate').val('');
        $('#select_endDate').val('');
        gotoChecklistTaskPage(1, 'off');
    } else {
        if ($(event.target).hasClass('clrChkSrc')) {
            $('#filter_checklist_text').val('');
            $(event.target).parents('.inputcheclist').removeClass('active');
            searchChecklistFT();
            $('.oneTimeSearchButton').hide();
        } else {
            $('.date-by-all div').unhighlight();
            $('.date-by-all div').highlight('');
            $('.individual-tab-seach-con input').val('').focus();
            var id = $('#mediaFilePreview').find('.media-tabs li.active').attr('id');
            // console.log(id)
            $('#' + id).removeClass('active');
            $('#' + id).click();
            $('.oneTimeSearchButton').hide();
        }
    }
}

$('.individual-tab-seach-con .remove').click(function() {
    $('.individual-tab-seach-con input').val('').focus();
    var id = $('.media-tabs li').find('.active').attr('id');

    $('.date-by-tags div').unhighlight();
    $('.date-by-tags div').highlight('');
    $('.date-by-links div').unhighlight();
    $('.date-by-links div').highlight('');
    $('.date-by-files div').unhighlight();
    $('.date-by-files div').highlight('');
    $('.date-by-all div').unhighlight();
    $('.date-by-all div').highlight('');
    $('.date-by-images div').unhighlight();
    $('.date-by-images div').highlight('');
    $('.date-by-videos div').unhighlight();
    $('.date-by-videos div').highlight('');
    $('.date-by-audios div').unhighlight();
    $('.date-by-audios div').highlight('');
    $('#' + id).removeClass('active');
    $('#' + id).click();

});

function clear_inputText() {
    $('#searchMediaFilter').focus().val('');
    $('#searchMediaFilter + .clear_text').hide();
    var e = $.Event('keyup');
    e.which = 8; // Character 'Backspace'
    $('#searchMediaFilter').trigger(e);
    $('#searchMediaFilter').blur();
}

function searchMediaDown(e) {
    if (e.keyCode == 13) {
        e.preventDefault();
        e.stopImmediatePropagation();
    }
}



var backToMediaTab = () => {
    if ($('#mediaFilePreview').attr('thread-view') == 'true' && $('#mediaFilePreview').attr('view-type') == 'for_msg') {
        $('#mediaFilePreview').hide();
        $('.image-popup-slider').hide();
        $('#threadReplyPopUp').show();
    } else if ($('#mediaFilePreview').attr('view-type') == 'for_msg') {
        $('#mediaFilePreview').hide();
        $('.image-popup-slider').hide();
        $('.media-file-popup').show();
    } else {
        $('.image-popup-slider').hide();
        $('.media-file-popup').show();
    }
}

function closeMediaPopup() {

    if (!$('.backwrap').is(':visible')) {
        if ($('.warningPopup').is(':visible')) {
            $('.warningPopup:visible').find('.closeModal').click()
        } else if ($('#mediaFilePreview .image-popup-slider').is(':visible')) {
            console.log('Here')
            backToMediaTab();
        } else {
            $('#input_values input').focus();

            $('#mediaFilePreview').removeClass('width100_full');
            $('#hayvenConnectPage').addClass('active');
            $('#hayvenFilePage').removeClass('active');

            $('#mediaFilePreview').attr('view-type', '');
            $('#mediaFilePreview').hide();
            $('.close-media-popup').removeClass('allAttachmentView');
            if ($('.info_tooltip').is(':visible')) {
                $('.i-conv').removeClass('active');
                $('.info_tooltip').removeClass('active');
                $('.info_tooltip').hide();
            }
        }
    }
}



function acceptToDo(event) {
    var html = '<div class="toDoContent_Sec1">';
    html += '<div class="acceptCheck"></div>';
    html += '<p class="acceptedLabel">Youve accepted <label>Amazon Wishlist.</label></p>';
    html += '</div>';
    html += '<div class="toDoContent_Sec2">';
    html += '<h1 class="acceptedMember">Accepted Member</h1>';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<span class="countSelected">+4</span>';
    html += '</div>';

    $(event.target).closest('.toDoContent').html(html);
}

function viewEventMember(event) {
    var html = '<div class="event_content_sec1">';
    html += '<div class="acceptCheck"></div>';
    html += '<p class="acceptedLabel">Youve accepted <label>Amazon Wishlist.</label></p>';
    html += '</div>';
    html += '<div class="event_content_sec2">';
    html += '<h1 class="attendingMemberLabel">Attending</h1>';
    html += '<h1 class="maybeAttMemberLabel">Maybe Attending</h1>';
    html += '<h1 class="notAttMemberLabel">Not Attending</h1>';
    html += '<div class="attendingMemberCount">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '</div>';
    html += '<div class="maybeAttMemberCount">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<span class="countSelected">+4</span>';
    html += '</div>';
    html += '<div class="notAttMemberCount">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '<img src="/images/users/joni.jpg" class="selected_member">';
    html += '</div>';
    html += '</div>';

    $(event.target).closest('.event_content').html(html);
}




var calendarPicker = () => {
    $("#eventDateAndTime").on('click', function() {
        $("#calenderPicker").show();
    });

    $("#calenderDoneBtn").on('click', function() {
        $("#calenderPicker").hide();
    })
    $("#calenderCancelBtn").on('click', function() {
        $("#calenderPicker").hide();
    })

}
calendarPicker();





var tooltipforToDo = () => {

}

tooltipforToDo();

// get box count
var checkBoxCount = 0;
var isChecked = 0;

function countBoxes() {
    checkBoxCount = $(".item_list input:checkbox").length;
}

countBoxes();
$(".item_list input:checkbox").click(countBoxes);

// count checks

function countChecked() {
    isChecked = $(".item_list input:checkbox:checked").length;
    var percentage = parseInt(((isChecked / checkBoxCount) * 100), 10);
    var percent_width = "width:" + percentage + "%";

    $(".progress").attr("style", percent_width)
    $(".progress_status").text(percentage + "%");
}
countChecked();
$(".item_list input:checkbox").click(countChecked);

//create new event
//create new event
function createEventF(event) {
    event.preventDefault();
    var eventName = $('.create-event-popup-title').val();
    var eventLocation = $('.event-location').val();
    var design = '<div class="msgs-form-users">';
    design += '<div class="msg-user-photo">';
    design += '<img src="/images/users/nayeem.jpg" alt="">';
    design += '</div>';
    design += '<div class="user-msg">';
    design += '<h4>George Jsons<span class="msg-time">3:12 PM</span></h4>';
    design += '<p>Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>';
    design += '<div class="event_content">';
    design += '<div class="event_content_sec1">';
    design += '<img src="/images/basicAssets/custom_event_for_msg.svg">';
    design += '<p class="toDoName">' + eventName + '</p>';
    design += '<span class="dateAndTime">When: 14 September, 2018(3:30pm - 4:30pm)</span>';
    design += '<span class="location">Where: ' + eventLocation + '</span>';
    design += '</div>';
    design += '<div class="event_content_sec2">';
    design += '<button class="attending" onclick="viewEventMember(event)">Attending</button>';
    design += '<button class="maybe_attending" onclick="viewEventMember(event)">Maybe Attending</button>';
    design += '<button class="not_attending" onclick="viewEventMember(event)">Not Attending</button>';
    design += '</div>';
    design += '</div>';
    design += '</div>';
    design += '<div class="msgs-form-users-options" style="top: 16px;">';
    design += '<div class="call-rep-emoji" onclick="viewEmojiList(event)">';
    design += '<img src="/images/basicAssets/AddEmoji.svg" alt="">';
    design += '</div>';
    design += '<div class="flag" onclick="flggUserMsg(event)">';
    design += '<img src="/images/basicAssets/NotFlagged.svg" alt="">';
    design += '</div>';
    design += '<div class="replys" onclick="threadReply()">';
    design += '<img src="/images/basicAssets/thread.svg" alt="">';
    design += '</div>';
    design += '<div class="more">';
    design += '<img src="/images/basicAssets/MoreMenu.svg" alt="">';
    design += '<div class="msg-more-popup" style="display:none">';
    design += '<p onclick="viewCreateTodoPopupNew(event)">Create a Task</p>';
    // design += '<p>Schedule an event</p>';
    design += '<p>Share Message</p>';
    design += '<p>Edit Message</p>';
    design += '</div>';
    design += '</div>';
    design += '</div>';
    design += '</div>';
    if (eventName != "" && eventLocation != "") {
        $('#msg-container').append(design);
        $('.create-event-popup-title').val("");
        $('.event-location').val("");
        $('.create-event-popup').hide();
        $('#CreateEvent').show();
        // moreMsgAction();
    }
}

function CancelEvent() {
    $('.create-event-popup').hide();
    $('#CreateEvent').show();
    $('.create-event-popup-title').val('');
}



/////////// create new tag for conversation

var addNewTagConv = () => {

    $('.chat-head-calling .tagged').on('click', function() {
        $(this).hide();
        $('.chat-head-calling .addTagConv').show();
        $("#createConvTag").focus();
        $('.msg-separetor_head').css('z-index', '0');
    });

    $('.chat-upload-popup-content .tagged').on('click', function() {
        $(this).hide();
        $('.chat-upload-popup-content .addTagConv').show();
        $("#customAdd").focus();
    });

}

// addNewTagConv();



// create new to do
var connectMembers = [];


var addNewTodo = () => {
    $('.create-todo-popup-title').on('keyup', function(e) {
        var toDoName = $(this).val();
        if (toDoName != "") {
            var design = '<div class="msgs-form-users">';
            design += '<div class="msg-user-photo">';
            design += '<img src="/images/users/joni.jpg" alt="" onclick="viewRoomImg(event,\'user\',this)" data-value="/images/users/joni.jpg">';
            design += '</div>';
            design += '<div class="user-msg">';
            design += '<h4>Dalim Chy<span class="msg-time">3:12 PM</span></h4>';
            design += '<p>Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>';
            design += '<div class="toDoContent">';
            design += '<div class="toDoContent_Sec1">';
            design += '<img src="/images/basicAssets/custom_to_do_for_msg.svg">';
            design += '<p class="toDoName">' + toDoName + '</p>';
            design += '<p>Due Date: 14 September, 2018</p>';
            design += '</div>';
            design += '<div class="toDoContent_Sec2">';
            design += '<button class="accept_toDO" onclick="acceptToDo(event)">Accept</button>';
            design += '<button class="decline_toDo">Decline</button>';
            design += '</div>';
            design += '</div>';
            design += '</div>';
            design += '<div class="msgs-form-users-options" style="top: 16px;">';
            design += '<div class="call-rep-emoji" onclick="viewEmojiList(event)">';
            design += '<img src="/images/basicAssets/AddEmoji.svg" alt="">';
            design += '</div>';
            design += '<div class="flag" onclick="flggUserMsg(event)">';
            design += '<img src="/images/basicAssets/NotFlagged.svg" alt="">';
            design += '</div>';
            design += '<div class="replys" onclick="threadReply(event)">';
            design += '<img src="/images/basicAssets/thread.svg" alt="">';
            design += '</div>';
            design += '<div class="more">';
            design += '<img src="/images/basicAssets/MoreMenu.svg" alt="">';
            design += '<div class="msg-more-popup" style="display:none">';
            design += '<p onclick="viewCreateTodoPopupNew(event)">Create a Task</p>';
            // design += '<p>Schedule an event</p>';
            design += '<p>Share Message</p>';
            design += '<p>Edit Message</p>';
            design += '</div>';
            design += '</div>';
            design += '</div>';
            design += '</div>';

            if (e.keyCode == 13) {
                $('#msg-container').append(design);
                $(this).val("");
                $(".create-todo-popup").hide();
                $("#createTodo").show();

                var checklistiTEMNN = [];
                var checkedListNN = [];

                if (connectMembers.indexOf(user_id) === -1) {
                    connectMembers.push(user_id);
                }

                socket.emit('toCreateBrdcst', {
                        activityType: 'TODO',
                        activityTitle: toDoName,
                        activityDescription: "",
                        createdBy: user_id,
                        endTime: moment().format("DD-MM-YYYY"),
                        ecosystem: "Navigate",
                        adminListUUID: connectMembers,
                        checklist: checklistiTEMNN,
                        checkedList: checkedListNN
                    },
                    function(confirmation) {
                        if (confirmation.activityres.status) {
                            $(this).val("");
                            connectMembers = [];
                        }
                    });
            }
            // moreMsgAction();
        }

    });

}
addNewTodo();

function createTOD() {
    var checklistiTEM = [];
    var checkedList = [];

    if (connectMembers.indexOf(user_id) === -1) {
        connectMembers.push(user_id);
    }

    var toDoName = $('.create-todo-popup-title').val();

    if (toDoName != "") {
        socket.emit('toCreateBrdcst', {
                activityType: 'TODO',
                activityTitle: toDoName,
                activityDescription: "",
                createdBy: user_id,
                endTime: moment().format("DD-MM-YYYY"),
                ecosystem: "Navigate",
                adminListUUID: connectMembers,
                checklist: checklistiTEM,
                checkedList: checkedList
            },
            function(confirmation) {
                if (confirmation.activityres.status) {
                    $('.create-todo-popup-title').val("");
                    connectMembers = [];
                    $('.create-todo-popup').hide();
                    $('#createTodo').show();
                }
            });
    }

}

function cancelTodo() {
    $('.create-todo-popup').hide();
    $('#createTodo').show();
    $('.create-todo-popup-title').val("");
    connectMembers = [];
}

function memAssignForTodo(e, memUUID) {

    if (e.target.checked) {
        if (connectMembers.indexOf(memUUID) === -1) {
            connectMembers.push(memUUID);
        }
    } else {
        removeA(connectMembers, memUUID);
    }
}

var searchTodoMember = (value) => {
    $("#memberHolder li").each(function() {

        if ($(this).find('label').text().toLowerCase().search(value.toLowerCase()) > -1) {
            $(this).show();
        } else {
            $(this).hide();
        }
    });

    $("#memberHolder li").unhighlight();
    $("#memberHolder li").highlight(value);
}



var participantsAdminList = [];
var groupAdminAreaArray = [];
var viewMemberList = (event) => {
    $('#roomIdDiv').trigger('click');
    // var roomid = $('#roomIdDiv').attr('data-roomid');
    // var totalMember = parseInt($('#totalMember').text());
    // $('#memberListBackWrap').html("");
    // if (adminArra != null) {
    // 	if (adminArra.indexOf(user_id) > -1) {
    // 		$("#roomIdDiv").attr('data-rfu', 'ready');
    // 		$('#groupUpSuggestedList').html("");
    // 		$('#searchInForGroupUp').html("");
    // 		groupAdminAreaArray = [];
    // 		participantsAdminList = [];
    // 		$('#groupAdminArea').show();
    // 		$('#groupAdminArea .hayven_Modal_heading h1 span').text('('+participants.length+')');
    // 		var html = '';
    // 		var user_list = access_user_list;
    // 		$.each(user_list, function (ky, va) {
    // 			$.each(participants, function (k, v) {
    // 				if (va.id === v) {
    // 					if (adminArra.indexOf(va.id) !== -1) {
    // 						    // html += '<li class="memberContainer suggestUsers'+va.id +' adminProfile showEl"  data-id="'+va.id +'" dat-img-src="'+va.img+'" data-fullname="" onclick="userAddAction(\''+va.id+'\', \''+va.fullname +'\', \''+va.img+'\')">';
    // 							// html += 	'<img src="/images/users/'+va.img+'" class="profile">';
    // 							// html += '<span class="online_' + va.id + ' ' + (onlineUserList.indexOf(va.id) === -1 ? "offline" : "online") + '"></span>';
    // 							// html += 	'<span class="userFullName s-l-def-clas" data-uuid="'+va.id +'">'+va.fullname+'</span>';
    // 							// html += 	'<span class="creator">Admin</span>';
    // 							// html += '</li>';
    // 							if(va.id !== user_id){

    // 								var design = '<span class="selected_member_name" data-uuid="' + va.id + '" data-img="/images/users/' + va.img + '" contenteditable="false"><span class="user_name">' + va.fullname + '</span><img src="/images/basicAssets/Remove.svg" onclick="remove_this_user_search(event,\'' + va.id + '\',\'' + va.img + '\',\'' + va.fullname + '\')"></span> &shy;';

    // 								$('#searchInForGroupUp').append(design);
    // 							}
    // 							groupAdminAreaArray.push(va.id);
    // 							participantsAdminList.push(va.id);
    // 					}
    // 				}
    // 			});
    // 		});

    // 		$.each(user_list, function (ky, va) {
    // 			if (participants.indexOf(va.id) == allUserdata[0].users.indexOf(va.id)) {
    // 				html += '<li class="memberContainer suggestUsers'+va.id +' showEl"  data-id="'+va.id +'" dat-img-src="'+va.img+'" data-fullname="" onclick="userAddAction(\''+va.id+'\', \''+va.fullname +'\', \''+va.img+'\')">';
    // 				html += 	'<img src="/images/users/'+va.img+'" class="profile">';
    // 				html += '<span class="online_' + va.id + ' ' + (onlineUserList.indexOf(va.id) === -1 ? "offline" : "online") + '"></span>';
    // 				html += 	'<span class="userFullName s-l-def-clas" data-uuid="'+va.id +'">'+va.fullname+'</span>';
    // 				html += '</li>';
    // 			}
    // 		});

    // 		$.each(user_list, function (ky, va) {
    // 			$.each(participants, function (k, v) {
    // 				if (va.id === v) {CONNECT
    // 					if (adminArra.indexOf(va.id) == -1) {
    // 						var design  = '<span class="selected_member_name" data-uuid="'+va.id+'" data-img="/images/users/'+va.img+'" contenteditable="false"><span class="user_name">'+va.fullname+'</span><img src="/images/basicAssets/Remove.svg" onclick="remove_this_user_search(event,\''+va.id+'\',\''+va.img+'\',\''+va.fullname+'\')"></span> &shy;';

    // 						$('#searchInForGroupUp').append(design);
    // 						groupAdminAreaArray.push(va.id);
    // 					}
    // 				}
    // 			});
    // 		});

    // 		$('#groupUpSuggestedList').append(html);


    // 	}
    // 	else {
    // 		$('#memberListBackWrap').show();
    // 		var html = '<div class="adminContainer">';
    // 		html += '<div class="closeBackwrap" onclick="closeAllPopUp()"><img src="/images/basicAssets/close_button.svg"></div>';
    // 		html += '<div class="label">';
    // 		html += '<h1 class="label_Title">Members </h1>';
    // 		html += '<h1 class="list_Count">(<span>' + totalMember + '</span>)</h1>';
    // 		html += '</div>';
    // 		html += '<input type="text" class="searchMember" placeholder="Search by name" onkeyup="searchMember(event,$(this).val());">';
    // 		html += '<span class="remove searchClear"></span>';
    // 		html += '<div class="suggest_Container overlayScrollbars" style="display: block;">';
    // 		html += '<ul class="suggested-list">';
    // 		var user_list = access_user_list;

    // 		$.each(user_list, function (ky, va) {
    // 			$.each(participants, function (k, v) {
    // 				if (va.id === v) {
    // 					if (adminArra.indexOf(va.id) !== -1) {
    // 						html += '<li class="showEl">';
    // 						html += '<div class="list" id="member' + va.id + '">';
    // 						html += '<img src="/images/users/' + va.img + '">';
    // 						html += '<span class="online_' + va.id + ' ' + (onlineUserList.indexOf(va.id) === -1 ? "offline" : "online") + '"></span>';
    // 						html += '<h1 class="memberName">' + va.fullname + '</h1>';
    // 						html += '<span class="creator">Admin</span>';
    // 						html += '</div>';
    // 						html += '</li>';
    // 					}
    // 				}
    // 			});
    // 		});
    // 		$.each(user_list, function (ky, va) {
    // 			$.each(participants, function (k, v) {
    // 				if (va.id === v) {
    // 					if (adminArra.indexOf(va.id) == -1) {
    // 						html += '<li class="showEl">';
    // 						html += '<div class="list" id="member' + va.id + '">';
    // 						html += '<img src="/images/users/' + va.img + '">';
    // 						html += '<span class="online_' + va.id + ' ' + (onlineUserList.indexOf(va.id) === -1 ? "offline" : "online") + '"></span>';
    // 						html += '<h1 class="memberName">' + va.fullname + '</h1>';
    // 						html += '<span class="creator">Member</span>';
    // 						html += '</div>';
    // 						html += '</li>';
    // 					}
    // 				}
    // 			});
    // 		});
    // 		html += '</ul>';
    // 		html += '</div>';
    // 		html += '</div>';
    // 	}
    // }

    // overlayScrollbars();
    // $('#memberListBackWrap').append(html);
    // $('#memberListBackWrap .suggested-list li:first').addClass('selected default');
    // $('.searchMember').focus();
    // $('.remove.searchClear').on('click', function () {
    // 	$('.searchMember').val('');
    // 	$('.adminContainer li').show();
    // 	$(this).hide();
    // });
    // tooltipForBackWrap();
    // popupMouseEnter();
    // searchClearInput();
}

var searchMember = (event, value) => {
    if (event.keyCode !== 40 && event.keyCode !== 38 && event.keyCode !== 13) {
        $(".adminContainer .remove.searchClear").each(function() {
            if (value.length > 0) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
        $(".memberName").each(function() {
            if ($(this).text().toLowerCase().search(value.toLowerCase()) > -1) {
                $(this).closest('li').show();
                $(this).closest('li').addClass('showEl');
            } else {
                $(this).closest('li').hide();
                $(this).closest('li').removeClass('showEl');
            }
        });

        $('.memberName').unhighlight();
        $('.memberName').highlight(value);
        $("#memberListBackWrap li").removeClass('selected');
        $("#memberListBackWrap li.showEl:first").addClass('selected');
    }

}

var updateMember = (event, img_src, name, uuid) => {
    $('.suggested-list .selected').remove();
    var roomid = $("#roomIdDiv").attr('data-roomid');
    // var img_src = $(event.target).find('img').attr('src');
    // var name = $(event.target).find('.memberName').text();
    // var uuid = $(event.target).find('.memberName').attr('data-uuid');
    var html = '<li onclick="removeMember(\'member\',\'' + uuid + '\',\'' + roomid + '\')" class="showEl">';
    html += '<div class="list" id="member' + uuid + '">';
    html += '<img src="' + file_server + 'profile-pic/Photos/' + img_src + '">';
    html += '<span class="online_' + uuid + ' ' + (onlineUserList.indexOf(uuid) === -1 ? "offline" : "online") + '"></span>';
    html += '<h1 class="memberName">' + name + '</span></h1>';
    html += '<span class="tagcheck forActive"></span>';
    html += '</div>';
    html += '</li>';

    if ($("#roomIdDiv").attr('data-rfu') == 'ready') {
        var roomTitle = $("#roomIdDiv").attr('data-title');

        if (jQuery.inArray(uuid, participants) === -1) {
            $.ajax({
                type: 'POST',
                data: {
                    conversation_id: roomid,
                    targetID: uuid,
                    company_id: company_id
                },
                dataType: 'json',
                url: '/alpha2/groupMemberAdd',
                success: function(data) {
                    participants.push(uuid);
                    var totalMember = parseInt($('.list_Count span').text());
                    // $(event.target).parent('li').remove();
                    $('.adminContainer .suggested-list li').removeClass('selected');
                    let nextLilength = $('#member' + uuid + '').parent('li').next('li').length;
                    if (nextLilength > 0)
                        $('#member' + uuid + '').parent('li').next('li').addClass('selected');
                    else
                        $('#member' + uuid + '').parent('li').prev('li').addClass('selected');

                    // $('li #member' + uuid + '').parent('li').remove();
                    $('.adminThisGroup:last').after(html);
                    // $('.adminContainer .suggested-list li.showEl:first').addClass('selected');
                    // $('.suggest_Container .os-viewport').animate({ scrollTop: 0 }, 1);
                    $('.list_Count span').text(participants.length);

                    $('#totalMember').text((participants.length - participants_sub.length));
                    forActiveCallIcon(onlineUserList, participants, conversation_type);
                    $("#conv" + roomid).attr('data-tm', participants.length);

                    popupMouseEnter();

                    var workSpaceName = $('#roomIdDiv').attr('data-keyspace');
                    var groupPrivacy = $('#roomIdDiv').attr('data-privecy');
                    var roomTitle = $("#roomIdDiv").attr('data-title');
                    socket.emit('groupMemberAdd', {
                        room_id: roomid,
                        memberList: participants,
                        selectecosystem: workSpaceName,
                        teamname: roomTitle,
                        grpprivacy: groupPrivacy,
                        createdby: user_id,
                        createdby_name: user_fullname,
                        root_conv_id: conv_id_for_createRoom
                    });
                }
            });
        } else {
            // toastr["warning"](name + " is a member of \"" + roomTitle + "\" room", "Warning");
            $('#warningsPopup').css('display', 'flex');
            $('#warningsPopup .warningMsg').text(name + " is a member of \"" + roomTitle + "\" Room.");
        }
    }
}
var start_scroll = false;
var mousewheelevent = true;
var lasttime_msg_id = "";

function mousewheelfun() {

    mousewheelevent = true;
    $(window).bind('mousewheel DOMMouseScroll', function(event) {
        // debugger;
        if (!$('#privateChatsOnly').hasClass('active')) {
            event.stopImmediatePropagation();
            if (!$('#NotificationContainer').is(':visible')) {
                if (!scrollMsgUp) {
                    return false;
                }
                if (!$('#callNotifications').hasClass('active') && !$('#threadChatsOnly').hasClass('active')) {
                    if (!$('#joinChannelPanel').is(':visible')) {
                        // var checkScrollornot = ($('.chat-page .os-viewport').prop("scrollHeight") - $('.chat-page .os-viewport').scrollTop());
                        // var checkScroll = ($('.msgs-form-users').last()[0].offsetTop + $('.msgs-form-users').last()[0].scrollHeight) - $('.chat-page .os-viewport').scrollTop();
                        var checkScroll = ($('.msgs-form-users').last()[0].offsetTop - $('.msgs-form-users').last()[0].scrollHeight) - $('.chat-page .os-viewport').innerHeight();
                        if (checkScroll <= $('.chat-page .os-viewport').scrollTop()) {
                            $('#unredScrollMsg').attr('data-value', 0);
                            $('#unredScrollMsg').removeClass('active');
                            // if()
                            if (allFilteredItem.length == 0) {
                                $('#conv' + conversation_id).find('.unreadMsgCount').html('');
                            }


                        } else {
                            if (!$('#unredScrollMsg').hasClass('active')) {
                                if ($("#groupChatContainer").hasClass("task_assignment")) {
                                    $('#unredScrollMsg').addClass('active').css("bottom", "10px");
                                } else {
                                    $('#unredScrollMsg').addClass('active').css("bottom", "100px");
                                }
                            }
                            $('#unredScrollMsg').attr('close-time', moment().add('3', 'seconds').unix());

                        }
                        var checkScrollThread = ($('.main-thread-msgs').last()[0].offsetTop - $('.main-thread-msgs').last()[0].scrollHeight) - $('#repChatContainer').innerHeight();
                        if (checkScrollThread <= $('#repChatContainer').scrollTop()) {
                            $('#unreadthreadMsgCounter').attr('data-counter', 0);
                        }
                        if (mousewheelevent) {
                            var task_assignment_tab = $(event.target).closest("#groupChatContainer").hasClass("checklistActive_list_view_origin");
                            if (!task_assignment_tab && (event.originalEvent.wheelDelta > 0 || event.originalEvent.detail < 0)) {
                                var scrollTop = $('.chat-page .os-viewport').scrollTop();
                                var msgid = $('.msgs-form-users').first().attr('data-msgid');
                                // Load old message
                                if ($('#input_values').find('input').val().length == 0) {
                                    if (!$('#c_flag_ed').is(':visible')) {
                                        if (has_incompleted_checklist === false) {
                                            if (!$('#checkListCounter').hasClass('active')) {
                                                if (scrollTop < 700 && msgid != undefined && lasttime_msg_id != msgid && conversation_id != undefined) {
                                                    mousewheelevent = false;
                                                    $('#scroll_loader').show();
                                                    lasttime_msg_id = msgid;
                                                    $('.os-viewport.os-viewport-native-scrollbars-invisible').css('overflow-y', 'hidden');
                                                    //debugger

                                                    load_older_data(conversation_id, msgid, (rep) => {
                                                        // setTimeout(function(){
                                                        mousewheelevent = true;
                                                        inviewfun();
                                                        $('.os-viewport.os-viewport-native-scrollbars-invisible').css('overflow-y', 'scroll');
                                                        $('#scroll_loader').hide();
                                                        // }, 2000);
                                                    });


                                                }
                                            }
                                        }
                                    }
                                }

                                if (!start_scroll) {

                                    if ($('.msg-separetor-unread').is(':visible')) {
                                        // $('.msg-separetor-unread').hide();
                                        // $('#unreadthreadMsgCounter').attr('data-counter',0);
                                    }
                                }
                            } else {
                                // console.log(14665, $(event.target).closest("#groupChatContainer").hasClass("checklistActive_list_view_origin"));
                                // if($(event.target).closest("#groupChatContainer").hasClass("checklistActive_list_view_origin")){
                                // 	// Load old checklist
                                // 	var n = $('.msgs-form-users').length;
                                // 	var offset_top = $("#groupChatContainer").find(".msgs-form-users:last").offset().top;
                                // 	var msg_container = $("#groupChatContainer").height();
                                // 	console.log(14671, n, offset_top, msg_container);
                                // 	if(offset_top < (msg_container+120) && my_all_task_assignment.length > n){
                                // 		console.log("===============================================");
                                // 		mousewheelevent = false;
                                // 		$('#scroll_loader').show();
                                // 		$('.os-viewport.os-viewport-native-scrollbars-invisible').css('overflow-y', 'hidden');
                                // 		setTimeout(function(){
                                // 			let o = 0;
                                // 			for(let m=n; m<my_all_task_assignment.length; m++){
                                // 				o++;
                                // 				if(o>20) break;
                                // 				var checklistall = []
                                // 				$.each(my_all_task_assignment_checklist_items, function(ck,cv){
                                // 					if(cv.msg_id == my_all_task_assignment[m].msg_id){
                                // 						checklistall.push(cv);
                                // 						my_all_task_assignment[m]['checklist'] = checklistall;
                                // 						taskItemCounter(my_all_task_assignment[m].msg_id);
                                // 					}
                                // 				});

                                // 				if(checkdrawmsg(my_all_task_assignment[m],adminArra,activeConvPrivacy)){
                                // 					console.log(14553, m, o);
                                // 					draw_msg(my_all_task_assignment[m],true,true);
                                // 					if(o==20 || m+1 == my_all_task_assignment.length){
                                // 						setTimeout(function(){
                                // 							$('.os-viewport.os-viewport-native-scrollbars-invisible').css('overflow-y', 'scroll');
                                // 							$('#scroll_loader').hide();
                                // 							mousewheelevent=true;
                                // 						}, 2000);
                                // 					}
                                // 				}

                                // 			}
                                // 		}, 200);
                                // 	}
                                // }
                                // else if($(event.target).closest("#connectAsideContainer").length == 1){
                                if ($(event.target).closest("#connectAsideContainer").length == 1) {
                                    if ($("#connectAsideContainer").find("li").length > sidebar_paging) {
                                        var offset_top = $("#connectAsideContainer").find("li:eq(" + sidebar_paging + ")").offset().top;
                                        var sidebar_height = $("#hayvenSidebar").height();
                                        if (offset_top < sidebar_height) {
                                            mousewheelevent = false;
                                            var counter = 0;
                                            $.each($("#connectAsideContainer").find("li"), function(k, v) {
                                                if ($(v).hasClass("conv_hide")) {
                                                    if (counter++ < 50) {
                                                        $(v).removeClass("conv_hide");
                                                        sidebar_paging++;
                                                    }
                                                }
                                            });
                                            setTimeout(function() {
                                                mousewheelevent = true;
                                            }, 5000);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } else {
                if ($('.msg-separetor-unread').is(':visible')) {
                    // $('.msg-separetor-unread').hide();
                }
            }
        }
    });
}


function scrolltoDownChat(type) {
    if ($('#taskList_panel').is(':visible')) {
        scrollToBottom('#taskList_panel', 0);
    } else if (type == 'msg') {
        $('#unredScrollMsg').attr('data-value', 0);
        if (allFilteredItem.length == 0) {
            $('#conv' + conversation_id).find('.unreadMsgCount').html('');
        }

        $('#unredScrollMsg').removeClass('active');
        $('#msg').focus();

        // var scrolltopheight = $('.chat-page .os-viewport').prop("scrollHeight")  - $(".msg-separetor-unread").last().offset().top ;
        if ($('.msg-separetor-unread').last().is(':visible')) {
            var genunixid = 'unredbar' + moment().unix();
            $('.msg-separetor-unread').last().attr('id', genunixid);
            var elmnt = document.getElementById(genunixid);
            elmnt.scrollIntoView();
        } else {
            scrollToBottom('.chat-page .os-viewport', 0);
        }
    } else {
        var sc = document.getElementById('repChatContainer');
        sc.scrollTo({ top: 0, behavior: 'smooth' });
    }
}


var setTime;
$('#repChatContainer').scroll(function() {
    if ($('#repChatContainer').scrollTop() > 120) {
        $('#scrollThreadTop').addClass('active');
        clearTimeout(setTime);
        setTime = setTimeout(function() { $('#scrollThreadTop').removeClass('active'); }, 6000);
    } else {
        clearTimeout(setTime);
        $('#scrollThreadTop').removeClass('active');
    }
});


var member_Conversation = (id) => {
    var convId = $('.side_bar_list_item li[data-id="' + id + '"]').attr('id');
    if (convId !== undefined) {
        $('#' + convId).click();
        closeAllPopUp();
    }
}

var removeThisList = (param) => {

    var roomid = $("#conv" + param).attr('data-conversationid');
    var uuid = $("#conv" + param).attr('data-id');

    socket.emit('hideUserinSidebar', {
        conversation_id: roomid,
        targetID: uuid,
        company_id: company_id
    }, function(res) {
        if ($("#conv" + param).hasClass('sideActive')) {
            $("#conv" + param).remove();
            $('#conv' + user_id).click();

            $(".send-msgs .send-emoji").show();
            $(".send-msgs .send-attach-file").show();
            $(".send-msgs .circle_up_arrow").show();
            $(".send-msgs #msgCheckListBtn").show();
            // $("#hideRoom_fromLeft").hide();
            $('body').removeClass('room_closed');
            $("#msg").css({ 'opacity': '1', 'border': '1px solid var(--PrimaryC)' });
        } else {
            $("#conv" + param).remove();
        }

        if ($('#joinChannelPanel').is(':visible')) {
            $("#addtoList" + param).removeClass('addlistHide');
            $("#roomBtn" + param).removeClass('width100');
        }

    });

    // $.ajax({
    // 	type: 'POST',
    // 	data: {
    // 		conversation_id: roomid,
    // 		targetID: uuid
    // 	},
    // 	dataType: 'json',
    // 	url: '/alpha2/hideUserinSidebar',
    // 	success: function (data) {
    // 		if ($("#conv" + param).hasClass('sideActive')) {
    // 			$("#conv" + param).remove();
    // 			$('#conv' + user_id).click();

    // 			$(".send-msgs .send-emoji").show();
    // 			$(".send-msgs .send-attach-file").show();
    // 			$(".send-msgs .circle_up_arrow").show();
    // 			$(".send-msgs #msgCheckListBtn").show();
    // 			// $("#hideRoom_fromLeft").hide();
    // 			$('body').removeClass('room_closed');
    // 			$("#msg").css({'opacity':'1','border':'1px solid var(--PrimaryC)'});
    // 		} else {
    // 			$("#conv" + param).remove();
    // 		}

    // 		if ($('#joinChannelPanel').is(':visible')){
    // 			$("#addtoList" + param).removeClass('addlistHide');
    // 			$("#roomBtn" + param).removeClass('width100');
    // 		}

    // 	}
    // });

}

sidebarLiMouseEnter();

//leave room
function removeThisGroup(params) {
    var conv_id = $("#conv" + params).attr('data-conversationid');
    var dataId = $("#conv" + params).attr('data-id');
    var memberList = $("#conv" + params).attr('data-tm');
    var createdbyid = $("#conv" + params).attr('data-createdby');
    var selectecosystem = 'Navigate';
    var grpprivacy = 'public';
    var type = $("#conv" + params).attr('data-conversationtype');
    var octr = $("#conv" + params).attr('data-octr');

    leaveRoom(memberList, createdbyid, grpprivacy, selectecosystem, conv_id, dataId);

    if ($("#conv" + params).hasClass('sideActive')) {
        $('#conv' + user_id + '').click();
    }

}


///keyboard up arrow key and down arrow key
var getActiveLi = function(selector) {
    var activeLI;
    var ind = $(selector).each(function(i) {
        if ($(this).hasClass('selected'))
            activeLI = i;
    })
    return activeLI;
}


function suggestedUserList() {
    var user_list = access_user_list;
    $.each(user_list, function(ky, va) {
        if (va.id != user_id) {
            if (sharedMemberList.indexOf(va.id) == -1) {
                var imSrc = va.img;
                var dataID = va.id;
                var definedList = '<li onclick="shareThisMember(\'' + dataID + '\',\'' + imSrc + '\')" id="toDoMember' + dataID + '" class="showEl">';
                definedList += '      <img src="' + file_server + 'profile-pic/Photos/' + va.img + '" class="profile">';
                definedList += '      <span class="name s-l-def-clas" data-uuid="' + va.id + '">' + va.fullname + '</span><span class="designation-name">, ' + va.designation + '</span>';
                definedList += '    </li>';
                $('.suggested-list').append(definedList);
                $('.suggested-list li.showEl:first').addClass("selected default");
            }
        }

    });
}

$('#search_members').on('click', function() {
    var value = $(this).val();
    if (value == 0) {
        $('.suggested-type-list').show();
        $('#createChannelContainer .submitBtn').hide();
        $('#createChannelContainer .member_list').hide();
        $('#createChannelContainer .adminList').hide();
        $(".inputGroup2 .suggested-list li.showEl").removeClass('selected');
        $(".inputGroup2 .suggested-list li.showEl:first").addClass('selected default');
        $('.suggested-type-list .os-viewport').animate({ scrollTop: 0 }, 1);
    }
    $('.suggested-list').html("");
    suggestedUserList();
    popupMouseEnter();
});

// function forActiveCallIcon(onlineUserList, participants,type,id){

// 	var participantActive = _.intersection( onlineUserList , participants );
// 	$('.voice-call , .redial-audiocall').removeClass('onC');
// 	$('.video-call , .redial-videocall').removeClass('onC');
// 	$('.voice-call , .redial-audiocall').removeClass('off_G_C');
// 	$('.video-call , .redial-videocall').removeClass('off_G_C');
// 	$('.voice-call , .redial-audiocall').removeClass('off_P_C');
// 	$('.video-call , .redial-videocall').removeClass('off_P_C');
// 	if(type == 'personal'){
// 		if(onlineUserList.indexOf(id) !== -1){
// 			$('.voice-call , .redial-audiocall').addClass('onC');
// 			$('.video-call , .redial-videocall').addClass('onC');
// 			$('.voice-call img , .redial-audiocall img').attr('src','/images/basicAssets/voice_call_for_active.svg');
// 			$('.video-call img , .redial-videocall img').attr('src','/images/basicAssets/video_call_for_active.svg');
// 		}else{
// 			$('.voice-call , .redial-audiocall').addClass('off_P_C');
// 			$('.video-call , .redial-videocall').addClass('off_P_C');
// 			$('.voice-call img , .redial-audiocall img').attr('src','/images/basicAssets/custom_voice_call.svg');
// 			$('.video-call img , .redial-videocall img').attr('src','/images/basicAssets/custom_video_call.svg');
// 		}
// 	}else if(type == 'yes'){
// 		if(participantActive.length > 1){
// 			$('.voice-call , .redial-audiocall').addClass('onC');
// 			$('.video-call , .redial-videocall').addClass('onC');
// 			$('.voice-call img , .redial-audiocall img').attr('src','/images/basicAssets/voice_call_for_active.svg');
// 			$('.video-call img , .redial-videocall img').attr('src','/images/basicAssets/video_call_for_active.svg');
// 		}else{
// 			$('.voice-call , .redial-audiocall').addClass('off_G_C');
// 			$('.video-call , .redial-videocall').addClass('off_G_C');
// 			$('.voice-call img , .redial-audiocall img').attr('src','/images/basicAssets/custom_voice_call.svg');
// 			$('.video-call img , .redial-videocall img').attr('src','/images/basicAssets/custom_video_call.svg');
// 		}
// 	}
// }

// function forActiveRedialIcon(onlineUserList, participants,type,id){
// 	var participantActive = _.intersection( onlineUserList , participants );
// 	$('.redial-audiocall').removeClass('onC');
// 	$('.redial-videocall').removeClass('onC');
// 	$('.redial-audiocall').removeClass('off_G_C');
// 	$('.redial-videocall').removeClass('off_G_C');
// 	$('.redial-audiocall').removeClass('off_P_C');
// 	$('.redial-videocall').removeClass('off_P_C');
// 	if(type == 'no'){
// 		if(onlineUserList.indexOf(id) !== -1){
// 			$('.redial-audiocall').addClass('onC');
// 			$('.redial-videocall').addClass('onC');
// 			$('.redial-audiocall img').attr('src','/images/basicAssets/voice_call_for_active.svg');
// 			$('.redial-videocall img').attr('src','/images/basicAssets/video_call_for_active.svg');
// 		}else{
// 			$('.redial-audiocall').addClass('off_P_C');
// 			$('.redial-videocall').addClass('off_P_C');
// 			$('.redial-audiocall img').attr('src','/images/basicAssets/custom_voice_call.svg');
// 			$('.redial-videocall img').attr('src','/images/basicAssets/custom_video_call.svg');
// 		}
// 	}else if(type == 'yes'){
// 		if(participantActive.length > 1){
// 			$('.redial-audiocall').addClass('onC');
// 			$('.redial-videocall').addClass('onC');
// 			$('.redial-audiocall img').attr('src','/images/basicAssets/voice_call_for_active.svg');
// 			$('.redial-videocall img').attr('src','/images/basicAssets/video_call_for_active.svg');
// 		}else{
// 			$('.redial-audiocall').addClass('off_G_C');
// 			$('.redial-videocall').addClass('off_G_C');
// 			$('.redial-audiocall img').attr('src','/images/basicAssets/custom_voice_call.svg');
// 			$('.redial-videocall img').attr('src','/images/basicAssets/custom_video_call.svg');
// 		}
// 	}
// }


function pageCustomLoader(type) {


}

//var i = setInterval(function() { pageCustomLoader(); }, 100);

var oldMessageValue = "";
var oldMessageHtml = "";

function editMessage(msgid, elm) {
    $('.msgs-form-users-options').removeClass('editAction');
    oldMessageValue = "";
    oldMessageHtml = "";
    var editMessageId = msgid;
    oldMessageValue = $('#data_msg_body' + msgid).text();
    oldMessageHtml = $('#data_msg_body' + msgid).html();
    $('.msg_id_' + msgid).css('background-color', 'rgba(152, 251, 152, 0.2)');
    $('.msg_id_' + msgid + ' .msgs-form-users-options').hide();
    $('.editMessageAction').remove();
    var msgbodyHtml = $('#data_msg_body' + msgid)[0].outerHTML;
    // console.log(msgbodyHtml);
    if ($('.msg_id_' + msgid + ' .user-msg .updatedDivCOntainer').is(':visible')) {
        $('#data_msg_body' + msgid).remove();
        $('.msg_id_' + msgid + ' .user-msg>.updatedDivCOntainer').after('<div class="editMessageBody">' + msgbodyHtml + '<div class="editMessageAction"><div class="saveBtn" onclick="editMessageSaveAction(\'' + editMessageId + '\')">Save</div> <div class="cancelBtn" onclick="cancelEditAction(this,\'' + editMessageId + '\')">Cancel</div></div></div>');
    } else {
        $('#data_msg_body' + msgid).remove();
        if ($('#editedMsg_id' + msgid).is(':visible')) {
            $('#editedMsg_id' + msgid).prepend('<div class="editMessageBody">' + msgbodyHtml + '<div class="editMessageAction"><div class="saveBtn" onclick="editMessageSaveAction(\'' + editMessageId + '\')">Save</div> <div class="cancelBtn" onclick="cancelEditAction(this,\'' + editMessageId + '\')">Cancel</div></div></div>');
        } else {

            $('.msg_id_' + msgid + ' .user-msg>h4').after('<div class="editMessageBody">' + msgbodyHtml + '<div class="editMessageAction"><div class="saveBtn" onclick="editMessageSaveAction(\'' + editMessageId + '\')">Save</div> <div class="cancelBtn" onclick="cancelEditAction(this,\'' + editMessageId + '\')">Cancel</div></div></div>');
        }
    }
    escToClose = '.msg_id_' + msgid + ' .cancelBtn';

    $('#data_msg_body' + msgid).attr('contenteditable', 'true');
    $('#data_msg_body' + msgid).focus();

    placeCaretAtEnd(document.getElementById('data_msg_body' + msgid));
    editMessageAction(editMessageId);
    $(elm).closest('.msg-more-popup').hide();
    $(".msg-more-popup[data-type='visible']").parents('.msgs-form-users-options').attr('style', '');
    $('.msg_id_' + msgid + '').find('.msgs-form-users-options').addClass('editAction');
    $('#updatedMsgBody' + msgid).find('.msgs-form-users-options').addClass('editAction');
    $('#msgThread_' + msgid + ' .deleSingleMsgConnect').remove();
}

var editMessageAction = (id) => {
    var updateAt = '' + new Date().getTime() + '';
    $('#data_msg_body' + id).keyup(function(e) {
        e.stopImmediatePropagation();
        if (e.keyCode == 13 && !event.shiftKey) {
            if ($('#data_msg_body' + id).text().length > 0) {
                // $('#data_msg_body'+id).blur();
                editMessageSaveAction(id);
            }
        }
    });
    $('.editMessageAction').mousedown(function(e) {
        e.preventDefault();
        e.stopImmediatePropagation();
    });
    // $('#data_msg_body'+id).blur(function(e){
    // 	$('#groupChatContainer').attr('msg-edit',false);
    // 	$('.msgs-form-users-options').removeClass('editAction');

    // 	e.stopImmediatePropagation();
    // 	$('#data_msg_body'+id).attr('contenteditable', 'false');
    // 	var msgbodyHtml = $('#data_msg_body'+id)[0].outerHTML;
    // 	$('.editMessageBody').remove();
    // 	if($('.msg_id_'+id+' .user-msg .updatedDivCOntainer').is(':visible')){
    // 		$('.msg_id_'+id+' .user-msg>.updatedDivCOntainer').after(msgbodyHtml);
    // 	}else{
    // 		if($('#editedMsg_id'+id).is(':visible')){
    // 			$('#editedMsg_id'+id).prepend(msgbodyHtml);
    // 		}else{
    // 			$('.msg_id_'+id+' .user-msg>h4').after(msgbodyHtml);
    // 		}
    // 	}

    // 	$('.msg_id_'+id+' .msgs-form-users-options').css('display', '');
    // 	$('.msg-more-popup').hide();

    // 	var str = $('#data_msg_body'+id).text();

    // 	var str = $('#data_msg_body'+id).html();
    // 		// str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
    // 		// str = convert(str);
    // 		// str = str.replace(/&nbsp;/gi, '').trim();
    // 		// str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');


    // 		var attch_audiofile = [];
    // 		var attch_imgfile = [];
    // 		var attch_otherfile = [];
    // 		var attch_videofile = [];
    // 		$.each($('.msg_id_'+id+' .fil_attach.attach-file '), function(k,v){
    // 			attch_otherfile.push($(v).attr('data-file_name'));
    // 		});
    // 		$.each($('.msg_id_'+id+' .img_attach'),function(k,v){
    // 			attch_imgfile.push($(v).attr('alt'));
    // 		});
    // 		$.each($('.msg_id_'+id+' .ado_attach'),function(k,v){
    // 			attch_audiofile.push($(v).attr('data-file_name'));
    // 		});
    // 		$.each($('.msg_id_'+id+' .vdo_attach'),function(k,v){
    // 			attch_videofile.push($(v).attr('data-file_name'));
    // 		});
    // 		var data = {
    // 			conv_id 		: conversation_id,
    // 			msg_id  		: id,
    // 			msg_body 		: $('#data_msg_body'+id).html(),
    // 			update_at 		: updateAt,
    // 			sender			: user_id,
    // 			sender_img		: user_img,
    // 			sender_name		: user_fullname,
    // 			attch_audiofile		: attch_audiofile,
    // 			attch_imgfile		: attch_imgfile,
    // 			attch_otherfile		: attch_otherfile,
    // 			attch_videofile		: attch_videofile
    // 		};


    // 		if(oldMessageValue !== $('#data_msg_body'+id).text()){
    // 			if(str.indexOf('msgCheckListContainer') == -1){
    // 				$('#data_msg_body'+id).html(oldMessageHtml);
    // 				socket.emit('msg_update',data,(res)=>{
    // 					console.log(9065,res);
    // 					$('#msgThread_'+id).remove();
    // 					// data.update_at = Number(data.update_at);
    // 					// var design = '<div class="message_edit_status" data-balloon-pos="up" data-balloon="'+moment(data.update_at).format('MMM Do YYYY @ h:mm a')+'">  - [Edited] </div>';
    // 					// if($('#data_msg_body'+id).closest('.user-msg').find('.message_edit_status').length == 0){
    // 					// 	$('#data_msg_body'+id).closest('.user-msg').find('h4').append(design);
    // 					// 	$('#msgThread_'+id).find('.deleSingleMsgConnect').remove();
    // 					// }
    // 				});
    // 			}else{
    // 				socket.emit('msgUpdateChecklist',data,(res)=>{
    // 					data.update_at = Number(data.update_at);
    // 					var design = '<div class="message_edit_status" data-balloon-pos="up" data-balloon="'+moment(data.update_at).format('MMM Do YYYY @ h:mm a')+'">  - [Edited] </div>';
    // 					if($('#data_msg_body'+id).closest('.user-msg').find('.message_edit_status').length == 0){
    // 						$('#data_msg_body'+id).closest('.user-msg').find('h4').append(design);
    // 						$('#msgThread_'+id).find('.deleSingleMsgConnect').remove();
    // 					}
    // 				});
    // 			}
    // 		}else{
    // 			$('#msgThread_'+id+' .deleSingleMsgConnect').remove();
    // 			$('#updatedMsgBody'+id+' .updatedTextP').show();
    // 			$('#updatedMsgBody'+id+' .updatedTextP').prepend(oldMsgHtml);
    // 		}
    // 		$('.msg_id_'+id).attr('style', '');

    // 		$('#groupChatContainer').attr('msg-edit',false);
    // 		$('.msgs-form-users-options').removeClass('editAction');

    // });
}

function editMessageSaveAction(id, type = null) {
    var conversation_id = $(".msg_id_" + id).attr("conv-id");
    // console.log(14910, get_conversation_obj(conversation_id));
    var participants_of_chk = get_conversation_obj(conversation_id).participants;
    var removeItem = [];
    var item_ids = [];
    if (participants_of_chk.indexOf(user_id) == -1) {
        participants_of_chk.push(user_id);
    }
    // setCookie("last_update_checklist", id);

    if ($('.editMessageBody #msgCheckItemContainer').is(':visible')) {
        $.each($('#msgCheckItemContainer .checkListPlainText'), function(k, v) {
            if ($(v).text() == '') {
                $(v).remove();
            }
        });

        $.each($('#msgCheckItemContainer .checkListItem'), function(k, v) {
            if ($(v).find('.checkBoxTitle').text() == '') {
                var id = $(v).attr('checklist-id');
                if (id != undefined) {
                    removeItem.push(id);
                }
                $(v).remove();
            }
            if ($(v).hasClass('waiting_3') && $(v).find('.new_chk').length > 0) {
                var id = $(v).attr('checklist-id');
                var assign_id = $(v).attr('assign-to');
                if (assign_id != undefined && assign_id == user_id) {
                    item_ids.push(id);
                }
            }
        });

        $('.msg_id_' + id + ' .msgCheckListContainer').removeAttr('id');
        $('.msg_id_' + id + ' .msgCheckListContainer .checkBoxTitle').removeAttr('id');
        $('.msg_id_' + id + ' .msgCheckListContainer .checkBoxTitle').attr('contenteditable', 'false');
        $('.msg_id_' + id + ' .msgCheckListContainer .checkListPlainText').removeAttr('id');
        $('.msg_id_' + id + ' .msgCheckListContainer .checkListPlainText').attr('contenteditable', 'false');

        var newHtml = $('.msg_id_' + id + ' .msgCheckListContainer')[0].outerHTML;
        var updateAt = new Date().getTime();

        var str = newHtml;
        str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
        str = convert(str);
        str = str.replace(/&nbsp;/gi, '').trim();
        str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');
        var strOld = oldMsgHtml;
        strOld = strOld.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
        strOld = convert(strOld);
        strOld = strOld.replace(/&nbsp;/gi, '').trim();
        strOld = strOld.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');

        if (str == strOld) {
            $('.editMessageBody').remove();
            $('.msg_id_' + id + ' #data_msg_body' + id + '').append(oldMsgHtml);
            $('.msg_id_' + id).removeAttr('style');
            $('.msg_id_' + id + ' .msgs-form-users-options').removeAttr('style');
            $('#groupChatContainer').removeClass('editChecklist_active');
        } else {
            if (str == '') {
                $('.editMessageBody').remove();
                $('.msg_id_' + id + ' #data_msg_body' + id + '').append(oldMsgHtml);
                $('.msg_id_' + id).removeAttr('style');
                $('.msg_id_' + id + ' .msgs-form-users-options').removeAttr('style');

                if ($('#data_msg_body' + id).hasClass('updatedAtText')) {
                    $('#updatedMsgBody' + id + ' .updatedTextP').show();
                    $('#msgThread_' + id + ' .deleSingleMsgConnect').remove();
                }
            } else {
                var updateAt = new Date().getTime();
                var elHtml = newHtml;
                var id = id;
                var attch_audiofile = [];
                var attch_imgfile = [];
                var attch_otherfile = [];
                var attch_videofile = [];
                $.each($('.msg_id_' + id + ' .fil_attach.attach-file '), function(k, v) {
                    attch_otherfile.push($(v).attr('data-file_name'));
                });
                $.each($('.msg_id_' + id + ' .img_attach'), function(k, v) {
                    attch_imgfile.push($(v).attr('alt'));
                });
                $.each($('.msg_id_' + id + ' .ado_attach'), function(k, v) {
                    attch_audiofile.push($(v).attr('data-file_name'));
                });
                $.each($('.msg_id_' + id + ' .vdo_attach'), function(k, v) {
                    attch_videofile.push($(v).attr('data-file_name'));
                });

                var taskLinks = [];
                $.each($('.editable_checklistMsg .checkListItem.needUpdate'), function(k, v) {
                    var allLink = linkify($(v).find('.checkBoxTitle').text().trim()).split('$_link_$');
                    $.each(allLink, function(k, v) {
                        if (v != '') {
                            if (taskLinks.indexOf(v.trim()) == -1) {
                                taskLinks.push(v.trim());
                            }
                        }
                    });
                });
                $.each($('.editable_checklistMsg .checkListItem.new_item'), function(k, v) {
                    var allLink = linkify($(v).find('.checkBoxTitle').text().trim()).split('$_link_$');
                    $.each(allLink, function(k, v) {
                        if (v != '') {
                            if (taskLinks.indexOf(v.trim()) == -1) {
                                taskLinks.push(v.trim());
                            }
                        }
                    });
                });
                $.each($('.editable_checklistMsg .checkListItem.just_added'), function(k, v) {
                    var allLink = linkify($(v).find('.checkBoxTitle').text().trim()).split('$_link_$');
                    $.each(allLink, function(k, v) {
                        if (v != '') {
                            if (taskLinks.indexOf(v.trim()) == -1) {
                                taskLinks.push(v.trim());
                            }
                        }
                    });
                });

                // console.log(14118,taskLinks);

                var data = {
                    conv_id: conversation_id,
                    msg_id: id,
                    msg_body: elHtml,
                    update_at: updateAt.toString(),
                    sender: $('#msgThread_' + id).find('.user-msg').attr('data-senderid'),
                    sender_img: $('#msgThread_' + id).find('.user-msg').attr('data-senderimg'),
                    sender_name: $('#msgThread_' + id).find('.user-msg').attr('data-sendername'),
                    attch_audiofile: attch_audiofile,
                    attch_imgfile: attch_imgfile,
                    attch_otherfile: attch_otherfile,
                    attch_videofile: attch_videofile,
                    created_at: $('#msgThread_' + id).attr('data-msg-date'),
                    has_flagged: (($('#msgThread_' + id).attr('flaged-data') != '') ? $('#msgThread_' + id).attr('flaged-data').split(',') : [])
                };

                if (removeItem.length > 0) {
                    var d2 = {
                        conv_id: conversation_id,
                        msg_id: id,
                        removeItem: removeItem
                    }
                    socket.emit('removeItem', d2, function(res) {
                        // console.log(13624,res);
                    });
                }

                if (item_ids.length > 0) {
                    var updateData = {
                        msg_id: id,
                        checklist_id: item_ids,
                        assign_status: "2",
                        assign_decline_note: null,
                        type: 'assign_accept_ar'
                    }
                    socket.emit('manage_checklist', updateData, function(res) {
                        // console.log(13605, res);
                    });
                }

                socket.emit('msg_fully_delete', data, (res) => {
                    var clData = {
                        conversation_id: conversation_id,
                        conversation_type: get_conversation_obj(conversation_id).conversation_type,
                        conversation_title: get_conversation_obj(conversation_id).conversation_title,
                        msg_id: id,
                        msg_body: elHtml,
                        participants: participants_of_chk,
                        allLink: taskLinks,
                        user_id: user_id
                    }
                    var stringBody = {
                        conversation_id: conversation_id,
                        conversation_type: get_conversation_obj(conversation_id).conversation_type,
                        msg_id: id,
                        checklist_title: $('.msg_id_' + id).find('.checkListPlainText').text()
                    }
                    var noti_data = {
                        type: 'checklist_changes',
                        title: 'edit_checklist',
                        body: JSON.stringify(stringBody),
                        created_at: new Date(),
                        created_by: user_id,
                        seen_users: get_conversation_obj(conversation_id).participants_without_me,
                        receive_users: get_conversation_obj(conversation_id).participants
                    }
                    if (type == 'remove_msg') {
                        $('.msg_id_' + data.msg_id).remove();
                    }
                    if (conversation_id !== user_id) {
                        insertNotiFun(noti_data);
                    }
                    // console.log('clData',clData);
                    socket.emit('updateChecklistLastTime', clData, function(res) {
                        // console.log(15191, res);
                        // has_incompleted_checklist_yet();
                    });
                    if (type == 'remove_msg') {
                        // $('.msg_id_'+data.msg_id).remove();
                        $('#groupChatContainer').removeClass('editChecklist_active');
                    }
                });
            }
        }

    } else {
        // console.log(12711);
        if ($('#data_msg_body' + id).text().length > 0) {
            var updateAt = '' + new Date().getTime() + '';
            // $('#data_msg_body'+id).blur();
            // $('#data_msg_body'+id).blur(function(e){
            $('#groupChatContainer').attr('msg-edit', false);
            $('.msgs-form-users-options').removeClass('editAction');

            // e.stopImmediatePropagation();
            $('#data_msg_body' + id).attr('contenteditable', 'false');
            var msgbodyHtml = $('#data_msg_body' + id)[0].outerHTML;
            $('.editMessageBody').remove();
            if ($('.msg_id_' + id + ' .user-msg .updatedDivCOntainer').is(':visible')) {
                $('.msg_id_' + id + ' .user-msg>.updatedDivCOntainer').after(msgbodyHtml);
            } else {
                if ($('#editedMsg_id' + id).is(':visible')) {
                    $('#editedMsg_id' + id).prepend(msgbodyHtml);
                } else {
                    $('.msg_id_' + id + ' .user-msg>h4').after(msgbodyHtml);
                }
            }

            $('.msg_id_' + id + ' .msgs-form-users-options').css('display', '');
            $('.msg-more-popup').hide();

            var str = $('#data_msg_body' + id).text();

            var str = $('#data_msg_body' + id).html();
            // str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
            // str = convert(str);
            // str = str.replace(/&nbsp;/gi, '').trim();
            // str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');


            var attch_audiofile = [];
            var attch_imgfile = [];
            var attch_otherfile = [];
            var attch_videofile = [];
            $.each($('.msg_id_' + id + ' .fil_attach.attach-file '), function(k, v) {
                attch_otherfile.push($(v).attr('data-file_name'));
            });
            $.each($('.msg_id_' + id + ' .img_attach'), function(k, v) {
                attch_imgfile.push($(v).attr('alt'));
            });
            $.each($('.msg_id_' + id + ' .ado_attach'), function(k, v) {
                attch_audiofile.push($(v).attr('data-file_name'));
            });
            $.each($('.msg_id_' + id + ' .vdo_attach'), function(k, v) {
                attch_videofile.push($(v).attr('data-file_name'));
            });

            var data = {
                conv_id: conversation_id,
                msg_id: id,
                msg_body: $('#data_msg_body' + id).html(),
                update_at: updateAt,
                sender: user_id,
                sender_img: user_img,
                sender_name: user_fullname,
                attch_audiofile: attch_audiofile,
                attch_imgfile: attch_imgfile,
                attch_otherfile: attch_otherfile,
                attch_videofile: attch_videofile
            };


            if (oldMessageValue !== $('#data_msg_body' + id).text()) {
                if (str.indexOf('msgCheckListContainer') == -1) {
                    $('#data_msg_body' + id).html(oldMessageHtml);
                    socket.emit('msg_update', data, (res) => {
                        // console.log(9065,res);
                        $('#msgThread_' + id).remove();
                    });
                } else {
                    socket.emit('msgUpdateChecklist', data, (res) => {
                        $('#groupChatContainer').removeClass('editChecklist_active');
                        data.update_at = Number(data.update_at);
                        var design = '<div class="message_edit_status" data-balloon-pos="up" data-balloon="' + moment(data.update_at).format('MMM Do YYYY @ h:mm a') + '">  - [Edited] </div>';
                        if ($('#data_msg_body' + id).closest('.user-msg').find('.message_edit_status').length == 0) {
                            $('#data_msg_body' + id).closest('.user-msg').find('h4').append(design);
                            $('#msgThread_' + id).find('.deleSingleMsgConnect').remove();
                        }
                    });
                }
            } else {
                $('#msgThread_' + id + ' .deleSingleMsgConnect').remove();
                $('#updatedMsgBody' + id + ' .updatedTextP').show();
                $('#updatedMsgBody' + id + ' .updatedTextP').prepend(oldMsgHtml);
            }
            $('.msg_id_' + id).attr('style', '');

            $('#groupChatContainer').attr('msg-edit', false);
            $('.msgs-form-users-options').removeClass('editAction');

            // });
        }
    }
    $('#save_warning').hide();
    $('.msg-more-popup').hide();
    $('#groupChatContainer').attr('msg-edit', false);
    $('.msgs-form-users-options').removeClass('editAction');
}

function saveChecklistStatusAndTitle(id) {
    var all_checklist_items = [];
    if ($('#groupChatContainer').hasClass('task_assignment')) {
        if ($('.msgs-form-users.editable_checklistMsg').is(':visible')) {
            conversation_id = $('.msgs-form-users.editable_checklistMsg').attr('conv-id');
            conversation_type = get_conversation_obj(conversation_id).conversation_type;
            participants = get_conversation_obj(conversation_id).participants;
        }
    }
    $.each($('.msg_id_' + id + ' .msgCheckListContainer').find($('.checkListItem')), function(k, v) {
        if ($(v).attr('checklist-id') != undefined) {
            if ($(v).find('.new_chk').length > 0 || $(v).find('.new_unchk').length > 0) {
                var item = {
                    id: $(v).attr('checklist-id'),
                    mark: $(v).attr('checklist_status')
                }
                all_checklist_items.push(item);
            }
        }
    });

    var msg_body = $('.msg_id_' + id + ' .msgCheckListContainer').find('.checkListPlainText').text();

    var data = {
        conversation_id: conversation_id,
        msg_id: id,
        msg_body: msg_body,
        user_id: user_id,
        sender_name: findObjForUser($('.msg_id_' + id).attr('sender-id')).fullname,
        sender_img: findObjForUser($('.msg_id_' + id).attr('sender-id')).img,
        items: all_checklist_items,
        req_type: 'web'
    }

    var stringBody = {
        conversation_id: conversation_id,
        conversation_type: conversation_type,
        msg_id: data.msg_id,
        checklist_title: $('.msg_id_' + data.msg_id).find('.checkListPlainText').text(),
        request_by: user_id,
        type: 'updateTitleAndStatus'
    }
    var noti_data = {
        type: 'checklist_changes',
        title: 'updateTitleAndStatus',
        body: JSON.stringify(stringBody),
        created_at: new Date(),
        created_by: user_id,
        seen_users: [user_id],
        receive_users: participants
    }
    if (conversation_id !== user_id) {
        insertNotiFun(noti_data);
    }

    socket.emit('update_checklistv2', data, (res) => {
        console.log('res', res);
        if (res.status) {
            need_reprint = true;
            $('.msg_id_' + id).find('.editMessageAction').addClass('backChat').removeClass('chk_active');
            $('.msg_id_' + id).attr('data-msgbody', msg_body);
            $('.msg_id_' + id + ' .msgCheckListContainer').find('.checkListPlainText').attr('title', msg_body);
            $('.msg_id_' + id).find('._checklist_title').text(msg_body);

            $.each(res.checklist, function(k, v) {
                // console.log(k,v);
                // console.log(moment(v.last_updated_at).local().format('MMM Do YYYY - h:mm a'));
                var check_mark = ((v.checklist_status == 1) ? true : false);
                $.each($('.msg_id_' + id).find('.checkListItem'), function(ka, va) {
                    if ($(va).attr('checklist-id') != undefined) {
                        $(va).find('.checkBox').removeClass('new_unchk').removeClass('new_chk');
                        if (v.checklist_id == $(va).attr('checklist-id')) {
                            if (check_mark) {
                                $(va).addClass('completed_item').removeClass('pending_item').removeClass('my_pending').removeClass('dateOver_due').removeClass('response_req');
                                $(va).find('.checkBox').addClass('checked');
                            } else {
                                $(va).addClass('pending_item').removeClass('completed_item');
                                $(va).find('.checkBox').removeClass('checked');
                            }
                            $(va).attr('data-lastmodified', v.last_updated_at);
                            var html = '| Updated by ' + findObjForUser(user_id).fullname + ' on ' + moment(v.last_updated_at).local().format('MMM Do YYYY - h:mm a');
                            $(va).find('.end_due_date.upBy_name').html(html);
                        }
                    }
                });
            });
            // call_toastr("Checklist updated")
            flash_msg_updated_fun(id, 'Checklist updated');
            taskItemCounter(id);
        }
    });
}

socket.on('saveChecklistStatusAndTitle', (res) => {
    console.log('Response', res);
    saveChecklistStatusAndTitlefun(res);
});

function saveChecklistStatusAndTitlefun(res) {
    var id = res.msg_id;
    var msg_body = res.msg_body;

    $('.msg_id_' + id).attr('data-msgbody', msg_body);
    $('.msg_id_' + id + ' .msgCheckListContainer').find('.checkListPlainText').attr('title', msg_body);
    $('.msg_id_' + id + ' .msgCheckListContainer').find('.checkListPlainText').text(msg_body);
    $('.msg_id_' + id).find('._checklist_title').text(msg_body);
    console.log(res.checklist);
    $.each(res.checklist, function(k, v) {
        var check_mark = ((v.checklist_status == 1) ? true : false);
        $.each($('.msg_id_' + id).find('.checkListItem'), function(ka, va) {
            if ($(va).attr('checklist-id') != undefined) {
                $(va).find('.checkBox').removeClass('new_unchk').removeClass('new_chk');
                if (v.checklist_id == $(va).attr('checklist-id')) {
                    if (check_mark) {
                        $(va).addClass('completed_item').removeClass('pending_item').removeClass('my_pending').removeClass('dateOver_due').removeClass('response_req');
                        $(va).find('.checkBox').addClass('checked');
                    } else {
                        $(va).addClass('pending_item').removeClass('completed_item');
                        $(va).find('.checkBox').removeClass('checked');
                    }
                }
            }
        });
    });
    taskItemCounter(id);
}

function saveAndCancelChecklist(id, type) {
    var data = {
        msg_id: id,
        conversation_id: $('.msg_id_' + id).attr('conv-id'),
        sender: user_id,
        sender_img: user_img,
        sender_name: user_fullname
    }

    socket.emit('saveAndCancelChecklist', data, (res) => {
        console.log('Msg Checklists', res)
        scrollToBottom('.chat-page .os-viewport', 0);
    });
    $('#groupChatContainer').removeClass('editChecklist_active');
    $('.msg_id_' + id).removeClass('editable_checklistMsg');
    // if (type != 'edit_view') {
    // }
}

function cancelEditAction(el, id) {
    if (!$("#taskList_panel").is(":visible"))
        has_any_pending_in_conv();
    // if (($('.msg_id_'+id).find('.checkListItem.needUpdate').length>0 || $('.msg_id_'+id).find('.checkListItem.new_item .checkBoxTitle').text() != '') && !$('#save_warning').is(':visible')) {
    // 	$('#save_warning').find('.btn-cancel').attr('onclick','cancelEditAction(this,\''+id+'\')');
    // 	$('#save_warning').find('#save_unsaved').attr('onclick','editMessageSaveAction(\''+id+'\',\'remove_msg\')');
    // 	// $('#save_warning').find('#save_unsaved').attr('onclick','saveChecklistStatusAndTitle(\''+id+'\')');
    // 	// $('#save_warning').css('display','flex');
    // 	// console.log('save_unsaved');
    // 	$('#save_unsaved').trigger('click');
    // 	return;
    // }
    if ($('#groupChatContainer').hasClass('task_assignment')) {
        $('.searchAndFilter').show();
    }
    $('.msg_id_' + id).find('#_reply_count').remove();
    $('#save_warning').hide();
    if (temp_assign_checklist_id.length > 0) {
        for (var n = 0; n < temp_assign_checklist_id.length; n++)
            only_add_remove_assignee(id, temp_assign_checklist_id[n], 'remove');
    }
    if (need_reprint === true) {
        // console.log('editMessageSaveAction');
        // editMessageSaveAction(id,'remove_msg');
        call_toastr("Checklist updated");
        saveAndCancelChecklist(id);
        return 0;
    }

    var newdata = [];
    if ($('.editable_checklistMsg').find('.checkListItem.new_append').length > 0) {
        $.each($('.editable_checklistMsg').find('.checkListItem.new_append'), function(k, v) {
            newdata.push(v);
        });
    }

    if ($('body').hasClass('chklst_incompleted')) {
        if (!$('body').hasClass('task_assignment')) {
            $('#closeRoomLabel').show();
        }
    }
    if ($('body').hasClass('checklistFilterView')) {
        $('#workFreeliToaster').show();
        $('.send-msgs').hide();
    }

    $('#groupChatContainer').attr('msg-edit', false);
    $('.msgs-form-users-options').removeClass('editAction');
    if ($('.msg_id_' + id + ' #msgCheckItemContainer').is(':visible')) {
        $('#groupChatContainer').removeClass('editChecklist_active');
        $('.msg_id_' + id).removeClass('editable_checklistMsg');
        $('.msg_id_' + id + ' .msgCheckListContainer .checkBoxTitle').blur();
        $('.msg_id_' + id + ' .msgCheckListContainer .checkListPlainText').blur();
        $('.msg_id_' + id + ' .msgCheckListContainer').removeAttr('id');
        $('.msg_id_' + id + ' .msgCheckListContainer .checkBoxTitle').removeAttr('id');
        $('.msg_id_' + id + ' .msgCheckListContainer .checkBoxTitle').attr('contenteditable', 'false');
        $('.msg_id_' + id + ' .msgCheckListContainer .checkListPlainText').removeAttr('id');
        $('.msg_id_' + id + ' .msgCheckListContainer .checkListPlainText').attr('contenteditable', 'false');
        $('.editMessageBody').remove();

        $('.msg_id_' + id + ' #data_msg_body' + id + '').append(oldMsgHtml);
        if (newdata.length > 0) {
            $.each(newdata, function(k, v) {
                $('.msg_id_' + id + ' #data_msg_body' + id + '').find('.itemContainer .updatebtn').before($(v));
            });
        }

        $('.msg_id_' + id).removeAttr('style');
        $('.msg_id_' + id + ' .msgs-form-users-options').removeAttr('style');
        taskItemCounter(id);
    } else {
        console.log('cancelEditAction Else block');
        $('#data_msg_body' + id).html(oldMessageHtml);
        editMessageSaveAction(id);
        $('#updatedMsgBody' + id + ' .updatedTextP').show();
        $('#updatedMsgBody' + id + ' .updatedTextP').prepend(oldMsgHtml);
        $('#msgThread_' + id + ' .deleSingleMsgConnect').remove();
    }
    if (backtoChatMsgIdRemove == id) {
        $('#msgThread_' + id).remove();
    } else {
        // $('#msgThread_'+id).find('.filterpending').trigger('click');
    }
    if ($('#msgThread_' + id).hasClass('removeAbleCheklist')) {
        $('#msgThread_' + id).remove();
    }
    backtoChatMsgIdRemove = '';
    // console.log('_yet_func');
    has_incompleted_checklist_yet('close');
    scrollToBottom('.chat-page .os-viewport', 0);
}

function has_incompleted_checklist_yet(type = null) {
    // console.log(14800, type);
    has_incompleted_checklist = false;
    $.each($('.checkListItem'), function(k, v) {
        if ($(v).find('.outer_ass').hasClass('AssigneeUser')) {
            var msg_pending = $(v).attr('msg-pending');
            // console.log('msg_pending',msg_pending);
            if (msg_pending == 'true' || msg_pending == true) {
                has_incompleted_checklist = true;
                if (!$(v).closest('.msgs-form-users').hasClass('pending_chk_process')) {
                    $(v).closest('.msgs-form-users').addClass('pending_chk_process');
                }
            }
        }
    });

    if (has_incompleted_checklist === true) {
        console.log('has_incompleted_checklist true')
        console.log(17103, getCookie("skip_msg_hidding"), conversation_id)
        if (getCookie("skip_msg_hidding") != conversation_id) {
            // filter hobe
            console.log('filter hobe')
        } else {
            // Filter hobe na
            console.log('Filter hobe na')
            if (type == 'close') {
                return;
            }
        }

        if (!$('body').hasClass('chklst_incompleted')) {
            if (!$('body').hasClass('task_assignment')) {
                $('body').addClass('chklst_incompleted');
            }
        }
        $('body.chklst_incompleted .send-msgs').hide();
        if (!$('body').hasClass('checklistFilterView')) {
            $('.msgs-form-users').hide();
            $('.msgs-form-users.pending_chk_process').show();
            $('#closeRoomLabel').show();
        }

        $('#closeRoomMsg').html('The checklist(s) below requires your action.');
        $('#closeRoomLabel').find('.close_msg_bar').remove();
        $('#closeRoomLabel').append('<span class="close_msg_bar" onclick="closeLabel()"></span>');
        if (!$('.editable_checklistMsg').is(':visible')) {
            if (getCookie("skip_msg_hidding") != conversation_id) {
                $('#closeRoomLabel').show();
            } else {
                $('#closeRoomLabel').hide();
            }
        } else {
            if (type == 'close') {
                if (!$('body').hasClass('checklistFilterView')) {
                    $('#closeRoomLabel').show();
                } else {
                    $('#closeRoomLabel').hide();
                }
            } else {
                $('#closeRoomLabel').hide();
            }
        }
        _separator();

    } else {
        console.log('has_incompleted_checklist true')
            // console.log('view al msg');
        $('body').removeClass('chklst_incompleted');
        $('.msgs-form-users').removeClass('pending_chk_process');
        $('.msgs-form-users').show();
        if ($('body').hasClass('checklistFilterView')) {
            $('.send-msgs').hide();
        } else {
            $('.send-msgs').show();
        }
    }
}

function _separator() {
    $('.msg-separetor').hide();
    $.each($('.msgs-form-users.pending_chk_process'), function(k, v) {
        var el = $(v).prevAll('.msg-separetor')[0];
        $(el).show();
    })
}

// function checklist_msg_reprint(msg_id){
// 	var data = {
// 		conv_id: conversation_id,
// 		conversation_type: conversation_type,
// 		conversation_title: $("#conv"+conversation_id).attr("data-name"),
// 		msg_id: msg_id,
// 	}
// 	var stringBody = {
// 		conversation_id:conversation_id,
// 		conversation_type:conversation_type,
// 		msg_id:msg_id,
// 		checklist_title:$('.msg_id_'+msg_id).find('.checkListPlainText').text()
// 	}
// 	var noti_data = {
// 		type:'checklist_changes',
// 		title:'edit_checklist',
// 		body:JSON.stringify(stringBody),
// 		created_at:new Date(),
// 		created_by:user_id,
// 		seen_users:[user_id],
// 		receive_users:participants
// 	}
// 	socket.emit('msg_fully_delete',data,(res)=>{
// 		$('.msg_id_'+data.msg_id).remove();
// 		insertNotiFun(noti_data);
// 		socket.emit('updateChecklistLastTime',data,function(res){
// 			console.log(1582,res)

// 		});
// 		$('#groupChatContainer').removeClass('editChecklist_active');

// 	});
// }
var selectedShareMember = [];
var allconvdetails = [];
var alluserandrooms = [];
var ShareMessagePopAction = 'share';

function shareMessage(event) {
    $('#shareMessagePopUp .hayven_Modal_heading .sub_btn').text('Forward')
    $('#shareMessagePopUp').find('input').val('');
    $('#shareMessagePopUp').find('input').focus();
    ShareMessagePopAction = 'share'
    $('#shareMessagePopUp').removeClass('convert_conversation');
    $('#shareMessagePopUp').find('.hayven_Modal_heading h1').text("Forward to");
    $('#shareMessagePopUp').find('.sub_btn').text("Forward");
    convertToChecklist = false;
    convertToChecklistMsg_id = '';
    convertToChecklistmsg = '';
    selectedShareMember = [];
    alluserandrooms = [];
    $('#shareMessagePopUp').css('display', 'flex');
    var msg_id = $(event.target).closest('.msgs-form-users').attr('data-msgid');
    $('#shareMessagePopUp').find('.shareButton').attr('data-msgid', msg_id);
    $('#shareMessagePopUp').find('.sub_btn').attr('data-msgid', msg_id);
    $('.searchInput').html("");
    $('#shareSuggestedList').html("");
    $('.no_of_user_left_to_add span').text(10 - selectedShareMember.length);
    $('#shareMsgminiHolder').html('');
    $('#shareMsgminiHolder').next('input').val('');

    var countFile = 0;
    var src = '';
    var data1 = $(event.target).closest('.msgs-form-users').find('.fil_attach.attach-file').length;
    var data2 = $(event.target).closest('.msgs-form-users').find('.msg_per_img_div').length;
    if (data1 == 1) {
        countFile += data1;
        src = '';
        src = $(event.target).closest('.msgs-form-users').find('.fil_attach.attach-file').attr('data-src');
    }

    if (data2 == 1) {
        countFile += data2;
        src = '';
        src = $(event.target).closest('.msgs-form-users').find('.msg_per_img_div').find('img').attr('src');
    }

    if (countFile == 1) {
        socket.emit('SetURLshorten', { link: src, type: 'single', user_id: user_id }, function(res) {
            // console.log(res);
            src = mywindowUrl + '/url/' + res.data;
            $('.singleFile_link').show();
            $('#shareLink2').text(src);
            $('#shareLink2').focus();
            $('#shareLink2').select();

        });
        // console.log(src);

    } else {
        $('.singleFile_link').hide();
    }
    // console.log(countFile);


    // if($('#roomIdDiv').attr('topic-type') == 'work'){
    var userid = user_id;
    if (allconvdetails.length > 0) {
        $.each(allconvdetails, function(k, v) {
            var data = {
                conversation_id: v.conversation_id,
                conv_img: v.conv_img,
                title: v.title,
                type: 'group',
                participants_sub: v.participants_sub

            }
            if (v.single == 'no') {
                if (v.title != '' && v.title != null) {
                    alluserandrooms.push(data);
                    // console.log(6519,v);
                    //$('#shareSuggestedList').append(userListDesign(v));
                }
            }
        });
        $.each(user_list, function(k, v) {
            var data = {
                conversation_id: v.id,
                conv_img: v.img,
                title: v.fullname,
                type: 'user',
                participants_sub: []
            }
            if (!has_permission(v.id, 1600) && v.is_delete == 0) {
                alluserandrooms.push(data);
            }
        });
        var newdata = _.sortBy(alluserandrooms, ["title", 'asc']);

        $.each(newdata, function(k, v) {
            v.participants_sub = (v.participants_sub == null ? [] : v.participants_sub)
            if (v.participants_sub.indexOf(user_id) == -1) {
                $('#shareSuggestedList').append(userListDesign(v));
            }
        })
    } else {
        socket.emit('myTopicList', { userid }, (respons) => {
            // console.log(6525,respons);
            if (respons.staus) {
                allRooms = respons.rooms;
                $.each(respons.rooms, function(k, v) {
                    allconvdetails.push(v);
                    if (v.conversation_id !== conversation_id) {
                        if (v.single == 'no') {
                            if (v.title != '' && v.title != null) {
                                var data = {
                                    conversation_id: v.conversation_id,
                                    conv_img: v.conv_img,
                                    title: v.title,
                                    type: 'group',
                                    participants_sub: v.participants_sub
                                }
                                alluserandrooms.push(data);
                                //$('#shareSuggestedList').append(userListDesign(v));
                            }
                        }
                    }
                });
                $.each(user_list, function(k, v) {
                    var data = {
                        conversation_id: v.id,
                        conv_img: v.img,
                        title: v.fullname,
                        type: 'user',
                        participants_sub: []
                    }
                    if (!has_permission(v.id, 1600) && v.is_delete == 0) {

                        alluserandrooms.push(data);
                    }
                });
                var newdata = _.sortBy(alluserandrooms, ["title", 'asc']);

                $.each(newdata, function(k, v) {
                    v.participants_sub = (v.participants_sub == null ? [] : v.participants_sub)
                    if (v.participants_sub.indexOf(user_id) == -1) {
                        $('#shareSuggestedList').append(userListDesign(v));
                    }
                })
            }
        });
    }

    // }else{
    // 	var user_list = access_user_list;
    // 	$.each(user_list, function(k,v){
    // 		if(participants.indexOf(v.id) == -1 && v.id !== user_id){
    // 			$('#shareSuggestedList').append(userListDesign(v));
    // 		}
    // 	});
    // }
    popupMouseEnter();

}

function copyLinkData() {
    $('#shareLink2').select();
    document.execCommand("copy");
}

function forWarningConvertConv() {
    $('#warningPopup').css('display', 'flex');
    $('#warningTitle').html('Conversation Limit');
    $('#warningPopup').attr('data-type', 'limit_conv_create');
    $('#warningMessage').html('You have already 10 maximum sub conversation. If you want more sub conversation, you have to pay for this. Please click to pay button.');
    $('#warningPopup').find('.buttonAction').addClass('bg_danger').text('Pay');
}

function backShare() {
    $('#show_full_forward').hide();
    $('#shareMessagePopUp').css('display', 'flex');
}
var all_conversations = [];
var all_conversations_files = [];
socket.emit('find_all_files', { conversation_id: user_id + '/allConv' }, function(res) {
    all_conversations = res.all_conv;
    all_conversations_files = res.files;
});

function forwardFinal() {
    $('#show_full_forward').hide();
    console.log(17169, selectedDataID)
    var allFilesInfo = getFilesInfo(all_conversations_files, selectedDataID);
    var comments = 'No Comments';
    if ($('#show_full_forward_textArea').val() != '') {
        comments = $('#show_full_forward_textArea').val();
    }

    socket.emit('forwardFiles', { files: allFilesInfo, conversations: selectedShareMember, user_id: user_id, comments: comments, company_id: company_id }, function(res) {
        if (res.status) {
            for (d in res.msgAndConv) {
                for (c in all_conversations) {
                    if (res.msgAndConv[d].conversation_id.toString() == all_conversations[c].conversation_id.toString()) {
                        let data = {
                            msg_id: res.msgAndConv[d].msg_id,
                            conv: all_conversations[c]
                        }

                        socket.emit('broadcast_for_msg_send', data);
                    }
                }
            }
        }
    });
}
var share_this_msg_with = (event) => {
    // console.log($('#roomIdDiv').attr('topic-type') == 'work');
    if ($('#flagPanelContainer').is(':visible')) {
        var msg_id = $(event.target).attr('data-msgid');
        conversation_id = $('.msg_id_' + msg_id).attr('conv-id');
        console.log(msg_id, conversation_id);
    }
    if (selectedShareMember.length > 0) {
        if ($('#fileSliderBackWrap').is(':visible')) {
            // console.log(9174,selectedMediaAudTempArray)

        } else {
            if (ShareMessagePopAction == 'convert') {
                var root_conv_id_this = selectedShareMember[0];
                socket.emit('convert_conversation', { conversation_id: conversation_id, company_id: company_id, root_conv_id: root_conv_id_this, user_id: user_id }, function(res) {
                    // console.log(14512,res)
                    if (res.status) {
                        if (!res.limit) {
                            forWarningConvertConv();
                        } else {
                            $('#conv' + conversation_id).addClass('itssubconvhide');
                            $('#conv' + conversation_id).trigger('click');
                        }
                        socket.emit("room_converted_emit", { type: "mainroom2subroom", conversation_id, new_root_conv_id: root_conv_id_this }, function(result) {
                            // console.log(15115);
                            // if(result.rootconvdata.participants.indexOf(user_id) == -1){
                            // 	$("#conv"+result.rootconvdata.conversation_id).remove();
                            // }
                        });
                    }
                    closeModal('shareMessagePopUp')
                })
            } else {
                if ($('#mediaFilePreview').is(':visible') || selectedDataID.length > 0) {
                    $('#show_full_forward').css('display', 'flex');
                    var design = $('#shareMsgminiHolder').html();
                    $('#shareMsgminiHolderA').html(design);
                    $('#shareMessagePopUp').hide();
                    $('#show_full_forward_textArea').val('');
                    $('#show_full_forward_textArea').focus();

                } else {
                    if (selectedMessages.length > 0) {
                        // console.log(11933, 111)
                        // $.each(selectedMessages, function(k, v){
                        // 	if($('#roomIdDiv').attr('topic-type') == 'work'){
                        // 		var data = {msg_id:v, user_id, user_img, user_fullname, selectedShareMember,allconvdetails};
                        // 		if($('.msg_id_'+data.msg_id).attr('data-msg-type') == 'checklist'){
                        // 			data['msg_body'] = $('#data_msg_body'+data.msg_id)[0].outerHTML;
                        // 			data['msg_type'] = 'checklist'
                        // 		}
                        // 		socket.emit('share_withConv', data, (res)=>{
                        // 			if(res){
                        // 				for(var m=0; m<selectedShareMember.length; m++){
                        // 					var convid = getconvidfromlist(user_id, selectedShareMember[m]);
                        // 					// if(convid != -1){
                        // 					// 	remove_conv_from_local(user_id+convid);
                        // 					// 	var lskey = has_conv_into_local(convid);
                        // 					// 	if(lskey != -1){
                        // 					// 		remove_conv_from_local_data(lskey);
                        // 					// 	}
                        // 					// }
                        // 				}
                        // 				closeModal('shareMessagePopUp');
                        // 			}
                        // 		});
                        // 	}else{
                        // 		var data = {msg_id:v, user_id, user_img, user_fullname, selectedShareMember};
                        // 		if($('.msg_id_'+data.msg_id).attr('data-msg-type') == 'checklist'){
                        // 			data['msg_body'] = $('#data_msg_body'+data.msg_id)[0].outerHTML;
                        // 			data['msg_type'] = 'checklist'
                        // 		}

                        // 		socket.emit('share_with', data, (res)=>{
                        // 			if(res){
                        // 				for(var m=0; m<selectedShareMember.length; m++){
                        // 					var convid = getconvidfromlist(user_id, selectedShareMember[m]);
                        // 					// if(convid != -1){
                        // 					// 	remove_conv_from_local(user_id+convid);
                        // 					// 	var lskey = has_conv_into_local(convid);
                        // 					// 	if(lskey != -1){
                        // 					// 		remove_conv_from_local_data(lskey);
                        // 					// 	}
                        // 					// }
                        // 				}
                        // 				closeModal('shareMessagePopUp');
                        // 			}
                        // 		});
                        // 	}


                        // 	if(selectedMessages.length == (k+1)){
                        // 		var ele = $("#selectMessage");
                        // 		selectMessageOn(ele);
                        // 	}
                        // });
                        var data = {
                            msg_id: selectedMessages,
                            conversation_id: conversation_id,
                            user_id: user_id,
                            share_conv: selectedShareMember,
                            created_at_local: moment().format()
                        }
                        socket.emit('forwardMessageV2', data, function(res) {
                            closeModal('shareMessagePopUp');
                        })
                    } else {
                        // console.log(11933, 222)
                        var msg_id = $(event.target).attr('data-msgid');
                        var msgArray = [msg_id];
                        // console.log(selectedShareMember);
                        var data = {
                                msg_id: msgArray,
                                conversation_id: conversation_id,
                                user_id: user_id,
                                share_conv: selectedShareMember,
                                created_at_local: moment().format()
                            }
                            // console.log(13289,convertToChecklist)
                        if (convertToChecklist) {
                            data['type'] = 'convert';
                            data['user_fullname'] = user_fullname;
                            data['user_image'] = user_img;
                            data['msg_body'] = $('#data_msg_body' + msg_id).text();
                        }
                        // console.log('x:2', data) 
                        socket.emit('forwardMessageV2', data, function(res) {
                                closeModal('shareMessagePopUp');
                            })
                            // if($('#roomIdDiv').attr('topic-type') == 'work'){
                            // 	var data = {msg_id, user_id, user_img, user_fullname, selectedShareMember,allconvdetails};
                            // 		if($('.msg_id_'+data.msg_id).attr('data-msg-type') == 'checklist'){
                            // 			data['msg_body'] = $('#data_msg_body'+msg_id)[0].outerHTML;
                            // 			data['msg_type'] = 'checklist'
                            // 		}
                            // 	socket.emit('share_withConv', data, (res)=>{
                            // 		if(res){
                            // 			for(var m=0; m<selectedShareMember.length; m++){
                            // 				var convid = getconvidfromlist(user_id, selectedShareMember[m]);
                            // 				// if(convid != -1){
                            // 				// 	remove_conv_from_local(user_id+convid);
                            // 				// 	var lskey = has_conv_into_local(convid);
                            // 				// 	if(lskey != -1){
                            // 				// 		remove_conv_from_local_data(lskey);
                            // 				// 	}
                            // 				// }
                            // 			}
                            // 			closeModal('shareMessagePopUp');
                            // 		}
                            // 	});
                            // }else{
                            // 	var data = {msg_id, user_id, user_img, user_fullname, selectedShareMember};
                            // 		if($('.msg_id_'+data.msg_id).attr('data-msg-type') == 'checklist'){
                            // 			data['msg_body'] = $('#data_msg_body'+data.msg_id)[0].outerHTML;
                            // 			data['msg_type'] = 'checklist'
                            // 		}
                            // 	socket.emit('share_with',data, (res)=>{
                            // 		if(res){
                            // 			for(var m=0; m<selectedShareMember.length; m++){
                            // 				var convid = getconvidfromlist(user_id, selectedShareMember[m]);
                            // 				// if(convid != -1){
                            // 				// 	remove_conv_from_local(user_id+convid);
                            // 				// 	var lskey = has_conv_into_local(convid);
                            // 				// 	if(lskey != -1){
                            // 				// 		remove_conv_from_local_data(lskey);
                            // 				// 	}
                            // 				// }
                            // 			}
                            // 			closeModal('shareMessagePopUp');
                            // 		}
                            // 	});

                        // }

                    }
                }
            }
        }
    } else {
        closeModal('shareMessagePopUp');
    }
};

function getconvidfromlist(myid, userid) {
    var fulllist = $("#conversation_list_sidebar li");
    for (var i = 0; i < fulllist.length; i++) {
        var ele = $(fulllist[i]);
        if (ele.attr("data-myid") == myid && ele.attr("data-id") == userid) {
            return ele.attr("data-conversationid");
        }
    }
    return -1;
}

function shareSelectedMsg() {
    if (selectedMessages.length > 0 || $('#mediaFilePreview').is(':visible') || selectedDataID.length > 0) {
        selectedShareMember = [];
        alluserandrooms = [];
        $('#shareMessagePopUp').css('display', 'flex');
        // var msg_id = $(event.target).closest('.msgs-form-users').attr('data-msgid');
        // $('#shareMessagePopUp').find('.shareButton').attr('data-msgid', msg_id);
        $('.searchInput').html("");
        $('#shareMsgminiHolder').html("");
        $('#shareSuggestedList').html("");
        $('#shareMessagePopUp .hayven_Modal_heading .sub_btn').text('Next')
        $('.no_of_user_left_to_add span').text(10 - selectedShareMember.length);
        // if($('#roomIdDiv').attr('topic-type') == 'work'){
        var userid = user_id;
        if (allconvdetails.length > 0) {
            $.each(allconvdetails, function(k, v) {
                var data = {
                    conversation_id: v.conversation_id,
                    conv_img: v.conv_img,
                    title: v.title,
                    type: 'group',
                    participants_sub: v.participants_sub

                }
                if (v.single == 'no') {
                    if (v.title != '' && v.title != null) {
                        alluserandrooms.push(data);
                        // console.log(6519,v);
                        //$('#shareSuggestedList').append(userListDesign(v));
                    }
                }
            });
            $.each(user_list, function(k, v) {
                var data = {
                    conversation_id: v.id,
                    conv_img: v.img,
                    title: v.fullname,
                    type: 'user',
                    participants_sub: []
                }
                // if (!has_permission(v.id, 1600)) {

                    alluserandrooms.push(data);
                // }
            });
            var newdata = _.sortBy(alluserandrooms, ["title", 'asc']);

            $.each(newdata, function(k, v) {
                v.participants_sub = (v.participants_sub == null ? [] : v.participants_sub)
                if (v.participants_sub.indexOf(user_id) == -1) {
                    $('#shareSuggestedList').append(userListDesign(v));
                }
            })
        } else {
            socket.emit('myTopicList', { userid }, (respons) => {
                // console.log(6525,respons);
                if (respons.staus) {
                    allRooms = respons.rooms;
                    $.each(respons.rooms, function(k, v) {
                        allconvdetails.push(v);
                        if (v.conversation_id !== conversation_id) {
                            if (v.single == 'no') {
                                if (v.title != '' && v.title != null) {
                                    // allconvdetails.push(v);
                                    // console.log(6519,v);
                                    var data = {
                                        conversation_id: v.conversation_id,
                                        conv_img: v.conv_img,
                                        title: v.title,
                                        type: 'group',
                                        participants_sub: v.participants_sub

                                    }
                                    alluserandrooms.push(data);
                                    //$('#shareSuggestedList').append(userListDesign(v));
                                }
                            }
                        }
                    });
                    $.each(user_list, function(k, v) {
                        var data = {
                            conversation_id: v.id,
                            conv_img: v.img,
                            title: v.fullname,
                            type: 'user',
                            participants_sub: []
                        }
                        alluserandrooms.push(data);
                    });
                    var newdata = _.sortBy(alluserandrooms, ["title", 'asc']);

                    $.each(newdata, function(k, v) {
                        v.participants_sub = (v.participants_sub == null ? [] : v.participants_sub)
                        if (v.participants_sub.indexOf(user_id) == -1) {
                            $('#shareSuggestedList').append(userListDesign(v));
                        }
                        // $('#shareSuggestedList').append(userListDesign(v));
                    })
                }
            });
        }

        // }else{

        // 	var user_list = access_user_list;
        // 	$.each(user_list, function(k,v){
        // 		if(participants.indexOf(v.id) == -1 && v.id !== user_id){
        // 			$('#shareSuggestedList').append(userListDesign(v));
        // 		}
        // 	});
        // }
        popupMouseEnter();
    }
}

$(function() {
    socket.emit('myTopicList', { userid: user_id }, (respons) => {
        // console.log(16316,respons)
        myallConversations = respons.rooms;
    });
    // $('#pagination-demo').twbsPagination({
    // 	totalPages: 5,
    // 	// the current page that show on start
    // 	startPage: 1,

    // 	// maximum visible pages
    // 	visiblePages: 5,

    // 	initiateStartPageClick: true,

    // 	// template for pagination links
    // 	href: false,

    // 	// variable name in href template for page number
    // 	hrefVariable: '{{number}}',

    // 	// Text labels
    // 	first: 'First',
    // 	prev: 'Previous',
    // 	next: 'Next',
    // 	last: 'Last',

    // 	// carousel-style pagination
    // 	loop: false,

    // 	// callback function
    // 	onPageClick: function (event, page) {
    // 		$('.page-active').removeClass('page-active');
    // 		$('#page'+page).addClass('page-active');
    // 	},

    // 	// pagination Classes
    // 	paginationClass: 'pagination',
    // 	nextClass: 'next',
    // 	prevClass: 'prev',
    // 	lastClass: 'last',
    // 	firstClass: 'first',
    // 	pageClass: 'page',
    // 	activeClass: 'active',
    // 	disabledClass: 'disabled'

    // 	});
})







function asideRemoveMouseEnter(convId) {
    var data_balloon_value = $('#conv' + convId).attr('data-balloon');
    if (data_balloon_value !== undefined) {
        $('#conv' + convId).removeAttr('data-balloon-pos');
        $('#conv' + convId).removeAttr('data-balloon-length');
        $('#conv' + convId).removeAttr('data-balloon');
        $('#conv' + convId).addClass('removeDataBalloon');
    }
}

function asideRemoveMouseLeave(convId) {
    var data_value = $('#conv' + convId + ' .usersName').text();
    $('#conv' + convId).hasClass('removeDataBalloon')
    if ($('#conv' + convId).hasClass('removeDataBalloon')) {
        $('#conv' + convId).attr('data-balloon-pos', 'up');
        if (data_value.length >= 25) {
            $('#conv' + convId).attr('data-balloon-length', 'fit');
        } else {
            $('#conv' + convId).attr('data-balloon-length', 'medium');
        }
        $('#conv' + convId).attr('data-balloon', '' + data_value + '');
        $('#conv' + convId).removeClass('removeDataBalloon');
    }
}

function addTeamMemberfocus(event) {
    $('.s-l-def-clas').unhighlight();
    $('#addTeamSuggestedList').show();
    $('#createChannelContainer .submitBtn').hide();
    $('#createChannelContainer .member_list').hide();
    $('#createChannelContainer .adminList').hide();
    $('#addTeamSuggestedList li').show();
    $('#addTeamSuggestedList li').addClass('showEl');
    $('#addTeamSuggestedList li').removeClass('selected');
    $('#addTeamSuggestedList li:first').addClass('selected');

    if ($("#roomIdDiv").attr('data-rfu') == 'ready') {
        $.each(participants, function(k, v) {
            if (v !== user_id) {
                if (!$("#s-l-def li [data-uuid=" + v + "]").parent('li').hasClass('active')) {
                    $("#s-l-def li [data-uuid=" + v + "]").parent('li').addClass('active');
                }
            }
        })
    }
}


$('#notificationPopup .notification_mute_time li').on('click', function() {
    var nowDate = moment().format("DD-MM-YYYY HH:MM")
    if ($('#customMuteOption').is(':checked')) {
        if ($('#notificationPopup').attr('data-mute-id') == "") {
            $('#muteCustomendDate').val(moment(nowDate, "DD-MM-YYYY HH:MM").add('1', 'day').format('DD-MM-YYYY HH:MM'));
            $('#muteCustomDate').val(nowDate);
        } else {
            var dataMuteId = $('#notificationPopup').attr('data-mute-id');
            $.each(myAllMuteConv, function(k, v) {
                if (v.mute_id == dataMuteId) {
                    $('#muteCustomendDate').val(moment(new Date(v.mute_end_time), "llll").format('DD-MM-YYYY HH:MM'));
                    $('#muteCustomDate').val(moment(new Date(v.mute_start_time), "llll").format('DD-MM-YYYY HH:MM'));
                }
            });
        }
        $('#mutedateTime').show();

    } else {
        $('#mutedateTime').hide();
    }
});




function hide_Emoji_Div() {
    $('.emoji_div').remove();
};


var start_conversation_onload = (convid, respons) => {
    console.log(18242, convid, respons);
    $('.chat-head-calling').fadeOut('fast').addClass('disable-clicking');
    if ($('#conv' + convid).attr("data-conversationtype") == 'group') {
        $('.private_msg_icon').show();
        $('#privateChatsOnly').show();
        // $('#msg').css('padding-left','34px');
        document.getElementById("msg").style.paddingLeft = "34px";
    } else {
        $('.private_msg_icon').hide();
        $('#privateChatsOnly').hide();
        // $('#msg').css('padding-left','12px');
        document.getElementById("msg").style.paddingLeft = "12px";
    }
    setCookie("skip_msg_hidding", "");
    // if(getAllTag){
    if (respons.conversation !== undefined && convid != user_id) {
        if (respons.conversation[0].root_conv_id != null) {
            $("#conv" + respons.conversation[0].root_conv_id).trigger("click");
            return false;
        }
    }

    $('#flagged_icon_filter').attr('data-count', 0);
    checkFlaggedIcon(convid);
    // $('.video-call,.voice-call,.join-call').hide();
    prevConvid = convid;
    filesCount = 0;
    if (user_id == convid) {
        $('#callNotifications').hide();
    }
    $('#conversationFileView').text('Files (0)');
    $("#onscrollloading").show();
    $('#msg-container').removeAttr('data-checklist');
    $('#msg-container').attr('has-msg', true);
    // $('#checkListCounter').parent('.headFiles').hide();
    $('#optionalChecklist').removeClass('show').addClass('hide');
    $('#checkListCounter').removeClass('active');
    $('#checklistActiondiv').removeClass('active');
    $('#groupChatContainer').removeClass('checklistActive');
    if (allFilteredItem.length == 0) {
        $('#conv' + prevConvid).find('.unreadMsgCount').html('');
    }

    if (convid == "noid") {
        $("#conv" + user_id).trigger('click');
        // setTimeout(function() { forlastActiveconv() }, 1000);
    } else {
        var conversationid = conversation_id = convid;
        countAndGetchecklist();
        forviewconv(conversationid);
        var event_target = $("#conv" + conversation_id);
        $(event_target).addClass('sideActive').addClass('selected');

        pageCustomLoader(true);
        $('#mediaFilePreview').hide();
        $('#mediaFilePreview').attr('view-type', '');
        $('.media-file-popup').hide();
        $('.image-popup-slider').hide();
        $('#notificationPopup').attr('data-mute-id', '');
        adminArra = [];
        participants = [];
        participants_guest = [];
        participants_sub = [];

        if ($('#groupChatContainer').is(":visible") == false) {
            $(".connect_right_section").hide();
            $('#groupChatContainer').show();
        }

        if ($("#defaultRoom").is(":visible")) {
            $("#defaultRoom").remove();
        }

        $('#msg').focus();

        var id = to = room_id = $(event_target).attr("data-id");
        var type = conversation_type = $(event_target).attr("data-conversationtype");
        $('body').attr('conv-type', conversation_type);
        var name = room_name = $(event_target).attr("data-name");
        var img = room_img = $(event_target).attr("data-img");
        var subtitle = $(event_target).attr("data-subtitle");
        var tm = $(event_target).attr("data-tm");
        var status = $(event_target).find('.online, .offline, .hash, .lock').attr('class');
        $('#groupChatContainer').removeClass('thisisGroup');
        if (type == 'group') {
            $('#groupChatContainer').addClass('thisisGroup');
        }

        $("#pin-to-bar").attr('data-conversationid', conversationid);
        $("#createConvTag").attr('data-roomid', conversationid);

        $("#lastActive").val(conversationid);

        $("#pin-to-bar").attr('data-id', id);
        $("#pin-to-bar").attr('data-subtitle', subtitle);
        $("#pin-to-bar").attr('data-img', img);
        $("#pin-to-bar").attr('data-name', name);
        $("#pin-to-bar").attr('data-type', type);
        if (type == 'personal') {
            $("#conv_title>.online").removeClass('online').addClass(status);
        } else {
            $("#conv_title>.online").hide();
        }
        // if(type == 'personal'){
        // 	$("#conv_title").html('<span class="'+status+'" style="top: 16px;z-index: 9;"></span><div class="msg-user-photo" style=""><img src="/images/users/'+img+'" alt="" style="position:absolute; margin:auto;left:17px;top:18px"></div><span class="converstaion_name">'+name+'</span>');
        // 	$("#conv_title").css('margin-left', '27px');
        // }else{
        // 	$("#conv_title").html('<span class="' + status + '"></span><span class="converstaion_name">' + name + '</span>');
        // 	$("#conv_title").css('margin-left', '0px');
        // }
        // $('.voice-call').show();
        // $('.video-call').show();

        // $("#conv_title").text(name);
        // $("#conv_key").text('@'+subtitle);

        // $("#conv_key").text('@ Navigate');
        // $("#totalMember").text('');
        // forActiveCallIcon(onlineUserList, participants, conversation_type);
        $("#msg").html("");
        $("#msg-container").html("");


        $('.chat-head-calling .more-menu').show();
        // For tag purpose. while clicking on room or personal
        $('.chat-head-calling .addTagConv').hide();
        // $('.chat-head-calling .tagged').show();
        $("#taggedList").html("");



        tagListTitle = [];
        tagLsitDetail = [];

        $("#fileAttachTagLs").html('');

        tagListForFileAttach = [];
        FtempArray = [];
        FtaggedList = [];


        $("#taggedIMG").attr('src', '/images/basicAssets/custom_not_tag.svg');
        $("#createConvTag").val('');
        $("#tagItemList").text('');

        var seartTxt = $("#searchText").val();
        localstorage['get_conversation_history'].push(respons);
        // localStorage.get_conversation_history = JSON.stringify(localstorage['get_conversation_history']);
        console.log(18388, respons, type, id, conversationid, name, img, user_id, seartTxt, 0)
        start_conv_success(respons, type, id, conversationid, name, img, user_id, seartTxt, 0);

        $('.side_bar_list_item li').removeClass('sideActive');
        $('.side_bar_list_item li').removeClass('selected');
        $('.side_bar_list_item li').children(".hash, .online, .offline, .lock, .toDo, .protected").css('left', '12px');
        $(event_target).addClass('sideActive');
        $(event_target).addClass('selected');
        $(event_target).children('.remove').hide();
        $(event_target).children(".hash, .online, .offline, .lock, .toDo, .protected").css('left', '6px');
        unread_msg_conv_intop();

        // Floating Date in the top bar
        // $('.chat-page .os-viewport').on('scroll', function () {
        // var scrollTop = $('.chat-page .os-viewport').scrollTop();
        // if (scrollTop === 0)
        // 	$('#top-date').html("");
        // $(".msg-separetor").each(function () {
        // 	var last = true;
        // 	if (last)
        // 		$(this).removeClass('not_visible');
        // 	console.log(8014, $(this).text(), $(this).offset().top);
        // 	if ($(this).offset().top < ($("#msg-container").height() - 100)) {
        // 		last = false;
        // 		$(this).addClass("not_visible");
        // 		$('#top-date').html($('.not_visible').last().attr('data-date'));
        // 	}
        // });
        // });

        // if (windowWidth <= 415) {
        // 	$('#hayvenSidebar').hide();
        // }



        $(event_target).css('left', '0px');

        setTimeout(function() {
            if ($('.online_' + to).hasClass('online')) {
                $('.voice-call , .redial-audiocall').addClass('onC');
                $('.video-call , .redial-videocall').addClass('onC');
                $('.voice-call img , .redial-audiocall img').attr('src', '/images/basicAssets/voice_call_for_active.svg');
                $('.video-call img , .redial-videocall img').attr('src', '/images/basicAssets/video_call_for_active.svg');
            }
        }, 3000);

    }

    // }else{
    // 	setTimeout(function(){
    // 		start_conversation_onload(convid, respons);
    // 	},500)
    // }

    var dontDisturb = localStorage.getItem('dontDisturb' + user_id);
    dontDisturb = JSON.parse(dontDisturb);
    if (dontDisturb == '' || dontDisturb == null) {
        dontDisturb = [];
        localStorage.setItem('dontDisturb' + user_id, JSON.stringify(dontDisturb));
    }
    if (dontDisturb == null || dontDisturb.length == 0) {
        $('#unMuteAllConv').hide();
    } else {
        if (dontDisturb.length > 1) {
            $('#unMuteAllConv').show();
        }
    }
};

var input_val;
$('.itm').click(function(event) {
    $('.src_total_msg_content').hide();
    $('.dropbtn').removeClass('rotate');
    input_val = $('#input_values input').val();
    var val_itm = $(this).text();

    switch (val_itm) {


        case 'Image(s)':
            hideSearchForHead();
            mediaFilePopup('mediaImgsTab');
            //    $('#mediaImgsTab').click();
            $('.seach_box_all').val(input_val);
            // 	setTimeout(function(){ 
            //  if ($('#mediaImgsTab').attr('data-len') == 0) { $('#mediaImages').addClass('flex_class')}
            // }, 3000);
            break;

        case 'Video(s)':
            hideSearchForHead();
            mediaFilePopup('mediaViedeosTab');
            //    $('#mediaViedeosTab').click();
            $('.seach_box_all').val(input_val);
            break;

        case 'Message tag(s)':
            if ($(event.target).parents('.individual-tab-seach-con').length > 0) {} else {
                $('#input_values input').attr('id', "searchAfter").attr('placeholder', "Search  tag(s)").attr('onkeyup', 'searchTagConvHead(event,this)').focus();
                $('.TextDrop').text('Filter Tag(s)');
            }

            $('.taglisttag').show();
            tagOptionOpen();
            $('.headTagIconAppend').show();



            var leftWidth = $('.chat-head-name').width();
            var headWidth = $('#personalConnectActive').width();
            var _wid = headWidth - leftWidth;
            _wid = _wid - 100;
            // var ww = $('.src_total_msg').width();
            $('.taglisttag').width(_wid);
            //    searchDivOn();
            break;
        case 'Filter by tag(s)':
            if ($(event.target).parents('.individual-tab-seach-con').length > 0) {
                $('#search_different_tab').attr('placeholder', "Search  tag(s)").attr('onkeyup', 'searchTagConvHead(event,this)').focus();
                $('.TextDrop').text('Filter Tag(s)');
            } else {


            }

            $('.taglisttag').show();
            tagOptionOpen();
            $('.headTagIconAppend').show();



            var leftWidth = $('.chat-head-name').width();
            var headWidth = $('#personalConnectActive').width();
            var _wid = headWidth - leftWidth;
            _wid = _wid - 100;
            // var ww = $('.src_total_msg').width();
            $('.taglisttag').width(_wid);
            //    searchDivOn();
            break;

        case 'Audio(s)':
            hideSearchForHead();
            mediaFilePopup('mediaAudiosTab');
            //    $('#mediaAudiosTab').click();
            $('.seach_box_all').val(input_val);
            break;

        case 'File(s)':
            hideSearchForHead();

            mediaFilePopup('mediaFilesTab');
            //    $('#mediaFilesTab').click();
            $('.seach_box_all').val(input_val);
            break;

        case 'View By Tag(s)':
            hideSearchForHead();
            mediaFilePopup('mediaTagDivHead');

            //    $('#mediaTagDivHead').click();
            $('.seach_box_all').val(input_val);
            break;

        case 'Link(s)':
            hideSearchForHead();
            mediaFilePopup('mediaLinksTab');
            //    $('#mediaLinksTab').click();
            $('.seach_box_all').val(input_val);
            break;

        default:
            $('#input_values input').attr('id', "searchAfter").attr('placeholder', "Search message(s) in conversation").attr('onkeyup', 'searchThisThread(event,this)').focus().val('');


    }
})


function showSearchHead() {

    $('.chat-head-calling').hide();
    $('#input_values').show().focus();
    $('#headSearchClose').show();
    $('.src_total_msg').show();
    $('#input_values input').attr('id', "searchAfter").attr('placeholder', "Type and enter to search message(s) in conversation").attr('onkeyup', 'searchThisThread(event,this)').focus().val('');
    $('.search-close .searchCount').hide();
    var leftWidth = $('.chat-head-name').width();
    var headWidth = $('#personalConnectActive').width();
    var _wid = headWidth - leftWidth;
    _wid = _wid - 50;
    // console.log(leftWidth,headWidth, _wid);
    $('.src_total_msg').width(_wid);

}

$('.dropbtn').click(function() {


    if ($('.dropbtn').hasClass('rotate')) {
        $('.src_total_msg_content').hide();
        $('.dropbtn').removeClass('rotate');
    } else {
        $('.src_total_msg_content').show();
        $('.dropbtn').addClass('rotate');
    }
    $('.itm').show();
    if ($('#mediaFilePreview').is(':visible')) {
        if ($('#mediaTagDivHead').hasClass('active') || $('#mediaLinksTab').hasClass('active')) {
            $('.itm').hide();
        }
    }
})



$('body').on("click", ".taglisttag .remove", function() {
    // 	 console.log('asdfas0000')
    //    $('.taglisttag').hide();
    //    TextDropText()
    //     $('.conv_tagOptions').hide();
    // 	 $('#input_values input').attr('id', "searchAfter").attr('placeholder', "Type and enter to search message(s) in conversation").attr('onkeyup','searchThisThread(event,this)').focus().val('');
    // 	var activeLi =  $('#mediaFilePreview .media-tabs li.active').attr('id');
    // 	console.log(15859,activeLi)
    // 	$('#'+activeLi).removeClass('active');
    // 	$('#'+activeLi).click();


})

$('.taglisttag .headTagIconAppend').click(function(event) {
    _tag_goBtn();
    if ($(event.target).parents('.individual-tab-seach-con').length == 0) {

        $('#input_values input').focus()
    } else {
        $('#search_different_tab').focus();
    }
    $('.taglisttag').hide();
    TextDropText()



})

// $('.chat-head-name').change(function(){
// 	hideSearchForHead();
// 	showFreeliToaster(false);
// })
function hideSearchForHead() {
    showFreeliToaster(false);
    $('.taglisttag').hide();
    TextDropText()
    $('.conv_tagOptions').hide();
    $('.src_total_msg_content').hide();
    $('#input_values input').val('');
    $('.dropbtn').removeClass('rotate');
    $('#headSearchClose').hide();
    $('.src_total_msg').hide();
    $('#searchBefore').show();
    $('.msgs-form-users .user-msg p').unhighlight();
    $('.msgs-form-users').show();
    $('.chat-head-calling').show();
    $('.classForChecklist').hide();
    $('.msg-separetor').show();
    $('#totalLength').text('0');
    $('#viewlength').text('0');
    // if(lastConvHtml != null){
    // 	if($('#roomIdDiv').attr('data-roomid') == lastConvHtml.conversation_id){
    // 		$('#msg-container').html("");
    // 		$('#msg-container').attr('data-search',false)
    // 		// $('#msg-container').html(lastConvHtml.html);
    // 		onlydrawMsg(conversation_id);
    // 	}
    // }
    if ($('#msg-container').attr('data-search') == 'true') {

        // $('#msg-container').html(lastConvHtml.html);
        onlydrawMsg(conversation_id);
    }
    $('#msg-container').attr('data-search', false)
    $('.warningSearch').remove();
    if ($('#checkListCounter').attr('data-val') != '0') {
        $('.headFiles.classForChecklist').show();
    }
}



var lastConvHtml = null;

function searchThisThread(e, elm) {
    e.preventDefault();
    e.stopImmediatePropagation();

    var value = $(elm).val().trim();
    var convId = $('#roomIdDiv').attr('data-roomid');
    if (value !== '') {
        if (e.keyCode == 13) {
            var tagNameArray = value.split(',');
            // console.log(11812,tagNameArray);
            var tagNameFind = [];

            $.each(allUserTagList, function(k, v) {
                if (v != undefined) {
                    if (tagNameArray.indexOf(v.title) > -1) {
                        tagNameFind.push(v.tag_id);
                    }
                }
            })
            e.preventDefault();
            $("#onscrollloading").show();
            socket.emit('searchMsgBody', { conversation_id: convId, value: value, tag_data: tagNameFind, filter_type: $('#input_values').find('input').attr('id') }, function(res) {
                // console.log(res.msg);
                data_search = false;

                if (res.msg == 'success') {
                    $('.warningSearch').remove();
                    var allMsg = _.orderBy(res.data, ["created_at"], ["asc"]);
                    $('#top-date').text('');
                    if (lastConvHtml !== null) {
                        if ($('#roomIdDiv').attr('data-roomid') !== lastConvHtml.conversation_id) {
                            lastConvHtml = {
                                conversation_id: convId,
                                html: $('#msg-container[data-search="false"]').html()
                            }
                        }
                    } else {
                        lastConvHtml = {
                            conversation_id: convId,
                            html: $('#msg-container[data-search="false"]').html()
                        }
                    }

                    $('#msg-container').attr('data-search', true);
                    $('#msg-container').html('');
                    $.each(allMsg, function(k, v) {
                        if (checkdrawmsg(v, adminArra, activeConvPrivacy)) {
                            if (v.msg_type == 'checklist') {
                                var cl = [];
                                $.each(res.checklist, function(ka, va) {
                                    if (va.msg_id == v.msg_id) {
                                        cl.push(va);
                                    }
                                });
                                v['checklist'] = cl;
                                draw_msg(v, true);
                            } else {
                                draw_msg(v, true);
                            }
                        }
                    });
                    viewchecklisttype = 'count';
                    countAndGetchecklist();

                    $(".msgs-form-users .user-msg").each(function() {
                        if ($(this).text().toLowerCase().search($('#input_values').find('input').val().toLowerCase()) > -1) {
                            $(this).parents('.msgs-form-users').show();
                        } else {
                            $(this).parents('.msgs-form-users').hide();
                        }
                    });
                    if ($(".msgs-form-users .user-msg:visible").length == 0) {
                        $('.msg-separetor').hide();
                    } else {
                        $('.msg-separetor').show();
                    }

                    $('.msgs-form-users .user-msg ').unhighlight();
                    $('.msgs-form-users .user-msg').highlight($('#input_values').find('input').val());


                    var totalVal = $('#groupChatContainer .highlight').length;
                    $('#totalLength').text(totalVal);
                    if (totalVal > 0) {
                        $('#viewlength').text('1');
                    } else {
                        $('#viewlength').text('0');
                    }
                    $('#groupChatContainer .highlight:first').addClass('searchSelected');
                    if ($('#input_values').find('input').val().length > 0) {
                        $('.search-close .searchCount').show();
                        $('.src_total_msg_content').hide();
                        $('.dropbtn').removeClass('rotate');

                    } else {
                        $('.search-close .searchCount').hide();
                    }

                    if (res.data.length == 0) {
                        // var html = '<div class="warningSearch"> <div class="warningSContainer"><div class="msgWarning">No search result found.</div></div></div>';
                        $('#msg-container').append('');
                    }
                    data_search = true;
                    inviewfun();
                }
                // scrollToBottom('.chat-page .os-viewport',0);
                $(".chat-page .os-viewport").animate({ scrollTop: 0 });
                $("#onscrollloading").hide();


            });
        }
        triggerFilterTag(value);
    }
    // else{
    // 	hideSearchForHead();
    // }
    if (e.keyCode == 27) {
        hideSearchForHead();
    }
    // if (e.keyCode == 8) {
    //     if(value.length == 0){
    //         hideSearchForHead();
    //     }
    // }

}
data_search = false;

function searchFlagMsgs(e) {
    var val = $(e.target).val().toLowerCase();
    if (e.keyCode == 13) {
        $(".msgs-form-users .user-msg").each(function() {
            if ($(this).text().toLowerCase().search(val) > -1) {
                $(this).parents('.msgs-form-users').show();
            } else {
                $(this).parents('.msgs-form-users').hide();
            }
        });
        if ($(".msgs-form-users .user-msg:visible").length == 0) {
            $('.msg-separetor').hide();
            $('#flagMsgContainer').attr('data-search', true);
        } else {
            $('.msg-separetor').show();
        }

        $('.msgs-form-users .user-msg ').unhighlight();
        $('.msgs-form-users .user-msg').highlight(val);


        var totalVal = $('#flagMsgContainer .highlight').length;
        $('#totalHighlight').text(totalVal);
        if (totalVal > 0) {
            $('#currentHighlight').text('1');
        } else {
            $('#currentHighlight').text('0');
        }
        $('#flagMsgContainer .highlight:first').addClass('searchSelected');
        if (val.length > 0) {
            $('.searchPartsContainer .searchCount').css('display', 'flex');
            // $('.src_total_msg_content').hide();
            // $('.dropbtn').removeClass('rotate');
        } else {
            $('.searchPartsContainer .searchCount').hide();
        }

        checkMsgContainer(val);
    }
    if(val.length > 0){
        $(e.target).addClass('notEmpty');
    }else {
        $(e.target).removeClass('notEmpty');
    }
    if (e.keyCode == 8) {
        if (val.length == 0) {
            allSearchInputClear();
        }
    }
}

function checkMsgContainer(val) {
    if (val.length > 0) {
        $.each($('.convMsgGroup'), function(k, v) {
            if ($(v).find('.msgs-form-users:visible').length > 0) {
                $(v).show();
            } else {
                $(v).hide();
            }
            // console.log($(v).find('.msgs-form-users:visible').length);
        });
    } else {
        $('.convMsgGroup').show();
    }
}

function allSearchInputClear() {
    $('.allSearchInput').val('');
    $('.msgs-form-users .user-msg ').unhighlight();
    $('.msgs-form-users').show();
    $('.convMsgGroup').show();
    $('.searchPartsContainer .searchCount').hide();
    $('#flagMsgContainer').attr('data-search', false);
    $('.allSearchInput').removeClass('notEmpty');
}

///keyboard up arrow key and down arrow key
var getActiveSelectedItem = function(selector) {
    var selectedItem;
    var ind = $(selector).each(function(i) {
        if ($(this).hasClass('searchSelected'))
            selectedItem = i;
    })
    return selectedItem;
}

function nextSearch() {
    if ($('#flagPanelContainer').is(':visible')) {
        var activeItem = getActiveSelectedItem('#flagMsgContainer .highlight');
    } else {
        var activeItem = getActiveSelectedItem('#groupChatContainer .highlight');
    }
    var newIndex = activeItem + 1;
    if ($('#flagPanelContainer').is(':visible')) {
        var nextItem = $('#flagMsgContainer .highlight:eq(' + newIndex + ')');
        var scrollNewTop = $('#flagMsgContainer').height() - $('#flagMsgContainer').scrollTop()

    } else {
        var nextItem = $('#groupChatContainer .highlight:eq(' + newIndex + ')');
        var scrollNewTop = $('.chat-page .os-viewport').height() - $('.chat-page .os-viewport').scrollTop()
    }


    if (nextItem.length !== 0) {
        if ($('#flagPanelContainer').is(':visible')) {
            $('#flagMsgContainer .highlight.searchSelected').removeClass('searchSelected');
        } else {
            $('#groupChatContainer .highlight.searchSelected').removeClass('searchSelected');
        }
        nextItem.addClass('searchSelected');
        if ($('#flagPanelContainer').is(':visible')) {
            $('#currentHighlight').text(Number($('#currentHighlight').text()) + 1);
        } else {
            $('#viewlength').text(Number($('#viewlength').text()) + 1);
        }
        var scrollHeight = $('.searchSelected').closest('.msgs-form-users').offset().top;
        $('.chat-page .os-viewport').scrollTop(scrollHeight - scrollNewTop);
        $('#flagMsgContainer').scrollTop(scrollHeight - scrollNewTop);
    } else {

    }
    if ($('#flagPanelContainer').is(':visible')) {
        var selectorElm = $('#flagMsgContainer .highlight.searchSelected').parents('.msgs-form-users').find('.showMoreEditedmsg');
    } else {
        var selectorElm = $('#groupChatContainer .highlight.searchSelected').parents('.msgs-form-users').find('.showMoreEditedmsg');
    }


    if (selectorElm.length > 0) {
        $.each(selectorElm, function(k, v) {
            if (!$(v).hasClass('active')) {
                $(v).trigger('click');
            }
        })
    }
}

function prevSearch() {
    if ($('#flagPanelContainer').is(':visible')) {
        var activeItem = getActiveSelectedItem('#flagMsgContainer .highlight');
    } else {
        var activeItem = getActiveSelectedItem('#groupChatContainer .highlight');
    }
    var newIndex = activeItem - 1;
    if (newIndex < 0) {

    } else {
        if ($('#flagPanelContainer').is(':visible')) {
            var nextItem = $('#flagMsgContainer .highlight:eq(' + newIndex + ')');
            var scrollNewTop = $('.chat-page .os-viewport').height() - $('.chat-page .os-viewport').scrollTop()
        } else {
            var nextItem = $('#groupChatContainer .highlight:eq(' + newIndex + ')');
            var scrollNewTop = $('#flagMsgContainer').height() - $('#flagMsgContainer').scrollTop();
        }
        if (nextItem.length !== 0) {
            if ($('#flagPanelContainer').is(':visible')) {
                $('#flagMsgContainer .highlight').removeClass('searchSelected');
                nextItem.addClass('searchSelected');
                $('#currentHighlight').text(Number($('#currentHighlight').text()) - 1);
                var scrollHeight = $('#groupChatContainer .highlight:eq(' + newIndex + ')').offset().top;
            } else {
                $('#groupChatContainer .highlight').removeClass('searchSelected');
                nextItem.addClass('searchSelected');
                $('#viewlength').text(Number($('#viewlength').text()) - 1);
                var scrollHeight = $('#flagMsgContainer .highlight:eq(' + newIndex + ')').offset().top;
            }

            $('.chat-page .os-viewport').scrollTop(scrollHeight - scrollNewTop);
            $('#flagMsgContainer').scrollTop(scrollHeight - scrollNewTop);
        } else {

        }
    }
    if ($('#flagPanelContainer').is(':visible')) {
        var selectorElm = $('#flagMsgContainer .highlight.searchSelected').parents('.msgs-form-users').find('.showMoreEditedmsg');
    } else {
        var selectorElm = $('#groupChatContainer .highlight.searchSelected').parents('.msgs-form-users').find('.showMoreEditedmsg');
    }
    if (selectorElm.length > 0) {
        $.each(selectorElm, function(k, v) {
            if (!$(v).hasClass('active')) {
                $(v).trigger('click');
            }
        })
    }
}

function viewImgHov(ele, type) {
    // threadReplyPopUp
    // if($('#threadReplyPopUp').is(':visible')){
    // 	$('#mediaFilePreview').attr('thread-view',true);
    // 	$('#threadReplyPopUp').hide();
    // }else{
    // 	$('#mediaFilePreview').attr('thread-view',false);
    // }
    $('#zoomer').val(1);
    // $('#mediaFilePreview .currentimg').css('transform','unset')
    if (type == 'message') {
        $(ele).parents('.msg_per_img_div').find('.img_attach').trigger('click');
        if ($(ele).parents('.msg_per_img_div').length == 0) {
            $(ele).parents('.fil_attach.attach-file').find('.file-name').trigger('click');
        }
    } else if (type == 'mediaImg') {
        $(ele).parents('.all-images').find('.img-name').trigger('click');
    }
    call_panzoom();
}

$('#createConvTag').on('blur keyup', function(e) {
    if ((e.which >= 65 && e.which <= 90) || e.which == 189 || e.which == 13) {
        var str = $('#createConvTag').val().trim();

        str = str.replace(/<\/?[^>]+(>|$)/g, "");

        if (str != "") {

            $(".taggedList li").each(function() {
                if ($(this).text().toLowerCase().search(str.toLowerCase()) > -1) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });

            $('.taggedList li').unhighlight();
            $('.taggedList li').highlight(str);

            var code = e.keyCode || e.which;

            var roomid = $("#createConvTag").attr('data-roomid');

            var tagTitle = $("#createConvTag").val();
            if (code == 13) { //Enter keycode = 13
                e.preventDefault();
                if (tagTitle != "") {
                    if (roomid == "") {
                        // toastr["warning"]("You have to select a room or personal conversation", "Warning");

                        $('#warningsPopup').css('display', 'flex');
                        $('#warningsPopup .warningMsg').text('You have to select a Room');
                        $(this).val("");
                    } else {
                        var tagArr = tagTitle.split(',');
                        var sendTagarr = [];
                        var pTag = [];

                        $.each(tagArr, function(k, v) {

                            if (tagListTitle.indexOf(v.toLowerCase()) === -1) {
                                if (alltags.indexOf(v.toLowerCase()) === -1) {

                                    sendTagarr.push(v.trim().toLowerCase().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, ''));
                                    tagListForFileAttach.push(v.toLowerCase());
                                    if (hiddenTagName.indexOf(v.toLowerCase()) == -1) {
                                        // console.log(6278,v)
                                        tagListTitle.push(v.toLowerCase());
                                    }
                                    alltags.push(v.toLowerCase());
                                    alltagsFull.push(v);

                                } else {

                                    $('.taggedList li').each(function(tagk, tagv) {
                                        if (v.toLowerCase() == $(tagv).text().toLowerCase()) {
                                            $(tagv).trigger('click');
                                            $("#tagItemList").text(tagListTitle.join(','));
                                        }
                                    });
                                }
                            }
                        });

                        $(".taggedList li").each(function() {
                            $(this).show();
                        });

                        $('.taggedList li').unhighlight();
                        if (sendTagarr.length > 0) {
                            socket.emit('saveTag', {
                                created_by: user_id,
                                conversation_id: roomid,
                                tagTitle: sendTagarr,
                                messgids: attachFileList,
                                msgIdsFtag: msgIdsFtag,
                                tagType: "CONNECT"
                            }, (callBack) => {
                                if (callBack.status) {
                                    $.each(callBack.tags, function(k, v) {
                                        // console.log(6320,v,callBack.roottags[k],sendTagarr[k],roomid);
                                        var design = '<li onclick="removeLevel(\'' + v + '\',\'' + roomid + '\',\'' + callBack.roottags[k] + '\')">' + sendTagarr[k] + '<span class="tagcheck" id="level' + v + '" ></span></li>';
                                        tagLsitDetail.push({
                                            'cnvtagid': v,
                                            'tagid': callBack.roottags[k],
                                            'tagTitle': sendTagarr[k],
                                            'roomid': roomid,
                                        });
                                        $('#taggedList').append(design);

                                        var tag_itemdesign = '<div class="added-channel-members">';
                                        tag_itemdesign += '	<input id="tag_' + callBack.roottags[k] + '" data-tagid="' + callBack.roottags[k] + '" data-tagtitle="' + sendTagarr[k] + '" class="checkToDo" type="checkbox">';
                                        tag_itemdesign += '<label for="tag_' + callBack.roottags[k] + '">' + sendTagarr[k] + '</label>';
                                        tag_itemdesign += '</div>';

                                        $("#taggedItem").append(tag_itemdesign);

                                        my_tag_list[v] = sendTagarr[k];
                                        my_tag_id.push(v);
                                        var localData = {
                                            created_at: "",
                                            tag_id: callBack.roottags[k],
                                            tagged_by: user_id,
                                            title: sendTagarr[k],
                                            type: "CONNECT"

                                        }
                                        update_local_conv_tag('newTag', localData, v);
                                    });

                                    all_action_for_selected_member();

                                    if (tagListTitle.length > 0) {
                                        $("#taggedIMG").attr('src', '/images/basicAssets/custom_tagged.svg');
                                    }

                                    if (callBack.mtagsid != undefined) {
                                        if (callBack.mtagsid.length > 0) {
                                            $.each(callBack.mtagsid, function(k, v) {
                                                if (msgIdsFtag.indexOf(v) === -1) {
                                                    msgIdsFtag.push(v);
                                                }

                                            });
                                        }
                                    }
                                    $("#createConvTag").val("");
                                    $("#createConvTag").focus();
                                    $("#tagItemList").text(tagListTitle.join(','));

                                    $(".taggedList li").each(function() {
                                        $(this).show();
                                    });

                                    $('.taggedList li').unhighlight();

                                    $.each(attachFileList, function(k, v) {
                                        if (hiddentag.indexOf(sendTagarr[0].toLowerCase()) == -1) {
                                            $("#filesTag" + v).append('<span class="filesTag">' + sendTagarr[0].toLowerCase() + '</span>');
                                            $("#filesTagHolder" + v).show();
                                        }

                                    });


                                } else {
                                    if (callBack.err == 'at') {
                                        // toastr["warning"]("\"" + tagTitle + "\" already tagged", "Warning");

                                        $('#warningsPopup').css('display', 'flex');
                                        $('#warningsPopup .warningMsg').text("\"" + tagTitle + "\" already tagged");
                                    }
                                }
                            });
                        }
                    }
                } else {
                    $("#createConvTag").focus();
                    $("#createConvTagPop").focus();
                }
            }


        } else {
            $(".taggedList li").each(function() {
                $(this).show();
            });

            $('#createConvTag').val($('#createConvTag').val().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, ''));
        }
    } else {


        var str = $('#createConvTag').val().trim();
        str = str.replace(/<\/?[^>]+(>|$)/g, "");

        if (str == "") {
            $(".taggedList li").each(function() {
                $(this).show();
                $(this).unhighlight();
            });
        }

        if (e.which == 8) {
            $(".taggedList li").each(function() {
                if ($(this).text().toLowerCase().search(str.toLowerCase()) > -1) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });

            $('.taggedList li').unhighlight();
            $('.taggedList li').highlight(str);
        }

        if (e.which == 32) {
            $('#createConvTag').val($('#createConvTag').val().replace(" ", ""));
        } else {
            $('#createConvTag').val($('#createConvTag').val().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, ''));
        }

    }
});




function convStr(key) {
    var str = $(key).text();
    str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
    str = convert(str);
    str = str.replace(/&nbsp;/gi, '').trim();
    str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');
    return str;
}



/////////////////////////////////******   for msg checklist   ******///////////////////////////////

function findTeamChecklistData(i, t) {
    return new Promise((resolve, reject) => {
        socket.emit('findTeamChecklistData', { conversation_id: i, title: t }, function(res) {
            resolve(res);
        })
    });
}

async function addMsgCheckList(type = 'normal') {
    // //debugger
    var FixedTitle = '';
    // console.log(type);
    if (type == 'team_tasks') {
        if ($('#groupChatContainer').hasClass('personal_conv')) {
            FixedTitle = 'My Tasks';
        } else {
            FixedTitle = 'Team Tasks';
        }
        var findHasTeamChecklist = await findTeamChecklistData(conversation_id, FixedTitle);
        // console.log(15686, findHasTeamChecklist);
        if (findHasTeamChecklist.status) {
            if ($('#msgThread_' + findHasTeamChecklist.msg.msg_id).is(':visible')) {
                // console.log(111, findHasTeamChecklist)
                $('#msgThread_' + findHasTeamChecklist.msg.msg_id).find('.msgCheckListContainer').click();
            } else {
                // console.log(222, findHasTeamChecklist)
                $('#msg-container').prepend(draw_msg(findHasTeamChecklist.msg, false));
                $('#msgThread_' + findHasTeamChecklist.msg.msg_id).find('.msgCheckListContainer').click();
                $('#msgThread_' + findHasTeamChecklist.msg.msg_id).addClass('removeAbleCheklist');

            }
            return false;
        } else {
            // if (findHasTeamChecklist.msg.type != undefined && findHasTeamChecklist.msg.type == 'deleted') {
            // console.log(findHasTeamChecklist);
            if ($('.msgs-form-users.team_task_msg').is(':visible')) {
                $('#msgThread_' + findHasTeamChecklist.msg.msg_id).remove();
            }
            // }
        }
    }

    var str = convStr('#msg');
    if ($('#msg').attr('data-checklist') == 'false') {
        $('#msg_pvt_btn').hide();
        $('#msg').html('');
        var checkHtml = '';
        checkHtml += '<div id="msgCheckItemContainer" class="msgCheckListContainer" >';
        if (str !== '') {
            checkHtml += '<p id="checkListPlainText1" class="checkListPlainText title _text_large" contenteditable="' + (FixedTitle == '' ? true : false) + '" onkeydown="checkListPlainText(event)" onblur="plainCheckTextBlur(event)" placeholder="Checklist Title..." onkeyup="msgPlainText(event)">' + (FixedTitle == '' ? str : FixedTitle) + '</p><span class="settingsIco" onclick="checklistDueDate(\'settings\',event)" msg-id=""></span>';
        } else {
            checkHtml += '<p id="checkListPlainText1" class="checkListPlainText title _text_large" contenteditable="' + (FixedTitle == '' ? true : false) + '" onkeydown="checkListPlainText(event)" onblur="plainCheckTextBlur(event)" placeholder="Checklist Title..." onkeyup="msgPlainText(event)">' + FixedTitle + '</p><span class="settingsIco" onclick="checklistDueDate(\'settings\',event)" msg-id=""></span>';
        }
        checkHtml += '<div class="buttonAction custom_btn_send_ck" onclick="checklistSubmit()" data-balloon="Submit or Ctrl + Enter " data-balloon-pos="up" contenteditable="false"><span>Submit</span></div>';
        checkHtml += '<div class="buttonAction cancel" onclick="addMsgCheckList()" data-balloon="Esc to cancel " data-balloon-pos="left" contenteditable="false"><span>Cancel</span></div>';
        checkHtml += '<div class="checkListItem" checklist_status="0" review_status="0">';
        checkHtml += '<div class="checkBox" onclick="selectCheckItem(this)" ></div>';
        checkHtml += '<div  id="checkBoxTitle1" class="checkBoxTitle" onpaste="onpasteFun(event)" contenteditable="true" placeholder="Add a new task" onkeydown="msgCheckListTitle(event)" onblur="msgChecklistBlur(event)" creator_id="' + user_id + '"></div>';
        checkHtml += '<div class="dueDateIcon" start-date="" onclick="checklistDueDate(this,event)"></div>';
        checkHtml += '</div>';
        checkHtml += '<div class="checkListItem" checklist_status="0" review_status="0">';
        checkHtml += '<div class="checkBox" onclick="selectCheckItem(this)"></div>';
        checkHtml += '<div  id="checkBoxTitle2" class="checkBoxTitle" onpaste="onpasteFun(event)" contenteditable="true" placeholder="Add a new task" onkeydown="msgCheckListTitle(event)" onblur="msgChecklistBlur(event)" creator_id="' + user_id + '"></div>';
        checkHtml += '<div class="dueDateIcon" start-date="" onclick="checklistDueDate(this,event)"></div>';
        checkHtml += '</div>';
        checkHtml += '<div class="checkListItem" checklist_status="0" review_status="0">';
        checkHtml += '<div class="checkBox" onclick="selectCheckItem(this)"></div>';
        checkHtml += '<div  id="checkBoxTitle3" class="checkBoxTitle" onpaste="onpasteFun(event)" contenteditable="true" placeholder="Add a new task" onkeydown="msgCheckListTitle(event)" onblur="msgChecklistBlur(event)" creator_id="' + user_id + '"></div>';
        checkHtml += '<div class="dueDateIcon" start-date="" onclick="checklistDueDate(this,event)"></div>';
        checkHtml += '</div>';
        checkHtml += '<div class="checkListItem" checklist_status="0" review_status="0">';
        checkHtml += '<div class="checkBox" onclick="selectCheckItem(this)"></div>';
        checkHtml += '<div  id="checkBoxTitle4" class="checkBoxTitle" onpaste="onpasteFun(event)" contenteditable="true" placeholder="Add a new task" onkeydown="msgCheckListTitle(event)" onblur="msgChecklistBlur(event)" creator_id="' + user_id + '"></div>';
        checkHtml += '<div class="dueDateIcon" start-date="" onclick="checklistDueDate(this,event)"></div>';
        checkHtml += '</div>';
        checkHtml += '<div class="checkListItem" checklist_status="0" review_status="0">';
        checkHtml += '<div class="checkBox" onclick="selectCheckItem(this)"></div>';
        checkHtml += '<div  id="checkBoxTitle5" class="checkBoxTitle" onpaste="onpasteFun(event)" contenteditable="true" placeholder="Add a new task" onkeydown="msgCheckListTitle(event)" onblur="msgChecklistBlur(event)" creator_id="' + user_id + '"></div>';
        checkHtml += '<div class="dueDateIcon" start-date="" onclick="checklistDueDate(this,event)"></div>';
        checkHtml += '</div>';
        checkHtml += '<div class="updatebtn">';
        checkHtml += '<div class="update_btn" onclick="updateCheckList(event,this)">Update</div>';
        checkHtml += '<div class="cancel_btn" onclick="cancelupChecklist(event,this)">Cancel</div>';
        checkHtml += '</div>';
        checkHtml += '</div>';


        $('#msg').attr('data-checklist', 'true');
        $('#msg').attr('contenteditable', false);
        $('#msgCheckListBtn').addClass('active');
        $('#msg').append(checkHtml);
        $('#msgCustomEditOption div').removeClass('active');
        $('#msgCustomEditOption .activeCheckbox').addClass('active');

        if ($('#checkListPlainText1').text() == '') {
            $('#checkListPlainText1').focus();
        } else {
            $('#msg .checkBoxTitle:first').focus();
        }
    } else {
        checklistMsgOption({ type: 'remove' });
        localStorage.removeItem('draft_checklist');
        draft_checklist = {};
        if ($('.sideActive.selected').attr('data-conversationtype') == 'group') $('#msg_pvt_btn').show();;
    }
}

function assign_accept_btn(elm) {
    // conversation_type
    var row = $(elm).closest('.checkListItem');
    var msg_id = $(row).attr('msg_id');
    var checklist_id = $(row).attr('checklist-id');
    if ($('#groupChatContainer').hasClass('task_assignment')) {
        if ($('.msgs-form-users.editable_checklistMsg').is(':visible')) {
            conversation_id = $('.msgs-form-users.editable_checklistMsg').attr('conv-id');
            conversation_type = get_conversation_obj(conversation_id).conversation_type;
        }
    }

    if (checklist_id != '' && checklist_id != undefined) {

        socket.emit('getOneChecklistData', { checklist_id: checklist_id, msg_id: msg_id }, function(res) {
            // console.log(res.data);
            var updateData = {
                msg_id: msg_id,
                checklist_id: checklist_id,
                assign_status: "2",
                assign_decline_note: null,
                last_update_by: user_id,
                last_updated_at: new Date().getTime(),
                type: 'assign_accept'
            }
            var stringBody = {
                conversation_id: conversation_id,
                conversation_type: conversation_type,
                msg_id: msg_id,
                checklist_title: $(row).closest('#msgCheckItemContainer').find('.checkListPlainText').text(),
                checklist_id: checklist_id,
                item_title: $(row).find('.checkBoxTitle').text(),
                request_by: user_id
            }
            var noti_data = {
                type: 'checklist_changes',
                title: 'ttlAccepted',
                body: JSON.stringify(stringBody),
                created_at: new Date(),
                created_by: user_id,
                seen_users: [res.data.assign_status],
                receive_users: [res.data.assign_status]
            }
            if (conversation_id !== user_id) {
                insertNotiFun(noti_data);
            }

            socket.emit('manage_checklist', updateData, function(res) {
                need_reprint = true;
                flash_msg_updated_fun(msg_id, 'Checklist updated');
                // toastr["success"]("Checklist updated");
                flash_msg_item_bottom(checklist_id);
                $('.ttl_request' + checklist_id).remove();
                row.attr('msg-pending', false);
                row.find('.dueDateIcon').removeClass('lock_for_user');
                if (conversation_type == 'personal') {
                    row.addClass('waiting_3');
                    // var html = '<div class="ttl_requestTime ttl_request'+checklist_id+'"><span class="_separetor">|</span> <span class="success_btn" data-id="'+checklist_id+'"><span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span></span></div>';
                    var html = '<div class="ttl_requestTime ttl_request' + checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + checklist_id + '"><span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span> <span class="short_cart_btn" data-type="Mark complete" onclick="open_duedate_box(this)">Mark as completed</span></span></div>';
                    $(row).find('.assign_info').append(html);
                } else {
                    row.removeClass('waiting_3');
                }

                $('.perchecklist_' + checklist_id).addClass('modified');
                var msg_time = moment().format();
                $('.perchecklist_' + checklist_id).attr('data-lastmodified', msg_time);

                $('.perchecklist_' + checklist_id).removeClass('response_req');
                taskItemCounter(msg_id);

            });
        });
    }
}

function open_duedate_box(elm) {
    var type = $(elm).attr('data-type');
    $(".hayven_Modal_Container").removeClass("decline_open").removeClass("request_open").removeClass("decline_review_open").removeClass('request_review_open');
    $('#marked_btn_sec').hide();
    if (type == "Decline") {
        $(".hayven_Modal_Container").addClass("decline_open");
        $(".decline_btn_sec").attr('disabled', 'disabled');
    } else if (type == "Request") {
        $(".hayven_Modal_Container").addClass("request_open");
    } else if (type == "decline_review") {
        $(".hayven_Modal_Container").addClass("decline_review_open");
        $('.buttonAction').removeAttr('disabled');
        if ($(elm).attr('action') == 'declined' && $(elm).attr('action') != undefined) {
            $('#dueDatePickerChecklist').attr('action', 'declined');
        }
    } else if (type == "request_review") {
        $(".hayven_Modal_Container").addClass("request_review_open");
        $('.buttonAction').removeAttr('disabled');
    }

    if (type == "Mark complete") {
        $(elm).closest(".checkListItem").find(".checkBox").trigger("click");
    } else {
        // open the popup box
        $(elm).closest(".checkListItem").find(".dueDateIcon").trigger("click");
    }
}

function decline_sec_fun(type, data = null) {
    $('.request_note_sec').hide();
    $('#requestNewDateSec').show();
    $('.decline_note_sec').show();
    $('#declineNote').val("");
    if (data !== null) {
        $('#declineNote').val(data).attr('disabled', 'disabled');
    }
    if (type == 'edit') {
        $('#declineNote').removeAttr('disabled');
    }
}

function requesttlBtn(elm) {
    need_reprint = true;
    if ($('#groupChatContainer').hasClass('task_assignment')) {
        if ($('.msgs-form-users.editable_checklistMsg').is(':visible')) {
            conversation_id = $('.msgs-form-users.editable_checklistMsg').attr('conv-id');
            conversation_type = get_conversation_obj(conversation_id).conversation_type;
        }
    }
    if ($(elm).text() == 'Request') {
        var rec_id = $('#dueDatePickerChecklist').attr('data-reciver');
        var receive_id = '';
        if (rec_id != 1 && rec_id != 2 && rec_id != undefined) {
            receive_id = rec_id;
        }
        // socket.emit('getOneChecklistData',{checklist_id:checklist_id,msg_id:msg_id},function(res){
        // 	var data = res.data;
        var currentTime = new Date().getTime();
        var req_note = $('#requestNote').val().trim() + '@' + user_id + '@' + currentTime;
        var data = {
            msg_id: checklistManageId_msg,
            checklist_id: checklistManageId,
            request_ttl_date: (moment().unix() * 1000),
            request_ttl_message: req_note,
            request_ttl_time: (moment($('#TaskDatePicker').val()).unix() * 1000),
            Request_ttl_by: user_id,
            assignedby: receive_id,
            last_update_by: user_id,
            last_updated_at: currentTime,
            type: 'request'
        }
        var stringBody = {
            conversation_id: conversation_id,
            conversation_type: conversation_type,
            msg_id: data.msg_id,
            checklist_title: $('.msg_id_' + checklistManageId_msg).find('.checkListPlainText').text(),
            checklist_id: checklistManageId,
            privacy: privacy,
            request_ttl_message: $('#requestNote').val().trim(),
            request_ttl_time: (moment($('#TaskDatePicker').val()).unix() * 1000),
            item_title: $('.perchecklist_' + checklistManageId).find('.checkBoxTitle').text(),
            request_by: user_id
        }
        var noti_data = {
            type: 'checklist_changes',
            title: 'ttlRequest',
            body: JSON.stringify(stringBody),
            created_at: new Date(),
            created_by: user_id,
            seen_users: [receive_id],
            receive_users: [receive_id]
        }
        if (conversation_id !== user_id) {
            insertNotiFun(noti_data);
        }
        closeModal('dueDatePickerChecklist');
        socket.emit('manage_checklist', data, function(res) {
            $('.ttl_request' + data.checklist_id).remove();
            var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + data.checklist_id + '"><span class="short_cart_btn" data-type="cancel_request" msg-id="' + data.msg_id + '" checklist-id="' + data.checklist_id + '" data-reciver="' + receive_id + '" onclick="requesttlBtn(this)">Cancel Extension request</span></span></div>';
            $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
            $(elm).addClass('inactive').text('Pending');
            $('.perchecklist_' + data.checklist_id).addClass('modified');
            var msg_time = moment().format();
            $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);

            $('#dueDatePickerChecklist .hayven_Modal_Container').removeClass('request_open');
            $('.perchecklist_' + data.checklist_id).removeClass('response_req').removeClass('dateOver_due');
            taskItemCounter(data.msg_id);
            flash_msg_updated_fun(data.msg_id, 'Checklist updated');
            // toastr["success"]("Checklist updated");
            flash_msg_item_bottom(data.checklist_id);
        });
        // });
    } else if ($(elm).text() == 'Approve') {
        // request_ttl_approved_date:(moment($('#TaskDatePicker').val(),"YYYY-MM-DD HH:mm").add(6, 'hours').unix() * 1000),
        var currentTime = new Date().getTime();
        var old_user = $('#requestNote').attr('data-name').trim();
        var old_time = $('#requestNote').attr('data-time').trim();
        var req_note = ($('#requestNote').val().trim() == $('#requestNote').attr('data-val').trim() ? $('#requestNote').val().trim() + '@' + old_user + '@' + old_time : $('#requestNote').val().trim() + '@' + user_id + '@' + currentTime);

        var data = {
            msg_id: checklistManageId_msg,
            checklist_id: checklistManageId,
            request_ttl_date: null,
            request_ttl_message: req_note,
            request_ttl_time: null,
            Request_ttl_by: null,
            request_repetition: checklist_request_repetition + 1,
            request_ttl_approved_by: user_id,
            request_ttl_approved_date: (moment($('#TaskDatePicker').val()).add(6, 'hours').unix() * 1000),
            approved_date: (moment($('#TaskDatePicker').val()).unix() * 1000),
            last_update_by: user_id,
            last_updated_at: currentTime,
            type: 'accept'
        }

        var stringBody = {
            conversation_id: conversation_id,
            conversation_type: conversation_type,
            msg_id: data.msg_id,
            checklist_title: $('.msg_id_' + checklistManageId_msg).find('.checkListPlainText').text(),
            checklist_id: checklistManageId,
            request_ttl_message: $('#requestNote').val().trim(),
            request_ttl_approved_date: (moment($('#TaskDatePicker').val(), "YYYY-MM-DD HH:mm").unix() * 1000),
            item_title: $('.perchecklist_' + checklistManageId).find('.checkBoxTitle').text(),
            request_by: user_id
        }
        var noti_data = {
            type: 'checklist_changes',
            title: 'ttlApprove',
            body: JSON.stringify(stringBody),
            created_at: new Date(),
            created_by: user_id,
            seen_users: [checklistManageId_Reqttl],
            receive_users: [checklistManageId_Reqttl]
        }
        if (conversation_id !== user_id) {
            insertNotiFun(noti_data);
        }
        closeModal('dueDatePickerChecklist');
        socket.emit('manage_checklist', data, function(res) {
            flash_msg_updated_fun(data.msg_id, 'Checklist updated');
            // toastr["success"]("Checklist updated");
            flash_msg_item_bottom(data.checklist_id);
            $(elm).addClass('inactive').text('Accepted');
            $('.perchecklist_' + checklistManageId).find('.dueDateIcon').removeClass('lock_for_user');
            $('.perchecklist_' + checklistManageId).find('.dueDateIcon').show();
            $('.perchecklist_' + checklistManageId).find('.item_del').show();
            $('.ttl_request' + checklistManageId).remove();

            $('.perchecklist_' + data.checklist_id).addClass('modified');
            var msg_time = moment().format();
            $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);

            $('.perchecklist_' + data.checklist_id).removeClass('response_req');
            taskItemCounter(data.msg_id);
            if (data.request_ttl_approved_date != null) {
                $('.perchecklist_' + data.checklist_id).find('.assign_info .end_due_date._due_date').text('| Due by: ' + (data.request_ttl_approved_date != null ? moment.unix(Number(data.approved_date / 1000)).local().format('MMM Do YYYY - h:mm a') : ''));
                $('.perchecklist_' + data.checklist_id).find('.endDue_date').remove();
                $('.perchecklist_' + data.checklist_id).find('.checkBoxTitle').after('<div class="endDue_date"> Due by: ' + (data.request_ttl_approved_date != null ? moment.unix(Number(data.approved_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</div>');
            }
        })
    } else if ($(elm).text() == 'Close' || $(elm).text() == 'Cancel') {
        $(".hayven_Modal_Container").removeClass("decline_open").removeClass("request_open");
        need_reprint = false;
        closeModal('dueDatePickerChecklist');
    } else if ($(elm).text() == 'Reject') {
        var updateData = {
            msg_id: checklistManageId_msg,
            checklist_id: checklistManageId,
            request_ttl_date: null,
            request_ttl_message: null,
            request_ttl_time: null,
            Request_ttl_by: null,
            type: 'cancel'
        }
        var stringBody = {
            conversation_id: conversation_id,
            conversation_type: conversation_type,
            msg_id: updateData.msg_id,
            checklist_title: $('.msg_id_' + checklistManageId_msg).find('.checkListPlainText').text(),
            checklist_id: checklistManageId,
            item_title: $('.perchecklist_' + checklistManageId).find('.checkBoxTitle').text(),
            request_by: user_id,
            type: 'reject'
        }
        var noti_data = {
            type: 'checklist_changes',
            title: 'ttlCancelled',
            body: JSON.stringify(stringBody),
            created_at: new Date(),
            created_by: user_id,
            seen_users: [checklistManageId_Reqttl],
            receive_users: [checklistManageId_Reqttl]
        }
        if (conversation_id !== user_id) {
            insertNotiFun(noti_data);
        }
        $('.ttl_request' + checklistManageId).remove();
        closeModal('dueDatePickerChecklist');
        socket.emit('manage_checklist', updateData, function(res) {
            flash_msg_updated_fun(updateData.msg_id, 'Checklist updated');
            // toastr["success"]("Checklist updated");
            flash_msg_item_bottom(updateData.checklist_id);
            $('.perchecklist_' + updateData.checklist_id).find('.dueDateIcon').removeClass('lock_for_user');
        });
    } else if ($(elm).text() == "Decline") {
        var rec_id = $('#dueDatePickerChecklist').attr('data-reciver');
        var receive_id = '';
        if (rec_id != 1 && rec_id != 2 && rec_id != undefined) {
            receive_id = rec_id;
        } else {
            receive_id = checklist_created_by;
        }
        // socket.emit('getOneChecklistData',{checklist_id:checklist_id,msg_id:msg_id},function(res){
        // 	var data = res.data;
        var data = {
            msg_id: checklistManageId_msg,
            checklist_id: checklistManageId,
            assign_status: "1",
            assign_decline_note: $('#declineNote').val().trim(),
            assignedby: receive_id,
            last_update_by: user_id,
            last_updated_at: new Date().getTime(),
            type: 'Decline'
        }
        var stringBody = {
            conversation_id: conversation_id,
            conversation_type: conversation_type,
            msg_id: data.msg_id,
            checklist_title: $('.msg_id_' + checklistManageId_msg).find('.checkListPlainText').text(),
            checklist_id: checklistManageId,
            item_title: $('.perchecklist_' + checklistManageId).find('.checkBoxTitle').text(),
            request_by: user_id,
            assign_decline_note: $('#declineNote').val().trim(),
            type: 'decline'
        }
        var noti_data = {
            type: 'checklist_changes',
            title: 'ttlCancelled',
            body: JSON.stringify(stringBody),
            created_at: new Date(),
            created_by: user_id,
            seen_users: [receive_id],
            receive_users: [receive_id]
        }
        if (conversation_id !== user_id) {
            insertNotiFun(noti_data);
        }
        $('.ttl_request' + checklistManageId).remove();
        closeModal('dueDatePickerChecklist');
        socket.emit('manage_checklist', data, function(res) {
            $(".hayven_Modal_Container").removeClass("decline_open").removeClass("request_open");
            $('.ttl_request' + data.checklist_id).remove();
            var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + data.checklist_id + '"><span class="short_cart_btn" data-type="cancel_decline" msg-id="' + data.msg_id + '" checklist-id="' + data.checklist_id + '" data-reciver="' + receive_id + '" onclick="requesttlBtn(this)">Cancel Decline</span></span></div>';

            $('.perchecklist_' + data.checklist_id).addClass('modified');
            var msg_time = moment().format();
            $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);

            $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
            $('.perchecklist_' + data.checklist_id).removeClass('response_req');
            taskItemCounter(data.msg_id);
            flash_msg_updated_fun(data.msg_id, 'Checklist updated');
            // toastr["success"]("Checklist updated");
            flash_msg_item_bottom(data.checklist_id);
        });
        // });
    } else if ($(elm).attr("data-label") == "Delete") {

        var checklist_id = $('#delete_item_div').attr("data-id");
        var msg_id = $('#delete_item_div').attr("msg-id");
        var updateData = {
            msg_id: msg_id,
            checklist_id: checklist_id,
            type: 'Delete'
        }

        var stringBody = {
            conversation_id: conversation_id,
            conversation_type: conversation_type,
            msg_id: updateData.msg_id,
            checklist_title: $('.msg_id_' + msg_id).find('.checkListPlainText').text(),
            checklist_id: checklist_id,
            privacy: privacy,
            item_title: $('.perchecklist_' + checklist_id).find('.checkBoxTitle').text(),
            request_by: user_id
        }
        var noti_data = {
            type: 'checklist_changes',
            title: 'ttlDelete',
            body: JSON.stringify(stringBody),
            created_at: new Date(),
            created_by: user_id,
            seen_users: participants,
            receive_users: participants
        }

        if (checklist_id == undefined && $(elm).parents('.checkListItem').hasClass('new_item')) {
            $(elm).parents('.checkListItem.new_item').remove();
        } else {
            if (conversation_id !== user_id) {
                insertNotiFun(noti_data);
            }
            socket.emit('manage_checklist', updateData, function(res) {
                $('.perchecklist_' + checklist_id).remove();
                $('#delete_item_div').hide();
                taskItemCounter(msg_id);
                flash_msg_updated_fun(updateData.msg_id, 'Deleted');
            });
            closeTaskAssignModal('dueDatePickerChecklist');
        }
    } else if ($(elm).attr('data-type') == 'complete_review') {
        var msg_id = $('#dueDatePickerChecklist').attr('msg-id');
        var checklist_id = $('#dueDatePickerChecklist').attr('data-id');
        var updateData = {
                msg_id: msg_id,
                checklist_id: checklist_id,
                review_status: 0,
                type: 'complete_review'
            }
            // var stringBody = {
            // 	conversation_id:conversation_id,
            // 	conversation_type:conversation_type,
            // 	msg_id:updateData.msg_id,
            // 	checklist_title:$('.msg_id_'+checklistManageId_msg).find('.checkListPlainText').text(),
            // 	checklist_id:checklistManageId,
            // 	item_title:$('.perchecklist_'+checklistManageId).find('.checkBoxTitle').text(),
            // 	request_by:user_id,
            // 	type:'reject'
            // }
            // var noti_data = {
            // 	type:'checklist_changes',
            // 	title:'ttlCancelled',
            // 	body:JSON.stringify(stringBody),
            // 	created_at:new Date(),
            // 	created_by:user_id,
            // 	seen_users:[user_id],
            // 	receive_users: [checklistManageId_Reqttl]
            //   }
            // insertNotiFun(noti_data);
        $('.ttl_request' + checklist_id).remove();
        $('.perchecklist_' + checklist_id).removeClass('pending_item');
        $('.perchecklist_' + checklist_id).addClass('completed_item');
        $('.perchecklist_' + checklist_id).find('.checkBox').addClass('checked');
        $('.perchecklist_' + checklist_id).attr('review_status', 0);
        taskItemCounter(msg_id);
        socket.emit('manage_checklist', updateData, function(res) {
            flash_msg_updated_fun(updateData.msg_id, 'Checklist updated');
            // toastr["success"]("Checklist updated");
            flash_msg_item_bottom(updateData.checklist_id);
        });
        closeModal('dueDatePickerChecklist');
    } else if ($(elm).attr('data-type') == 'recheck') {
        var msg_id = $('#dueDatePickerChecklist').attr('msg-id');
        var checklist_id = $('#dueDatePickerChecklist').attr('data-id');
        var updateData = {
                msg_id: msg_id,
                checklist_id: checklist_id,
                review_status: 2,
                checklist_status: 0,
                type: 'recheck'
            }
            // var stringBody = {
            // 	conversation_id:conversation_id,
            // 	conversation_type:conversation_type,
            // 	msg_id:updateData.msg_id,
            // 	checklist_title:$('.msg_id_'+checklistManageId_msg).find('.checkListPlainText').text(),
            // 	checklist_id:checklistManageId,
            // 	item_title:$('.perchecklist_'+checklistManageId).find('.checkBoxTitle').text(),
            // 	request_by:user_id,
            // 	type:'reject'
            // }
            // var noti_data = {
            // 	type:'checklist_changes',
            // 	title:'ttlCancelled',
            // 	body:JSON.stringify(stringBody),
            // 	created_at:new Date(),
            // 	created_by:user_id,
            // 	seen_users:[user_id],
            // 	receive_users: [checklistManageId_Reqttl]
            //   }
            // insertNotiFun(noti_data);
        $('.ttl_request' + checklist_id).remove();
        $('.perchecklist_' + checklist_id).attr('review_status', 2);
        $('.perchecklist_' + checklist_id).attr('checklist_status', 0);
        socket.emit('manage_checklist', updateData, function(res) {
            flash_msg_updated_fun(updateData.msg_id, 'Checklist updated');
            // toastr["success"]("Checklist updated");
            flash_msg_item_bottom(updateData.checklist_id);
        });
        closeModal('dueDatePickerChecklist');
    }

    if ($(elm).attr('data-type') == 'cancel_request') {
        var msg_id = $(elm).attr('msg-id');
        var checklist_id = $(elm).attr('checklist-id');
        var receive_id = $(elm).attr('data-reciver');
        socket.emit('getOneChecklistData', { checklist_id: checklist_id, msg_id: msg_id }, function(res) {

            var data = res.data;
            var due_date_is_today = false;
            var assusr = data.alternative_assign_to == null ? data.assign_to : data.alternative_assign_to;
            var conv_id = $('.msg_id_' + msg_id).attr('conv-id');
            if (checklist_item_due_date_check(data) === true) {
                due_date_is_today = true;
            }

            var u_data = {
                msg_id: msg_id,
                checklist_id: checklist_id,
                request_ttl_date: null,
                request_ttl_message: data.request_ttl_message,
                request_ttl_time: null,
                Request_ttl_by: null,
                status: data.assign_status,
                last_update_by: user_id,
                last_updated_at: new Date().getTime(),
                type: 'cancel_request'
            }
            var stringBody = {
                conversation_id: conversation_id,
                conversation_type: conversation_type,
                msg_id: u_data.msg_id,
                checklist_title: $('.msg_id_' + msg_id).find('.checkListPlainText').text(),
                checklist_id: checklist_id,
                privacy: privacy,
                item_title: $('.perchecklist_' + checklist_id).find('.checkBoxTitle').text(),
                request_by: user_id
            }
            var noti_data = {
                type: 'checklist_changes',
                title: 'cancel_request',
                body: JSON.stringify(stringBody),
                created_at: new Date(),
                created_by: user_id,
                seen_users: [receive_id],
                receive_users: [receive_id]
            }
            if (conversation_id !== user_id) {
                insertNotiFun(noti_data);
            }

            socket.emit('manage_checklist', u_data, function(res) {
                $('.ttl_request' + u_data.checklist_id).remove();

                console.log(data.conversation_id, due_date_is_today == false, get_conversation_obj(data.conversation_id).conversation_type == 'personal', data.assign_status == 2, assusr == user_id)
                if (due_date_is_today == false && get_conversation_obj(conv_id).conversation_type == 'personal' && data.assign_status == 2 && assusr == user_id) {
                    var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + data.checklist_id + '"><span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span> <span class="short_cart_btn" data-type="Mark complete" onclick="open_duedate_box(this)">Mark as completed</span></span></div>';
                } else if (due_date_is_today && data.assign_status == 2) {
                    var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + data.checklist_id + '"><span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span> <span class="short_cart_btn" data-type="Mark complete" onclick="open_duedate_box(this)">Mark as completed</span></span></div>';
                } else {
                    var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + data.checklist_id + '"><span class="short_cart_btn aprove_btn_sortcart" onclick="assign_accept_btn(this)">Accept</span> <span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span> <span class="short_cart_btn" data-type="Decline" onclick="open_duedate_box(this)">Decline</span></span></div>';
                }
                $('.perchecklist_' + u_data.checklist_id).find('.assign_info').append(html);
                $('.perchecklist_' + u_data.checklist_id).addClass('response_req');

                $('.perchecklist_' + data.checklist_id).addClass('modified');
                var msg_time = moment().format();
                $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);

                taskItemCounter(msg_id);
                flash_msg_updated_fun(u_data.msg_id, 'Checklist updated');
                // toastr["success"]("Checklist updated");
                flash_msg_item_bottom(u_data.checklist_id);
            });
        });
    } else if ($(elm).attr('data-type') == 'cancel_decline') {
        var msg_id = $(elm).attr('msg-id');
        var checklist_id = $(elm).attr('checklist-id');
        var receive_id = $(elm).attr('data-reciver');

        var data = {
            msg_id: msg_id,
            checklist_id: checklist_id,
            assign_status: receive_id,
            assign_decline_note: null,
            last_update_by: user_id,
            last_updated_at: new Date().getTime(),
            type: 'cancel_decline'
        }
        var stringBody = {
            conversation_id: conversation_id,
            conversation_type: conversation_type,
            msg_id: data.msg_id,
            checklist_title: $('.msg_id_' + msg_id).find('.checkListPlainText').text(),
            checklist_id: checklist_id,
            item_title: $('.perchecklist_' + checklist_id).find('.checkBoxTitle').text(),
            request_by: user_id,
            type: 'cancel_decline'
        }
        var noti_data = {
            type: 'checklist_changes',
            title: 'ttlCancelled',
            body: JSON.stringify(stringBody),
            created_at: new Date(),
            created_by: user_id,
            seen_users: [receive_id],
            receive_users: [receive_id]
        }
        if (conversation_id !== user_id) {
            insertNotiFun(noti_data);
        }

        socket.emit('manage_checklist', data, function(res) {
            $('.ttl_request' + data.checklist_id).remove();
            var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + data.checklist_id + '"><span class="short_cart_btn aprove_btn_sortcart" onclick="assign_accept_btn(this)">Accept</span> <span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span> <span class="short_cart_btn" data-type="Decline" onclick="open_duedate_box(this)">Decline</span></span></div>';
            $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
            $('.perchecklist_' + data.checklist_id).addClass('response_req');
            $('.perchecklist_' + data.checklist_id).addClass('modified');
            var msg_time = moment().format();
            $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);
            taskItemCounter(msg_id);
            flash_msg_updated_fun(data.msg_id, 'Checklist updated');
            // toastr["success"]("Checklist updated");
            flash_msg_item_bottom(data.checklist_id);
        });
    }

    if ($(elm).text() == 'Update') {
        closeTaskAssignModal('dueDatePickerChecklist');
    }
}

function closeTaskAssignModal(id) {
    $(".hayven_Modal_Container").removeClass("decline_open").removeClass("request_open").removeClass("request_review_open").removeClass("decline_review_open");
    var c_id = $('#dueDatePickerChecklist').attr('data-id');
    $('.perchecklist_' + c_id).find('.checkBoxTitle').removeClass('focus_c');
    $('.perchecklist_' + c_id).find('.checkBoxTitle').focus();
    closeModal(id);
}
var checklistManageId = '';
var checklistManageId_msg = '';
var checklistManageId_Reqttl = '';
var checklist_request_repetition = 0;
var checklist_created_by = '';

function showDesignChecklisManagement(data) {
    old_assignee = "";
    checklist_created_by = '';
    checklistManageId = data.checklist_id;
    checklistManageId_msg = data.msg_id;
    checklistManageId_Reqttl = '';
    checklist_request_repetition = data.request_repetition;
    checklist_created_by = data.created_by;
    var assusr = data.alternative_assign_to == null ? data.assign_to : data.alternative_assign_to;
    var lock_for_user = '';

    if ($('#groupChatContainer').hasClass('task_assignment')) {
        if ($('.msgs-form-users.editable_checklistMsg').is(':visible')) {
            conversation_id = $('.msgs-form-users.editable_checklistMsg').attr('conv-id');
            conversation_type = get_conversation_obj(conversation_id).conversation_type;
        }
    }

    console.log('Item data', data);

    var oneSection = false;
    var twoSection = false;
    var threeSection = false;
    var twoSectionStatus = false;
    var acceptPermission = false;
    $('#assigneeChangeResone').val("");
    $(".decline_note_sec").hide();
    $("#decline_btn_sec").hide();
    $('.button_del').hide();
    $('.button_Unass').hide();
    if (conversation_id == user_id) {
        data.assign_to = data.assign_status = assusr = user_id;
    }
    if (assusr == user_id) {
        if (data.assign_status == user_id) {
            if (conversation_type == 'personal') {
                lock_for_user = '';
            } else {
                if (adminArra.indexOf(user_id) > -1) {
                    lock_for_user = '';
                }
            }
        } else {
            // if (data.assign_status != 2 && data.assign_status != user_id) {
            // 	lock_for_user = ' lock_for_user';
            // }
            if (assusr == user_id && data.assign_status == data.assignedby && data.assignedby != assusr) {
                lock_for_user = ' lock_for_user';
            }
        }
    }

    if (data.assign_to == user_id && data.alternative_assign_to == null) {
        old_assignee = data.assign_to;
        if (!$(".hayven_Modal_Container").hasClass("decline_open")) {
            twoSection = true;
        }
        if (data.request_ttl_date != null) {
            twoSectionStatus = true;
        }
    } else {
        if (adminArra.indexOf(user_id) > -1 || data.created_by == user_id || conversation_type == 'personal') {
            oneSection = true;
            if (data.assign_to == null) {

            } else {
                // threeSection = true;
                $('#alternatAssigneeSec').hide();
                if (data.alternative_assign_to != null) {
                    old_assignee = data.alternative_assign_to;
                    if (data.assignee_change_reason != null) {
                        $('#alternatAssigneeSec').show();
                        $('#assigneeChangeResone').val(data.assignee_change_reason).show().attr('disabled', 'disabled');
                    }
                } else {
                    old_assignee = data.assign_to;
                }
            }

            if (data.request_ttl_date != null) {
                twoSection = true;
                twoSectionStatus = true;
                acceptPermission = true;
            }
        } else if (data.alternative_assign_to == user_id) {
            if (!$(".hayven_Modal_Container").hasClass("decline_open")) {
                twoSection = true;
            }
        }
    }

    $('.managementOneSection').removeClass('deactive_sec');
    $('#requestNewDateSec').hide();

    if ($('#dueDatePickerChecklist').attr('msg-id') == '') {
        $('#initialSubBtn').find('.buttonAction').text('Submit');
    } else {
        $('#initialSubBtn').find('.buttonAction').text('Update');
    }

    // Request note section
    $('#requestNewDateSec').hide();
    $('#requestNote').hide();
    if (data.request_ttl_message != null) {
        console.log(111)
        $('.request_note_sec').show();
        $('#requestNewDateSec').show();

        if (assusr == user_id && data.request_ttl_message != null && data.request_ttl_approved_date != null && data.request_ttl_time == null) {
            console.log('Note Should be hide');
            $('.request_note_sec').hide();
            $('#requestNewDateSec').hide();
            $('#requestNote').val("").hide();
            $('#checklistRequestBtn').hide();
            $('#initialSubBtn').css('display', 'flex');
        }
    } else if ($(".hayven_Modal_Container").hasClass("request_open")) {
        console.log(222)
        if (assusr == user_id) {
            $('.request_note_sec').show();
            $('#requestNewDateSec').show();
            $('#alternatAssigneeSec').hide();
            $('#requestNote').val("").show();
            $('#checklistRequestBtn').find('.buttonAction').text('Request').attr('disabled', 'disabled');
            $('#checklistRequestBtn').find('.buttonCancel').text('Close');
            $('#checklistRequestBtn').find('.buttonAction').removeClass('inactive');
            $('#initialSubBtn').hide();
            $('.button_del').hide();
            $('.button_Unass').hide();
            $('#checklistRequestBtn').show();
            console.log('Request Note Open');
        }
    }

    // Decline note section
    if (data.assign_status == 1 && data.assign_decline_note != null) {
        decline_sec_fun('', data.assign_decline_note);
    }
    if ($(".hayven_Modal_Container").hasClass("decline_open")) {
        twoSection = true;
        decline_sec_fun('edit', data.assign_decline_note);
        $('#alternatAssigneeSec').hide();
    }

    if (oneSection) {
        console.log(333)
        $('.managementOneSection').removeClass('deactive_sec');
        if (data.request_ttl_approved_date != null) {
            if (adminArra.indexOf(user_id) == -1 && data.created_by != user_id && conversation_type != 'personal') {
                $('#TaskDatePicker').closest('.managementOneSection').addClass('deactive_sec');
            }
        }
    } else {
        console.log(444)
        if (data.assign_status == null && data.alternative_assign_to == user_id) {
            $('#TaskDatePicker').closest('.managementOneSection').removeClass('deactive_sec');
        }
    }

    $('#TaskDatePicker').val(moment(Number(data.end_due_date)).local().format('YYYY-MM-DD HH:mm'));
    $('#TaskDatePicker').attr('old-date', moment(Number(data.end_due_date)).local().format('YYYY-MM-DD HH:mm'));

    if (data.assign_to == null) {
        console.log(555)
        $('#TaskDatePicker').val('');
        $('#TaskUserId').html('');
        $('#TaskUserId').next('input').show().val('');
    } else if (data.alternative_assign_to != null) {
        console.log(666)
        $('#TaskUserId').next('input').hide().val('');
        $('#TaskUserId').html('<div class="mini_item _mini_item_' + data.alternative_assign_to + '" data-id="' + data.alternative_assign_to + '"><p class="mini_name">' + findObjForUser(data.alternative_assign_to).fullname + '</p><span class="mini_remove_ico tooltipmsg' + lock_for_user + '" data-balloon="Remove assignee" data-balloon-pos="left" onclick="removeAssignMember(event,\'' + data.alternative_assign_to + '\')"></span></div>')
        $('#TaskUserId').attr('assign-id', data.alternative_assign_to);
    } else {
        console.log(777)
        $('#TaskUserId').next('input').hide().val('');
        $('#TaskUserId').html('<div class="mini_item _mini_item_' + data.assign_to + '" data-id="' + data.assign_to + '"><p class="mini_name">' + findObjForUser(data.assign_to).fullname + '</p><span class="mini_remove_ico tooltipmsg' + lock_for_user + '" data-balloon="Remove assignee" data-balloon-pos="left" onclick="removeAssignMember(event,\'' + data.assign_to + '\')"></span></div>')
        $('#TaskUserId').attr('assign-id', data.assign_to);
    }

    if (twoSection) {
        console.log(888)
        $('#checklistRequestBtn').show();
        $('#initialSubBtn').hide();
        $('.managementOneSection').find('#TaskDatePicker').closest('.deactive_sec').removeClass('deactive_sec');
        // $('#TaskDatePicker2').val('');
        $('#checklistRequestBtn').find('.buttonAction').removeClass('inactive');

        if (twoSectionStatus) {
            console.log('Here also')
            if (data.request_ttl_time != null) {
                console.log(999)
                $('#TaskDatePicker').val(moment(Number(data.request_ttl_time)).local().format('YYYY-MM-DD HH:mm'));
                $('#TaskDatePicker').attr('old-date', moment(Number(data.request_ttl_time)).local().format('YYYY-MM-DD HH:mm'));
            }

        }
        if (acceptPermission) {
            if (twoSectionStatus) {
                checklistManageId_Reqttl = data.assign_to;
                $('#requestNote').removeAttr('disabled');
                $('#checklistRequestBtn').find('.buttonAction').text('Approve');
                $('#checklistRequestBtn').find('.buttonCancel').text('Reject');
            }
        } else {
            if (twoSectionStatus) {} else {
                if ($(".hayven_Modal_Container").hasClass("decline_open")) {
                    $('#TaskDatePicker').closest('.managementOneSection').addClass('deactive_sec');
                    $('#checklistRequestBtn').hide();
                    $('.button_del').hide();
                    $('.button_Unass').hide();
                    $('#decline_btn_sec').show();
                } else {
                    console.log('Member 2')
                    $('#checklistRequestBtn').show();
                    $('#decline_btn_sec').hide();
                    $('#checklistRequestBtn').find('.buttonAction').text('Request');
                    if (assusr == user_id && data.request_ttl_message != null && data.request_ttl_approved_date != null && data.request_ttl_time == null) {
                        $('.request_note_sec').hide();
                        $('#requestNewDateSec').hide();
                        $('#requestNote').val("").hide();
                        $('#checklistRequestBtn').hide();
                        $('#initialSubBtn').show();
                    }
                    if (assusr == user_id && !$(".hayven_Modal_Container").hasClass("request_open")) {
                        console.log(99999)
                        if (data.assign_status == user_id) {
                            console.log(1112)
                            if (conversation_type == 'personal') {
                                $('#checklistRequestBtn').find('.buttonAction').text('Update');
                            } else {
                                if (adminArra.indexOf(user_id) > -1) {
                                    $('#checklistRequestBtn').find('.buttonAction').text('Update');
                                } else {
                                    if (data.assignedby == user_id && assusr == user_id) {
                                        $('#checklistRequestBtn').hide();
                                        $('#decline_btn_sec').hide();
                                        $('#initialSubBtn').show();
                                    }
                                }
                            }
                        } else if (assusr == user_id && data.assign_status == 2) {
                            console.log(1113)
                                // already accepted user
                            $('#requestNewDateSec').hide();
                            $('#checklistRequestBtn').hide();
                            $('#decline_btn_sec').hide();
                            $('#initialSubBtn').show();
                        }
                    }

                    $('#checklistRequestBtn').find('.buttonCancel').text('Close');
                }
            }
        }
    } else if (threeSection) {
        console.log(1114)
        $('#initialSubBtn').hide();
        $('#alternatAssigneeSec').show();
        $('#alternatAssigneeSec').find('input').val('');
        $('#alternatAssigneeSec').find('.user').html('');
        if (data.alternative_assign_to != null) {
            console.log(1115)
            $('#TaskUserId').html('<div class="mini_item _mini_item_' + data.alternative_assign_to + lock_for_user + '" data-id="' + data.assign_to + '"><p class="mini_name">' + findObjForUser(data.alternative_assign_to).fullname + '</p><span class="mini_remove_ico tooltipmsg" data-balloon="Remove assignee" data-balloon-pos="left" onclick="removeAssignMember(event,\'' + data.alternative_assign_to + '\')"></span></div>')
            $('#TaskUserId').attr('assign-id', data.alternative_assign_to);
            $('#assigneeChangeResone').val(data.assignee_change_reason);
            $('#TaskUserId').next('input').hide().val('');
            if (adminArra.indexOf(user_id) > -1 || data.created_by == user_id || conversation_type == 'personal') {
                $('.managementOneSection').removeClass('deactive_sec');
            }
        } else {
            $('#TaskUserId2').next('input').show().val('');
        }
        $('#checklistRequestBtn').hide();
        $('#initialSubBtn').show();
    } else {
        console.log(1116)
        if (!$(".hayven_Modal_Container").hasClass("request_open") && data.review_status != 1) {
            $('#initialSubBtn').show();
        }
        if (assusr == user_id && data.assign_status == 2 && data.review_status != 1) {
            // already accepted user
            $('#requestNewDateSec').hide();
            $('#alternatAssigneeSec').hide();
            $('#checklistRequestBtn').hide();
            $('#decline_btn_sec').hide();
            $('#initialSubBtn').show();
            console.log(1117)
        }
        // $('#initialSubBtn').find('.buttonAction').text('Submit');
        $('#initialSubBtn').find('.buttonCancel').text('Cancel');
        if (data.review_status == 1) {
            $('.managementOneSection').addClass('deactive_sec');
            $('#marked_btn_sec').show();
        } else {
            $('#marked_btn_sec').hide();
        }
    }


    if (data.assign_status == null || data.end_due_date == null) {
        console.log(1118)
        $('#initialSubBtn').find('.buttonAction').text('Assign');
        $('#initialSubBtn').find('.buttonAction').attr('disabled', 'disabled');
        $('#dueDatePickerChecklist').addClass('assign_open');
        $('.button_Unass').hide();
        $('.button_del').show();
        var newDate = moment();
        var cs = '' + moment(newDate).format('YYYY-MM-DD') + ' 23:59';
        $('#TaskDatePicker').val('');
        $('#TaskDatePicker').attr('old-date', '');
        $('#initialSubBtn').css('display', 'flex');
        $('#checklistRequestBtn').hide();
        $('#decline_btn_sec').hide();
        $('#declineApprove').hide();
        if (data.request_ttl_message != null) {
            $('.request_note_sec').show();
            $('#requestNewDateSec').show();
        }
    } else {
        $('#dueDatePickerChecklist').removeClass('assign_open');
    }

    $('#requestNote').val('');
    $('#requestNote + .lastNote_by').text('');
    if ((data.request_ttl_message != null && $(".hayven_Modal_Container").hasClass("request_open")) || (data.request_ttl_message != null && $(".hayven_Modal_Container").hasClass("request_review_open"))) {
        if ($(".hayven_Modal_Container").hasClass("request_open")) {
            $('#checklistRequestBtn').find('.buttonAction').text('Request').attr('disabled', 'disabled');
        }
        var last_note = data.request_ttl_message.split('@')
        last_note = last_note[0]
        var last_note_by = data.request_ttl_message.split('@')
        var note_by = findObjForUser(last_note_by[last_note_by.length - 2]).fullname;
        var note_time = last_note_by[last_note_by.length - 1];
        $('#requestNote').val(last_note).attr('data-val', last_note).show();
        if (last_note_by.length > 2) {
            $('#requestNote').attr('data-time', note_time);
            $('#requestNote').attr('data-name', last_note_by[last_note_by.length - 2]);
            if (note_by != undefined) {
                $('#requestNote + .lastNote_by').text('Last updated by ' + note_by + ' on ' + moment.unix(note_time / 1000).local().format('MMM Do YYYY - h:mm a'));
            }
        }
    }

    if (conversation_id == user_id) {
        $('#requestNewDateSec').hide();
        $('#alternatAssigneeSec').hide();
        $('#checklistRequestBtn').hide();
        $('#decline_btn_sec').hide();
        $('#initialSubBtn').show();
    }

    rewriteAssignPopup(data);

    $('#dueDatePickerChecklist').css('display', 'flex');
}

function rewriteAssignPopup(row) {
    if ($(".hayven_Modal_Container").hasClass("request_open")) {
        console.log('Request Mode');
        $('#declineApprove').hide();
        $('#requestNote').attr('disabled', 'disabled');
    } else if ($(".hayven_Modal_Container").hasClass("decline_open")) {
        console.log('Decline Mode');
    } else if ($(".hayven_Modal_Container").hasClass("request_review_open")) {
        console.log('Request Review Mode');
        $('#requestNote').removeAttr('disabled');
        $('#declineApprove').hide();

    } else if ($(".hayven_Modal_Container").hasClass("decline_review_open")) {
        console.log('Decline Review Mode');
        $('#initialSubBtn').hide();
        $('#declineApprove').css('display', 'flex');
        $('#declineApprove .buttonAction').text('Approve');
    } else {
        $('#dueDatePickerChecklist .hayven_Modal_Container').removeClass('request_review_open');
        $('#dueDatePickerChecklist .hayven_Modal_Container').removeClass('decline_review_open');
        console.log('Normal Mode');
        $('#requestNewDateSec').hide();
        $('#declineApprove').hide();
        $('#decline_btn_sec').hide();
        $('#checklistRequestBtn').hide();
        $('#initialSubBtn').css('display', 'flex');
    }
}

function requestNoteActive() {
    var olddate = $('#TaskDatePicker').attr('old-date');
    var newdate = $('#TaskDatePicker').val();
    // console.log(olddate,newdate);
    if ($('#requestNote').val() != '' && olddate != newdate) {
        $('#checklistRequestBtn .buttonAction').removeAttr('disabled');
    } else {
        $('#checklistRequestBtn .buttonAction').attr('disabled', 'disabled');
    }
}

function actionChanger(type) {
    var olddate = $('#TaskDatePicker').attr('old-date');
    var newdate = $('#TaskDatePicker').val();
    console.log(olddate, newdate);
    if (type == 'request_review_open') {
        if (olddate != newdate) {
            $('#initialSubBtn').css('display', 'flex');
            $('#checklistRequestBtn').hide();
            console.log('Update')
        } else {
            console.log('Approve')
            $('#initialSubBtn').hide();
            $('#checklistRequestBtn').css('display', 'flex');
        }
    } else {
        if (olddate != newdate) {
            $('#initialSubBtn').css('display', 'flex');
            $('#declineApprove').hide();
            console.log('Update')
        } else {
            console.log('Approve')
            $('#initialSubBtn').hide();
            $('#declineApprove').css('display', 'flex');
        }
    }
}

// time_24hr: false,
var flatpickr_options = {
    minDate: "today",
    enableTime: true,
    dateFormat: "Y-m-d H:i",
    defaultHour: 23,
    defaultMinute: 59,
    allowInput: true,
    onChange: function(selectedDates, dateStr, instance) {
        if (dateStr) {
            if ($('#dueDatePickerChecklist .hayven_Modal_Container').hasClass('request_open')) {
                $('#requestNote').show().removeAttr('disabled');
                $('#requestNewDateSec').show();
                $('.request_note_sec').show();
                requestNoteActive();
            } else if ($('#dueDatePickerChecklist .hayven_Modal_Container').hasClass('request_review_open')) {
                actionChanger('request_review_open');
            } else if ($('#dueDatePickerChecklist .hayven_Modal_Container').hasClass('decline_review_open')) {
                actionChanger('decline_review_open');
            }
            if ($('#dueDatePickerChecklist').hasClass('assign_open')) {
                if ($('#TaskDatePicker').val() != '') {
                    $('#initialSubBtn .buttonAction').removeAttr('disabled');
                }
            }
            // instance.close();
        }
    },
    onOpen: function(selectedDates, dateStr, instance) {
        if ($('#TaskDatePicker').val() == '') {
            instance.clear();
        }
    }
}

$('#dueStartDateTime').flatpickr(flatpickr_options);
$('#dueEndDateTime').flatpickr(flatpickr_options);
$('#TaskDatePicker').flatpickr(flatpickr_options);

$('#filter_from').flatpickr({
    dateFormat: "Y-m-d",
});
$('#filter_to').flatpickr({
    dateFormat: "Y-m-d",
});
var flatpickrEvent = null;
var oldAssignUser = '';

function checklistDueDate(elm, event) {
    event.preventDefault();
    event.stopImmediatePropagation();
    alternatAssigneeUserid = '';
    oldAssignUser = '';
    $('.managementOneSection').removeClass('deactive_sec');
    $('#requestNewDateSec').hide();
    $('#alternatAssigneeSec').hide();
    $('#initialSubBtn').find('.buttonAction').text('Submit');
    var newDate = moment().add(1, 'day');
    $('#checklistRequestBtn').hide();
    $('#marked_btn_sec').hide();
    $('#initialSubBtn').hide();
    $('#TaskUserId').attr('assign-id', '');
    $('#TaskDatePicker').attr('old-date', '');
    if (elm == 'settings') {
        $('#dueDatePickerChecklist').attr('action-submit', 'settings');
        $('#dueDatePickerChecklist').attr('msg-id', $(event.target).parents('.filterBy_popup').attr('msg-id'));
        $('#dueDatePickerChecklist').attr('data-id', '');
        $('#dueDatePickerChecklist').attr('data-reciver', '');
        $('#TaskUserId').html('');
        $('#TaskPrivacyStatus').prop('checked', true);
        $('#TaskDatePicker').val(moment(newDate).format('YYYY-MM-DD HH:mm'));
        $('#TaskUserId').next('input').show().val('');
        $('#dueDatePickerChecklist').css('display', 'flex');
        $('#initialSubBtn').find('.buttonAction').text('Submit');
        $('.button_del').hide();
        $('.button_Unass').hide();
        $('#initialSubBtn').show();
    } else {
        $('#dueDatePickerChecklist').attr('action-submit', 'single');
        flatpickrEvent = elm;
        $('#dueDatePickerChecklist').attr('msg-id', '');
        $('#dueDatePickerChecklist').attr('data-id', '');
        if ($(elm).attr('end-date') == '' || $(elm).attr('end-date') == undefined) {
            // $('#TaskDatePicker').val(moment(newDate).format('YYYY-MM-DD HH:mm'));
            $('#TaskDatePicker').val('');
            $('#TaskUserId').html('');
            $('#TaskPrivacyStatus').prop('checked', true);
            $('#TaskUserId').next('input').show().val('');
            // console.log(11112);
        } else {
            var assign_to = $(elm).attr('data-assignee');
            var privacy = $(elm).attr('data-privacy');
            if ($(elm).attr('data-privacy') == 'Private') {
                $('#TaskPrivacyStatus').prop('checked', true);
                // $('._3coldiv .statusCheck').text('Private');
            } else {
                $('#TaskPrivacyStatus').prop('checked', false);
                // $('._3coldiv .statusCheck').text('Public');
            }
            var user = findObjForUser(assign_to);
            $('#TaskUserId').attr('assign-id', user.id);
            $('#TaskUserId').html('<div class="mini_item _mini_item_' + user.id + '" data-id="' + user.id + '"><p class="mini_name">' + user.fullname + '</p><span class="mini_remove_ico tooltipmsg" data-balloon="Remove assignee" data-balloon-pos="left" onclick="removeAssignMember(event,\'' + user.id + '\')"></span></div>')
            $('#dueDatePickerChecklist  .buttonAction').text('Update');
            $('#TaskDatePicker').val(moment(Number($(elm).attr('end-date'))).format('YYYY-MM-DD HH:mm'));
            $('#TaskDatePicker').attr('old-date', moment(Number($(elm).attr('end-date'))).format('YYYY-MM-DD HH:mm'));
            $('#TaskUserId').next('input').hide().val('');
            // console.log(2966, $(elm).attr('end-date'));
            // console.log(2966, moment($(elm).attr('end-date')).format('YYYY-MM-DD HH:mm'));
        }
        if ($(event.target).parents('.user-msg').length > 0) {
            var msg_id = $(elm).attr('msg-id');
            var checklist_id = $(elm).attr('data-id');
            $('#dueDatePickerChecklist').attr('msg-id', msg_id);
            $('#dueDatePickerChecklist').attr('data-id', checklist_id);
            $(elm).parents('.checkListItem').find('.checkBoxTitle').addClass('focus_c');

            if (checklist_id != '' && checklist_id != undefined || msg_id != '' && msg_id != undefined) {
                socket.emit('getOneChecklistData', { checklist_id: checklist_id, msg_id: msg_id }, function(res) {
                    var data = res.data;
                    console.log('getOneChecklistData', data)
                    $('#dueDatePickerChecklist').attr('data-reciver', data.assignedby);
                    if (data.request_ttl_approved_date != null) {
                        data.end_due_date = (moment(data.request_ttl_approved_date, "YYYY-MM-DD HH:mm").unix() * 1000);
                    }
                    showDesignChecklisManagement(data);
                    if (data.alternative_assign_to == null) {
                        oldAssignUser = data.assign_to;
                    } else {
                        oldAssignUser = data.alternative_assign_to;
                    }


                })
            }

        } else {
            // console.log(3333);
            $('#initialSubBtn').show();
            var newDate = moment();
            var cs = '' + moment(newDate).format('YYYY-MM-DD') + ' 23:59';
            // $('#TaskDatePicker').val(cs);
            $('#TaskDatePicker').val('');
            $('#TaskDatePicker').attr('old-date', cs);
            if (conversation_id == user_id) {
                // console.log(44444);
                var user = findObjForUser(user_id);
                var html = '<div class="mini_item _mini_item_' + user.id + '" data-id="' + user.id + '"><p class="mini_name">' + user.fullname + '</p><span class="mini_remove_ico tooltipmsg" data-balloon="Remove assignee" data-balloon-pos="left" onclick="removeAssignMember(event,\'' + user + '\')"></span></div>';
                $('#normalAssineeSec').find('.user').html(html);
                $('#normalAssineeSec').find('.user').next('input').hide();
                $("#normalAssineeSec input").blur();
            }
        }
        $('#TaskCheckForallStatus').prop('checked', false);
        $('#dueDatePickerChecklist').css('display', 'flex');
    }

}
var assigneeAlternet = false;

function SubmitDueCheckList(type = null) {
    var enddate = moment($('#TaskDatePicker').val()).unix() * 1000;
    var olddate = moment($('#TaskDatePicker').attr('old-date')).unix() * 1000;

    if (type != undefined && type == 'decApprove') {
        $('#TaskUserId').find('.mini_remove_ico.tooltipmsg').trigger('click');
    }
    if ($('#groupChatContainer').hasClass('task_assignment')) {
        if ($('.msgs-form-users.editable_checklistMsg').is(':visible')) {
            conversation_id = $('.msgs-form-users.editable_checklistMsg').attr('conv-id');
            conversation_type = get_conversation_obj(conversation_id).conversation_type;
        }
    }
    var assign_to = $('#TaskUserId').find('.mini_item').attr('data-id');
    var privacy = ($('#TaskPrivacyStatus').prop('checked') ? 'Private' : 'Public');
    $('.checkBoxTitle.focus_c').removeClass('focus_c');
    if (enddate != '' && enddate != undefined && assign_to != '' && assign_to != undefined && privacy != '' && privacy != undefined) {

    } else {
        enddate = null;
        assign_to = null;
        privacy = null;
    }
    if (type == null || type == 'decApprove') {

        if ($('#dueDatePickerChecklist').attr('action-submit') == 'settings' && $('#dueDatePickerChecklist').attr('msg-id') != '' && $('#dueDatePickerChecklist').attr('msg-id') != undefined) {
            var tData = {
                    msg_id: $('#dueDatePickerChecklist').attr('msg-id'),
                    end_due_date: enddate.toString(),
                    // end_due_date:enddate,
                    assign_to: assign_to,
                    privacy: privacy,
                    assign_status: user_id,
                    assignedby: user_id
                }
                // console.log(1111, tData)
            socket.emit('update_checklist_time_multi', tData, function(res) {
                // console.log(12534,res);
            });
        } else {
            if ($('#dueDatePickerChecklist').attr('msg-id') != '' && $('#dueDatePickerChecklist').attr('data-id') != '') {
                if ($('#TaskCheckForallStatus').prop('checked')) {
                    var tData = {
                            msg_id: $('#dueDatePickerChecklist').attr('msg-id'),
                            // end_due_date:((enddate == null ? null : enddate.toString())),
                            end_due_date: ((enddate == null ? null : enddate)),
                            assign_to: assign_to,
                            privacy: privacy,
                            assign_status: user_id,
                            assignedby: user_id
                        }
                        // console.log(2222, tData)
                    socket.emit('update_checklist_time_multi', tData, function(res) {
                        // console.log(12534,res);
                    })
                } else {
                    if ($('#alternatAssigneeSec').is(':visible')) {
                        if (alternatAssigneeUserid != '') {
                            var updateData = {
                                request_ttl_date: null,
                                request_ttl_message: null,
                                request_ttl_time: null,
                                Request_ttl_by: null,
                                request_ttl_approved_by: null,
                                request_ttl_approved_date: null,
                                msg_id: checklistManageId_msg,
                                checklist_id: checklistManageId,
                                alternative_assign_to: alternatAssigneeUserid,
                                assignee_change_reason: $('#assigneeChangeResone').val(),
                                assign_status: user_id,
                                assignedby: user_id,
                                end_due_date: ((enddate == null ? null : enddate.toString())),
                                // end_due_date:((enddate == null ? null : enddate)),
                                // last_updated_at: moment().format(),
                                last_updated_at: moment().unix() * 1000,
                                last_updated_by: user_id,
                                type: 'assigneeChange'
                            }
                            var stringBody = {
                                conversation_id: conversation_id,
                                conversation_type: conversation_type,
                                msg_id: $('#dueDatePickerChecklist').attr('msg-id'),
                                checklist_title: $('.msg_id_' + $('#dueDatePickerChecklist').attr('msg-id')).find('.checkListPlainText').text(),
                                checklist_id: $('#dueDatePickerChecklist').attr('data-id'),
                                end_due_date: ((enddate == null ? null : enddate.toString())),
                                // end_due_date:((enddate == null ? null : enddate)),
                                alternative_assign_to: alternatAssigneeUserid,
                                privacy: privacy,
                                item_title: $('.perchecklist_' + $('#dueDatePickerChecklist').attr('data-id')).find('.checkBoxTitle').text()
                            }
                            notititle = 'alternative_assign_to';
                            var noti_data = {
                                type: 'checklist_changes',
                                title: notititle,
                                body: JSON.stringify(stringBody),
                                created_at: new Date(),
                                created_by: user_id,
                                seen_users: [alternatAssigneeUserid],
                                receive_users: [alternatAssigneeUserid]
                            }
                            if (conversation_id !== user_id) {
                                insertNotiFun(noti_data);
                            }

                            var id = $('#dueDatePickerChecklist').attr('data-id');
                            // var up_check = $('.perchecklist_'+id).find('.end_due_date.upBy_name');
                            var dt = moment().format();
                            var crtBy = $('.perchecklist_' + id).find('.createdBy_name').text();

                            var assign_info = '<div class="assign_info">'
                                // var assign_info = ''
                            assign_info += '<span class="createdBy_name">' + crtBy + '</span>'
                            assign_info += ' <span class="end_due_date upBy_name" data="">| Updated by ' + findObjForUser(user_id).fullname + ' on ' + moment(dt).local().format('MMM Do YYYY - h:mm a') + '</span>'

                            if (updateData.alternative_assign_to == user_id && updateData.assignedby == user_id && updateData.assign_status == user_id) {
                                assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(updateData.alternative_assign_to).fullname + '">| Self-assigned</span> '
                                assign_info += ' <span class="end_due_date _due_date" data="' + (updateData.end_due_date != null ? moment.unix(Number(updateData.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (updateData.end_due_date != null ? moment.unix(Number(updateData.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>'
                            } else {
                                assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(updateData.alternative_assign_to).fullname + '">| Assigned to ' + findObjForUser(updateData.alternative_assign_to).fullname + ' </span>'
                                assign_info += ' <span class="end_due_date _due_date" data="' + (updateData.end_due_date != null ? moment.unix(Number(updateData.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (updateData.end_due_date != null ? moment.unix(Number(updateData.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>'
                                assign_info += ' <span class="end_due_date assignBy_name" data="' + findObjForUser(updateData.assignedby).fullname + '">| Assigned by ' + findObjForUser(updateData.assignedby).fullname + ' </span>'
                            }
                            assign_info += '</div>';

                            var allActivity = '';
                            if (updateData.alternative_assign_to != null && updateData.end_due_date != null) {
                                allActivity += '<span class="activity_assignedTo"> | Assigned to ' + findObjForUser(updateData.alternative_assign_to).fullname + ' </span>'
                            }
                            if (updateData.assignedby != null && updateData.end_due_date != null) {
                                allActivity += '<span class="activity_assignedBy"> | Assigned by ' + findObjForUser(updateData.assignedby).fullname + ' </span>'
                            }

                            if (updateData.alternative_assign_to != null) {
                                if ($('.perchecklist_' + id).find('.assign_info').length == 1) {
                                    $('.perchecklist_' + id).find('.assign_info').remove();
                                    $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                                } else {
                                    $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                                }
                                $('.perchecklist_' + id).attr('assign-to', updateData.alternative_assign_to);
                                $('.perchecklist_' + id).attr('assigned-by', updateData.assignedby);
                                $('.perchecklist_' + id).find('.outer_ass.dueDateIcon img').attr('src', file_server + 'profile-pic/Photos/' + findObjForUser(alternatAssigneeUserid).img);
                                $('.ttl_request' + id).remove();
                                if (updateData.assignedby == user_id && updateData.alternative_assign_to != user_id) {
                                    $('.perchecklist_' + id).find('.assign_info').append('<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + id + '">Pending Acceptance.</span></div>');
                                }
                                $('.perchecklist_' + id).find('.activity_list_all .activity_assignedTo').remove();
                                $('.perchecklist_' + id).find('.activity_list_all .activity_assignedBy').remove();
                                $('.perchecklist_' + id).find('.endDue_date').remove();
                                $('.perchecklist_' + id).find('.checkBoxTitle').after('<div class="endDue_date"> Due by: ' + (updateData.end_due_date != null ? moment.unix(Number(updateData.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</div>');
                                $('.perchecklist_' + id).find('.activity_list_all').append(allActivity);
                            } else {
                                $('.perchecklist_' + id).find('.assign_info').remove();
                                $('.perchecklist_' + id).removeClass('waiting_3');
                                $('.perchecklist_' + id).attr('msg-pending', false);
                                $('.perchecklist_' + id).attr('assign-to', 'null');
                                $('.perchecklist_' + id).attr('assigned-by', 'null');
                                $('.ttl_request' + id).remove();
                            }

                            socket.emit('manage_checklist', updateData, function(res) {
                                    flash_msg_updated_fun(updateData.msg_id, 'Checklist updated');
                                    // toastr["success"]("Checklist updated");
                                    flash_msg_item_bottom(updateData.checklist_id);
                                    $(flatpickrEvent).addClass('AssigneeUser');
                                    $(flatpickrEvent).html('<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(alternatAssigneeUserid).img + '">');
                                    // $(".ttl_request"+checklistManageId).remove();
                                    $('.perchecklist_' + id).find('.dueDateIcon').removeClass('lock_for_user');
                                    $('.perchecklist_' + id).find('.dueDateIcon').show();
                                    $('.perchecklist_' + id).find('.item_del').show();
                                    $('.perchecklist_' + id).addClass('modified');
                                    var msg_time = moment().format();
                                    $('.perchecklist_' + id).attr('data-lastmodified', msg_time);
                                })
                                // console.log(33333, updateData)
                        }
                    } else {

                        var uid = $('#TaskUserId').attr('assign-id');
                        var old_t = $('#TaskDatePicker').attr('old-date');
                        var new_t = $('#TaskDatePicker').val();
                        var user = findObjForUser(uid);
                        if (assign_to == old_assignee && old_t == new_t) {
                            if ($('#dueDatePickerChecklist').attr('action') != 'declined') {
                                // console.log(111,'return')
                                closeTaskAssignModal('dueDatePickerChecklist')
                                return;
                            }
                            $('#dueDatePickerChecklist').removeAttr('action');
                        } else if (uid == '' && assign_to == null) {
                            if ($('#initialSubBtn').is(':visible') && $('#initialSubBtn .buttonAction').text() == 'Assign') {
                                closeTaskAssignModal('dueDatePickerChecklist');
                                return;
                            }
                        }
                        var note = null;
                        var currentTime = new Date().getTime();
                        if ($('#requestNote').is(':visible')) {
                            if ($('#requestNote').val() != '') {
                                note = $('#requestNote').val().trim() + '@' + user_id + '@' + currentTime;
                            } else {
                                note = null;
                            }
                        } else {
                            note = null;
                        }

                        var data = {
                            request_ttl_date: null,
                            request_ttl_message: note,
                            request_ttl_time: null,
                            Request_ttl_by: null,
                            request_ttl_approved_by: null,
                            request_ttl_approved_date: null,
                            assign_decline_note: null,
                            msg_id: $('#dueDatePickerChecklist').attr('msg-id'),
                            checklist_id: $('#dueDatePickerChecklist').attr('data-id'),
                            end_due_date: ((enddate == null ? null : enddate.toString())),
                            // end_due_date:((enddate == null ? null : enddate)),
                            assign_to: assign_to,
                            alternative_assign_to: null,
                            assign_status: user_id,
                            assignedby: user_id,
                            privacy: privacy,
                            // last_updated_at: moment().format(),
                            last_updated_at: moment().unix() * 1000,
                            last_updated_by: user_id
                        }

                        var stringBody = {
                            conversation_id: conversation_id,
                            conversation_type: conversation_type,
                            msg_id: $('#dueDatePickerChecklist').attr('msg-id'),
                            checklist_title: $('.msg_id_' + $('#dueDatePickerChecklist').attr('msg-id')).find('.checkListPlainText').text(),
                            checklist_id: $('#dueDatePickerChecklist').attr('data-id'),
                            end_due_date: ((enddate == null ? null : enddate.toString())),
                            assign_to: assign_to,
                            privacy: privacy,
                            item_title: $('.perchecklist_' + $('#dueDatePickerChecklist').attr('data-id')).find('.checkBoxTitle').text()
                        }

                        if (data.assign_to != null) {
                            notititle = 'new_assignee';
                        } else {
                            notititle = 'remove_assignee';
                        }
                        var noti_data = {
                            type: 'checklist_changes',
                            title: notititle,
                            body: JSON.stringify(stringBody),
                            created_at: new Date(),
                            created_by: user_id,
                            seen_users: (data.assign_to != null ? [data.assign_to] : [$('#TaskUserId').attr('assign-id')]),
                            receive_users: (data.assign_to != null ? [data.assign_to] : [$('#TaskUserId').attr('assign-id')])
                        }

                        console.log(data)

                        if (conversation_id !== user_id) {
                            insertNotiFun(noti_data);
                        }

                        var id = $('#dueDatePickerChecklist').attr('data-id');
                        // var up_check = $('.perchecklist_'+id).find('.end_due_date.upBy_name');
                        var dt = moment().format();
                        var crtBy = $('.perchecklist_' + id).find('.createdBy_name').text();

                        var assign_info = '<div class="assign_info">'
                        assign_info += '<span class="createdBy_name">' + crtBy + '</span>'
                        assign_info += ' <span class="end_due_date upBy_name" data="">| Updated by ' + findObjForUser(user_id).fullname + ' on ' + moment(dt).local().format('MMM Do YYYY - h:mm a') + '</span>'

                        if (data.assign_to == user_id && data.assignedby == user_id && data.assign_status == user_id) {
                            assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(data.assign_to).fullname + '">| Self-assigned</span> '
                            assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>'
                        } else {
                            assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(data.assign_to).fullname + '">| Assigned to ' + findObjForUser(data.assign_to).fullname + ' </span>'
                            assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>'
                            assign_info += ' <span class="end_due_date assignBy_name" data="' + findObjForUser(data.assignedby).fullname + '">| Assigned by ' + findObjForUser(data.assignedby).fullname + ' </span>'
                        }
                        assign_info += '</div>';

                        console.log('assign_info', assign_info);
                        var allActivity = '';
                        if (data.assign_to != null && data.end_due_date != null) {
                            allActivity += '<span class="activity_assignedTo"> | Assigned to ' + findObjForUser(data.assign_to).fullname + ' </span>'
                        }
                        if (data.assignedby != null && data.end_due_date != null) {
                            allActivity += '<span class="activity_assignedBy"> | Assigned by ' + findObjForUser(data.assignedby).fullname + ' </span>'
                        }
                        var Ac = $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').attr('data-assingment');
                        Ac = Number(Ac);
                        if (data.assign_to != null) {
                            if ($('.perchecklist_' + id).find('.assign_info').length == 1) {
                                $('.perchecklist_' + id).find('.assign_info').remove();
                                $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                            } else {
                                $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                            }
                            Ac = Number(Ac + 1);
                            $('.perchecklist_' + id).addClass('has_assign').removeClass('unassigned');
                            $('.perchecklist_' + id).attr('assign-to', data.assign_to);
                            $('.perchecklist_' + id).attr('assigned-by', data.assignedby);
                            $('.ttl_request' + id).remove();
                            if (data.assignedby == user_id && data.assign_to != user_id) {
                                $('.perchecklist_' + id).find('.assign_info').append('<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + id + '">Pending Acceptance.</span></div>');
                            }
                            $('.perchecklist_' + id).find('.activity_list_all .activity_assignedTo').remove();
                            $('.perchecklist_' + id).find('.activity_list_all .activity_assignedBy').remove();
                            $('.perchecklist_' + id).find('.endDue_date').remove();
                            $('.perchecklist_' + id).find('.checkBoxTitle').after('<div class="endDue_date"> Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</div>');
                            $('.perchecklist_' + id).find('.activity_list_all').append(allActivity);
                        } else {
                            Ac = Number(Ac - 1);
                            $('#dueDatePickerChecklist .hayven_Modal_Container').removeClass('request_review_open');
                            $('#dueDatePickerChecklist .hayven_Modal_Container').removeClass('decline_review_open');
                            $('#dueDatePickerChecklist .hayven_Modal_Container').removeClass('request_open');
                            $('#declineApprove').hide();
                            $('.perchecklist_' + id).find('.assign_info').remove();
                            $('.perchecklist_' + id).find('.item_toolbar').after('<div class="assign_info"><span class="createdBy_name">' + crtBy + '</span><span class="end_due_date upBy_name" data="">| Updated by ' + findObjForUser(user_id).fullname + ' on ' + moment(dt).local().format('MMM Do YYYY - h:mm a') + '</span></div>');
                            $('.perchecklist_' + id).attr('assign-to', 'null');
                            $('.perchecklist_' + id).attr('assigned-by', 'null');
                            $('.perchecklist_' + id).removeClass('waiting_3');
                            $('.perchecklist_' + id).attr('msg-pending', false);
                            $('.ttl_request' + id).remove();
                            $('.perchecklist_' + id).removeClass('has_assign').addClass('unassigned').addClass('my_pending');
                            $('.perchecklist_' + id).find('.activity_list_all .activity_assignedTo').remove();
                            $('.perchecklist_' + id).find('.activity_list_all .activity_assignedBy').remove();
                            taskItemCounter(data.msg_id)
                            console.log('Assignee Removed!');
                        }

                        console.log('update_checklist_time', data);

                        socket.emit('update_checklist_time', data, function(res) {
                            console.log(res);
                            flash_msg_updated_fun(data.msg_id, 'Checklist updated');
                            // toastr["success"]("Checklist updated");
                            flash_msg_item_bottom(data.checklist_id);
                            $('.perchecklist_' + id).find('.dueDateIcon').removeClass('lock_for_user');
                            $('.perchecklist_' + id).find('.dueDateIcon').show();
                            $('.perchecklist_' + id).find('.item_del').show();
                            $('.perchecklist_' + id).addClass('modified');
                            var msg_time = moment().format();
                            $('.perchecklist_' + id).attr('data-lastmodified', msg_time);
                        });

                        console.log('Assign And Unassign section', data);
                    }
                }
            } else {
                if ($('#dueDatePickerChecklist').attr('action-submit') == 'settings') {
                    // console.log(66666)
                    var allDueElm = $('#msgCheckItemContainer').find('.dueDateIcon');
                    $.each(allDueElm, function(k, v) {
                        if (enddate == null) {
                            $(v).attr('end-date', '');
                            $(v).attr('data-privacy', '');
                            $(v).attr('data-assignee', '');
                            $(v).removeClass('active');
                            $(v).removeClass('AssigneeUser');
                            $(v).html('');
                            $('#checkListPlainText1').attr('end-date', '');
                            $('#checkListPlainText1').attr('data-privacy', '');
                            $('#checkListPlainText1').attr('data-assignee', '');
                        } else {
                            $(v).attr('end-date', enddate);
                            $(v).attr('data-privacy', privacy);
                            $(v).attr('data-assignee', assign_to);
                            $('#checkListPlainText1').attr('end-date', enddate);
                            $('#checkListPlainText1').attr('data-privacy', privacy);
                            $('#checkListPlainText1').attr('data-assignee', assign_to);
                            $(v).addClass('active');
                            $(v).addClass('AssigneeUser');
                            $(v).html('<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(assign_to).img + '">');
                        }
                    })

                } else {
                    if (enddate == null) {
                        // console.log(77777)
                        $(flatpickrEvent).attr('end-date', '');
                        $(flatpickrEvent).attr('data-privacy', '');
                        $(flatpickrEvent).attr('data-assignee', '');

                        $(flatpickrEvent).removeClass('active');
                        // $(flatpickrEvent.target).removeClass('dueDateIcon');
                        $(flatpickrEvent).removeClass('AssigneeUser');
                        $(flatpickrEvent).html('');
                    } else {
                        // console.log(88888)
                        $(flatpickrEvent).attr('end-date', enddate);
                        $(flatpickrEvent).attr('data-privacy', privacy);
                        $(flatpickrEvent).attr('data-assignee', assign_to);

                        $(flatpickrEvent).addClass('active');
                        // $(flatpickrEvent.target).removeClass('dueDateIcon');
                        $(flatpickrEvent).addClass('AssigneeUser');
                        $(flatpickrEvent).html('<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(assign_to).img + '">');
                    }

                }
            }
        }

        closeModal('dueDatePickerChecklist');
    } else {
        $('#TaskUserId').find('.mini_remove_ico').click();
    }
    need_reprint = true;
}
var temp_assign_checklist_id = [];

function only_add_remove_assignee(msg_id, checklist_id, type) {
    // console.log(15855, {msg_id, checklist_id, user_id, type});
    socket.emit('only_add_remove_assignee', { msg_id, checklist_id, user_id, type }, (res) => {
        // console.log(15856, res);
        if (type == 'add') {
            temp_assign_checklist_id.push(checklist_id);
            $(".perchecklist_" + checklist_id).attr('assigned-by', user_id);
            $(".perchecklist_" + checklist_id).attr('assign-to', user_id);

            $(".perchecklist_" + checklist_id).find('.dueDateIcon').addClass("AssigneeUser").addClass("active");
            $(".perchecklist_" + checklist_id).find('.dueDateIcon').attr('data-assignee', user_id);
            $(".perchecklist_" + checklist_id).find('.dueDateIcon').attr('end-date', moment().format());
            $(".perchecklist_" + checklist_id).find('.dueDateIcon').html('<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(user_id).img + '">');
        } else {
            temp_assign_checklist_id.splice(temp_assign_checklist_id.indexOf(checklist_id));
            $(".perchecklist_" + checklist_id).attr('assigned-by', 'null');
            $(".perchecklist_" + checklist_id).attr('assign-to', 'null');

            $(".perchecklist_" + checklist_id).find('.dueDateIcon').removeClass("AssigneeUser").removeClass("active");
            $(".perchecklist_" + checklist_id).find('.dueDateIcon').attr('data-assignee', 'null');
            $(".perchecklist_" + checklist_id).find('.dueDateIcon').attr('end-date', 'null');
            $(".perchecklist_" + checklist_id).find('.dueDateIcon>img').remove();
        }
    })
}

function selectCheckItem(ele) {
    var updateAt = moment().format();
    var row = $(ele).parent('.checkListItem');
    var c_id = $(ele).parent('.checkListItem').attr('checklist-id');
    var assignedby = row.attr('assigned-by');
    var assign_to = row.attr('assign-to');
    var donemark = [];

    if (assignedby != null && assignedby != 'null' && assignedby != undefined) {
        if (donemark.indexOf(user_id) == -1) {
            donemark.push(assignedby);
        }
    }
    if (assign_to != null && assign_to != 'null' && assign_to != undefined) {
        if (donemark.indexOf(user_id) == -1) {
            donemark.push(assign_to);
        }
    }

    if (row.hasClass('has_assign')) {
        if (donemark.indexOf(user_id) == -1) {
            if (conversation_type == 'group') {
                if (adminArra.indexOf(user_id) == -1) {
                    return false;
                }
            }
        }
    } else {
        if (assign_to == null || assign_to == 'null' || assign_to === undefined) {
            assignedby = assign_to = user_id;
            // console.log('only_add_remove_assignee');
            only_add_remove_assignee(row.attr("msg_id"), row.attr("checklist-id"), 'add');
        }
    }

    if ($(ele).parents('.msgs-form-users').length == 1) {
        if ($(ele).parents('.msgs-form-users').find('.showMorechecklist').is(':visible')) {
            $(ele).parents('.msgs-form-users').find('.showMorechecklist').trigger('click');
        }
        $('.msgs-form-users').attr('check_edit', false);
        if (!$('.editMessageBody #msgCheckItemContainer').is(':visible')) {
            $(ele).parents('.msgs-form-users').attr('check_edit', true);
            $('#groupChatContainer').attr('msg-edit', true);
        }
        var elHtml = $(ele).parents('.msgs-form-users').find('.msgCheckListContainer')[0].outerHTML;
        if ($(ele).parents('.editMessageBody').length == 1) {
            $(ele).parents('.editMessageBody').find('.editMessageAction').addClass('active');
            if ($(ele).hasClass('radio_btn')) {
                if ($(ele).next('.checkBoxTitle').text() !== '') {
                    $(ele).parents('.editMessageBody').find('.checkBox').removeClass('checked');
                    $(ele).parents('.editMessageBody').find('.completed_by').remove();
                    $(ele).addClass('checked');
                    row.attr('checklist_status', 1);
                    // console.log(111)
                    $(ele).parent('.checkListItem').append('<div class="completed_by" update-by="' + user_id + '" update-time="' + moment().format() + '">Completed by ' + user_fullname + ' @ ' + moment(new Date()).local().format('MMM Do YYYY - h:mm a') + '</div>');
                }
            } else if ($(ele).hasClass('list_item') == false) {
                if ($(ele).hasClass('checked')) {
                    $(ele).parent('.checkListItem').find('.completed_by').remove();
                    $(ele).removeClass('checked');
                    row.attr('checklist_status', 0);
                    row.attr('review_status', 0);
                    row.removeClass('marked');

                    // console.log(222,'Un-mark')
                    if ($(ele).parent('.checkListItem').hasClass('completed_item')) {
                        if ($(ele).hasClass('new_unchk')) {
                            $(ele).removeClass('new_unchk')
                        } else {
                            $(ele).addClass('new_unchk');
                        }
                    } else {
                        $(ele).removeClass('new_chk');
                        if (!row.hasClass('has_assign')) {
                            only_add_remove_assignee(row.attr("msg_id"), row.attr("checklist-id"), 'remove');
                        }
                    }
                } else {
                    if ($(ele).next('.checkBoxTitle').text() !== '') {
                        $(ele).parent('.checkListItem').find('.completed_by').remove();
                        $(ele).parent('.checkListItem').append('<div class="completed_by" update-by="' + user_id + '" update-time="' + moment().format() + '">Completed by ' + user_fullname + ' @ ' + moment(new Date()).local().format('MMM Do YYYY - h:mm a') + '</div>');
                        $(ele).addClass('checked');
                        row.attr('checklist_status', 1);
                        row.addClass('marked');
                        // console.log(333,"Mark");
                        if (assignedby == user_id) {
                            row.attr('review_status', 0);
                        } else {
                            row.attr('review_status', 1);
                        }
                        if ($(ele).parent('.checkListItem').hasClass('pending_item')) {
                            if ($(ele).hasClass('new_chk')) {
                                $(ele).removeClass('new_chk');
                            } else {
                                $(ele).addClass('new_chk');
                            }
                        } else {
                            $(ele).removeClass('new_unchk');
                        }
                        var id = $(ele).parents('.msgs-form-users').attr('data-msgid');

                        if (last_checkList_body !== '') {
                            if (last_checkList_body.msg_id !== id) {
                                last_checkList_body = {
                                    msg_id: id,
                                    msg_body: elHtml
                                }
                            }
                        } else {
                            last_checkList_body = {
                                msg_id: id,
                                msg_body: elHtml
                            }
                        }
                    }
                }
                var el = $('.editable_checklistMsg .checkListPlainText');
                var old_v = el.attr('title').trim();
                var new_v = el.text().trim();
                var has_update = false;
                if (old_v != new_v) {
                    has_update = true;
                }
                if ($('.editable_checklistMsg .new_chk').length > 0 || $('.editable_checklistMsg .new_unchk').length > 0) {
                    $(ele).parents('.editMessageBody').find('.editMessageAction').removeClass('backChat');
                    $(ele).parents('.editMessageBody').find('.editMessageAction').addClass('chk_active');
                } else {
                    if (has_update == false) {
                        $(ele).parents('.editMessageBody').find('.editMessageAction').addClass('backChat');
                        $(ele).parents('.editMessageBody').find('.editMessageAction').removeClass('chk_active');
                    }
                }
            }
        } else {
            if ($(ele).hasClass('list_item') == false) {
                if ($(ele).hasClass('checked')) {
                    if ($(ele).hasClass('radio_btn') == false) {
                        $(ele).parent('.checkListItem').find('.completed_by').remove();
                        // $(ele).parent('.checkListItem').append('<div class="completed_by" update-by="'+user_id+'" update-time="'+moment().format()+'">Unchecked by '+user_fullname+' @ '+moment(new Date()).local().format('MMM Do YYYY - h:mm a')+'</div>');
                        $(ele).parent('.checkListItem').append('<div class="completed_by" update-by="' + user_id + '" update-time="' + moment().format() + '">Updated by ' + user_fullname + ' @ ' + moment(new Date()).local().format('MMM Do YYYY - h:mm a') + '</div>');
                        $(ele).removeClass('checked');
                        row.attr('checklist_status', 0);
                        // console.log(444)
                    }

                } else {
                    if ($(ele).hasClass('radio_btn')) {
                        $(ele).parents('.msgCheckListContainer').find('.completed_by').remove()
                        $(ele).parents('.msgCheckListContainer').find('.checkBox').removeClass('checked');
                    }
                    $(ele).parent('.checkListItem').find('.completed_by').remove();
                    // $(ele).parent('.checkListItem').append('<div class="completed_by" update-by="'+user_id+'" update-time="'+moment().format()+'">Completed by '+user_fullname+' @ '+moment(new Date()).local().format('MMM Do YYYY - h:mm a')+'</div>');
                    $(ele).parent('.checkListItem').append('<div class="completed_by" update-by="' + user_id + '" update-time="' + moment().format() + '">Updated by ' + user_fullname + ' @ ' + moment(new Date()).local().format('MMM Do YYYY - h:mm a') + '</div>');
                    $(ele).addClass('checked');
                    row.attr('checklist_status', 1);
                    // console.log(555)
                    var id = $(ele).parents('.msgs-form-users').attr('data-msgid');

                    if (last_checkList_body !== '') {
                        if (last_checkList_body.msg_id !== id) {
                            last_checkList_body = {
                                msg_id: id,
                                msg_body: elHtml
                            }
                        }
                    } else {
                        last_checkList_body = {
                            msg_id: id,
                            msg_body: elHtml
                        }
                    }

                    // var elHtml = $(ele).parents('.msgs-form-users').find('.msgCheckListContainer')[0].outerHTML;
                    // var id = $(ele).parents('.msgs-form-users').attr('data-msgid');
                    // var attch_audiofile = [];
                    // var attch_imgfile = [];
                    // var attch_otherfile = [];
                    // var attch_videofile = [];
                    // $.each($('.msg_id_'+id+' .fil_attach.attach-file '), function(k,v){
                    // 	attch_otherfile.push($(v).attr('data-file_name'));
                    // });
                    // $.each($('.msg_id_'+id+' .img_attach'),function(k,v){
                    // 	attch_imgfile.push($(v).attr('alt'));
                    // });
                    // $.each($('.msg_id_'+id+' .ado_attach'),function(k,v){
                    // 	attch_audiofile.push($(v).attr('data-file_name'));
                    // });
                    // $.each($('.msg_id_'+id+' .vdo_attach'),function(k,v){
                    // 	attch_videofile.push($(v).attr('data-file_name'));
                    // });

                    // var data = {
                    // 	conv_id 		: conversation_id,
                    // 	msg_id  		: id,
                    // 	msg_body 		: elHtml,
                    // 	update_at 		: updateAt,
                    // 	sender			: $(ele).parents('.msgs-form-users').find('.user-msg').attr('data-senderid'),
                    // 	sender_img		: $(ele).parents('.msgs-form-users').find('.user-msg').attr('data-senderimg'),
                    // 	sender_name		: $(ele).parents('.msgs-form-users').find('.user-msg').attr('data-sendername'),
                    // 	attch_audiofile		: attch_audiofile,
                    // 	attch_imgfile		: attch_imgfile,
                    // 	attch_otherfile		: attch_otherfile,
                    // 	attch_videofile		: attch_videofile,
                    // 	created_at:$(ele).parents('.msgs-form-users').attr('data-msg-date')
                    // };
                    // socket.emit('msg_fully_delete',data,(res)=>{
                    // if(res){
                    // 	$('.msg_id_'+data.msg_id).remove();
                    // 	var is_room = (conversation_type == 'group') ? true : false;
                    // 		socket.emit('send_message', {
                    // 			conversation_id: conversation_id, sender_img: user_id_to_img[data.sender],
                    // 			sender_name: user_id_to_fullname[data.sender], to: to,
                    // 			is_room: is_room, text: data.msg_body,old_created_time:data.created_at,last_update_user:user_id
                    // 		});
                    // }

                    // });
                }
            }
        }






        // var msg_id = $(ele).parents('.msgs-form-users').attr('data-msgid');
        // var thismsgAllchecklength = $('.msg_id_'+msg_id).find('.checkBox').length;
        // var thismsgAllcheck = $('.msg_id_'+msg_id).find('.checkBox.checked').length;
        // var allchecklistmsglength = $('.msgs-form-users[data-msg-type="checklist"]').length;
        // var checklist_status = 0;
        // $(ele).parent('.checkListItem').find('.completed_by').remove();
        // if($(ele).hasClass('checked')){
        // 	$(ele).removeClass('checked');
        // 	$(ele).parent('.checkListItem').append('<div class="completed_by" update-by="'+user_id+'" update-time="'+moment().format('MM/DD/YYYY hh:mm:ss')+'">Unchecked by '+user_fullname+' @ '+moment(new Date()).local().format('MMM Do YYYY - h:mm a')+'</div>');
        // 	checklist_status = 0;
        // 	if(thismsgAllchecklength == thismsgAllcheck){
        // 		var val = parseInt($('#checkListCounter').attr('data-val')) + 1;
        // 		$('#checkListCounter').attr('data-val',val).find('span').text((allchecklistmsglength - val)+'/'+allchecklistmsglength);
        // 		$('#incompleteChecklist').attr('data-items','('+val+')');
        // 	}


        // }else{

        // 	$(ele).addClass('checked');
        // 	$(ele).parent('.checkListItem').append('<div class="completed_by" update-by="'+user_id+'" update-time="'+moment().format('MM/DD/YYYY hh:mm:ss')+'">Completed by '+user_fullname+' @ '+moment(new Date()).local().format('MMM Do YYYY - h:mm a')+'</div>');
        // 	checklist_status = 1;
        // 	var nowcheck = $('.msg_id_'+msg_id).find('.checkBox.checked').length;
        // 	if(thismsgAllchecklength == nowcheck){
        // 		var val = parseInt($('#checkListCounter').attr('data-val')) - 1;
        // 		$('#checkListCounter').attr('data-val',val).find('span').text((allchecklistmsglength - val)+'/'+allchecklistmsglength);
        // 		$('#incompleteChecklist').attr('data-items','('+val+')');
        // 	}


        // }

        // var data = {
        // 	checklist_id:$(ele).parent('.checkListItem').attr('checklist-id'),
        // 	msg_id:$(ele).parents('.msgs-form-users').attr('data-msgid'),
        // 	checklist_status:checklist_status,
        // 	user_id:user_id,
        // 	conversation_id:conversation_id
        // }
        // $('.msg_id_'+data.msg_id).remove();
        // socket.emit('cheklistUpdateStatus',data,(res)=>{
        // 	// var html = '  <span class="msg-time last_update" style="font-style:italic;">  Last updated by '+user_fullname+' dated on '+moment(data.last_update_time).format('DD-MM-YYYY hh:mm:a')+'</span>';
        // 	// if($('.msg_id_'+data.msg_id).find('.user-msg h4').find('.last_update').length == 0){
        // 	// 	$('.msg_id_'+data.msg_id).find('.user-msg h4 .msg-time').after(html);
        // 	// }else{
        // 	// 	$('.msg_id_'+data.msg_id).find('.user-msg h4').find('.last_update').remove();
        // 	// 	$('.msg_id_'+data.msg_id).find('.user-msg h4 .msg-time').after(html);
        // 	// }
        // 	var data = res.data;
        // 	data['checklist'] = res.newChecklist;
        // 	draw_msg(data);
        // })




    } else {
        // if($('#msgCustomEditOption .activeRadio').hasClass('active')){
        // 		$('#msg #msgCheckItemContainer .checkBox').removeClass('checked');
        // 		if($(ele).next('.checkBoxTitle').text() !== ''){
        // 			$(ele).addClass('checked');
        // 		}
        // }else if($('#msgCustomEditOption .activeNumber').hasClass('active') == false){
        // 		if($(ele).hasClass('checked')){
        // 			$(ele).removeClass('checked');
        // 		}else{
        // 			if($(ele).next('.checkBoxTitle').text() !== ''){
        // 				$(ele).addClass('checked');
        // 			}
        // 		}
        // }
    }
}

function addNewCheckItemTemp() {
    var id_length = $('#msgCheckItemContainer .checkListItem').length + 1;
    var checkHtml = '';
    checkHtml += '<div class="checkListItem new_item" checklist_status="0" review_status="0">';
    if ($('#msgCustomEditOption .activeRadio').hasClass('active')) {
        checkHtml += '<div class="checkBox radio_btn" onclick="selectCheckItem(this)"></div>';
        checkHtml += '<div dd="11" id="checkBoxTitle' + id_length + '" class="checkBoxTitle" onpaste="onpasteFun(event)" contenteditable="true" placeholder="Add questionnaire ' + id_length + '" onkeyup="checkListTitleKeyup(event)" onkeydown="msgCheckListTitle(event)" onblur="msgChecklistBlur(event)" creator_id="' + user_id + '"></div>';
        // checkHtml += '<div data-balloon="Open this link" data-balloon-pos="down" data-balloon-length="small" class="link_open"  data-title="" onclick="link_open(this)"></div>';
    } else if ($('#msgCustomEditOption .activeNumber').hasClass('active')) {
        checkHtml += '<div class="checkBox list_item" data-list-num="' + id_length + '." onclick="selectCheckItem(this)"></div>';
        checkHtml += '<div dd="2" id="checkBoxTitle' + id_length + '" class="checkBoxTitle" onpaste="onpasteFun(event)" contenteditable="true" placeholder="Add a new task" onkeyup="checkListTitleKeyup(event)" onkeydown="msgCheckListTitle(event)" onblur="msgChecklistBlur(event)" creator_id="' + user_id + '"></div>';
        // checkHtml += '<div data-balloon="Open this link" data-balloon-pos="down" data-balloon-length="small" class="link_open"  data-title="" onclick="link_open(this)"></div>';
    } else {
        checkHtml += '<div class="checkBox" onclick="selectCheckItem(this)"></div>';
        checkHtml += '<div dd="3" id="checkBoxTitle' + id_length + '" class="checkBoxTitle" onpaste="onpasteFun(event)" contenteditable="true" placeholder="Add a new task" onkeyup="checkListTitleKeyup(event)" onkeydown="msgCheckListTitle(event)" onblur="msgChecklistBlur(event)" creator_id="' + user_id + '">';
        // checkHtml += '<div data-balloon="Open this link" data-balloon-pos="down" data-balloon-length="small" class="link_open"  data-title="" onclick="link_open(this)"></div>';
    }
    checkHtml += '</div>';
    if ($('#msgCheckItemContainer').parents('.msgs-form-users').length > 0) {

        checkHtml += '<div style="position:relative" class="outer_ass dueDateIcon"></div>';
        checkHtml += '<div class="item_UpdateButton" type="add" data-balloon="Click to add" data-balloon-pos="left" data-balloon-length="small" onclick="item_UpdateButton(event,\'assign\')"></div>';
        checkHtml += '<div class="item_delete" data-balloon="Delete" data-label="Delete" data-balloon-pos="down-right" data-balloon-length="small" onclick="delete_item_div(this,event)"></div>';
        checkHtml += '<div class="item_toolbar">'
        if ($('#checkListPlainText1').attr('end-date') != '' && $('#checkListPlainText1').attr('end-date') != undefined) {
            checkHtml += '	<div class="dueDateIcon active AssigneeUser" start-date="" end-date="' + $('#checkListPlainText1').attr('end-date') + '" data-privacy="' + $('#checkListPlainText1').attr('data-privacy') + '" data-assignee="' + $('#checkListPlainText1').attr('data-assignee') + '" onclick="checklistDueDate(this,event)"><img src="' + file_server + 'profile-pic/Photos/' + findObjForUser($('#checkListPlainText1').attr('data-assignee')).img + '"></div>';
        } else {
            checkHtml += '	<div class="dueDateIcon" start-date="" onclick="checklistDueDate(this,event)"></div>';
        }
        // checkHtml += '	<div data-balloon="Open this link" data-balloon-pos="down" data-balloon-length="small" class="link_open"  data-title="" onclick="link_open(this)"></div>'	
        checkHtml += '	<div data-balloon="Click to reply on this item." data-balloon-pos="left" data-balloon-length="medium" class="checkboxReplyBtn "  data-title="" onclick="openThreadForCheckI(event,this)" msg_id="" checklist-id=""></div>'
        checkHtml += '	<div data-balloon="Copy to Clipboard" data-balloon-pos="down-right" data-balloon-length="small" class="item_copy"  data-title="" onclick="copyThis_item(this)"></div>'
        checkHtml += '	<div data-balloon="Delete" data-label="Delete" data-balloon-pos="down-right" data-balloon-length="small" class="item_del"  data-title="" onclick="delete_item_div(this,event)"></div>'
            // checkHtml += '		<div data-balloon="More Options" data-balloon-pos="left" data-balloon-length="medium" class="item_more_tool"></div>'
        checkHtml += '</div>'
        checkHtml += '<div class="assign_info"></div>'
        checkHtml += '<div style="display:none" class="activity_list_all"></div>'
        checkHtml += '<div style="" class="add_a_task">Add a Task</div>'
    } else {
        checkHtml += '<div class="dueDateIcon" start-date="" onclick="checklistDueDate(this,event)"></div>'
    }

    var checkstring = true;
    var checklistid = '';
    $.each($('#msgCheckItemContainer').find('.checkListItem'), function(k, v) {
        if (checkstring) {
            if ($(v).find('.checkBoxTitle').text().trim().length == 0) {
                checkstring = false;
                checklistid = $(v).find('.checkBoxTitle').attr('id');
            }
        }
    });

    if (checkstring) {
        $('#msgCheckItemContainer .updatebtn').before(checkHtml);
        // stop focus the last item
        placeCaretAtEnd(document.getElementById('checkBoxTitle' + id_length));
    } else {

        placeCaretAtEnd(document.getElementById(checklistid));
    }
}

function onpasteFun(e) {
    if ($(e.target).parents('#msg').length > 0) return false;
    e.preventDefault();
    var text = '';
    // console.log(17748, e);
    if (e.clipboardData || e.originalEvent.clipboardData) {
        text = (e.originalEvent || e).clipboardData.getData('text/plain');
    } else if (window.clipboardData) {
        text = window.clipboardData.getData('Text');
    }
    if (document.queryCommandSupported('insertText')) {
        document.execCommand('insertText', false, text);
    } else {
        document.execCommand('paste', false, text);
    }
}

function msgCheckListTitle(event) {
    var code = event.keyCode || event.which;
    if (code == 13 && event.ctrlKey) {
        if ($('#msg #msgCheckItemContainer').is(':visible')) {
            event.preventDefault();
            event.stopImmediatePropagation();
            if ($('.editMessageBody').is(':visible')) {
                $('.editMessageBody .editMessageAction .saveBtn').trigger('click');
            } else {
                if (convStr('#checkListPlainText1') == '') {
                    if ($('#checkListPlainText1').hasClass('required') == false) {
                        $('#checkListPlainText1').addClass('required');
                    }
                    $('#checkListPlainText1').focus();
                } else {
                    checklistMsgOption({ type: 'itemRemove' });
                    if ($('#msgCheckItemContainer .checkListItem').length !== 0 || $('#msgCheckItemContainer .checkListPlainText').length !== 0) {
                        checklistMsgOption({ type: 'send' });
                    } else {
                        checklistMsgOption({ type: 'remove' });
                    }
                }

            }
        } else {
            event.preventDefault();
            event.stopImmediatePropagation();
            editMessageSaveAction($(event.target).parents('.msgs-form-users').attr('data-msgid'));
        }
    } else if (code == 13 && event.shiftKey) {
        event.preventDefault();
        event.stopImmediatePropagation();
        if ($('.editMessageBody #msgCheckItemContainer').is(':visible')) {
            var str = $(event.target).text();
            str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
            str = convert(str);
            str = str.replace(/&nbsp;/gi, '').trim();
            str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');

            // if(str !== ''){
            // 	addNewCheckItemTemp();
            // 	$(event.target).blur();
            // }else{
            // 	$(event.target).blur();
            // 	$(event.target).parent('.checkListItem').remove();
            // 	if($('#msgCheckItemContainer .checkListItem').length == 0 && $('#msgCheckItemContainer .checkListPlainText').length == 0){
            // 		if($('#msgCheckItemContainer').parent('.editMessageBody').length == 0){
            // 			addMsgCheckList();
            // 		}else{
            // 			var id_length = $('#msgCheckItemContainer .checkListPlainText').length + 1;
            // 			$('#msgCheckItemContainer').append('<p class="checkListPlainText" id="checkListPlainText'+id_length+'" contenteditable="true" onkeydown="checkListPlainText(event)"></p>');
            // 			$('#msgCheckItemContainer .checkListPlainText:last').click();
            // 			$('#msgCheckItemContainer .checkListPlainText:last').focus();
            // 		}

            // 	}else{
            // 		var id_length = $('#msgCheckItemContainer .checkListPlainText').length + 1;
            // 		$('#msgCheckItemContainer').append('<p class="checkListPlainText" id="checkListPlainText'+id_length+'" contenteditable="true" onkeydown="checkListPlainText(event)" onblur="plainCheckTextBlur(event)"></p>');
            // 		$('#msgCheckItemContainer .checkListPlainText:last').click();
            // 		$('#msgCheckItemContainer .checkListPlainText:last').focus();
            // 	}

            // }
        }
    } else if (code == 13 && !event.shiftKey && !event.ctrlKey || code == 9 && !event.shiftKey && !event.ctrlKey) {
        event.preventDefault();
        event.stopImmediatePropagation();
        var str = $(event.target).text().trim();
        var nextElement = $(event.target).parent('.checkListItem').next();
        if (nextElement.hasClass('checkListItem')) {
            if ($(event.target).closest(".checkListItem").hasClass("needUpdate")) {
                $(event.target).closest(".checkListItem").removeClass("needUpdate");
                add_chk_item($(event.target).closest(".checkListItem").find(".checkBoxTitle").attr("id"), 'update', 'f_keyup');
                if (str.length == 0) {
                    return;
                }
            }
            if (nextElement.hasClass('completed_item')) {
                $('#msgCheckItemContainer').find('.checkBoxTitle').last().focus();
            } else {
                placeCaretAtEnd(document.getElementById($(nextElement).find('.checkBoxTitle').attr('id')));
            }
        } else if (nextElement.hasClass('updatebtn')) {
            if (str.length == 0) {
                event.preventDefault();
                event.stopImmediatePropagation();
                placeCaretAtEnd(document.getElementById('checkListPlainText1'));
            } else {
                event.preventDefault();
                event.stopImmediatePropagation();
                if (str !== '') {
                    add_chk_item(event.target.id, 'add', 'f_keyup');
                    addNewCheckItemTemp();
                    $(event.target).blur();

                }

            }
        } else {
            event.preventDefault();
            event.stopImmediatePropagation();
            if (str !== '') {
                addNewCheckItemTemp();
                $(event.target).blur();
            } else {

                // $(event.target).blur();
                // $(event.target).parent('.checkListItem').remove();
                // if($('#msgCheckItemContainer .checkListItem').length == 0 && $('#msgCheckItemContainer .checkListPlainText').length == 0){
                // 	if($('#msgCheckItemContainer').parent('.editMessageBody').length == 0){
                // 		addMsgCheckList();
                // 	}else{
                // 		var id_length = $('#msgCheckItemContainer .checkListPlainText').length + 1;
                // 		$('#msgCheckItemContainer').append('<p class="checkListPlainText" id="checkListPlainText'+id_length+'" contenteditable="true" onkeydown="checkListPlainText(event)"></p>');
                // 		$('#msgCheckItemContainer .checkListPlainText:last').click();
                // 		$('#msgCheckItemContainer .checkListPlainText:last').focus();
                // 	}

                // }else{
                // 	var id_length = $('#msgCheckItemContainer .checkListPlainText').length + 1;
                // 	$('#msgCheckItemContainer').append('<p class="checkListPlainText" id="checkListPlainText'+id_length+'" contenteditable="true" onkeydown="checkListPlainText(event)" onblur="plainCheckTextBlur(event)"></p>');
                // 	$('#msgCheckItemContainer .checkListPlainText:last').click();
                // 	$('#msgCheckItemContainer .checkListPlainText:last').focus();
                // }

            }
        }

    } else if (code == 8) {
        var prevDiv;
        if ($(event.target).text() == '') {
            // prevDiv = $(event.target).parent('.checkListItem').prev();
            // if($(prevDiv).hasClass('checkListItem')){
            // 	$(event.target).parent('.checkListItem').remove();
            // 	$(prevDiv).find('.checkBoxTitle').click();
            // 	$(prevDiv).find('.checkBoxTitle').focus();
            // 	placeCaretAtEnd(document.getElementById($(prevDiv).find('.checkBoxTitle').attr('id')));
            // }else if($(prevDiv).hasClass('checkListPlainText')){
            // 	$(event.target).parent('.checkListItem').remove();
            // 	$(prevDiv).find('.checkListPlainText').click();
            // 	$(prevDiv).find('.checkListPlainText').focus();
            // 	placeCaretAtEnd(document.getElementById($(prevDiv).attr('id')));
            // }

        }

    } else if (code == 38 || code == 40) {
        event.preventDefault();
        event.stopImmediatePropagation();
        var str = $(event.target).text().trim();
        var nextElm = $(event.target).parents('.checkListItem').next(),
            prevElm = $(event.target).parents('.checkListItem').prev();
        var lookingFor = $(event.target).parents('.checkListItem').nextAll('.checkListItem:visible').first();
        // var nextElement = $(event.target).parents('.checkListItem').next();
        var nextElement = $(event.target).parents('.checkListItem').nextAll('.checkListItem:visible').first();
        if (code == 38) {
            // nextElement = $(event.target).parents('.checkListItem').prev();
            nextElement = $(event.target).parents('.checkListItem').prevAll('.checkListItem:visible').first();
        }

        if (nextElement.hasClass('checkListItem')) {
            placeCaretAtEnd(document.getElementById($(nextElement).find('.checkBoxTitle').attr('id')));
        } else {
            // placeCaretAtEnd(document.getElementById('checkListPlainText1'));
        }

        if (code == 38) {
            if (!prevElm.hasClass('checkListItem')) {
                var lst = $(event.target).parents('.itemContainer').find('.checkListItem:last');
                placeCaretAtEnd(document.getElementById(lst.find('.checkBoxTitle').attr('id')));
            }
        } else if (code == 40) {
            // console.log(lookingFor);
            if (!nextElm.hasClass('checkListItem')) {
                var frst = $(event.target).parents('.itemContainer').find('.checkListItem:first');
                placeCaretAtEnd(document.getElementById(frst.find('.checkBoxTitle').attr('id')));
            } else {
                if (!nextElm.is(':visible')) {
                    console.log(nextElm);
                    // placeCaretAtEnd(document.getElementById(nextElm.attr('id')));
                }
            }
        }
    } else if (code == 32) {
        if ($(event.target).text().length == 0) {
            event.preventDefault();
            event.stopImmediatePropagation();
        }
    }

    if (code == 27) {
        // console.log('test')
        event.preventDefault();
        event.stopImmediatePropagation();
        if ($('.editable_checklistMsg').is(':visible')) {
            let msgid = $(event.target).closest(".editable_checklistMsg").attr("data-msgid");
            $('.msg_id_' + msgid + ' .dir-msg-close-backs').trigger('click');
        }
    }

    if ($(event.target).parents('.checkListItem').hasClass('completed_item')) {
        event.preventDefault();
        event.stopImmediatePropagation();
    }

    checklist_draft_auto_save();
}

function checkListTitleKeyup(e) {
    e.preventDefault();
    e.stopImmediatePropagation();
    var code = e.keyCode || e.which;
    if (!$(e.target).parents('.checkListItem').hasClass('new_item')) {
        var itemOldValue = $(e.target).attr('data-title').toLowerCase().trim();
        var itemNewValue = $(e.target).text().toLowerCase().trim();

        if (itemOldValue != itemNewValue) {
            $(e.target).parents('.checkListItem').addClass('needUpdate');
            console.log('added again');
        } else {
            $(e.target).parents('.checkListItem').removeClass('needUpdate');
        }
    }
}

function add_chk_item(chk_sl, type, Btype) {
    // console.log("chk_sl ", chk_sl, type);
    var str = $("#" + chk_sl).text();
    var msg_id = $("#" + chk_sl).closest(".editable_checklistMsg").attr("data-msgid");
    var checklist_id = $("#" + chk_sl).closest(".checkListItem").attr("checklist-id");
    var conversation_id = $('.msg_id_' + msg_id).attr('conv-id');
    // get_conversation_obj(conversation_id)
    str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
    var str2 = str;
    // str = convert(str);
    // str = str.replace(/&nbsp;/gi, '').trim();
    // str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');
    str = str.replace(/<script([\S\s]*?)>([\S\s]*?)<\/script>/ig, '$1'); // remove all script
    str = str.replace(/&nbsp;/gi, '').trim(); // remove all white space
    str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, ''); // remove all white new line
    str = str.replace(/[<>]/g, '');
    if (str != "") {
        var item = {
            msg_id: msg_id,
            msg_title: $("#" + chk_sl).closest(".editable_checklistMsg").attr("data-msgbody"),
            user_id: user_id,
            convid: conversation_id,
            chk_title: str,
            checklist_id: checklist_id,
            type: type
        };
        socket.emit('add_chk_item', item, function(res) {
            // console.log(16070, res);
            if (res.status) {
                // flash_msg_updated_bottom(res.data.msg_id);
                flash_msg_updated_fun(res.data.msg_id, 'Checklist updated');
                // toastr["success"]("Checklist updated");
                need_reprint = true;

                setCookie("last_update_checklist", res.data.msg_id);
                if (type == 'add') {
                    var url = validURL(str2);
                    $("#" + chk_sl).closest(".checkListItem").removeClass('new_item').attr('is-url', url);
                    $("#" + chk_sl).closest(".checkListItem").find('.add_a_task').remove();
                    $("#" + chk_sl).attr("data-title", str);
                    $("#" + chk_sl).attr("edited-by", "null");
                    $("#" + chk_sl).attr("edited-at", "null");
                    $("#" + chk_sl).attr("last-action", "null");
                    $("#" + chk_sl).attr("my-id", user_id);
                    $("#" + chk_sl).attr("creator_id", user_id);
                    $("#" + chk_sl).attr("created_at", moment(res.data.created_at).toISOString());
                    $("#" + chk_sl).closest(".checkListItem").attr("created_by", user_id);
                    $("#" + chk_sl).closest(".checkListItem").attr("assigned-by", 'null');
                    $("#" + chk_sl).closest(".checkListItem").attr("assign-to", 'null');
                    $("#" + chk_sl).closest(".checkListItem").attr("created_at", moment(res.data.created_at).toISOString());
                    $("#" + chk_sl).closest(".checkListItem").attr("msg_id", res.data.msg_id);
                    $("#" + chk_sl).closest(".checkListItem").attr("checklist-id", res.data.checklist_id);
                    $("#" + chk_sl).closest(".checkListItem").find(".item_UpdateButton").attr('type', 'update');
                    $("#" + chk_sl).closest(".checkListItem").addClass("perchecklist_" + res.data.checklist_id);
                    $("#" + chk_sl).closest(".checkListItem").addClass("crt_me").addClass("visible").addClass("pending_item").addClass("just_added").addClass("unassigned").addClass("my_pending");
                    $("#" + chk_sl).closest(".checkListItem").find(".item_toolbar .dueDateIcon").attr("msg-id", res.data.msg_id).attr("data-id", res.data.checklist_id).attr("data-privacy", "").attr("data-assignee", "").attr("end-date", "").attr("start-date", "");
                    $("#" + chk_sl).closest(".checkListItem").find(".item_toolbar .link_open").attr("data-title", str2);
                    $("#" + chk_sl).closest(".checkListItem").find(".activity_list_all").html('<span class="activity_created">Created  by ' + findObjForUser(res.data.created_by).fullname + ' @ ' + moment(res.data.created_at).local().format('MMM Do YYYY - h:mm a') + '</span>');
                    $("#" + chk_sl).closest(".checkListItem").find(".assign_info").html('<span class="createdBy_name">Created  by ' + findObjForUser(res.data.created_by).fullname + ' on ' + moment(res.data.created_at).local().format('MMM Do YYYY - h:mm a') + '</span>');
                    taskItemCounter(res.data.msg_id);
                    var stringBody = {
                        conversation_id: conversation_id,
                        conversation_type: get_conversation_obj(conversation_id).conversation_type,
                        msg_id: res.data.msg_id,
                        checklist_title: $('.msg_id_' + res.data.msg_id).find('.checkListPlainText').text(),
                        checklist_id: res.data.checklist_id,
                        item_title: $(".perchecklist_" + res.data.checklist_id).find('.checkBoxTitle').text(),
                        request_by: user_id
                    }
                    var noti_data = {
                            type: 'checklist_changes',
                            title: 'addItem',
                            body: JSON.stringify(stringBody),
                            created_at: new Date(),
                            created_by: user_id,
                            seen_users: get_conversation_obj(conversation_id).participants_without_me,
                            receive_users: get_conversation_obj(conversation_id).participants_without_me
                        }
                        // console.log(stringBody, noti_data)
                    if (conversation_id !== user_id) {
                        insertNotiFun(noti_data);
                    }
                    if (Btype == 'assign') {
                        $("#" + chk_sl).closest(".checkListItem").find('.item_toolbar .dueDateIcon').trigger('click');
                    }
                } else if (type == 'update') {
                    // console.log(18504,str);
                    $("#" + chk_sl).attr("data-title", str);
                    var dt = moment().format();
                    var v_check = $('.perchecklist_' + checklist_id).find('.end_due_date.upBy_name').is(':visible');
                    var v_check2 = $('.perchecklist_' + checklist_id).find('.end_due_date.assignee_name').is(':visible');
                    var html = ' <span class="end_due_date upBy_name" data="' + findObjForUser(user_id).fullname + '">| Updated by ' + findObjForUser(user_id).fullname + ' on ' + moment(dt).local().format('MMM Do YYYY - h:mm a') + '' + (v_check2 ? ' | ' : '') + '</span>'
                    $('.perchecklist_' + checklist_id).removeClass('needUpdate');
                    $('.perchecklist_' + checklist_id).find('.end_due_date.upBy_name').remove();
                    $('.perchecklist_' + checklist_id).addClass('modified').attr('data-lastmodified', res.data.last_updated_at);
                    $('.perchecklist_' + checklist_id).find('.assign_info').append(html);
                    taskItemCounter(msg_id);
                    var stringBody = {
                        conversation_id: conversation_id,
                        conversation_type: get_conversation_obj(conversation_id).conversation_type,
                        msg_id: msg_id,
                        checklist_title: $('.msg_id_' + msg_id).find('.checkListPlainText').text(),
                        checklist_id: checklist_id,
                        item_title: str,
                        request_by: user_id
                    }
                    var noti_data = {
                        type: 'checklist_changes',
                        title: 'updateItem',
                        body: JSON.stringify(stringBody),
                        created_at: new Date(),
                        created_by: user_id,
                        seen_users: get_conversation_obj(conversation_id).participants_without_me,
                        receive_users: get_conversation_obj(conversation_id).participants_without_me
                    }
                    if (conversation_id !== user_id) {
                        insertNotiFun(noti_data);
                    }
                    // console.log(stringBody, noti_data, str)
                }
            }
            // console.log("add_chk_item res ",res)
        });
    } else {
        // var removeItem = [];
        // removeItem.push(checklist_id);
        // var d2 = {
        // 	conv_id	: conversation_id,
        // 	msg_id	: msg_id,
        // 	removeItem: removeItem
        // }
        // $('.perchecklist_'+checklist_id).remove();
        // socket.emit('removeItem',d2,function(res){
        // 	need_reprint = true;
        // 	taskItemCounter(msg_id);
        // });

        if (Btype == 'f_keyup') {
            $('#delete_item_div').attr('data-id', checklist_id);
            $('#delete_item_div').attr('msg-id', msg_id);
            $('#delete_item_div').css('display', 'flex');
        }

    }
}
socket.on("add_chk_new_item", (res) => {
    var data = res.data;
    var result = res.result;
    // console.log(17576, data,result);
    if (data.convid == $(".sideActive.selected").attr("data-conversationid")) {
        if ($(".msg_id_" + data.msg_id).is(":visible")) {
            if (result.type == 'update') {
                // console.log('Item updated');
                var v_check = $('.perchecklist_' + data.checklist_id).find('.end_due_date.upBy_name').is(':visible');
                var v_check2 = $('.perchecklist_' + data.checklist_id).find('.end_due_date.assignee_name').is(':visible');
                var html = ' <span class="end_due_date upBy_name" data="' + findObjForUser(data.last_updated_by).fullname + '">| Updated by ' + findObjForUser(data.last_updated_by).fullname + ' on ' + moment(data.last_updated_at).local().format('MMM Do YYYY - h:mm a') + '' + (v_check2 ? ' | ' : '') + '</span>';
                $('.perchecklist_' + data.checklist_id).find('.end_due_date.upBy_name').remove();
                // $('.perchecklist_'+data.checklist_id).find('.createdBy_name').remove();
                $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);

                $('.perchecklist_' + data.checklist_id).find('.checkBoxTitle').text(data.checklist_title);
                $('.perchecklist_' + data.checklist_id).find('.checkBoxTitle').attr('data-title', data.checklist_title);
            } else {
                // console.log('Item Added');
                var id_length = $(".msg_id_" + res.data.msg_id).find('.checkListItem').length + 1;

                var str = res.data.checklist_title.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
                var url = validURL(str);
                var html = '<div created_by="' + res.data.created_by + '" is-url="' + url + '" assigned-by="null" assign-to="null" data-ass="" checklist_status="0" review_status="0" created_at="' + moment(res.data.created_at).toISOString() + '" msg_id="' + res.data.msg_id + '" class="my_pending unassigned checkListItem hiddenCl visible perchecklist_' + res.data.checklist_id + ' pending_item new_append" checklist-id="' + res.data.checklist_id + '" created-at="">';
                html += '	<div class="checkBox " onclick="selectCheckItem(this)"></div>';
                // html +=	'	<div data-balloon="Open this link" data-balloon-pos="down" data-balloon-length="small" class="link_open"  data-title="'+str+'" onclick="link_open(this)"></div>';
                html += '	<div creator_id="' + res.data.created_by + '" class="checkBoxTitle" onpaste="onpasteFun(event)" created_at="' + moment(res.data.created_at).toISOString() + '" contenteditable="true" placeholder="Add a new task" onkeyup="checkListTitleKeyup(event)" onkeydown="msgCheckListTitle(event)" onblur="msgChecklistBlur(event)" data-title="' + str + '" my-id="' + user_id + '" edited-by="" edited-at="" last-action="" id="checkBoxTitle' + id_length + '">' + str + '</div>';
                html += '	<div last_updated_by="" style="position:relative" class="outer_ass dueDateIcon"></div>';
                html += '	<div class="item_UpdateButton" type="update" data-balloon="Click to update" data-balloon-pos="down-right" data-balloon-length="small" onclick="item_UpdateButton(event)"></div>';
                html += '	<div class="item_delete" data-balloon="Delete" data-label="Delete" data-balloon-pos="down-right" data-balloon-length="small" onclick="delete_item_div(this,event)"></div>';
                html += '	<div class="item_toolbar">';
                html += '	<div last_updated_by="null" data-balloon="Task Assignment" data-balloon-pos="down" data-balloon-length="small" checklist_status="0" review_status="0" class="dueDateIcon " msg-id="' + res.data.msg_id + '" data-id="' + res.data.checklist_id + '" data-privacy="" data-assignee="" end-date="" start-date="" onclick="checklistDueDate(this,event)"></div>';
                // html +=		'	<div data-balloon="Open this link" data-balloon-pos="down" data-balloon-length="small" class="link_open"  data-title="'+str+'" onclick="link_open(this)"></div>';
                html += '	<div data-balloon="Click to reply on this item." data-balloon-pos="down" data-balloon-length="small" class="checkboxReplyBtn " data-title="' + str + '" onclick="openThreadForCheckI(event,this)" msg_id="' + res.data.msg_id + '" checklist-id="' + res.data.checklist_id + '"></div>';
                html += '	<div data-balloon="Copy to Clipboard" data-balloon-pos="down-right" data-balloon-length="small" class="item_copy" data-title="' + str + '" onclick="copyThis_item(this)" msg_id="' + res.data.msg_id + '" checklist-id="' + res.data.checklist_id + '"></div>';
                html += '	<div data-balloon="Delete" data-label="Delete" data-balloon-pos="down-right" data-balloon-length="small" class="item_del" data-title="' + str + '" onclick="delete_item_div(this,event)" msg_id="' + res.data.msg_id + '" checklist-id="' + res.data.checklist_id + '"></div>';
                html += '	</div>';
                html += '	<div class="assign_info"><span class="createdBy_name">Created  by ' + findObjForUser(res.data.created_by).fullname + ' on ' + moment(res.data.created_at).local().format('MMM Do YYYY - h:mm a') + '</span></div>';
                html += '	<div style="display:none" class="activity_list_all"><span class="activity_created">Created  by ' + findObjForUser(res.data.created_by).fullname + ' @ ' + moment(res.data.created_at).local().format('MMM Do YYYY - h:mm a') + '</span></div>';
                html += '	<div style="display:none" class=" created_by_div"></div>';
                html += '</div>';

                if ($(".msg_id_" + res.data.msg_id).find(".checkListItem.new_item").length > 0) {
                    $(".msg_id_" + res.data.msg_id).find(".checkListItem.new_item").before(html);
                } else {
                    $(".msg_id_" + res.data.msg_id).find(".updatebtn").before(html);
                }
                taskItemCounter(res.data.msg_id);
            }

            // flash_msg_updated_bottom(res.data.msg_id);
            flash_msg_updated_fun(res.data.msg_id, 'Checklist updated');
            // toastr["success"]("Checklist updated");
        }
    }
});

function item_UpdateButton(event, Btype = null) {
    var type = $(event.target).attr('type');
    $(event.target).closest(".checkListItem").removeClass("needUpdate");
    add_chk_item($(event.target).closest(".checkListItem").find(".checkBoxTitle").attr("id"), type, Btype);
    if ($(event.target).closest(".checkListItem").hasClass('new_item')) {
        addNewCheckItemTemp();
    }
}

function flash_msg_updated_bottom(id) {
    $(".msg_id_" + id + " .checklistMsg_head").prepend("<p class='flash_msg_updated_bottom'>Checklist updated</p>");
    setTimeout(function() {
        $(".flash_msg_updated_bottom").remove();
    }, 5000);
}


function flash_msg_updated_fun(id, txt) {
    $(".msg_id_" + id).find(".flash_msg_updated").text(txt).show();
    setTimeout(function() {
        $(".msg_id_" + id).find(".flash_msg_updated").hide();
    }, 4000);
}

function flash_msg_item_bottom(id, txt) {
    if (txt != undefined) {
        $('.perchecklist_' + id).find('.item_toolbar').before("<p class='flash_msg_item_bottom'>" + txt + "</p>");
    } else {
        $('.perchecklist_' + id).find('.item_toolbar').before("<p class='flash_msg_item_bottom'>Response updated</p>");
    }

    setTimeout(function() {
        $(".flash_msg_item_bottom").remove();
    }, 4000);
}

$('body').on('keyup', '#msgCheckItemContainer', function(event) {
    var id = $('.editMessageBody #msgCheckItemContainer').parents('.msgs-form-users').attr('data-msgid');
    if (id != '' && id !== undefined) {
        var newHtml = $('.msg_id_' + id + ' .msgCheckListContainer')[0].outerHTML;
        var updateAt = new Date().getTime();

        var str = newHtml;
        str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
        str = convert(str);
        str = str.replace(/&nbsp;/gi, '').trim();
        str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');
        var strOld = oldMsgHtml;
        strOld = strOld.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
        strOld = convert(strOld);
        strOld = strOld.replace(/&nbsp;/gi, '').trim();
        strOld = strOld.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');
        // console.log(str == strOld);
        // console.log($('.editMessageBody #msgCheckItemContainer').find('.editMessageAction'))

        if (str == strOld) {
            $('.editMessageBody').find('.editMessageAction').removeClass('active');
            // if($('.editMessageBody').find('.editMessageAction').is(':visible')){
            // 	$('.editMessageBody').find('.editMessageAction').hide();

            // }
        } else {
            if (!$('.editMessageBody').find('.editMessageAction').hasClass('active')) {
                $('.editMessageBody').find('.editMessageAction').addClass('active');

            }
        }
    }
})

function keyupForPlain_textEdit(event) {
    // console.log($(event.target))
    var id = $(event.target).parents('.msgs-form-users').attr('data-msgid');
    if ($(event.target).parent('.editMessageBody').length > 0) {
        if (id != '') {
            var newHtml = $('.msg_id_' + id + ' .plain_text')[0].outerHTML;
            var updateAt = new Date().getTime();

            var str = newHtml;
            str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
            str = convert(str);
            str = str.replace(/&nbsp;/gi, '').trim();
            str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');
            var strOld = oldMessageHtml;
            strOld = strOld.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
            strOld = convert(strOld);
            strOld = strOld.replace(/&nbsp;/gi, '').trim();
            strOld = strOld.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');
            // console.log(str == strOld);
            // console.log($('.editMessageBody').find('.editMessageAction'))

            if (str == strOld) {
                $('.editMessageBody').find('.editMessageAction').removeClass('active');
            } else {
                if (!$('.editMessageBody').find('.editMessageAction').hasClass('active')) {
                    $('.editMessageBody').find('.editMessageAction').addClass('active');

                }

            }
        }
    }
}

function checkListPlainTextKeyup(e) {
    var old_v = $(e.target).attr('title').trim();
    var new_v = $(e.target).text().trim();
    var has_update = false;
    var action = $('.editable_checklistMsg .editMessageAction');
    if ($('.editable_checklistMsg .new_chk').length > 0 || $('.editable_checklistMsg .new_unchk').length > 0) {
        has_update = true;
    }
    if (old_v != new_v) {
        action.addClass('chk_active');
        action.removeClass('backChat');
    } else {
        if (has_update == false) {
            action.addClass('backChat');
            action.removeClass('chk_active');
        }
    }
}

function checkListPlainText(event) {
    var code = event.keyCode || event.which;
    if (code == 13 && event.ctrlKey) {
        if ($('#msg #msgCheckItemContainer').is(':visible')) {
            event.preventDefault();
            event.stopImmediatePropagation();

            if ($('.editMessageBody').is(':visible')) {
                if (convStr('#checkListPlainText1') == '') {
                    if ($('#checkListPlainText1').hasClass('required') == false) {
                        $('#checkListPlainText1').addClass('required');
                    }

                } else {
                    $('.editMessageBody .editMessageAction .saveBtn').trigger('click');
                }
            } else {
                if (convStr('#checkListPlainText1') == '') {
                    if ($('#checkListPlainText1').hasClass('required') == false) {
                        $('#checkListPlainText1').addClass('required');
                    }
                    $('#checkListPlainText1').focus();

                } else {
                    checklistMsgOption({ type: 'itemRemove' });
                    if ($('#msgCheckItemContainer .checkListItem').length !== 0 || $('#msgCheckItemContainer .checkListPlainText').length !== 0) {
                        checklistMsgOption({ type: 'send' });
                    } else {
                        checklistMsgOption({ type: 'remove' });
                    }
                }

            }
        } else {
            event.preventDefault();
            event.stopImmediatePropagation();
            editMessageSaveAction($(event.target).parents('.msgs-form-users').attr('data-msgid'));
        }
    } else if (code == 13 && event.shiftKey) {
        event.preventDefault();
        event.stopImmediatePropagation();
        if ($('.editMessageBody #msgCheckItemContainer').is(':visible')) {
            var str = $(event.target).text();
            str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
            str = convert(str);
            str = str.replace(/&nbsp;/gi, '').trim();
            str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');
            if (str !== '') {
                addNewCheckItemTemp();
                $(event.target).blur();
                $('#msgCheckItemContainer .checkListItem:last .checkBoxTitle').click().focus();
            } else {
                $(event.target).blur();
                if ($(event.target).attr('id') !== 'checkListPlainText1') {
                    $(event.target).remove();
                }
                if ($('#msgCheckItemContainer .checkListItem').length == 0 && $('#msgCheckItemContainer .checkListPlainText').length == 0) {
                    if ($('#msgCheckItemContainer').parent('.editMessageBody').length == 0) {
                        addMsgCheckList();
                    } else {
                        var id_length = $('#msgCheckItemContainer .checkListPlainText').length + 1;
                        $('#msgCheckItemContainer').append('<p class="checkListPlainText" id="checkListPlainText' + id_length + '" contenteditable="true" onkeydown="checkListPlainText(event)"></p>');
                        $('#msgCheckItemContainer .checkListPlainText:last').click();
                        $('#msgCheckItemContainer .checkListPlainText:last').focus();
                    }

                } else {
                    addNewCheckItemTemp();
                }

            }
        }

    } else if (code == 13 && !event.shiftKey && !event.ctrlKey) {
        event.preventDefault();
        event.stopImmediatePropagation();

        if ($('.editMessageBody').is(':visible')) {
            var msg_id = $(event.target).parents('.msgCheckListContainer').attr('msg-id');
            if (convStr('#checkListPlainText1') == '') {
                if ($('#checkListPlainText1').hasClass('required') == false) {
                    $('#checkListPlainText1').addClass('required');
                }
                $('#checkListPlainText1').focus();

            } else {
                if ($(event.target).next().hasClass('buttonAction')) {
                    var nextElement = $(event.target).siblings('.checkListItem');
                } else {
                    var nextElement = $(event.target).next();
                }
                if (nextElement.hasClass('checkListItem')) {
                    placeCaretAtEnd(document.getElementById($(nextElement).find('.checkBoxTitle').attr('id')));
                } else if (nextElement.hasClass('checkListPlainText')) {
                    placeCaretAtEnd(document.getElementById($(nextElement).attr('id')));
                }
                saveChecklistStatusAndTitle(msg_id);
                $(event.target).blur();
            }
        } else {
            if ($(event.target).attr('id') == 'email_addressMsg') {
                var value = $('#email_addressMsg').val();
                if (value !== " " && value !== "") {
                    if (validateEmail(value)) {
                        if (allTempEmailAddress.indexOf(value) == -1) {
                            allTempEmailAddress.push(value);
                            socket.emit('gravatarImg', { email: value, s: '200' }, (res) => {
                                if ($('#msg_email').find('.email_profile').length == 0) {

                                    $('#msg_email').prepend('<div class="email_profile" data-email="' + value + '"><span class="tempE img"><img src="' + res + '" /></span><p class="tempE email">' + value + '</p><span class="tempE tempRemove" onclick="removeThisEmail(this)"></span></div>');
                                } else {
                                    $('#msg_email .email_profile:last').after('<div class="email_profile" data-email="' + value + '"><span class="tempE img"><img src="' + res + '" /></span><p class="tempE email">' + value + '</p><span class="tempE tempRemove" onclick="removeThisEmail(this)"></span></div>');

                                }
                            });

                            if (!$('#msg_email').hasClass('active')) {
                                $('#msg_email').addClass('active');
                            }
                        }
                    }
                }
                $('#email_addressMsg').val('');

            } else {
                if ($(event.target).next().hasClass('buttonAction')) {
                    var nextElement = $(event.target).siblings('.checkListItem');
                } else {
                    var nextElement = $(event.target).next();
                    if ($(event.target).attr('id') == 'checkListPlainText1') {
                        nextElement = $('#checkBoxTitle1').parent('.checkListItem');
                    }
                }

                if (nextElement.hasClass('checkListItem')) {
                    placeCaretAtEnd(document.getElementById($(nextElement).find('.checkBoxTitle').attr('id')));
                } else if (nextElement.hasClass('checkListPlainText')) {
                    placeCaretAtEnd(document.getElementById($(nextElement).attr('id')));
                } else {
                    var str = $(event.target).text();
                    str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
                    str = convert(str);
                    str = str.replace(/&nbsp;/gi, '').trim();
                    str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');
                    event.preventDefault();
                    event.stopImmediatePropagation();
                    if (str !== '') {
                        addNewCheckItemTemp();
                        $(event.target).blur();
                        $('#msgCheckItemContainer .checkListItem:last .checkBoxTitle').click().focus();
                    } else {
                        $(event.target).blur();
                        if ($(event.target).attr('id') !== 'checkListPlainText1') {
                            $(event.target).remove();
                        }
                        if ($('#msgCheckItemContainer .checkListItem').length == 0 && $('#msgCheckItemContainer .checkListPlainText').length == 0) {
                            if ($('#msgCheckItemContainer').parent('.editMessageBody').length == 0) {
                                addMsgCheckList();
                            } else {
                                var id_length = $('#msgCheckItemContainer .checkListPlainText').length + 1;
                                $('#msgCheckItemContainer').append('<p class="checkListPlainText" id="checkListPlainText' + id_length + '" contenteditable="true" onkeydown="checkListPlainText(event)"></p>');
                                $('#msgCheckItemContainer .checkListPlainText:last').click();
                                $('#msgCheckItemContainer .checkListPlainText:last').focus();
                            }

                        } else {
                            addNewCheckItemTemp();
                            $('#msgCheckItemContainer .checkListItem:last .checkBoxTitle').click().focus();
                        }

                    }
                }
            }
        }

    } else if (code == 8) {

        if ($(event.target).attr('id') == 'email_addressMsg') {
            var value = $('#email_addressMsg').val();
            if (value == " " || value == "") {
                var text = $('#msg_email .email_profile:last').find('.tempE.email').text();
                $('#msg_email .email_profile:last').remove();

                removeA(allTempEmailAddress, text);
                if (allTempEmailAddress.length == 0) {
                    $('#msg_email').removeClass('active');
                }

            }
        } else {
            var prevDiv;
            if ($(event.target).text() == '') {
                $(event.target).html('');
                // prevDiv = $(event.target).prev();
                // if($(prevDiv).hasClass('checkListItem')){
                // 	$(event.target).remove();
                // 	$(prevDiv).find('.checkBoxTitle').click();
                // 	$(prevDiv).find('.checkBoxTitle').focus();
                // 	placeCaretAtEnd(document.getElementById($(prevDiv).find('.checkBoxTitle').attr('id')));
                // }else if($(prevDiv).hasClass('checkListPlainText')){
                // 	$(event.target).remove();
                // 	$(prevDiv).find('.checkListPlainText').click();
                // 	$(prevDiv).find('.checkListPlainText').focus();
                // 	placeCaretAtEnd(document.getElementById($(prevDiv).attr('id')));
                // }
            }
        }


    } else if (code == 38 || code == 40) {
        event.preventDefault();
        event.stopImmediatePropagation();
        if ($('.editMessageBody').is(':visible')) {
            if (convStr('#checkListPlainText1') == '') {
                if ($('#checkListPlainText1').hasClass('required') == false) {
                    $('#checkListPlainText1').addClass('required');
                }
                $('#checkListPlainText1').focus();

            } else {
                if ($(event.target).next().hasClass('buttonAction')) {
                    var nextElement = $(event.target).siblings('.checkListItem');
                } else {
                    var nextElement = $(event.target).next();
                    if (code == 38) {
                        nextElement = $(event.target).prev()
                    }
                }
                if (nextElement.hasClass('checkListItem')) {
                    placeCaretAtEnd(document.getElementById($(nextElement).find('.checkBoxTitle').attr('id')));
                } else if (nextElement.hasClass('checkListPlainText')) {
                    placeCaretAtEnd(document.getElementById($(nextElement).attr('id')));
                }
                //$('.editMessageBody .editMessageAction .saveBtn').trigger('click');
            }
        } else {
            if ($(event.target).next().hasClass('buttonAction')) {
                var nextElement = $(event.target).siblings('.checkListItem');
            } else {
                var nextElement = $(event.target).next();
                if (code == 38) {
                    nextElement = $(event.target).prev()
                }
                if ($(event.target).attr('id') == 'checkListPlainText1') {
                    if (code == 40) {
                        nextElement = $('#checkBoxTitle1').parent('.checkListItem');
                    } else {
                        nextElement = $('#msgCheckItemContainer').find('.checkListItem:last');
                    }
                }
            }

            if (nextElement.hasClass('checkListItem')) {
                placeCaretAtEnd(document.getElementById($(nextElement).find('.checkBoxTitle').attr('id')));
            } else if (nextElement.hasClass('checkListPlainText')) {
                placeCaretAtEnd(document.getElementById($(nextElement).attr('id')));
            } else {
                var str = $(event.target).text();
                str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1'); // replace all html tag
                str = convert(str);
                str = str.replace(/&nbsp;/gi, '').trim();
                str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, '');
                event.preventDefault();
                event.stopImmediatePropagation();
                if (str !== '') {
                    // addNewCheckItemTemp();
                    // $(event.target).blur();
                    // $('#msgCheckItemContainer .checkListItem:last .checkBoxTitle').click().focus();
                } else {
                    $(event.target).blur();
                    if ($(event.target).attr('id') !== 'checkListPlainText1') {
                        $(event.target).remove();
                    }
                    if ($('#msgCheckItemContainer .checkListItem').length == 0 && $('#msgCheckItemContainer .checkListPlainText').length == 0) {
                        placeCaretAtEnd(document.getElementById($('#msgCheckItemContainer .checkListPlainText')));

                    }

                }
            }
        }
    } else if (code == 32) {
        if ($(event.target).text().length == 0) {
            event.preventDefault();
            event.stopImmediatePropagation();
        }
    }

    // if ($(event.target).text().length > 50) {
    // 	if ($(event.target).text().length > 70) {
    // 		$('.editMessageBody #checkListPlainText1').css('font-size','16px');
    // 	}else {
    // 		$('.editMessageBody #checkListPlainText1').css('font-size','22px');
    // 	}
    // }else {
    // 	$('.editMessageBody #checkListPlainText1').css('font-size','34px');
    // }

}

function msgPlainText(event) {
    var code = event.keyCode || event.which;
    var checklistText = $(event.target).text();
    if (checklistText == 'Team Tasks' || checklistText == 'team tasks') {
        $(event.target).text('');
        event.preventDefault();
        event.stopImmediatePropagation();
        $('#warningsPopup').css('display', 'flex');
        $('#warningsPopup .warningMsg').text("Sorry! \"Team Tasks\" is reserved keyword for Team Assignment.");
        return false;
    }
    if (code == 13 && !event.shiftKey && !event.ctrlKey) {
        event.preventDefault();
        event.stopImmediatePropagation();
    }
    if (code == 8) {

        if ($(event.target).text() == '' || $(event.target).html() == '<br>') {
            $(event.target).html('');
            $(event.target).removeClass('_text_large');
            $(event.target).removeClass('_text_medium');
            $(event.target).removeClass('_text_small');
            $(event.target).addClass('_text_large');
        }
    }

    if ($(event.target).text().length > 30 && $(event.target).text().length < 60) {
        $(event.target).removeClass('_text_large');
        $(event.target).removeClass('_text_small');
        $(event.target).removeClass('_text_medium');
        $(event.target).addClass('_text_medium');
    } else if ($(event.target).text().length > 60) {
        $(event.target).removeClass('_text_small');
        $(event.target).removeClass('_text_medium');
        $(event.target).removeClass('_text_large');
        $(event.target).addClass('_text_small');
    }
    if ($(event.target).text().length < 30) {
        $(event.target).removeClass('_text_large');
        $(event.target).removeClass('_text_medium');
        $(event.target).removeClass('_text_small');
        $(event.target).addClass('_text_large');
    }

    if (convStr('#checkListPlainText1') !== '') {
        if ($('#checkListPlainText1').hasClass('required')) {
            $('#checkListPlainText1').removeClass('required');
        }
        checklist_draft_auto_save();
    }

}

function msgChecklistBlur(e) {
    if ($(e.target).text() == '') {
        $(e.target).html('');
        var allchecklist = $('#msgCheckItemContainer .checkListItem');
        if (allchecklist.length > 3) {
            $.each(allchecklist, function(k, v) {
                var elmId = $(v).find('.checkBoxTitle').attr('id');
                if (elmId !== 'checkBoxTitle1' && elmId !== 'checkBoxTitle2' && elmId !== 'checkBoxTitle3' && elmId !== 'checkBoxTitle4' && elmId !== 'checkBoxTitle5') {
                    if ($(v).find('.checkBoxTitle').text().trim().length == 0) {
                        if ($(e.target).attr('id') !== elmId) {
                            // $(v).remove();
                            // console.log($(v),$(e.target),'I am here!');
                            var newAllcheckitem = $('#msgCheckItemContainer .checkListItem');
                            $.each(newAllcheckitem, function(ka, va) {
                                $(va).find('.checkBoxTitle').attr('placeholder', 'Add a new task');
                                $(va).find('.checkBoxTitle').attr('id', 'checkBoxTitle' + (ka + 1));
                            });
                        }
                    }
                }
            })
        }
    }
    $('#msgCheckItemContainer .checkListItem').find('.checkBoxTitle').removeClass('focus_c');
    var str = $(e.target).text();
    str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1');
    str = str.replace(/[<>]/g, '');
    $(e.target).html(str);
}

function plainCheckTextBlur(e) {
    if ($(e.target).text() == '' || $(event.target).html() == '<br>') {
        $(e.target).html('');
    }
    var str = $(e.target).text();
    str = str.replace(/(<\/?(?:img|br)[^>]*>)|<[^>]+>/ig, '$1');
    $(e.target).html(str);

}

function checklist_draft_auto_save() {
    if (!$(".editable_checklistMsg").is(":visible")) {
        draft_checklist = {};
        localStorage.setItem('draft_checklist', JSON.stringify(draft_checklist));
        var items = [];
        $.each($('#msgCheckItemContainer .checkBoxTitle'), function(k, v) {
            var item = $(v).text();
            if (item != '') {
                items.push(item);
            }
        });
        var str = $('#checkListPlainText1').text();
        if (str != "") {
            draft_checklist = { conversation_id, user_id, 'title': str, 'items': items };
        }

        localStorage.setItem('draft_checklist', JSON.stringify(draft_checklist));
    }
}

function msg_draft_auto_save() {
    if (!$('#checkListPlainText1').is(':visible')) {
        draft_msg = {};
        localStorage.setItem('draft_msg', JSON.stringify(draft_msg));
        var str = $('#msg').html();
        if (str != "") {
            draft_msg = { conversation_id, user_id, 'msg': str };
        }

        localStorage.setItem('draft_msg', JSON.stringify(draft_msg));
    }
}
var oldMsgHtml = "";
var need_reprint = false;
var old_assignee = "";
var lastEditConv = "";

function ediCheckListMessage(msgid, u) {
    // console.log(222999, msgid,u);
    need_reprint = false;
    old_assignee = "";
    var hasright = false;
    if (conversation_type == 'personal') {
        hasright = true;
    } else if (u == user_id) {
        hasright = true;
    } else if (adminArra != null) {
        if (adminArra.indexOf(user_id) > -1 || u == user_id) {
            hasright = true;
        }
    }
    var reply_count = $('.msg_id_' + msgid).find('.no-of-replies').text();
    reply_count = Number(reply_count);
    if (reply_count > 0) {
        $('.msg_id_' + msgid).find('#_reply_count').remove();
        $('.msg_id_' + msgid).find('.reply_btn_n').append('<span id="_reply_count"> (' + reply_count + ')</span>');
    }

    if ($('#groupChatContainer').hasClass('task_assignment')) {
        $('.searchAndFilter').hide();
    }

    $('.msg_id_' + msgid).find('.filterMyResReq').addClass('temp_hide');
    $('.msg_id_' + msgid).find('.completed_all').addClass('temp_hide');
    $('.msg_id_' + msgid).find('.assignment_count').addClass('temp_hide');
    $('.msg_id_' + msgid).find('.unassignment_count').addClass('temp_hide');
    $('.msg_id_' + msgid).find('.over_due').addClass('temp_hide');
    // $('.msg_id_'+msgid).find('.showAllChecklist').addClass('temp_hide');
    // $('.msg_id_'+msgid).find('.show_activity').addClass('temp_hide');

    $('#groupChatContainer').addClass('editChecklist_active');

    $('.msg_id_' + msgid).addClass('editable_checklistMsg');
    $('.msgs-form-users-options').removeClass('editAction');
    $('#filterShowall_' + msgid).removeClass('active');
    var dateOver_due = Number($('.msg_id_' + msgid).find('.checkListItem.dateOver_due').length);
    var response_req = Number($('.msg_id_' + msgid).find('.checkListItem.response_req').length);
    var my_pending = Number($('.msg_id_' + msgid).find('.checkListItem.my_pending').length);
    if (response_req > 0) {
        $('#filterMyResReq_' + msgid).addClass('active');
        $('#filterMyResReq_' + msgid).removeClass('temp_hide');
        filterchecklistLastime(msgid, 'my_res_req');
    } else {
        if (dateOver_due == 1 || dateOver_due > 1) {
            $('#filterOverDue_' + msgid).addClass('active');
            $('#filterOverDue_' + msgid).removeClass('temp_hide');
            filterchecklistLastime(msgid, 'show_over_due');
        } else if (my_pending > 0) {
            $('#filterMyPending_' + msgid).addClass('active');
            $('#filterMyPending_' + msgid).removeClass('temp_hide');
            filterchecklistLastime(msgid, 'my_pending');
        } else {
            $('#filterPending_' + msgid).addClass('active');
            $('#filterPending_' + msgid).removeClass('temp_hide');
            filterchecklistLastime(msgid, 'pending');
        }
    }

    if ($('body').hasClass('chklst_incompleted')) {
        $('#closeRoomLabel').hide();
    }
    if ($('body').hasClass('checklistFilterView')) {
        $('#workFreeliToaster').hide();
    }

    if ($('body').hasClass('task_assignment')) {
        lastEditConv = $('.msg_id_' + msgid).attr('conv-id');
    }


    if ($('.msg_id_' + msgid).attr('check_edit')) {
        $('.msg_id_' + msgid).find('.updatebtn .cancel_btn').trigger('click');
    }
    $('#groupChatContainer').attr('msg-edit', true);
    $('.msg-more-popup').css({ 'display': 'none' });
    if ($('#msg').attr('data-checklist') == 'true') {
        $('#msgCheckItemContainer').remove();
        $('#msg').attr('data-checklist', 'false');
        $('#msg').attr('contenteditable', true);
        $('#msgCheckListBtn').removeClass('active');
        $('#msg').remove('.msgCheckListContainer');
    }
    oldMsgHtml = "";
    var editMessageId = msgid;
    oldMsgHtml = $('.msg_id_' + msgid + ' .msgCheckListContainer')[0].outerHTML;
    $('.msg_id_' + msgid + ' .msgs-form-users-options').hide();
    $('.editMessageAction').remove();
    $('.msg_id_' + msgid + ' .msgCheckListContainer').remove();
    var htm = '<div class="editMessageAction backChat active">' +
        // '<div class="saveBtn" onclick="editMessageSaveAction(\''+editMessageId+'\')">Update</div>'+
        '<div class="saveBtn" onclick="saveChecklistStatusAndTitle(\'' + editMessageId + '\')">Update</div>' +
        '<div class="cancelBtn" onclick="cancelEditAction(this,\'' + editMessageId + '\')">Cancel</div>' +
        '<div class="saveBtn BtoC" onclick="cancelEditAction(this,\'' + editMessageId + '\')">Close</div>' +
        '</div>';
    $('.msg_id_' + msgid + ' .user-msg>h4').after('<div class="editMessageBody">' + oldMsgHtml + htm + '</div>');
    var check_text_i = 0;
    var text_i = 0;
    $('.msg_id_' + msgid + ' .msgCheckListContainer').attr('id', 'msgCheckItemContainer');
    $.each($('.msg_id_' + msgid + ' .msgCheckListContainer .checkBoxTitle'), function(k, v) {
        check_text_i++;
        $(v).attr('contenteditable', 'true');
        $(v).attr('id', 'checkBoxTitle' + check_text_i + '');
    });
    $.each($('.msg_id_' + msgid + ' .msgCheckListContainer .checkListPlainText'), function(k, v) {
        text_i++;
        if ($(v).text() == 'Team Tasks' || $(v).text() == 'team tasks' || $(v).text() == 'My Tasks') {
            $(v).attr('contenteditable', 'false');
        } else {
            $(v).attr('contenteditable', 'true');
        }
        $(v).attr('id', 'checkListPlainText' + text_i + '');
    });
    $('.editMessageAction').attr('close-time', moment().add('5', 'seconds').unix());
    $('.msg_id_' + msgid + '').find('.msgs-form-users-options').addClass('editAction');
    // if(hasright){
    // 	addNewCheckItemTemp();
    // }else if ($('.msg_id_'+msgid+'').hasClass('team_task_msg')) {
    // 	addNewCheckItemTemp();
    // }
    addNewCheckItemTemp();
    $('.checkListItem.new_item').find('.checkBoxTitle').html('');
    $('.editable_checklistMsg .add_a_task').attr('onclick', 'filterchecklistLastime(\'' + msgid + '\',\'pending\')');
    if (!$('.editable_checklistMsg').find('.show_activity').hasClass('assignment_count')) {
        $('.editable_checklistMsg').find('.show_activity').text('Show Audit trails');
    }
    // ReadonlyCladd msgs-form-users msg_id_
    if ($('.msg_id_' + msgid).hasClass('ReadonlyCladd')) {
        $('.msg_id_' + msgid).find('.editMessageBody .checkListPlainText').attr('contenteditable', 'false');
    }
    $('.editMessageBody .checkListItem').removeClass('new_append');

    setTimeout(function() {
        var comckl = Number($('.msg_id_' + msgid).find('.checkListItem.completed_item').length);
        var pndckl = Number($('.msg_id_' + msgid).find('.checkListItem.pending_item').length);
        taskItemCounter(msgid);
        $('.msg_id_' + msgid).attr('data-pending', pndckl);
        $('.msg_id_' + msgid).attr('data-complete', comckl);
    }, 2000);
}

function checklistMsgOption(data) {
    if (data.type == 'send') {
        var emailSub = $('#checkListPlainText1').text();
        var checklist = [];
        var taskLinks = [];
        $.each($('#msg .checkListItem'), function(k, v) {
            checklist.push($(v).find('.checkBoxTitle').text());

            var allLink = linkify($(v).find('.checkBoxTitle').text().trim()).split('$_link_$');
            $.each(allLink, function(k, v) {
                if (v != '') {
                    if (taskLinks.indexOf(v.trim()) == -1) {
                        taskLinks.push(v.trim());
                    }
                }
            });
        });
        var newItemsList = [];
        $.each($('#msg .checkListItem'), function(k, v) {
            if ($(v).find('.checkBoxTitle').text() != '') {
                var assign_to = $(v).find('.dueDateIcon').attr('data-assignee');
                var end_due_date = $(v).find('.dueDateIcon').attr('end-date');
                var str = $(v).find('.checkBoxTitle').text();
                str = str.replace(/<script([\S\s]*?)>([\S\s]*?)<\/script>/ig, '$1'); // remove all script
                str = str.replace(/&nbsp;/gi, '').trim(); // remove all white space
                str = str.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, ''); // remove all white new line
                var item = {
                    checklist_title: str,
                    assign_to: (assign_to != undefined ? assign_to : null),
                    end_due_date: (end_due_date != undefined ? end_due_date : null)
                }
                newItemsList.push(item);
            }
        });

        var msg_body = $('#msg #checkListPlainText1').text().trim();
        msg_body = msg_body.replace(/<script([\S\s]*?)>([\S\s]*?)<\/script>/ig, '$1'); // remove all script
        msg_body = msg_body.replace(/&nbsp;/gi, '').trim(); // remove all white space
        msg_body = msg_body.replace(/^(\s*<br( \/)?>)*|(<br( \/)?>\s*)*$/gm, ''); // remove all white new line

        var msgdata = {
                msg_body: msg_body,
                user_id: user_id,
                fullname: user_fullname,
                user_img: user_img,
                items: newItemsList,
                conversation_id: conversation_id
            }
            // console.log('New Msg data',data);

        var msgtitle = $('#msgCheckItemContainer .checkListPlainText').text();
        $('#msgCheckItemContainer .checkListPlainText').html(msgtitle);
        $('#msgCheckItemContainer .checkListPlainText').attr('contenteditable', 'false');
        $('#msgCheckItemContainer .buttonAction').remove();
        $('#msgCheckItemContainer .checkBoxTitle').attr('contenteditable', 'false');
        $('#msgCheckItemContainer .checkBoxTitle').removeAttr('id');
        $('#msgCheckItemContainer .checkListPlainText').removeAttr('id');
        $('#msgCheckItemContainer').removeAttr('id');
        var email = $('#msg_email').val();
        if ($('#msg_email').is(':visible') && $('#msg_email').hasClass('active')) {
            var htmlData = {
                type: 'checklist',
                title: emailSub,
                checkitem: checklist
            }
            $('#msg_email').remove();
            var data = {
                to: allTempEmailAddress,
                sub: emailSub,
                text: '',
                msghtml: emailHtml(htmlData)
            }
            socket.emit('sendEmail', data, (res) => {
                if (res.msg == 'success') {
                    // console.log('Email has been sent');
                    // toastr["success"]("Email has been sent.");
                }
            })
        }
        $('#msg_email').remove();

        // msg_sending_process($('#msg').html(),taskLinks);
        socket.emit('saveNewChecklistMsg', msgdata, (res) => {
            console.log('saveNewChecklistMsg', res);
        });
        $('#msg').attr('data-checklist', 'false');
        $('#msg').attr('contenteditable', true);
        $('#msgCheckListBtn').removeClass('active');
        $('#msg .msgCheckListContainer').remove();
        $('#msg').focus();
        $('#msgCustomEditOption .activeNumber').removeClass('active');
        $('#msgCustomEditOption .activeRadio').removeClass('active');
        allTempEmailAddress = [];
    } else if (data.type == 'remove') {
        $('#msgCheckItemContainer .checkListPlainText').attr('contenteditable', 'false');
        $('#msgCheckItemContainer .buttonAction').remove();
        $('#msgCheckItemContainer .checkBoxTitle').attr('contenteditable', 'false');
        $('#msgCheckItemContainer .checkBoxTitle').removeAttr('id');
        $('#msgCheckItemContainer .checkListPlainText').removeAttr('id');
        $('#msgCheckItemContainer').removeAttr('id');
        $('#msg').attr('data-checklist', 'false');
        $('#msg').attr('contenteditable', true);
        $('#msgCheckListBtn').removeClass('active');
        $('#msg .msgCheckListContainer').remove();
        $('#msg').focus();
        $('#msgCustomEditOption .activeNumber').removeClass('active');
        $('#msgCustomEditOption .activeRadio').removeClass('active');
        $('#msgCustomEditOption div').removeClass('active');
        allTempEmailAddress = [];
    } else if (data.type == 'itemRemove') {
        $.each($('#msgCheckItemContainer .checkBoxTitle'), function(k, v) {
            if ($(v).text() == '') {
                $(v).parent('.checkListItem').remove();
            }
        });

        $.each($('#msgCheckItemContainer .checkListPlainText'), function(k, v) {
            if ($(v).text() == '') {
                $(v).remove();
            }
        });
    }
    localStorage.removeItem('draft_checklist');
    draft_checklist = {};
}


function customEditor(type) {
    if (type == 'ul') {
        if ($('#msgCustomEditOption .activeRadio').hasClass('active')) {
            // $('#msg #msgCheckItemContainer .checkBox').removeClass('radio_btn');
            // $('#msgCustomEditOption .activeRadio').removeClass('active');
            // $('#msgCustomEditOption .activeCheckbox').addClass('active');
        } else {
            $('#msgCustomEditOption .activeCheckbox').removeClass('active');
            $('#msg #msgCheckItemContainer .checkBox').removeClass('checked');
            $('#msg #msgCheckItemContainer .completed_by').html('');
            $('#msgCustomEditOption .activeNumber').removeClass('active');
            $('#msgCustomEditOption .activeRadio').addClass('active');
            $('#msg #msgCheckItemContainer .checkBox').removeClass('list_item');
            $('#msg #msgCheckItemContainer .checkBox').addClass('radio_btn');
            $('#msg  #checkListPlainText1').attr('placeholder', 'Write a questionnaire to know the feelings.');
            var i = 0;
            $.each($('#msg #msgCheckItemContainer .checkBox'), function(k, v) {
                i++;
                $(v).parent('.checkListItem').find('.checkBoxTitle').attr('placeholder', 'Add questionnaire ' + i + '');
            });
        }
    } else if (type == 'ol') {
        if ($('#msgCustomEditOption .activeNumber').hasClass('active')) {
            // $('#msg #msgCheckItemContainer .checkBox').removeClass('list_item');
            // $('#msgCustomEditOption .activeNumber').removeClass('active');
            // $('#msgCustomEditOption .activeCheckbox').addClass('active');
        } else {
            $('#msgCustomEditOption .activeCheckbox').removeClass('active');
            $('#msg #msgCheckItemContainer .checkBox').removeClass('checked');
            $('#msg #msgCheckItemContainer .completed_by').html('');
            $('#msgCustomEditOption .activeRadio').removeClass('active');
            $('#msgCustomEditOption .activeNumber').addClass('active');
            $('#msg #msgCheckItemContainer .checkBox').removeClass('radio_btn');
            $('#msg #msgCheckItemContainer .checkBox').addClass('list_item');
            // $('#msg  #checkListPlainText1').attr('placeholder', 'Write a checklist to '+$('#conv_title .converstaion_name').text()+'.');
            $('#msg  #checkListPlainText1').attr('placeholder', 'Checklist Title...');
            var i = 0;
            $.each($('#msg #msgCheckItemContainer .checkBox'), function(k, v) {
                i++;
                $(v).attr('data-list-num', i + '.');
                $(v).parent('.checkListItem').find('.checkBoxTitle').attr('placeholder', 'Add a new task');
            });

        }
    } else if (type == 'cl') {
        if ($('#msgCustomEditOption .activeCheckbox').hasClass('active') == false) {
            $('#msg #msgCheckItemContainer .checkBox').removeClass('list_item');
            $('#msgCustomEditOption .activeNumber').removeClass('active');
            $('#msg #msgCheckItemContainer .checkBox').removeClass('radio_btn');
            $('#msgCustomEditOption .activeRadio').removeClass('active');
            $('#msgCustomEditOption .activeCheckbox').addClass('active');
            // $('#msg  #checkListPlainText1').attr('placeholder', 'Write a checklist to '+$('#conv_title .converstaion_name').text()+'.');
            $('#msg  #checkListPlainText1').attr('placeholder', 'Checklist Title...');
            var i = 0;
            $.each($('#msg #msgCheckItemContainer .checkBox'), function(k, v) {
                i++;
                $(v).parent('.checkListItem').find('.checkBoxTitle').attr('placeholder', 'Add a new task');
            });
        }
    } else if (type == 'mail') {
        allTempEmailAddress = [];
        if ($('#msgCustomEditOption .activeMail').hasClass('active')) {
            $('#msgCustomEditOption .activeMail').removeClass('active');
            $('#msg_email').remove();
            $('#checkListPlainText1').focus();

        } else {
            $('#msgCustomEditOption .activeMail').addClass('active');
            $('#msgCheckItemContainer').prepend('<div class="input_email" id="msg_email" ><input type="email" id="email_addressMsg" onkeydown="checkListPlainText(event)"></div>');
            $('#email_addressMsg').focus();

        }
    }
}

function checklistSubmit() {
    // //debugger;
    var hasitem = false;
    $.each($('#msgCheckItemContainer .checkListItem'), function(k, v) {
        if (!hasitem) {
            if ($(v).text().length > 0) {
                hasitem = true;
            }
        }
    });
    if (!hasitem) {
        $('#warningsPopup').css('display', 'flex');
        $('#warningsPopup .warningMsg').text("Sorry! At least one checklist item is required to post a checklist. Please add a checklist item and then click submit.");
        return false;
    }
    if (convStr('#checkListPlainText1') == '') {
        if ($('#checkListPlainText1').hasClass('required') == false) {
            $('#checkListPlainText1').addClass('required');
        }
        $('#warningsPopup').css('display', 'flex');
        $('#warningsPopup .warningMsg').text("Sorry! Checklist title is required to post a checklist. Please write checklist title and then click submit.");
        $('#checkListPlainText1').focus();
    } else {
        checklistMsgOption({ type: 'itemRemove' });
        if ($('#msgCheckItemContainer .checkListItem').length !== 0 || $('#msgCheckItemContainer .checkListPlainText').length !== 0) {
            checklistMsgOption({ type: 'send' });
        } else {
            checklistMsgOption({ type: 'remove' });
        }
    }
    if ($('.sideActive.selected').attr('data-conversationtype') == 'group') $('#msg_pvt_btn').show();
}

function validateEmail(value) {
    var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
    return emailReg.test(value);
}

function removeThisEmail(ele) {
    var text = $(ele).parent('.email_profile').find('.tempE.email').text();
    $(ele).parent('.email_profile').remove();
    removeA(allTempEmailAddress, text);
    if (allTempEmailAddress.length == 0) {
        $('#msg_email').removeClass('active');
    }
    $('#email_addressMsg').focus();

}

function emailHtml(data) {
    var design = '';
    design += '<!doctype html>';
    design += '<html>';
    design += '<head>';
    design += '<meta name="viewport" content="width=device-width">';
    design += '<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">';
    design += '<title>Freeli</title>';
    design += '<style>@media only screen and (max-width: 620px) {table[class=body] h1 {font-size: 28px !important;margin-bottom: 10px !important;}table[class=body] p,table[class=body] ul,table[class=body] ol,table[class=body] td,table[class=body] span,table[class=body] a {font-size: 16px !important;}table[class=body] .wrapper,table[class=body] .article {padding: 10px !important;}table[class=body] .content {padding: 0 !important;}table[class=body] .container {padding: 0 !important;width: 100% !important;}table[class=body] .main {border-left-width: 0 !important;border-radius: 0 !important;border-right-width: 0 !important;}table[class=body] .btn table {width: 100% !important;}table[class=body] .btn a {width: 100% !important;}table[class=body] .img-responsive {height: auto !important;max-width: 100% !important;width: auto !important;}}@media all {.ExternalClass {width: 100%;}.ExternalClass,.ExternalClass p,.ExternalClass span,.ExternalClass font,.ExternalClass td,.ExternalClass div {line-height: 100%;}.apple-link a {color: inherit !important;font-family: inherit !important;font-size: inherit !important;font-weight: inherit !important;line-height: inherit !important;text-decoration: none !important;}.btn-primary table td:hover {background-color: #34495e !important;}.btn-primary a:hover {background-color: #34495e !important;border-color: #34495e !important;}}</style>';
    design += '</head>';
    design += '<body class="" style="background-color: #f6f6f6; font-family: sans-serif; -webkit-font-smoothing: antialiased; font-size: 14px; line-height: 1.4; margin: 0; padding: 0; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%;">';
    design += '<table border="0" cellpadding="0" cellspacing="0" class="body" style="border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background-color: #f6f6f6;">';
    design += '<tr>';
    design += '<td style="font-family: sans-serif; font-size: 14px; vertical-align: top;">&nbsp;</td>';
    design += '<td class="container" style="font-family: sans-serif; font-size: 14px; vertical-align: top; display: block; Margin: 0 auto; max-width: 580px; padding: 10px; width: 580px;">';
    design += '<div class="content" style="box-sizing: border-box; display: block; Margin: 0 auto; max-width: 580px; padding: 10px;  border:1px solid #d8d8d8;border-radius: 4px;">';
    design += '<span class="preheader" style="color: transparent; display: none; height: 0; max-height: 0; max-width: 0; opacity: 0; overflow: hidden; mso-hide: all; visibility: hidden; width: 0;">This is preheader text. Some clients will show this text as a preview.</span>';
    design += '<table class="main" style="border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%; background: #ffffff; border-radius: 3px;">';
    design += '<tr>';
    design += '<td class="wrapper" style="font-family: sans-serif; font-size: 14px; vertical-align: top; box-sizing: border-box; padding: 20px; text-align: center;"><img src="https://ca.freeli.io/images/logo_icon.png"></td>';
    design += '</tr>';
    design += '<tr>';
    design += '<td class="wrapper" style="font-family: sans-serif; font-size: 14px; vertical-align: top; box-sizing: border-box; padding: 0px 20px;">';
    if (data.type == 'checklist') {
        design += '<h1 style="font-size: 20px; color:#000000; margin:0px;">' + data.title + '</h1>';
        design += '<tr>';
        design += '<td class="wrapper" style="font-family: sans-serif; font-size: 14px; vertical-align: top; box-sizing: border-box; padding: 10px 20px;">';
        $.each(data.checkitem, function(k, v) {
            design += '<div style="display: block;float: left;padding: 8px 0px;width: 100%;height: 46px;box-sizing: border-box;">';
            design += '<div style="position: relative;width: 25px;height: 25px;cursor: pointer;display: block;transition: all 0.2s ease;background: #ffffff;border: 2px solid #d8d8d8;box-sizing: border-box;float: left;border-radius: 100%;margin-top: 2px;"></div>';
            design += '<div style="float: left;margin-left: 8px;color: #000000;font-size: 16px;min-width: 115px;max-width: calc(100% - 75px);line-height: 24px;height: 26px;overflow: hidden;border-bottom: 1px dashed #7d7373;box-sizing: border-box;padding: 2px 2px;">' + v + '</div>';
            design += '</div>';
        });
        design += '</td>';
        design += '</tr>';
    }
    design += '</td>';
    design += '</tr>';
    design += '</table>';
    design += '<div class="footer" style="clear: both; Margin-top: 10px; text-align: center; width: 100%;">';
    design += '<table border="0" cellpadding="0" cellspacing="0" style="border-collapse: separate; mso-table-lspace: 0pt; mso-table-rspace: 0pt; width: 100%;">';
    design += '<tr>';
    design += '<td class="content-block" style="font-family: sans-serif; vertical-align: top; padding-bottom: 10px; padding-top: 10px; font-size: 12px; color: #999999; text-align: center;">';
    design += '<span class="apple-link" style="color: #999999; font-size: 12px; text-align: center;">Ascent Group, House 3D, Road 2A, Block J, Baridhara, Dhaka 1212</span>';
    design += '</td>';
    design += '</tr>';
    design += '<tr>';
    design += '<td class="content-block powered-by" style="font-family: sans-serif; vertical-align: top; padding-bottom: 10px; padding-top: 10px; font-size: 12px; color: #999999; text-align: center;">';
    design += 'Powered by <a href="http://www.imaginebd.com/" target="_blank"style="color: #999999; font-size: 12px; text-align: center; text-decoration: none;">Imagine Technologies</a>.';
    design += '</td>';
    design += '</tr>';
    design += '</table>';
    design += '</div>';
    design += '</div>';
    design += '</td>';
    design += '<td style="font-family: sans-serif; font-size: 14px; vertical-align: top;">&nbsp;</td>';
    design += '</tr>';
    design += '</table>';
    design += '</body>';
    design += '</html>';
    return design.toString();

}

function setMsgTimer(ele) {
    var default_time = new moment().add('1', 'm').format("YYYY-MM-DD hh:mm:ss A");
    if (!$('#setMsgTimer').hasClass('activeTime')) {
        // $('.flatpickr-calendar').show();
        flatpickr("#setMsgTimer", {
            enableTime: true,
            noCalendar: false,
            enableSeconds: true,
            dateFormat: "Y:m:d h:i:S K",
            minDate: default_time,
            defaultDate: default_time,
            time_24hr: false
        }).open();
        $('#setMsgTimer').addClass('activeTime');
    } else {
        flatpickr("#setMsgTimer", {
            enableTime: true,
            noCalendar: false,
            enableSeconds: true,
            dateFormat: "Y:m:d h:i:S K",
            minDate: default_time,
            defaultDate: default_time,
            time_24hr: false
        }).destroy();
        $('#setMsgTimer').removeClass('activeTime');
    }
    $('#setMsgTimer').attr('value', moment($('#setMsgTimer').val(), 'YYYY-MM-DD hh:mm:ss A').unix());
}

$('#setMsgTimer').on('change', function() {
    $('#setMsgTimer').attr('value', moment($('#setMsgTimer').val(), 'YYYY-MM-DD hh:mm:ss A').unix());
})


setInterval(function() {
    $.each($('.timer_msg'), function(k, v) {
        var msg_id = $(this).parents('.msgs-form-users').attr('data-msgid');
        var eventTime = Number($(this).attr('data-value')); // Timestamp - Sun, 21 Apr 2013 13:00:00 GMT
        var currentTime = new Date().getTime(); // Timestamp - Sun, 21 Apr 2013 12:30:00 GMT
        var diffTime = eventTime - currentTime;
        var duration = moment.duration(diffTime);

        // duration = moment.duration(duration - 1000, 'milliseconds');
        // console.log(22810,eventTime,currentTime,duration.seconds());
        if (eventTime < currentTime) {
            $('.msg_id_' + msg_id).remove();
        } else {
            if (duration.seconds() > -1) {
                var text = '';
                if (duration.years() == 0 && duration.months() == 0 && duration.days() == 0 && duration.hours() == 0 && duration.minutes() == 0) {
                    text = duration.seconds() + "s";
                } else if (duration.years() == 0 && duration.months() == 0 && duration.days() == 0 && duration.hours() == 0) {
                    text = duration.minutes() + "m : " + duration.seconds() + "s";
                } else if (duration.years() == 0 && duration.months() == 0 && duration.days() == 0) {
                    text = duration.hours() + "h : " + duration.minutes() + "m : " + duration.seconds() + "s";
                } else if (duration.years() == 0 && duration.months() == 0) {
                    text = duration.days() + "d : " + duration.hours() + "h : " + duration.minutes() + "m : " + duration.seconds() + "s";
                } else if (duration.years() == 0) {
                    text = duration.minutes() + "m : " + duration.seconds() + "s";
                } else {
                    text = duration.years() + "y : " + duration.months() + "m : " + duration.days() + "d : " + duration.hours() + "h : " + duration.minutes() + "m : " + duration.seconds() + "s";
                }

                $(this).text(text);
            }
        }
    });
    $.each($('.progressImg .meter'), function(k, v) {
        var dataVl = parseInt($(v).attr('data-value')) + 18;

        if (dataVl < 100) {
            $(v).attr('data-value', dataVl);
            $(v).css('width', dataVl + '%');
        }
    });

    var time = moment().unix();
    // console.log(time);
    // $.each($('.checkListItem.new_assign'),function(k,v){
    // 	if($(v).attr('ux-time') < time){
    // 		$(v).removeAttr('ux-time');
    // 		$(v).removeClass('new_assign');
    // 	}
    // })

    $.each($('.editMessageAction'), function(k, v) {
        if ($('.editMessageAction').attr('close-time') < time) {
            $(v).removeAttr('close-time');
        }
    })
    $.each($('.toastContainer'), function(k, v) {
        if ($(v).attr('close-time') < time) {
            $(v).fadeOut(300, function() { $(v).remove(); });
        }
    })
    if ($('#checklistActiondiv').attr('close-time') < time) {
        $('#checklistActiondiv').removeAttr('close-time');
    }
    if ($('#selectedMsgActionDiv').attr('close-time') < time) {
        $('#selectedMsgActionDiv').removeAttr('close-time');
    }
    if ($('#media_Action_Div').attr('close-time') < time) {
        $('#media_Action_Div').removeAttr('close-time');
    }
    $.each($('.side_bar_list_item li .sidebartooltip'), function(k, v) {
        if ($(v).attr('close-time') < time) {
            $(v).attr('showhold', false);
            $(v).removeAttr('close-time');
        }
    })

    if ($('#unredScrollMsg').attr('close-time') < time) {
        $('#unredScrollMsg').removeClass('active');
    }

}, 1000);

setInterval(function() {
    $('.typing-indicator').html("");

}, 3000);

function callNotificationView(ele) {
    //debugger
    $('#privateChatsOnly').removeClass('active'); $('#msg-container').attr('has-private','false');
    if (!$('#callNotifications').hasClass('active')) {
        $("#onscrollloading").show();
        $('.moreMenuPopup').hide();
        $('.filterListPopup').hide();
        socket.emit('getConvCallMsg', { conversation_id: conversation_id }, function(res) {
            if (res.status) {
                $('#msg-container').html('');
                $('#counterCallhistory').html(res.data.length);
                if (res.data.length > 0) {
                    $('#msg-container').attr('data-call', 'true');
                } else {
                    $('#msg-container').attr('data-call', 'false');
                }
                $('#msg-container').attr('call-filter', 'true');
                if ($('#threadChatsOnly').hasClass('active')) {
                    $('#threadChatsOnly').removeClass('active');
                    threadTriggerd = false;
                    $('#workFreeliToaster').attr('data-id', '');
                    showFreeliToaster(false);
                } else if ($('#filterFlagged_msg_2').hasClass('activeComFilter')) {
                    $('#filterFlagged_msg_2').removeClass('activeComFilter')
                    threadTriggerd = false;
                    $('#workFreeliToaster').attr('data-id', '');
                    // console.log(13950,'removeFilter');
                    removeA(allFilteredItem, 'flag');
                    showFreeliToaster(false);
                }
                $('#callNotifications').addClass('active');

                // $('#workFreeliToaster').hide();
                $('#callnotificationCloseLabel').css('display', 'flex');
                $('body').addClass('callnotificationFilter');
                $.each(res.data, function(k, v) {
                    if (v.msg_type == 'call') {
                        draw_msg(v);
                    }
                });
                $("#onscrollloading").hide();
                $('#groupChatContainer').addClass('filterActive');
            }
        });
    } else {
        $('.moreMenuPopup').hide();
        $('.filterListPopup').hide();
        $('#groupChatContainer').removeClass('filterActive');
        $('#callNotifications').removeClass('active');
        $('#callnotificationCloseLabel').hide();
        $('body').removeClass('callnotificationFilter');
        $('#msg-container').attr('call-filter', 'false');
        $('#msg-container').attr('data-call', 'false');
        $('#unredScrollMsg').removeClass('active').attr('data-value', 0);
        updatedMsgArr = [];
        mention_div_action('hide');
        // $('.side_bar_list_item li').removeClass('sideActive');
        filesCount = 0;
        $('#conversationFileView').text('Files (0)');
        if (allFilteredItem.length == 0) {
            $('#conv' + conversation_id).find('.unreadMsgCount').html('');
        }

        onlydrawMsg(conversation_id);
    }

    // if($(ele).hasClass('active')){
    // 	$(ele).removeClass('active');
    // 	$('.msgs-form-users').show();
    // 	$('.moreMenuPopup').hide();
    // 	// $('.msgs-form-users[data-msg-type="call"]').hide();
    // 	$('#msg-container').attr('call-filter','false');
    // 	$('#hideCallHistory').hide();
    // }else{
    // 	$(ele).addClass('active');
    // 	$('.msgs-form-users').hide();
    // 	$('.msgs-form-users[data-msg-type="call"]').show();
    // 	$('.moreMenuPopup').hide();
    // 	$('#msg-container').attr('call-filter','true');
    // 	$('#hideCallHistory').show();

    // }
    // if($('.msgs-form-users[data-msg-type="call"]:visible').length > 0){
    // 	$('#msg-container').attr('data-call','true');
    // }else{
    // 	$('#msg-container').attr('data-call','false');
    // }

    // hideMsgSeparetor();
}

function hideMsgSeparetor() {
    $('.msg-separetor').attr('area-hidden', true);
    $.each($('.msgs-form-users'), function(k, v) {
        if ($(v).is(':visible')) {
            $(v).prevAll('.msg-separetor:first').show();
            $(v).prevAll('.msg-separetor:first').attr('area-hidden', false);
        } else {
            if ($(v).prevAll('.msg-separetor:first').attr('area-hidden')) {
                $(v).prevAll('.msg-separetor:first').hide();
            }
        }
    });
}


socket.on('msgTimerBroadcast', function(data) {

    if ($('#conv' + data.conv_id).hasClass('sideActive')) {
        if ($('.msg_id_' + data.msg_id).is(':visible')) {
            if (data.type == 'add') {
                $('.msg_id_' + data.msg_id).find('.user-msg .msg-timer.timer_msg').remove();
                var design = '&nbsp;<span class="msg-timer timer_msg" data-value="' + data.unixTime + '"></span>';
                $('.msg_id_' + data.msg_id).find('.user-msg .msg-time').after(design);
            } else {
                $('.msg_id_' + data.msg_id).find('.user-msg .msg-timer.timer_msg').remove();
            }

        }
    }
});




function closeSideSearch() {
    $('#sideBarSearch').val('');
    $('#sideBarSearch').blur();
    $('.side_bar_list_item .usersName').unhighlight();
    $('.side_bar_list_item li').show();
    $('#contactListItemHead').hide();
}

function createNewConv(elm) {
    memberListUUID = [];
    memberListUUID.push($(elm).attr('data-id'));
    directMsgUUID = memberListUUID[0];
    directMsgName = $(elm).attr('data-name');
    directMsgImg = '/asd/das/' + $(elm).attr('data-img');
    createDirectmsg();
    $(elm).remove();
    $('#sideBarSearch').val('');
    $('#sideBarSearch').blur();
    $('.side_bar_list_item .usersName').unhighlight();
    $('.side_bar_list_item li').show();
    $('#contactListItemHead').hide();

}





function checkRoomMyHide() {
    $('#myAllChannelCount').remove();
    $("#joinedDivHead").append('<span id="myAllChannelCount" class="more_channel" onclick="showMoreChannelmy(this)">+ Show More<span class="counter"></span></span>')



    var counter = $('#myroomSdiv .added-channels').length;
    // var text = '';
    // 		if(counter > 1){
    // 			text = 'Rooms';
    // 		}else{
    // 			text = 'Room';
    // 		}
    // $('#myAllChannelCount .counter').text(counter+' '+ text);

    $.each($("#myroomSdiv .added-channels"), function(k, v) {
        if (k > 5) {
            $(v).hide();
        }
    });

    $('#joinedRoomsTitle .roomCounter').text(counter);
    if (counter < 6) {
        $('#myAllChannelCount').hide();
    } else {
        $('#myAllChannelCount').show();
    }

    $('#myRoomDivFull').attr('data-length', counter);

}

function checkRoomMyShow() {
    $('#myAllChannelCount').remove();
    $("#joinedDivHead").append('<span id="myAllChannelCount" class="more_channel active" onclick="showMoreChannelmy(this)">- Show Less<span class="counter"></span></span>')



    // var counter = $('#myroomSdiv .added-channels').length;
    // var text = '';
    // 		if(counter > 1){
    // 			text = 'Rooms';
    // 		}else{
    // 			text = 'Room';
    // 		}
    // $('#myAllChannelCount .counter').text(counter+' '+ text);

    $.each($("#myroomSdiv .added-channels"), function(k, v) {
        if (k > 5) {
            $(v).show();
        }
    });
}


function checkRoomChannelHide() {
    $('#joinedRoomHead .more_channel').remove();
    $("#joinedRoomHead").append('<span id="moreLeaveChannel" class="more_channel" onclick="showMoreChannel(this)">+ Show More<span class="counter"></span></span>')

    var counter = $('#joinedDiv .added-channels').length;
    // var text = '';
    // 		if(counter > 1){
    // 			text = 'Rooms';
    // 		}else{
    // 			text = 'Room';
    // 		}
    // $('#moreLeaveChannel .counter').text(counter+' '+ text);

    $.each($("#joinedDiv .added-channels"), function(k, v) {
        if (k > 5) {
            $(v).hide();
        }
    });
    $('#joinedRoomHead .roomCounter').text(counter);

    if (counter < 6) {
        $('#moreLeaveChannel').hide();
    } else {
        $('#moreLeaveChannel').show();
    }

    $('#joinedRoomDivFull').attr('data-length', counter);
}

function checkRoomChannelShow() {
    $('#joinedRoomHead .more_channel').remove();
    $("#joinedRoomHead").append('<span id="moreLeaveChannel" class="more_channel active" onclick="showMoreChannel(this)">- Show Less<span class="counter"></span></span>')

    // $('#moreLeaveChannel .counter').text($('#joinedDiv .added-channels').length);
    // var counter = $('#myroomSdiv .added-channels').length;
    // var text = '';
    // 		if(counter > 1){
    // 			text = 'Rooms';
    // 		}else{
    // 			text = 'Room';
    // 		}
    // $('#myAllChannelCount .counter').text(counter+' '+ text);

    $.each($("#joinedDiv .added-channels"), function(k, v) {
        if (k > 5) {
            $(v).show();
        }
    });
}

function checkRoomJoinHide() {
    $('#joinDivHead .more_channel').remove();
    $("#joinDivHead").append('<span id="moreJoinChannel" class="more_channel" onclick="showMoreChanneljoin(this)">+ Show More<span class="counter"></span></span>')

    // $('#moreJoinChannel .counter').text($('#joinDiv .added-channels').length);

    var counter = $('#joinDiv .added-channels').length;
    // var text = '';
    // 		if(counter > 1){
    // 			text = 'Rooms';
    // 		}else{
    // 			text = 'Room';
    // 		}
    // $('#moreJoinChannel .counter').text(counter+' '+ text);

    $.each($("#joinDiv .added-channels"), function(k, v) {
        if (k > 5) {
            $(v).hide();
        }
    });

    $('#joinDivHead .roomCounter').text(counter);

    if (counter < 6) {
        $('#moreJoinChannel').hide();
    } else {
        $('#moreJoinChannel').show();
    }

    $('#publicRoomsList').attr('data-length', counter);
}

function checkRoomJoinShow() {
    $('#joinDivHead .more_channel').remove();
    $("#joinDivHead").append('<span id="moreJoinChannel" class="more_channel active" onclick="showMoreChanneljoin(this)">- Show Less<span class="counter"></span></span>')

    // $('#moreJoinChannel .counter').text($('#joinDiv .added-channels').length);

    // var counter = $('#joinDiv .added-channels').length;
    // var text = '';
    // 		if(counter > 1){
    // 			text = 'Rooms';
    // 		}else{
    // 			text = 'Room';
    // 		}
    // $('#moreJoinChannel .counter').text(counter+' '+ text);

    $.each($("#joinDiv .added-channels"), function(k, v) {
        if (k > 5) {
            $(v).show();
        }
    });
}


function showMoreChannel(elm, parent_id) {
    // $('#moreLeaveChannel').remove();
    // if($(elm).hasClass('active')){
    // 	checkRoomChannelHide();

    // }else{
    // 	checkRoomChannelShow();
    // }
    // console.log()
    if (parent_id == 'private_rooms') {
        $(elm).parents('.added-channel-div#' + parent_id).find('.added-channels.pr').show();
        $(elm).hide();
    } else if (parent_id == 'public_rooms') {
        $(elm).parents('.added-channel-div#' + parent_id).find('.added-channels.pr').show();
        $(elm).hide();
    } else {
        //parent_id == 'closed_rooms'
        $(elm).parents('.added-channel-div#' + parent_id).find('.added-channels.pr').show();
        $(elm).hide();
    }
}

function showMoreChannelmy(elm) {
    $('#myAllChannelCount').remove();
    if ($(elm).hasClass('active')) {
        checkRoomMyHide();

    } else {
        checkRoomMyShow();
    }
}

function showMoreChanneljoin(elm) {
    $('#moreJoinChannel').remove();
    if ($(elm).hasClass('active')) {
        checkRoomJoinHide();

    } else {
        checkRoomJoinShow();
    }
}

function viewShreImgPop(e, elm) {
    e.preventDefault();
    e.stopImmediatePropagation();
    $('#sharelinkGreenMsg').hide();
    if ($('#threadReplyPopUp').is(':visible')) {
        $('#shareLinkPop').attr('thread-view', true);
        // if(window.name !='calling') 
        if (typeof callCleanupLogic !== 'function' && window.name !== 'calling') $('#threadReplyPopUp').hide();
    } else {
        $('#shareLinkPop').attr('thread-view', false);
    }

    var value = $(elm).attr('data-value');
    if ($('#mediaLinksTab').hasClass('active')) {
        $('#shareLinkPop').find('.from_group').show();
        $('#shareLinkPop').css('display', 'flex');
        $('#shareLink').html(value);
        $('#shareLink').focus();
        $('#shareLink').select();
        $('#shareLinkPop .UnsharedClass').remove();
    } else {
        socket.emit('SetURLshorten', { link: value, type: 'single', user_id: user_id }, function(res) {
            // console.log(18712,res)
            if (res.old) {
                $(elm).addClass('active')
                value = mywindowUrl + '/url/' + res.data;
                $('#shareLinkPop').css('display', 'flex');
                $('#shareLink').html(value);
                $('#shareLink').attr('data-val', value);
                $('#shareLink').focus();
                $('#shareLink').select();
                $('#shareLinkPop .UnsharedClass').remove();
                $('#actionShareBtn').text('Copy link');
                $('#shareLinkPop').find('.hayven_Modal_endSection .btn_group').prepend('<button class="buttonAction UnsharedClass" style="background: var(--PrimaryC);margin-right: 8px;" onclick="unsharedLink(\'' + res.data + '\')" autocomplete="off">Remove link</button>')
            } else {
                $(elm).removeClass('active');
                $('#actionShareBtn').text('Create link');
                $('#shareLinkPop').css('display', 'flex');
                $('#shareLink').html('');
                $('#shareLink').attr('data-val', value);
                $('#shareLinkPop .UnsharedClass').remove();

            }
        });
    }
}


function sendMsgEmail(elm) {

}

function copyShareLink(elm) {
    var value = $('#shareLink').attr('data-val');
    if ($(elm).text() == 'Create link') {
        socket.emit('SetURLshorten', { link: value, type: 'single', user_id: user_id, create: true }, function(res) {
            value = mywindowUrl + '/url/' + res.data;
            $('#shareLinkPop').css('display', 'flex');
            $('#shareLink').html(value);
            $('#shareLink').attr('data-val', value);
            $('#shareLink').focus();
            $('#shareLink').select();
            $('#shareLinkPop .UnsharedClass').remove();
            $('#actionShareBtn').text('Copy link');
            $('#shareLinkPop').find('.hayven_Modal_endSection .btn_group').prepend('<button class="buttonAction UnsharedClass" style="background: var(--PrimaryC);margin-right: 8px;" onclick="unsharedLink(\'' + res.data + '\')" autocomplete="off">Remove link</button>');
            $('#shareLink').select();
            document.execCommand("copy");
            $('#sharelinkGreenMsg').show();
            activeShareIconLink();
        });
    } else {
        $('#shareLink').select();
        document.execCommand("copy");
        $('#sharelinkGreenMsg').show();
        activeShareIconLink();
        // closeModal('shareLinkPop');
    }
}


function openImage(e, elm) {
    if ($(e.target).hasClass('deleteitem')) {
        return false;
    }
    e.stopImmediatePropagation();
    e.preventDefault();
    if ($(e.target).hasClass('msg_per_img_div')) {
        $(elm).find('.per_img_hover_opt .img_action:first').trigger('click');
    }

    if ($(elm).hasClass('all-files')) {
        $(elm).find('.per_img_hover_opt .img_action.view_ico').trigger('click');
        // console.log(14095,'all-files')
    }

}


function viewRoomImg(e, src, elm) {
    e.preventDefault();
    // console.log('click')
    var imgsrc = $(elm).attr('data-value').split('/');
    if (!$('#updatechannelContainer').is(':visible')) {
        if (adminArra.indexOf(user_id) !== -1) {
            $('#changeProfilePic').trigger('click');
        } else {
            return false;
        }
    } else {

        if (imgsrc[imgsrc.length - 1] == 'feelix.jpg') {
            $('#changeProfilePic').trigger('click');
        } else {

            var audOnCk = $('#groupChatContainer .chat-head-calling .voice-call').hasClass('onC');
            var vidOnCk = $('#groupChatContainer .chat-head-calling .video-call').hasClass('onC');
            if (src == 'user') {
                src = $(elm).attr('data-value');
            } else if (src == 'updateContainer') {
                src = $('#updateRoomImg').attr('src');
            } else {
                src = file_server + $(elm).attr('data-value');
            }

            // var src = $('#updateRoomImg').attr('src');
            // $('#modalImgSrc').attr('src',src);

            // if(audOnCk){

            // }else{
            // 	$('.img_foot_action .voice-call').removeClass('onC')
            // }

            $(elm).attr('src', src);
            $('#zoomImgView').attr('src', src);
            $('#myModalImgview').css('display', 'flex');
            $('#zoomImgShare').attr('data-value', src);
        }
    }


}

function roomAccessControl(elm, type) {
    var width = $('#select-ecosystemUpdate').width() + 35;
    if (type == 'private') {
        if ($(elm).hasClass('active')) {
            $('.accessControlDiv').css('width', width).show()
        } else {
            $('.make_private .customToolTip.permissionTool').css('display', 'block');
            setTimeout(function() { $('.make_private .customToolTip.permissionTool').css('display', 'none') }, 3000);
        }
    } else if (type == 'member') {
        if (!$(elm).hasClass('active')) {
            $('.input_email .customToolTip.permissionTool').css('display', 'block');
            setTimeout(function() { $('.input_email .customToolTip.permissionTool').css('display', 'none') }, 3000);
        }
    } else if (type == 'team') {
        if (!$(elm).hasClass('active')) {
            $('.workspace .customToolTip.permissionTool').css('display', 'block');
            setTimeout(function() { $('.workspace .customToolTip.permissionTool').css('display', 'none') }, 3000);
        }
    }
}


function drawnewRoomMemberList() {
    $('#newRoomMemberList').html("");

    $.each(user_list, function(k, v) {
        $('#newRoomMemberList').append(returnRoomMListDe(v))
    })
}

function removeThisMemberList(name, id) {
    removeA(memberList, name);
    removeA(memberListUUID, id);
    $("#numbers").text(parseInt(memberList.length) + 1);
    $('._miniMList_' + id).remove();
    $.each(user_list, function(k, v) {
        if (v.id == id) {
            $('#newRoomMemberList').append(returnRoomMListDe(v));
        }
    })

}

function _targetBlankImg() {

}


function roomImgoptionView(elm, type) {
    if (type == 'update') {
        var imgsrc = $('#updateRoomImg').attr('src').split('/');


        if (imgsrc[imgsrc.length - 1] == 'feelix.jpg') {
            $('#roomimgOptionDiv .removeImg').hide();
            $('#updateImgInput').trigger('click');
        } else {
            $('#roomimgOptionDiv .removeImg').show();
            $('#roomimgOptionDiv').show();
        }
    } else {

        var imgsrc = $('#demoImg').attr('src').split('/');

        if (imgsrc[imgsrc.length - 1] == 'feelix.jpg') {
            $('#roomimgAdd .removeImg').hide();
            $('#upload-channel-photo').trigger('click');
        } else {
            $('#roomimgAdd .removeImg').show();
            $('#roomimgAdd').show();
        }
    }

}


function triggerJoinChannelTitle(elm) {
    $(elm).parent('.added-channels').find('.chanel-name').trigger('click');
    $(elm).parents('.added-channels').find('.chanel-name').trigger('click');
}

function searchAgain() {
    hideSearchForHead();
    showSearchHead();
    $('#input_values').find('input').trigger('click');
    $('#input_values').find('input').focus();
}


function closeUpdateRoomsec(elm) {
    if (PVM) {
        $('#updatechannelContainer').hide();
        $('#updatechannelContainer').attr('data-src', false);
        $('#joinChannelPanel').show();
    } else {
        closeRightSection();
    }
}

function getNameCommaAnd(data) {
    var returndata = '';
    if (data.length == 1) {
        returndata = data[0];
    } else {
        $.each(data, function(k, v) {
            if (data.length == k + 1) {
                returndata += ' and ' + v;
            } else {
                if (k == (data.length - 2)) {
                    returndata += v;
                } else {
                    returndata += v + ', ';
                }

            }
        })
    }
    // console.log(data,returndata);
    return returndata;

}
socket.on('updatePartiOnFly', function(data) {
    if ($('#conv' + data.conversation_id).length == 0) {
        // console.log(20811,data.participants.indexOf(user_id) > -1,$('#conv'+data.root_conv_id).hasClass('sideActive'),!$('._subconvUnread'+data.conversation_id).is(':visible'));
        if (data.participants.indexOf(user_id) > -1) {
            if ($('#conv' + data.root_conv_id).hasClass('sideActive') || !$('._subconvUnread' + data.conversation_id).is(':visible')) {
                if ($('._subconvUnread' + data.conversation_id).length == 0) {
                    var html = '<div data-convitemid="' + data.conversation_id + '" data-participants="' + data.participants + '" class="_subconvUnread' + data.conversation_id + ' item last-child-class " onclick="$(\'#conv' + data.conversation_id + '\').trigger(\'click\')"><span>' + data.title + '<span class="counter" data-length="0">0</span></span><span class="pipe">|</span></div>';
                    $('#sub_conv_holder').append(html);
                }
            }
        }
        // else{
        // 	$('#conv'+data.conversation_id).remove();
        // 	$('._subconvUnread'+data.conversation_id).remove();
        // 	if(conversation_id == data.conversation_id){
        // 		$('#conv'+user_id).trigger('click');
        // 	}
        // }

    }
})

function updateTempoMember(elm) {
    // console.log('onlineUserList inside', onlineUserList);
    var guest_member_ids = [];
    $("#guest_member_emails3").attr("data-value", 0);
    if ($('#guestml-listHl .member-div').length > 0) {
        $.each($('#guestml-listHl .member-div'), function(gk, gv) {
            var gid = $(gv).attr('id').replace('member', '');
            guest_member_ids.push(gid);
        });
    }

    if (activeConvPrivacy == 'protected') {
        // console.log('onlineUserList if', onlineUserList);
        var upA = adminArra;
        $.each(tempoRoomUpdateArray, function(k, v) {
            if (adminArra.indexOf(v) == -1) {
                upA.push(v);
            }
        });

        if ($("#roomIdDiv").attr('data-rfu') == 'ready') {
            var roomid = $("#roomIdDiv").attr('data-roomid');
            var roomTitle = $("#roomIdDiv").attr('data-title');

            socket.emit('updateRoomPartAdmin', { company_id: company_id, conversation_id: roomid, participants_admin: upA, user_id: user_id }, (res) => {
                if (res.status) {
                    $.each(tempoRoomUpdateArray, function(k, v) {
                        if (adminArra.indexOf(v) == -1) {
                            adminArra.push(v);
                        }
                    });

                    tempoRoomUpdateArray = [];
                    $("#ml-listHA").html('');
                    $.each(adminArra, function(k, v) {
                        var ud = findObjForUser(v);
                        // console.log('onlineUserList', onlineUserList);
                        var html = '<div class="member-div" id="member' + ud.id + '">';
                        if (onlineUserList.indexOf(ud.id) == -1) {
                            html += '<span class="offline online_' + ud.id + '" style="top: 32px; left: 6px; position: absolute;"></span>';
                        } else {
                            html += '<span class="online online_' + ud.id + '" style="top: 32px; left: 6px; position: absolute;"></span>';
                        }
                        html += '<img src="' + file_server + 'profile-pic/Photos/' + ud.img + '" class="member-img">';
                        html += '<div class="member-name">' + ud.fullname + '</div>';
                        html += '<span class="remove-it GroupFlRight" onclick="removeMember(\'admin\',\'' + ud.id + '\',\'' + conversation_id + '\');" >Remove</span>';
                        html += '<span class="remove-admin remove2 GroupFlRight arfImg" onclick="makeMember(\'' + ud.img + '\',\'' + ud.fullname + '\',\'' + ud.designation + '\',\'' + ud.id + '\',\'' + conversation_id + '\')" style="">REMOVE ADMIN</span>';
                        html += '<span" class="add-admin add2 GroupFlRight arfImg" onclick="makeAdmin(\'' + ud.img + '\',\'' + ud.fullname + '\',\'' + ud.designation + '\',\'' + ud.id + '\',\'' + conversation_id + '\')">Make Admin</span>';
                        html += '</div>';

                        $("#ml-listHA").append(html);
                        // adminMouseenterfun();
                        countRoomPart(adminArra, participants);
                        // $('#memberAddBtn').hide();
                        $('#updateMemberPopup').hide();
                        // $('#updateRoomListMember').hide();
                        $('#viewlistUpdateroom').show();

                    })
                    $('#updatenewMemberMini').html('');
                    $('#conv' + roomid).attr('data-tm', participants.length);
                    $('#totalMember').text((participants.length - participants_sub.length));
                    forActiveCallIcon(onlineUserList, participants, conversation_type);
                    call_toastr("Member added successfully");
                }
            })
        }

    } else {
        // console.log('onlineUserList Else', onlineUserList);
        var upA = participants;
        var allMemberName = [];
        var guest_invite_ids = [];
        $.each(tempoRoomUpdateArray, function(k, v) {
            if (participants.indexOf(v) == -1) {
                allMemberName.push(findObjForUser(v).fullname);
                upA.push(v);

                if (has_permission(v, GUEST)) {
                    guest_invite_ids.push(v);
                }
            }
        });

        // console.log(19754, guest_invite_ids);

        if ($("#roomIdDiv").attr('data-rfu') == 'ready') {
            var roomid = $("#roomIdDiv").attr('data-roomid');
            var roomTitle = $("#roomIdDiv").attr('data-title');

            socket.emit('updateRoomPart', { conversation_id: roomid, participants: upA, user_id: user_id, company_id: company_id, type: $('#updateRoomListMember2').attr('data-type') }, (res) => {
                if (res.status) {
                    for (let i = 0; i < tempoRoomUpdateArray.length; i++) {
                        if (participants_guest.indexOf(tempoRoomUpdateArray[i]) > -1) {
                            removeA(participants_guest, tempoRoomUpdateArray[i])
                        }
                        if (participants_sub.indexOf(tempoRoomUpdateArray[i]) > -1) {
                            removeA(participants_sub, tempoRoomUpdateArray[i])
                        }
                    }
                    // socket.emit('send_invitation_to_join_room', {id: guest_invite_ids[0], room_name: roomTitle}, (res)=>{
                    // 	if(res.status){
                    // 		console.log(19765, res);
                    // 	}
                    // });
                    // console.log(20931,root_conv_id)
                    if (root_conv_id != null) {
                        var newData = {
                            conversation_id: conversation_id,
                            root_conv_id: root_conv_id,
                            participants: participants,
                            title: $('#roomIdDiv').attr('data-title')
                        }
                        socket.emit('updatePartiOnFly', newData);


                    }
                    $.each(tempoRoomUpdateArray, function(k, v) {
                        if (participants.indexOf(v) == -1) {
                            participants.push(v);
                        }

                        if (has_permission(v, GUEST) && guest_member_ids.indexOf(v) == -1) {
                            guest_member_ids.push(v);
                        }
                    });
                    // console.log(20615, root_conv_id);
                    if (allMemberName.length > 1) {

                        var msg_body = getNameCommaAnd(allMemberName) + ' have been added to this Room';
                    } else {
                        var msg_body = getNameCommaAnd(allMemberName) + ' has been added to this Room';

                    }
                    var data = {
                        type: 'add_conv_member',
                        sender: user_id,
                        sender_name: user_fullname,
                        sender_img: user_img,
                        conversation_id: conversation_id,
                        root_conv_id: root_conv_id,
                        msg_type: 'notification',
                        msg_body: msg_body
                    }
                    sendNotificationMsg(data);
                    call_toastr("Member added successfully");
                    // var stringBody = {
                    // 	conversation_id:roomid,
                    // 	room_name:roomTitle,
                    // 	new_user:tempoRoomUpdateArray
                    // }
                    //
                    // var noti_data = {
                    // 	type:'add_conv_member',
                    // 	title:roomTitle,
                    // 	body:JSON.stringify(stringBody),
                    // 	created_at:new Date(),
                    // 	created_by:user_id,
                    // 	seen_users:[user_id],
                    // 	receive_users:participants
                    //   }
                    //   insertNotiFun(noti_data);
                    tempoRoomUpdateArray = [];
                    $("#ml-listHl .member-div[data-type='member']").remove();
                    $("#guestml-listHl .member-div[data-type='member']").remove();
                    $.each(participants, function(k, v) {
                        if (adminArra.indexOf(v) == -1) {
                            var ud = findObjForUser(v);
                            // console.log(19800, ud, guest_member_ids);
                            if (guest_member_ids.indexOf(v) == -1) {
                                group_member_li_draw(ud.fullname, '' + file_server + 'profile-pic/Photos/' + ud.img + '', v, 'ready', roomid, ud.designation, ud.email);
                            } else {
                                group_member_li_draw(ud.fullname, '' + file_server + 'profile-pic/Photos/' + ud.img + '', v, 'ready', roomid, 'Guest', ud.email);
                            }
                            countRoomPart(adminArra, participants);
                            // $('#memberAddBtn').hide();
                            $('#updateMemberPopup').hide();
                            // $('#updateRoomListMember').hide();
                            $('#viewlistUpdateroom').show();
                        }
                    })
                    $('#updatenewMemberMini').html('');
                    $('#conv' + roomid).attr('data-tm', participants.length);
                    $('#totalMember').text((participants.length - participants_sub.length));
                    forActiveCallIcon(onlineUserList, participants, conversation_type);
                }
            });
        }
    }
}


function changeProfilePic(files) {
    var formData = new FormData();
    // formData.append('bucket_name', 'dalimchyjony-gmail-com');
    formData.append('bucket_name', 'room-images-uploads');
    formData.append('room_image', files[0]);
    var slid = Number(moment().unix());
    formData.append('sl', slid);
    $('#roomIdDiv .msg-user-photo img').attr('src', file_server + 'common/imgLoader.gif');
    $.ajax({
        url: '/s3Local/convImg',
        type: "POST",
        data: formData,
        dataType: 'json',
        contentType: false,
        processData: false,
        success: function(res) {
            var roomid = $('#roomIdDiv').attr('data-roomid')
            socket.emit('updateRoomimg', {
                conversation_id: roomid,
                conv_img: res.data.key,
                user_id: user_id,
                company_id: company_id
            }, (callBack) => {
                $('#roomIdDiv .msg-user-photo img').attr('src', res.data.location);
                $("#conv_title .msg-user-photo img").attr('src', res.data.location);
                $('#conv' + roomid).attr('data-img', res.data.key);
                $('#roomIdDiv').attr('data-convimg', res.data.key);
                $('#roomIdDiv').attr('data-value', 'room-images-uploads/Photos/' + res.data.key);
                $('#roomIdDiv').find('.msg-user-photo img').attr('data-value', 'room-images-uploads/Photos/' + res.data.key);

            });
        }
    });
}




function filter_thread_msg(event) {
    // lastConvId = $('.side_bar_list_item li.sideActive').attr('data-conversationid');
    $('body').addClass('filter_thread_msg');
    if (allFilteredItem.length > 0) {
        cancelAllFilter();
    } else if ($('#connectAsideContainer').is(':visible')) {
        //backToChat();
    }

    $('.side_bar_list_item li').removeClass('sideActive');
    $('.side_bar_list_item li').removeClass('selected');
    $(".label_head_aside").hide();
    $(".threadasideContainer").show();
    $.each($(".side_bar_list_item li"), function(k, per_li) {
        if ($(per_li).hasClass('has_unread_replay')) {

            var nor = $(per_li).attr('data-nor');
            // $(per_li).removeClass("conv_hide").removeClass("itssubconvhide");
            $(per_li).addClass("filter_thread_open");
            $(per_li).find('.unreadMsgCount').html(nor);
            if (nor != 0 && nor != '') {
                $(per_li).show();
            } else {
                $(per_li).hide();
            }
        } else
            $(per_li).hide();
    });
    $('#connectAsideContainer').find('li:visible:first').trigger('click');
    $('body').addClass('filter_thread_msg');
    // setTimeout(function(){
    // 	$('#conversation_list_sidebar').find('li:first').trigger('click');
    // },2000)

}

function reply_msg_counter() {
    var rmstA = 0;
    $.each($(".side_bar_list_item li"), function(k, per_li) {
        if ($(per_li).attr('data-nor') !== undefined) {
            if ($(per_li).attr('data-nor') !== NaN) {
                if ($(per_li).attr('data-nor') !== '') {
                    var counter = parseInt($(per_li).attr('data-nor'));
                    rmstA = rmstA + counter;
                    if (rmstA > 1) {
                        $(".thread_message").find('h5').html('<span>' + rmstA + '</span> Threaded message(s)');
                    } else {
                        $(".thread_message").find('h5').html('<span>' + rmstA + '</span> Threaded message');
                    }
                    if ($('.threadasideContainer').is(':visible')) {
                        // console.log(19659,counter)
                        $(per_li).find('.unreadMsgCount').text(counter);
                    }
                }
            }
        }
    });
    if (rmstA == 0) {
        $(".thread_message").hide();
    } else {
        // console.log(22612,'show')
        $(".thread_message").show();
    }
}
var last_checkList_body = '';

function updateCheckList(event, ele) {
    var participants_of_chk = participants;
    if (participants_of_chk.indexOf(user_id) == -1) {
        participants_of_chk.push(user_id);
    }
    var updateAt = '' + new Date().getTime() + '';
    var elHtml = $(ele).parents('.msgs-form-users').find('.msgCheckListContainer')[0].outerHTML;
    var id = $(ele).parents('.msgs-form-users').attr('data-msgid');
    var attch_audiofile = [];
    var attch_imgfile = [];
    var attch_otherfile = [];
    var attch_videofile = [];
    $.each($('.msg_id_' + id + ' .fil_attach.attach-file '), function(k, v) {
        attch_otherfile.push($(v).attr('data-file_name'));
    });
    $.each($('.msg_id_' + id + ' .img_attach'), function(k, v) {
        attch_imgfile.push($(v).attr('alt'));
    });
    $.each($('.msg_id_' + id + ' .ado_attach'), function(k, v) {
        attch_audiofile.push($(v).attr('data-file_name'));
    });
    $.each($('.msg_id_' + id + ' .vdo_attach'), function(k, v) {
        attch_videofile.push($(v).attr('data-file_name'));
    });

    var data = {
        conv_id: conversation_id,
        msg_id: id,
        msg_body: elHtml,
        update_at: updateAt,
        sender: $(ele).parents('.msgs-form-users').find('.user-msg').attr('data-senderid'),
        sender_img: $(ele).parents('.msgs-form-users').find('.user-msg').attr('data-senderimg'),
        sender_name: $(ele).parents('.msgs-form-users').find('.user-msg').attr('data-sendername'),
        attch_audiofile: attch_audiofile,
        attch_imgfile: attch_imgfile,
        attch_otherfile: attch_otherfile,
        attch_videofile: attch_videofile,
        created_at: $(ele).parents('.msgs-form-users').attr('data-msg-date'),
        has_flagged: (($('#msgThread_' + id).attr('flaged-data') != '') ? $('#msgThread_' + id).attr('flaged-data').split(',') : [])
    };
    socket.emit('msg_fully_delete', data, (res) => {
        // console.log(res);
        var clData = {
            conversation_id: conversation_id,
            msg_id: id,
            msg_body: elHtml,
            participants: participants_of_chk

        }

        var stringBody = {
            conversation_id: conversation_id,
            conversation_type: conversation_type,
            msg_id: id,
            checklist_title: $('#data_msg_body' + id).find('.checkListPlainText').text()
        }
        var noti_data = {
            type: 'checklist_changes',
            title: 'status_change',
            body: JSON.stringify(stringBody),
            created_at: new Date(),
            created_by: user_id,
            seen_users: participants,
            receive_users: participants
        }
        if (conversation_id !== user_id) {
            insertNotiFun(noti_data);
        }
        $('.msg_id_' + data.msg_id).remove();

        socket.emit('updateChecklistLastTime', clData, function(res) {
            // console.log(1582,res)
            has_incompleted_checklist_yet();
        });

        // if(res.status){
        // 	var hasReply = $('#msgThread_'+data.msg_id).find('.msgReply').attr('data-count');
        // 	var tag_list = $('#msg_tag_list'+data.msg_id).find('.tag_design');
        // 		var newOldMsgTag = [];
        // 	if(tag_list.length !== 0){
        // 		$.each(tag_list,function(k,v){
        // 			if(newOldMsgTag.indexOf($(v).attr('data-id')) == -1)
        // 				newOldMsgTag.push($(v).attr('data-id'));
        // 		})
        // 	}
        // 	var is_room = (conversation_type == 'group') ? true : false;
        // 	if( hasReply !== undefined){
        // 		socket.emit('findmsgRepId',{msg_id:data.msg_id,conversation_id:data.conv_id},function(rep){
        // 			if(rep.status){
        // 				if(rep.data !== null){
        // 					$('.msg_id_'+data.msg_id).remove();
        // 					socket.emit('send_message', {
        // 						conversation_id: conversation_id, sender_img: user_id_to_img[data.sender],sender:data.sender,
        // 						sender_name: user_id_to_fullname[data.sender], to: to,tag_list:newOldMsgTag,has_reply:hasReply,rep_id:rep.data.rep_id,
        // 						is_room: is_room, text: data.msg_body,old_created_time:data.created_at,last_update_user:user_id,has_flagged:rep.data.has_flagged
        // 					});
        // 					last_checkList_body = '';
        // 				}else{
        // 					$('.msg_id_'+data.msg_id).remove();

        // 					socket.emit('send_message', {
        // 						conversation_id: conversation_id, sender_img: user_id_to_img[data.sender],sender:data.sender,
        // 						sender_name: user_id_to_fullname[data.sender], to: to,tag_list:newOldMsgTag,hasReply:0,
        // 						is_room: is_room, text: data.msg_body,old_created_time:data.created_at,last_update_user:user_id,has_flagged:data.has_flagged
        // 					});
        // 					last_checkList_body = '';
        // 				}
        // 			}
        // 		});
        // 	}else{

        // 		$('.msg_id_'+data.msg_id).remove();

        // 			socket.emit('send_message', {
        // 				conversation_id: conversation_id, sender_img: user_id_to_img[data.sender],sender:data.sender,
        // 				sender_name: user_id_to_fullname[data.sender], to: to,tag_list:newOldMsgTag,hasReply:0,
        // 				is_room: is_room, text: data.msg_body,old_created_time:data.created_at,last_update_user:user_id,has_flagged:data.has_flagged
        // 			});
        // 			last_checkList_body = '';
        // 	}
        // }

    });
}


function cancelupChecklist(event, ele) {
    event.preventDefault();
    event.stopImmediatePropagation();

    var id = $(ele).parents('.msgs-form-users').attr('data-msgid');
    $('#groupChatContainer').attr('msg-edit', false);
    $('.msgs-form-users-options').removeClass('editAction');
    $('.msg_id_' + id).attr('check_edit', false);
    if (last_checkList_body.msg_id == id) {
        $('#data_msg_body' + id).html('');
        $('#data_msg_body' + id).html(last_checkList_body.msg_body);
        last_checkList_body = '';
    }
}

function socialChange(elm) {
    $('#team-name').focus();
    if ($('#updatechannelContainer').is(':visible')) {
        if ($(elm).val() == 'work') {
            updateTopicType('work');
            $('#upbusinessHolder').show();
        } else if ($(elm).val() == 'social') {
            updateTopicType('social');
            $('#upbusinessHolder').hide();

        } else if ($(elm).val() == 'support_room') {
            updateTopicType('support_room');
        }
    } else {

        if ($(elm).val() == 'work') {
            $('#business_unitHolder').show();
            $('#business_unit').removeAttr('disabled');
            $('#grpPrivacy').removeAttr('disabled');
            $('#listAddedmember').removeClass('support_room');
            $('#listAddedmember').removeClass('work_type');
            $('#listAddedmember').addClass('work_type');
            $.each(temppNewSPuudi, function(k, v) {
                $('#temppaddedMember_' + v).remove();
                removeA(temppNewMemberuudi, v);
                removeA(memberListUUID, v);
            });
            temppNewSPuudi = [];

            $.each($('#business_unit').find('option'), function(k, v) {
                if ($(v).html() == 'Select a work category') {
                    business_unitChange($(v));
                    selectElement('business_unit', $(v).val());
                }
            })
            $('#createChannelContainer').find('.create-topic-heading').html('Create a Work Room');
        } else if ($(elm).val() == 'project_room') {
            $('#business_unitHolder').show();
            $('#business_unit').removeAttr('disabled');
            $('#grpPrivacy').removeAttr('disabled');
            $('#listAddedmember').removeClass('support_room');
            $('#listAddedmember').removeClass('work_type');
            $('#listAddedmember').addClass('work_type');
            $.each(temppNewSPuudi, function(k, v) {
                $('#temppaddedMember_' + v).remove();
                removeA(temppNewMemberuudi, v);
                removeA(memberListUUID, v);
            });
            temppNewSPuudi = [];

            $.each($('#business_unit').find('option'), function(k, v) {
                if ($(v).html() == 'Select a work category') {
                    business_unitChange($(v));
                    selectElement('business_unit', $(v).val());
                }
            })
            $('#createChannelContainer').find('.create-topic-heading').html('Create a Project Room');
        } else {
            if ($(elm).val() == 'support_room') {
                $('#listAddedmember').removeClass('support_room');
                $('#listAddedmember').removeClass('work_type');
                $('#listAddedmember').addClass('support_room');
                // $.each($('#business_unit').find('option'),function(k,v){
                // 	if($(v).html() == '# Support Room #'){
                // 		business_unitChange($(v));
                // 		selectElement('business_unit', $(v).val());
                // 		$('#business_unit').attr('disabled','disabled');
                // 		$('#grpPrivacy').attr('disabled','disabled');
                // 	}
                // })
                $('#grpPrivacy').attr('disabled', 'disabled');
                $('#createChannelContainer').find('.create-topic-heading').html('Create a Support Room');
            }

        }
    }
}

function selectElement(id, valueToSelect) {
    let element = document.getElementById(id);
    element.value = valueToSelect;
}

function updateTopicType(type) {
    var roomid = $('.side_bar_list_item li.sideActive').attr('data-conversationid');
    if (roomid !== '' && type !== '') {

        socket.emit('updateTopicType', { conversation_id: roomid, type: type, company_id: company_id }, function(res) {
            if (res.status) {
                $('#roomIdDiv').attr('topic_type', type);
            }
        })
    } else {
        // alert('Something wrong!!!!');

        $('#warningsPopup').css('display', 'flex');
        $('#warningsPopup .warningMsg').text('Something wrong!!!!');
    }

}

function business_unitChangeUp(elm) {
    var val = $(elm).val();

    if (val == '') {
        val = null;
    }
    var roomid = $('.side_bar_list_item li.sideActive').attr('data-conversationid');

    if (roomid !== '') {
        if (val != null) {
            socket.emit('updateBusinessUnit', { conversation_id: roomid, unit_id: val, user_id: user_id, company_id: company_id }, function(res) {
                if (res.status) {
                    $('#roomIdDiv').attr('topic-unit', val);
                    $.each(allUnit, function(k, v) {
                        if (v.unit_id == val) {
                            var oldtopictype = $('#topicTypeName').text();
                            var msg_body = '' + user_fullname + ' changed the Work Category from "' + oldtopictype + '" to "' + v.unit_name + '"';
                            var data = {
                                type: 'update_room_workCategory',
                                sender: user_id,
                                sender_name: user_fullname,
                                sender_img: user_img,
                                conversation_id: conversation_id,
                                root_conv_id: root_conv_id,
                                msg_type: 'notification',
                                msg_body: msg_body
                            }
                            sendNotificationMsg(data);
                            call_toastr();
                            $('#topicTypeName').text(v.unit_name);
                        }
                    });
                } else {
                    $('#warningsPopup').css('display', 'flex');
                    $('#warningsPopup .warningMsg').text('Something wrong!!!!');
                }
            })
        }
    }

}


function searchTagData(e, data, type) {
    $('#mediaTags').hide();
    $('#mediaFiles').hide();
    $('#mediaLinks').hide();
    $('#mediaAudios').hide();
    $('#mediaVideos').hide();
    $('#mediaImages').hide();

    if (data == '') {
        $('#mediaTagsDatabase').hide();
        if (type == 'tags') {

            if (!$('#mediaTags .notFoundMsg').is(':visible')) {
                $('#tagListFormediaView').show();
                $('#mediaTags').show();
            }
        } else if (type == 'files') {
            if (!$('#mediaFiles .notFoundMsg').is(':visible')) {
                $('#mediaFiles').show();
            }
        } else if (type == 'links') {
            if (!$('#mediaLinks .notFoundMsg').is(':visible')) {
                $('#mediaLinks').show();
            }
        } else if (type == 'audios') {
            if (!$('#mediaAudios .notFoundMsg').is(':visible')) {
                $('#mediaAudios').show();
            }
        } else if (type == 'videos') {
            if (!$('#mediaVideos .notFoundMsg').is(':visible')) {
                $('#mediaVideos').show();
            }
        } else if (type == 'images') {
            if (!$('#mediaImages .notFoundMsg').is(':visible')) {
                $('#mediaImages').show();
            }
        }
    } else {
        socket.emit('getSearchMessages', { conversation_id: conversation_id, search_val: data.trim().toLowerCase().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, '').replace(/\s/g, '') }, function(res) {
            // console.log(8119,res);
            if (res.status) {
                $('#tagListFormediaView').hide();

                $('#tagsearchData').html("");
                $('#mediaTagsDatabase').show();
                if (res.data.length > 0) {
                    $.each(res.data, function(k, v) {
                        var allImages = [];
                        var allaudios = [];
                        var allvideos = [];
                        var allOtherFiles = [];
                        var alllinks = [];


                        if (type == 'tags') {

                            $.each(v.attch_imgfile, function(ik, iv) {
                                allImages.push(iv);
                            });

                            $.each(allImages, function(aik, aiv) {
                                var data = {
                                    msg: v,
                                    value: aiv
                                }
                                $('#tagsearchData').append(designForMediaTag(data, 'img'));
                            });

                            $.each(v.attch_videofile, function(ik, iv) {
                                allvideos.push(iv);
                            });

                            $.each(allvideos, function(aik, aiv) {
                                var data = {
                                    msg: v,
                                    value: aiv
                                }
                                $('#tagsearchData').append(designForMediaTag(data, 'video'));
                            });

                            $.each(v.attch_audiofile, function(ik, iv) {
                                allaudios.push(iv);
                            });

                            $.each(allaudios, function(aik, aiv) {
                                var data = {
                                    msg: v,
                                    value: aiv
                                }
                                $('#tagsearchData').append(designForMediaTag(data, 'audio'));
                            });

                            $.each(v.attch_otherfile, function(ik, iv) {
                                allOtherFiles.push(iv);
                            });

                            $.each(allOtherFiles, function(aik, aiv) {
                                var data = {
                                    msg: v,
                                    value: aiv
                                }
                                $('#tagsearchData').append(designForMediaTag(data, 'file'));
                            });

                            // $.each(v.attch_otherfile,function(ik,iv){
                            // 	allOtherFiles.push(iv);
                            // });

                            // $.each(allOtherFiles,function(aik,aiv){
                            // 	var data = {
                            // 		msg: v,
                            // 		value:aiv
                            // 	}
                            // 	$('#tagsearchData').append(designForMediaTag(data, 'file'));
                            // });


                        } else if (type == 'files') {
                            $.each(v.attch_otherfile, function(ik, iv) {
                                allOtherFiles.push(iv);
                            });

                            if (allOtherFiles.length > 0) {
                                $.each(allOtherFiles, function(aik, aiv) {
                                    var data = {
                                        msg: v,
                                        value: aiv
                                    }
                                    $('#tagsearchData').append(designForMediaTag(data, 'file'));
                                });
                            } else {
                                $('#mediaTagsDatabase').hide();
                                $('#mediaFiles').show();
                            }

                        } else if (type == 'audios') {
                            $.each(v.attch_audiofile, function(ik, iv) {
                                allaudios.push(iv);
                            });

                            if (allaudios.length > 0) {
                                $.each(allaudios, function(aik, aiv) {
                                    var data = {
                                        msg: v,
                                        value: aiv
                                    }
                                    $('#tagsearchData').append(designForMediaTag(data, 'audio'));
                                });
                            } else {
                                $('#mediaTagsDatabase').hide();
                                $('#mediaAudios').show();
                            }


                        } else if (type == 'videos') {
                            $.each(v.attch_videofile, function(ik, iv) {
                                allvideos.push(iv);
                            });

                            if (allvideos.length > 0) {
                                $.each(allvideos, function(aik, aiv) {
                                    var data = {
                                        msg: v,
                                        value: aiv
                                    }
                                    $('#tagsearchData').append(designForMediaTag(data, 'video'));
                                });
                            } else {
                                $('#mediaTagsDatabase').hide();
                                $('#mediaVideos').show();
                            }

                        } else if (ype == 'images') {
                            $.each(v.attch_imgfile, function(ik, iv) {
                                allImages.push(iv);
                            });

                            $.each(allImages, function(aik, aiv) {
                                if (allImages.length > 0) {

                                    var data = {
                                        msg: v,
                                        value: aiv
                                    }
                                    $('#tagsearchData').append(designForMediaTag(data, 'img'));
                                } else {
                                    $('#mediaTagsDatabase').hide();
                                    $('#mediaImages').show();
                                }
                            });
                        } else if (type == 'links') {

                        }


                    });
                } else {
                    $('#tagsearchData').html("");
                }

            }
        });
    }

}

function memberForRoomDown(e) {
    var value = $(e.target).val();
    if (e.keyCode == 13) {
        e.preventDefault();
        e.stopImmediatePropagation();
        // if($('#newRoomMemberList .highlight').length == 1){
        // 	$('#newRoomMemberList .highlight').parents('li').trigger('click');
        // 	$(e.target).val('');
        // }

        // console.log("length", $('#userListFornewRoom li.hoverLi').length);
        // console.log("Item", $('#userListFornewRoom li.hoverLi'));
        if ($('#userListFornewRoom li.hoverLi').length == 1) {
            $('#userListFornewRoom li.hoverLi').trigger('click');
            $(e.target).val('');
        }
    }

    if (value != '') {
        if (e.keyCode == 9) {
            e.preventDefault();
            e.stopImmediatePropagation()
        }
    }
}

function business_unitChange(elm) {
    var val = $(elm).val();
    var text = $('#business_unitHolder option[value="' + val + '"]').text();
    if (val !== '') {
        $("#business_unitHolder .select2-selection__rendered").css("color", "#000000 !important");
        // $('#team-name').val('');
        // $('#team-name').val(text);
        $('#team-name').focus();
        business_unitChangename = text;
        // console.log(15709,text == '# Support Room #');
        // if(text == '# Support Room #'){
        // 	$('#grpPrivacy').prop('checked', false);
        // 	$('#grpPrivacy').prop('disabled', 'disabled');
        // 	$('#team-name').prop('disabled', 'disabled');
        // }else{
        // }
        $('#grpPrivacy').prop('checked', true);
        $('#grpPrivacy').prop('disabled', '');
        $('#team-name').prop('disabled', '');

    } else {
        $('#team-name').val('');
        $("#business_unitHolder .select2-selection__rendered").css("color", "#D2DDEA !important");
    }
    createRoomCheckReqdata();
}

function addClassActive(data, selector) {
    // if(data.array.length > 0){
    // 	if(!$(selector).hasClass('active')){
    // 		$(selector).addClass('active');
    // 	}
    // }else{
    // 	$(selector).removeClass('active');
    // }
}

function createNewTagV2(data) {
    $('#tagAddBtn').hide();
    $('#selectToallShareTag').hide();
    $('#updateMessageTag .sub_btn').show();
    var newdata = {
        tagged_by: user_id,
        title: data.title,
        company_id: company_id,
        type: 'tag',
        tag_type: 'private',
        mention_users: [],
        created_at: moment().format('MM/DD/YYYY hh:mm:ss').toString(),
        shared_tag: data.shared_tag
    }
    socket.emit('createNewUserTag', newdata, function(res) {
        console.log(1470, res);
        if (res.status) {
            tag_counterSet('private', true);
            if (data.type == 'conv') {
                if ($('#updateMessageTag input').val() == res.data.title) {
                    $('#updateMessageTag input').val('');
                    $('#AllTagList div').unhighlight();
                    $('#AllTagList div').show();
                }
                allUserTagList.push(res.data);
                socket.emit('updateTeamtagListperMsgBrocast', { type: 'newTag', data: res.data });
                // thisConvTagName.push(data.title);
                draw_Tag_fullDesign(res.data.tag_id, $('#updateMessageTag').attr('msg-id'));
                $.each(allUserTagList, function(k, v) {
                    if (v != undefined) {
                        if (v.tag_id == res.data.tag_id) {
                            // thisConvTagId.push(res.data.tag_id);
                            if (!$('#updateMessageTag').attr('msg-id')) {
                                // $('#updateMsgTagContainer').prepend('<div class="item private_tag_show '+getShareOrnotTag(v.tag_id) +'"><p class="valtext">'+v.title+'</p><span class="valremove private_tag" data-val="'+v.title+'" tag-id="'+v.tag_id+'" onclick="removeConvTag(this)" data-balloon="Remove tag" data-balloon-pos="up"></span></div>');
                                // $('#convTagslistmini').prepend('<div class="'+getShareOrnotTag(v.tag_id) +' item private_tag_show convTagslistmini_'+v.tag_id+'"><p class="valtext">'+v.title+'</p></div>');

                                addClassActive(thisConvTagId, '#updateMessageTag .sub_btn');
                                $('#tagAddBtn').hide();
                                $('#selectToallShareTag').hide();
                                checkTagLength();
                            } else {
                                // thisMsgAllTagid.push(v.tag_id);
                                // thisMsgAllTagidNew.push(v.tag_id);
                                var msg_id = $('#updateMessageTag').attr('msg-id');
                                // $('#updateMsgTagContainer').prepend('<div class="item private_tag_show '+getShareOrnotTag(v.tag_id) +'" ><p class="valtext ">'+v.title+'</p><span class="valremove private_tag" data-val="'+v.title+'" tag-id="'+v.tag_id+'" msg-id="'+msg_id+'" onclick="removeOnMsgTag(this)" data-balloon="Remove tag" data-balloon-pos="up"></span></div>');
                                // socket.emit('tagOneMsg',{msg_id:msg_id,conversation_id:conversation_id,tag_id:res.data.tag_id,user_id:user_id},function(res2){
                                // 	if(res2.status){
                                // 		var oldTagList = $('#msg_tag_list'+msg_id).attr('tag-list');
                                // 		if(oldTagList != null){
                                // 			oldTagList = oldTagList.split(',');
                                // 		}else{
                                // 			oldTagList = [];
                                // 		}
                                // 		oldTagList.push(v.tag_id);
                                // 		$('#msg_tag_list'+msg_id).attr('tag-list',oldTagList);
                                // 		$('#msg_tag_list'+msg_id).append('<span class="'+getShareOrnotTag(v.tag_id) +' tag_design private_tag_show tag_name_view_'+res.data.tag_id+'" data-id="'+res.data.tag_id+'">'+res.data.title+'</span>');
                                // 		$('#updateMsgTagContainer input').focus();
                                // 		$('#thisMsgTagLists'+msg_id).attr('data-id',oldTagList);
                                // 		console.log(oldTagList);
                                // 		permsg_tagsList(msg_id);
                                // 	}
                                // });
                                $('#tagAddBtn').hide();
                                $('#selectToallShareTag').hide();
                                checkTagLength();
                            }

                        }
                    }
                });

            }
        }
        checkTagLength();
    })
}

function addNewtagForConv(e) {

    var str = $(e.target).val();
    str = str.replace(/\s+$/, '');
    var code = e.keyCode || e.which;
    if(str.length >  15 && code !== 13){
        return false;
    }
    // str = str.trim().toLowerCase().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, '');
    // str = str.replace(/\s/g, '');

    // console.log(thisConvTagName.indexOf(str))

    // if ((e.which >= 65 && e.which <= 90) || e.which == 189 || e.which == 13) {
    // if ((e.which >= 65 && e.which <= 90) || e.which == 189 || e.which == 13) {
    if (str != "") {


        if (str != "") {

            $(".taggedList li").each(function() {
                if ($(this).text().toLowerCase().search(str.toLowerCase()) > -1) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });

            $('.taggedList li').unhighlight();
            $('.taggedList li').highlight(str);

            

            var roomid = $('.side_bar_list_item li.sideActive').attr('data-conversationid');

            var tagTitle = str;
            if (code == 13) { //Enter keycode = 13

                e.preventDefault();
                if ($('#updateMessageTag').hasClass('public_tab')) {
                    return false;
                }
                if ($('#tagAddBtn').is(':visible')) {
                    $('#tagAddBtn').trigger('click');
                }

                // if(thisConvTagName.indexOf(tagTitle) == -1){
                // 	if($('#updateMessageTag').hasClass('private_tab')){
                // 		if($('#selectToallShareTag').find('.Custom_checkboxF').hasClass('active')){

                // 		createNewTagV2({title:tagTitle,type:'conv',shared_tag:user_id});
                // 		}else{

                // 		createNewTagV2({title:tagTitle,type:'conv',shared_tag:null});
                // 		}
                // 		$('#tagAddBtn').hide();
                // 		$('#selectToallShareTag').hide();
                // 		checkTagLength();
                // 	}
                // }
                // if (tagTitle != "") {
                // 	if (roomid == "") {
                // 		// toastr["warning"]("You have to select a room or personal conversation", "Warning");
                // 		$('#warningsPopup').css('display','flex');
                // 		$('#warningsPopup .warningMsg').text('You have to select a Room.');
                // 		$(this).val("");
                // 	} else {
                // 		var tagArr = tagTitle.split(',');
                // 		var sendTagarr = [];
                // 		var pTag = [];
                //
                // 		$.each(tagArr, function (k, v) {
                //
                // 			if (tagListTitle.indexOf(v.toLowerCase()) === -1) {
                // 				if (alltags.indexOf(v.toLowerCase()) === -1) {
                //
                // 					sendTagarr.push(v.trim().toLowerCase().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, ''));
                // 					tagListForFileAttach.push(v.toLowerCase());
                // 					if(hiddenTagName.indexOf(v.toLowerCase()) == -1){
                // 						console.log(6278,v)
                // 						tagListTitle.push(v.toLowerCase());
                // 					}
                // 					alltags.push(v.toLowerCase());
                // 					alltagsFull.push(v);
                //
                // 				} else {
                //
                // 					$('.taggedList li').each(function (tagk, tagv) {
                // 						if (v.toLowerCase() == $(tagv).text().toLowerCase()) {
                // 							$(tagv).trigger('click');
                // 							$("#tagItemList").text(tagListTitle.join(','));
                // 						}
                // 					});
                // 				}
                // 			}
                // 		});
                //
                // 		$(".taggedList li").each(function () {
                // 			$(this).show();
                // 		});
                //
                // 		$('.taggedList li').unhighlight();
                // 		if (sendTagarr.length > 0) {
                // 			socket.emit('saveTag', {
                // 				created_by: user_id,
                // 				conversation_id: roomid,
                // 				tagTitle: sendTagarr,
                // 				messgids: attachFileList,
                // 				msgIdsFtag: msgIdsFtag,
                // 				tagType: "CONNECT"
                // 			}, (callBack) => {
                // 				if (callBack.status) {
                // 					$.each(callBack.tags, function (k, v) {
                // 						console.log(6320,v,callBack.roottags[k],sendTagarr[k],roomid);
                // 						var design = '<li onclick="removeLevel(\'' + v + '\',\'' + roomid + '\',\'' + callBack.roottags[k] + '\')">' + sendTagarr[k] + '<span class="tagcheck" id="level' + v + '" ></span></li>';
                // 						tagLsitDetail.push({
                // 							'cnvtagid': v,
                // 							'tagid': callBack.roottags[k],
                // 							'tagTitle': sendTagarr[k],
                // 							'roomid': roomid,
                // 						});
                // 						$('#taggedList').append(design);
                //
                // 						var design2 = '<div class="item _minitag_'+v+'" >'
                // 										+'<p class="valtext">'+sendTagarr[k]+'</p>'
                // 									+'</div>';
                //
                // 						var design = '<div class="item _minitag_'+v+'" >'
                // 										+'<p class="valtext">'+sendTagarr[k]+'</p>'
                // 										+'<span class="valremove" data-val="'+v+'" tag-id="'+callBack.roottags[k]+'"  onclick="removeLevel(\'' + v + '\',\'' + roomid + '\',\'' + callBack.roottags[k] + '\')"></span>'
                // 									+'</div>';
                //
                // 						var alltopictag = $('#roomIdDiv').attr('topic-tag').split(',');
                //
                // 						alltopictag.push(v);
                // 						$('#roomIdDiv').attr('topic-tag',alltopictag.join(','));
                // 						$('#temmpTagContainerUpdate').append(design2);
                // 						$('#updateTagContainer').append(design);
                // 						countTagforactivebtn($('#updateTagContainer .item').length);
                //
                // 						var tag_itemdesign = '<div class="added-channel-members">';
                // 						tag_itemdesign += '	<input id="tag_' + callBack.roottags[k] + '" data-tagid="' + callBack.roottags[k] + '" data-tagtitle="' + sendTagarr[k] + '" class="checkToDo" type="checkbox">';
                // 						tag_itemdesign += '<label for="tag_' + callBack.roottags[k] + '">' + sendTagarr[k] + '</label>';
                // 						tag_itemdesign += '</div>';
                //
                // 						$("#taggedItem").append(tag_itemdesign);
                //
                // 						my_tag_list[v] = sendTagarr[k];
                // 						my_tag_id.push(v);
                // 						var localData = {
                // 							created_at: "",
                // 							tag_id: callBack.roottags[k],
                // 							tagged_by: user_id,
                // 							title: sendTagarr[k],
                // 							type: "CONNECT"
                //
                // 						}
                // 						update_local_conv_tag('newTag', localData, v);
                // 					});
                //
                // 					all_action_for_selected_member();
                //
                // 					if (tagListTitle.length > 0) {
                // 						$("#taggedIMG").attr('src', '/images/basicAssets/custom_tagged.svg');
                // 					}
                //
                // 					if (callBack.mtagsid != undefined) {
                // 						if (callBack.mtagsid.length > 0) {
                // 							$.each(callBack.mtagsid, function (k, v) {
                // 								if (msgIdsFtag.indexOf(v) === -1) {
                // 									msgIdsFtag.push(v);
                // 								}
                //
                // 							});
                // 						}
                // 					}
                // 					$(e.target).val("");
                // 					$(e.target).focus();
                // 					$("#tagItemList").text(tagListTitle.join(','));
                //
                // 					$(".taggedList li").each(function () {
                // 						$(this).show();
                // 					});
                //
                // 					$('.taggedList li').unhighlight();
                //
                // 					$.each(attachFileList, function (k, v) {
                // 						if(hiddentag.indexOf(sendTagarr[0].toLowerCase()) == -1){
                // 							$("#filesTag" + v).append('<span class="filesTag">' + sendTagarr[0].toLowerCase() + '</span>');
                // 							$("#filesTagHolder" + v).show();
                // 						}
                // 					});
                // 				} else {
                // 					if (callBack.err == 'at') {
                // 						// toastr["warning"]("\"" + tagTitle + "\" already tagged", "Warning");
                //
                // 						$('#warningsPopup').css('display','flex');
                // 						$('#warningsPopup .warningMsg').text("\"" + tagTitle + "\" already tagged.");
                // 					}
                // 				}
                // 			});
                // 		}
                // 	}
                // } else {
                // 	$(e.target).focus();
                // }
            }




        } else {
            $('#tagAddBtn').hide();
            $('#selectToallShareTag').hide();
            $('#updateMessageTag .sub_btn').show();
            $(".taggedList li").each(function() {
                $(this).show();
            });

            $(e.target).val($(e.target).val().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, ''));
        }

    } else {


        var str = $('#createConvTag').val();
        // console.log(str);
        if (str == undefined) {
            str = '';
        }
        if (str.length > 0) {
            str = str.trim();
            str = str.replace(/<\/?[^>]+(>|$)/g, "");
        }


        if (str == "") {
            $(".taggedList li").each(function() {
                $(this).show();
                $(this).unhighlight();
            });
        }

        if (e.which == 8) {
            $(".taggedList li").each(function() {
                if ($(this).text().toLowerCase().search(str.toLowerCase()) > -1) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });

            $('.taggedList li').unhighlight();
            $('.taggedList li').highlight(str);
        }

        if (e.which == 32) {
            $('#createConvTag').val(str.replace(" ", ""));
        } else {
            $('#createConvTag').val(str.replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, ''));
        }

    }
    var allTitleLi = [];

    $(".oldTagholder .tag").each(function() {
        allTitleLi.push($(this).text().toLowerCase());
        if ($(this).find('.this_title').text().toLowerCase().search(str.toLowerCase()) > -1) {
            $(this).show();
        } else {
            $(this).hide();
        }
    });

    $('.oldTagholder .tag').unhighlight();
    $('.oldTagholder .tag').highlight(str);

    if (e.keyCode == 8) {
        if ($(e.target).val() == '') {
            $(e.target).prev('.container').find('.item:last').find('.valremove').trigger('click');
        }
        $('.oldTagholder .tag').unhighlight();
        $('.oldTagholder .tag').highlight(str);
    }
    if ($('#updateMessageTag').hasClass('private_tab')) {
        // console.log(1984,allTitleLi,str.toLowerCase());
        if (allTitleLi.indexOf(str.toLowerCase()) == -1 && str.length > 0) {
            $('#tagAddBtn').show();
            $('#selectToallShareTag').show();

            $('#updateMessageTag .sub_btn').hide();
        } else {
            $('#tagAddBtn').hide();
            $('#selectToallShareTag').hide();
            $('#updateMessageTag .sub_btn').show();
        }

        if (str == '') {
            $('#tagAddBtn').hide();
            $('#selectToallShareTag').hide();
            $('#updateMessageTag .sub_btn').show();
        }
    }
    checkTagLength();
    if (str == '') {
        $('.oldTagholder .tag').unhighlight();
    }
}

var topicTagItem = [];

$('body').on('click', '#tagAddBtn', function(event) {
    var tagTitle = $('#updateMessageTag input').val();
    // console.log(20055,'click')
    if ($('#selectToallShareTag').find('.Custom_checkboxF').hasClass('active')) {

        createNewTagV2({ title: tagTitle, type: 'conv', shared_tag: user_id });
    } else {
        createNewTagV2({ title: tagTitle, type: 'conv', shared_tag: null });
    }
    $('#tagAddBtn').hide();
    $('#selectToallShareTag').hide();
    checkTagLength();
    // $('#updateMessageTag .sub_btn').show();

})

function createNewMsgTag(e) {
    var value = $(e.target).val();
    value = value.trim().toLowerCase().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, '');
    value = value.replace(/\s/g, '');
    $(e.target).val(value);
    if (e.keyCode == 13) {
        e.preventDefault();
        e.stopImmediatePropagation();
        if (topicTagItem.indexOf(value) == -1) {
            if (value !== '') {
                topicTagItemSave(value);
                $(e.target).val('');
                $(e.target).focus();
            }
        }
    }
    // else if(e.keyCode == 8){
    // 	if(value == ''){
    // 		$('#msg_tag_container .item:last').find('.valremove').trigger('click');
    // 		$(e.target).focus();
    // 	}
    // }
}

function topicTagItemSave(val) {
    socket.emit('topicTagItemSocket', { fromAddTopic: fromAddTopic, fromAddmsgid: fromAddmsgid, topicItem: val, created_by: user_id, conversation_id: $('#roomIdDiv').attr('data-roomid') }, function(res) {
        if (res.status) {
            // console.log(res);
            var html = '<div class="item" ><span class="active"  data-topi="' + val + '" onclick="toggleTopicLi(this)"></span><p class="valtext">' + val + '</p><span class="valremove" data-id="' + res.status.topic_id + '" data-val="' + val + '" onclick="removeMsgTag(this)"></span></div>';
            $('#msg_tag_container').prepend(html);

            var htmlFilter = '<div class="item" data-title="' + val + '" onclick="filterdata(this);" ></span><p class="valtext">' + val + '</p><span class="valremove" data-id="' + res.status.topic_id + '" data-val="' + val + '" onclick="removeMsgTag(this)"></span></div>';
            $('#topicContainer').prepend(htmlFilter);

            var liHtml = '<li>';
            liHtml += '	<div class="option topicLi">';
            liHtml += '		<div class="active"  data-topi="' + val + '" onclick="toggleTopicLi(this)"></div>';
            liHtml += '		<div class="text">' + val + '</div>';
            liHtml += '	</div>';
            liHtml += '</li>';
            $('#options_container').append(liHtml);
            topicTagItem.push(val);
            if (fromAddTopic == 1) {
                $("#filesTag" + fromAddmsgid).html('');
                $("#filesTag" + fromAddmsgid).append('<span class="filesTag">' + val + '</span>');
            }
        }
    });
}

function removeMsgTag(elm) {
    socket.emit('topicTagItemDeleteSocket', { tagid: $(elm).attr('data-id'), title: $(elm).attr('data-val'), conversation_id: $('#roomIdDiv').attr('data-roomid') }, function(res) {
        if (res.status) {
            $(elm).parent('.item').remove();
            removeA(topicTagItem, $(elm).attr('data-val'));
            $('.filesTag').each(function(i, obj) {
                if ($(obj).text() == $(elm).attr('data-val')) {
                    $(obj).remove();
                }
            });

            $.each(res.status.msgid, (k, v) => {
                if ($("#filesTag" + v.toString()).find('.filesTag').length == 0) {
                    $("#filesTag" + v.toString()).html('<span class="addTagSpan" data-msgid="' + v.toString() + '" onclick="toggleTopicCont(this)"><i class="fa fa-tag"></i> Add a topic</span>');
                }
            });

            var value = $(elm).attr('data-val');
            $(".topicLi").each(function(k, v) {
                if ($(v).find('.text').text() == value) {
                    $(v).remove();
                }
            });
        }
    });

}

function toggleMessageTag(elm) {
    if ($(elm).hasClass('active')) {
        $(elm).removeClass('active');
        // $('.msgTagHolder').hide();
        $('#slideUP').hide();
    } else {
        $(elm).addClass('active');
        $('#slideUP').show();
        // $('.msgTagHolder').show();
        $('#msg_tag_container').find('.tag_input_box').focus();
    }
}

var fromAddTopic = 0;
var fromAddmsgid = 0;

function toggleManageTopic(elm) {
    if ($(elm).hasClass('active')) {
        $(elm).removeClass('active');
        $('#manageTopic_container').hide();
        $('.onConnect').show();
        $('.onTask').show();
    } else {
        $(elm).addClass('active');
        $('#manageTopic_container').show();
        $('.onConnect').hide();
        $('.onTask').hide();
    }
}

function toggleTopicCont(elm) {

    if ($(elm).hasClass('active')) {
        $(elm).removeClass('active');
        $('.msgTagHolder').hide();
    } else {
        $(elm).addClass('active');
        $('.msgTagHolder').show();
        $('#msg_tag_container').find('.tag_input_box').focus();
    }

    if ($(elm).hasClass('addTagSpan')) {
        fromAddTopic = 1;
        fromAddmsgid = $(elm).attr('data-msgid');
        $("#msg_tag_container").find('.item').hide();
        topicTagItem = [];

        $(".item").each(function(k, v) {
            if ($(v).find('.valtext').text() == value) {
                $(v).find('.active').removeClass('active').addClass('inactive');
            }
        });

        $(".topicLi").each(function(k, v) {
            if ($(v).find('.text').text() == value) {
                $(v).find('.active').removeClass('active').addClass('inactive');
            }
        });
    }
}

function toggleTopicLi(elm) {
    // console.log(elm);
    if ($(elm).hasClass('active')) {
        $(elm).removeClass('active').addClass('inactive');
        var value = $(elm).attr('data-topi');
        removeA(topicTagItem, value);

        if ($(elm).closest('.item')) {
            $(".item").each(function(k, v) {
                if ($(v).find('.valtext').text() == value) {
                    $(v).find('.active').removeClass('active').addClass('inactive');
                }
            });
        }

        if ($(elm).closest('.topicLi')) {
            $(".topicLi").each(function(k, v) {
                if ($(v).find('.text').text() == value) {
                    $(v).find('.active').removeClass('active').addClass('inactive');
                }
            });
        }
    } else {
        $(elm).removeClass('inactive').addClass('active');
        var value = $(elm).attr('data-topi');
        if (topicTagItem.indexOf(value) == -1) {
            if (value !== '') {
                topicTagItem.push(value);

                if ($(elm).closest('.item')) {
                    $(".item").each(function(k, v) {
                        if ($(v).find('.valtext').text() == value) {
                            $(v).find('.inactive').removeClass('inactive').addClass('active');
                        }
                    });
                }

                if ($(elm).closest('.topicLi')) {
                    $(".topicLi").each(function(k, v) {
                        if ($(v).find('.text').text() == value) {
                            $(v).find('.inactive').removeClass('inactive').addClass('active');
                        }
                    });
                }
            }
        }
    }
}

$('.sp_b5lOLcZ0oBP').on('click', (e) => {
    if ($('#groupAdminArea').is(':visible')) {
        closeModal('groupAdminArea');
    }

    if ($('#manageTopic_container').is(':visible')) {
        $("#conv" + $('#roomIdDiv').attr('data-roomid')).trigger('click');
        closeModal('manageTopic_container');
        $('.onConnect').show();
        $('.onTask').show();
        $("#topicActive").hide();
        $("#personalConnectActive").show();

    }
});

function filterdata(elem) {
    var filerdata = $(elem).attr('data-title');
    // console.log(filerdata);
    if (filerdata != "") {
        socket.emit('getfilterDatamessageSocket', { topictitle: filerdata, conversation_id: $('#roomIdDiv').attr('data-roomid') }, (response) => {
            // console.log(response);
            if (response.status) {
                $("#topicActive").show();
                $("#personalConnectActive").hide();
                $('.filterList').text('> ' + filerdata);
                $("#msg-container").html('');
                $.each(response.data, function(k, v) {
                    if (checkdrawmsg(v, adminArra, activeConvPrivacy)) {
                        draw_msg(v, true);
                    }
                });
            } else {
                $("#topicActive").show();
                $("#personalConnectActive").hide();
                $('.filterList').text('> ' + filerdata);
                $("#msg-container").html('');
                $("#msg-container").html('<span class="_5qtp" style="text-align: center; width: 100%; margin-top: 5%;">No message found on topic "' + filerdata + '"</span>');
            }
        });
    }
}

function selectThisMs(elm) {
    var msgid = $(elm).attr('data-msg-id');
    var check = $('#selectMessage').hasClass('activeComFilter');

    if (check) {
        if ($(elm).hasClass('active')) {
            $('.msg_id_' + msgid).find('.hyvenCheckboxBefore.hyvenCheckbox').trigger('click');

        } else {
            $('.msg_id_' + msgid).find('.hyvenCheckboxBefore.hyvenCheckbox').trigger('click');
        }

    } else {
        $('#selectMessage').trigger('click');
        $('.msg_id_' + msgid).find('.hyvenCheckboxBefore.hyvenCheckbox').trigger('click');
    }



}

function findforShareMember(e, elm) {
    var value = $(elm).val().trim();
    if (e.keyCode !== 40 && e.keyCode !== 38 && e.keyCode !== 13 && e.keyCode !== 27) {
        $("#shareSuggestedList .s-l-def-clas").each(function() {
            if ($(this).text().toLowerCase().search(value.toLowerCase()) > -1) {
                $(this).parent('li').show();
                $(this).parent('li').addClass('showEl');
            } else {
                $(this).parent('li').hide();
                $(this).parent('li').removeClass('showEl');
            }
        });

        $('#shareSuggestedList .s-l-def-clas').unhighlight();
        $('#shareSuggestedList .s-l-def-clas').highlight(value);



    }
    // console.log(14958,value)
    if (value != '') {
        if (e.keyCode == 9) {
            if ($('#shareSuggestedList li:visible').length > 0) {
                e.preventDefault();
                e.stopImmediatePropagation();
                $('#shareSuggestedList li:visible:first').click();
            }
        }
    }

}


function removeShareMember(uuid) {
    $('#shareMessagePopUp').removeClass('itemDisable');
    if ($('._mini_item_' + uuid).attr('data-conv') != '') {
        removeA(selectedShareMember, $('._mini_item_' + uuid).attr('data-conv'));
        $('.no_of_user_left_to_add span').text(10 - selectedShareMember.length);
    }
    $('._mini_item_' + uuid).remove();
    removeA(selectedShareMember, uuid);
    $('.no_of_user_left_to_add span').text(10 - selectedShareMember.length);
    $('#shareMsgminiHolder input').focus();
    if (selectedShareMember == 0) {
        $('#shareMessagePopUp .sub_btn').removeClass('active');
    } else {
        $('#shareMessagePopUp .sub_btn').addClass('active');
    }
    var newdata = _.sortBy(alluserandrooms, ["title", 'asc']);

    $.each(newdata, function(k, v) {
        if (v.conversation_id == uuid) {
            v.participants_sub = (v.participants_sub == null ? [] : v.participants_sub)
            if (v.participants_sub.indexOf(user_id) == -1) {
                $('#shareSuggestedList').append(userListDesign(v));
            }
            // $('#shareSuggestedList').append(userListDesign(v));
        }
    })

    // if($('#roomIdDiv').attr('topic-type') == 'work'){
    // var userid = user_id;
    // if(allconvdetails.length > 0){
    // 	$.each(allconvdetails, function (k, v) {
    // 		if(v.single == 'no'){
    // 			if(v.title != '' && v.title != null){
    // 				if(v.conversation_id == uuid){
    // 					$('#shareSuggestedList').prepend(userListDesign(v));
    // 				}
    // 			}
    // 		}
    // 	});
    // }

    // }else{
    // 	var user_list = access_user_list;
    // 	$.each(user_list, function(k,v){
    // 		if(participants.indexOf(v.id) == -1 && v.id !== user_id){
    // 				if(v.id == uuid)
    // 					$('#shareSuggestedList').prepend(userListDesign(v));
    // 		}
    // 	});
    // }
    popupMouseEnter();
}



// $('body').on('mouseenter','.editMessageAction',function(event){
// 	var time = moment().add('5','seconds').unix();
// 	if($(this).attr('close-time') == '' || $(this).attr('close-time') == undefined){
// 		$(this).attr('close-time',time);
// 	}else{
// 		if($(this).attr('close-time') < moment().unix()){
// 			$(this).attr('close-time',time);
// 		}
// 	}
// });

$('body').on('mouseleave', '.editMessageAction', function(event) {
    $(this).attr('close-time', moment().add('5', 'seconds').unix());
});
$('body').on('mouseleave', '#media_Action_Div', function(event) {
    $(this).attr('close-time', moment().add('5', 'seconds').unix());
});
$('body').on('mouseenter', '#media_Action_Div', function(event) {
    $(this).attr('close-time', moment().add('5', 'seconds').unix());
});

$('body').on('mouseleave', '#checklistActiondiv', function(event) {
    $(this).attr('close-time', moment().add('5', 'seconds').unix());
});
$('body').on('mouseleave', '#selectedMsgActionDiv', function(event) {
    $(this).attr('close-time', moment().add('5', 'seconds').unix());
});

$('body').on('mouseenter', '.side_bar_list_item li', function(event) {
    $('.side_bar_list_item .sidebartooltip').removeClass('active');
    $('.side_bar_list_item .sidebartooltip').removeAttr('close-time');
    var thiselm = $(this)
    setTimeout(function() {
        thiselm.find('.sidebartooltip').addClass('active');
    }, 2000);
});
$('body').on('mouseleave', '.side_bar_list_item li', function(event) {
    $(this).find('.sidebartooltip').removeClass('active');
    // $(this).find('.sidebartooltip').attr('close-time',moment().add('2','seconds').unix());
});


function editactiontrigger(elm, type) {
    var msg_id = $(elm).attr('data-msg-id');
    if (type == 'update') {
        $('.msg_id_' + msg_id).find('.editMessageAction .saveBtn').trigger('click');
    } else if (type == 'cancel') {
        $('.msg_id_' + msg_id).find('.editMessageAction .cancelBtn').trigger('click');
    }
}

function toggeCreateMsgContainer(elm) {
    $('#issue_req_users').html("");
    $('#issue_req_users').attr("data-id", '');
    if ($(elm).hasClass('closeIssue')) {
        $('.send-msgs').removeClass('issueActive');
        $(elm).removeClass('closeIssue');
        $(elm).addClass('openIssue');
    } else {
        $('.send-msgs').addClass('issueActive');
        $(elm).removeClass('openIssue');
        $(elm).addClass('closeIssue');
        $('#msg').focus();
    }
}

var mention_users = [];
var issue_msg_id = '';

function openIssueTag(elm) {
    $('#createIssueTagPop').show();
    $('#createIssueTagadminlist').html('');
    $('#createIssueTagPop').attr('old-tagid');
    $('#issueTagTitle').val("");
    mention_users = [];
    issue_msg_id = $(elm).attr('msg-id');
    $('#oldTaglist').html("");
    $('#oldTaglist').html($('#mentionHolder' + issue_msg_id).html());
    $('#oldTaglist').find('.requestHolder').remove();

    $.each(user_list, function(k, v) {
        if (adminArra.indexOf(v.id) > -1) {
            var html = '<li class="showEl" onclick="addTemppIssueTag(this)" data-id="' + v.id + '"><img src="' + file_server + 'profile-pic/Photos/' + v.img + '" class="profile"><span class="name s-l-def-clas" data-uuid="' + v.id + '">' + v.fullname + '</span><span class="designation-name">, ' + v.designation + '</span></li>';
            $('#createIssueTagadminlist').append(html);

        }
    });
    $('#issueTagTitle').focus();
}



function addTemppIssueTag(elm) {
    var checkelm = $(elm).hasClass('active');
    var data = $(elm).attr('data-id');

    if (checkelm) {
        $(elm).removeClass('active');
        removeA(mention_users, data);
    } else {
        $(elm).addClass('active');
        mention_users.push(data);
    }
}

function createIssueTag() {
    var str = $('#issueTagTitle').val();
    str = str.trim().toLowerCase().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, '');
    str = str.replace(/\s/g, '');

    var oldtagid = '';
    $.each($('#mentionHolder' + issue_msg_id).find('.tagname'), function(k, v) {
        if ($(v).attr('created-by') == user_id)
            oldtagid = $(v).attr('tag-id');
    });

    if (mention_users.length > 0) {
        var data = {
            mention_users: mention_users,
            tag_title: str,
            tagged_by: user_id,
            msg_id: issue_msg_id,
            conversation_id: conversation_id
        }
        if (str.length == 0) {
            if (mention_users.length == 1) {
                var username = findObjForUser(mention_users[0]).fullname;
                username = username.trim().toLowerCase().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, '');
                username = username.replace(/\s/g, '');
                data['tag_title'] = username;

            } else {
                // alert('Please enter your tag title.')
                $('#warningsPopup').css('display', 'flex');
                $('#warningsPopup .warningMsg').text('Please enter your tag title.');
                return false;
            }
        }
        if (oldtagid == '') {

            createMsgTag(data)

        } else {
            socket.emit('msgtagAddorRemove', { conversation_id: conversation_id, msg_id: issue_msg_id, tag_id: [oldtagid], type: 'remove' }, function(res) {
                if (res.status) {
                    $('#mentionHolder' + issue_msg_id).find('.issuetagid' + oldtagid).remove();
                    createMsgTag(data)
                }
            });
        }
    } else {
        alert('Please select service provider.');
    }



}

function createMsgTag(data) {
    socket.emit('createIssueTag', data, function(res) {
        if (res.status) {
            alltags.push(data.tag_title);
            alltagsFull.push(res.data);
            closeModal('createIssueTagPop');
            $('#mentionHolder' + data.msg_id).prepend(issueTagDesign(res.data));
            allconvissuetag.push(res.data);
            $('#requestHolder_' + data.msg_id).remove();
        }
    });
}

function issueTagDesign(data) {
    var adminclass = ''
    if (adminArra.indexOf(user_id) > -1) {
        adminclass = 'admin';
    }
    var html = '<div class="issueTag issuetagid' + data.tag_id + '">'
    html += '<p class="tagname ' + adminclass + '" tag-id="' + data.tag_id + '" created-by="' + data.tagged_by + '">' + data.title + ' <span class="removeico" onclick="removeIssueTag(this)" tag-id="' + data.tag_id + '"></span></p> <p class="mentionuser">';
    $.each(data.mention_users, function(k, v) {
        var username = findObjForUser(v).fullname;
        html += '@' + username + '<br>';
    });
    html += '</p>';
    html += '</div>';
    return html;
}

function issueTagDesign2(data) {
    if (adminArra == null) {
        adminArra = [];
    }
    var adminclass = ''
    if (adminArra.indexOf(user_id) > -1) {
        adminclass = 'admin';
    }
    var html = '<p class="tagname ' + adminclass + '" tag-id="' + data.tag_id + '" created-by="' + data.tagged_by + '">' + data.title + ' <span class="removeico" onclick="removeIssueTag(this)" tag-id="' + data.tag_id + '"></span></p> <p class="mentionuser">';
    $.each(data.mention_users, function(k, v) {
        var username = findObjForUser(v).fullname;
        html += '@' + username + '<br>';
    });
    html += '</p>';
    return html;
}

function singleMsgIssueTag(msg_id) {
    $('#mentionHolder' + msg_id).html("");
    socket.emit('getMsgissueTag', { msg_id }, function(res) {
        $.each(res.data, function(k, v) {
            $('#mentionHolder' + msg_id).append(issueTagDesign(v));
        })
    });
}




function createIssue() {
    if ($('#msg').attr('data-checklist') == 'true') {
        checklistSubmit();
        $('#createIssueBtn').trigger('click');

    } else {
        if ($('#msg').text().length == 0) {
            $('#msg').focus();
        } else {
            $('#msg').focus();
            var e = $.Event("keydown", { which: 13 });
            // console.log(e);
            $('#msg').trigger(e);
            // console.log(e)
        }

    }
}

// function adminMouseenterfun(){
// 	$(".ml-listHA .member-div").mouseenter(function(e) {
// 		$(this).find('.remove-admin').show();
// 		$(this).find('.remove-it').show();
// 	}).mouseleave(function() {
// 		$(this).find('.remove-admin').hide();
// 		$(this).find('.remove-it').hide();
// 	});

// 	if ($('#ml-listHA .member-div').length > 0) {
// 		$("#ml-admintype").show();
// 	} else {
// 		$("#ml-admintype").hide();
// 	}

// 	if ($('#ml-listHl .member-div').length > 0) {
// 		$("#ml-membertype").show();
// 	} else {
// 		$("#ml-membertype").hide();
// 	}
// }

function removeIssueTag(elm) {
    var tag_id = $(elm).attr('tag-id');
    if ($('#createIssueTagPop').is(':visible')) {
        var msg_id = issue_msg_id;
    } else {
        var msg_id = $(elm).parents('.msgs-form-users').attr('data-msgid');

    }
    socket.emit('msgtagAddorRemove', { conversation_id: conversation_id, msg_id: msg_id, tag_id: [tag_id], type: 'remove' }, function(res) {
        if (res.status) {
            $('#mentionHolder' + msg_id).find('.issuetagid' + tag_id).remove();
            if ($('#createIssueTagPop').is(':visible')) {
                if (oldtagid == tag_id) {
                    oldtagid = '';
                }
            }
            if ($('#mentionHolder' + msg_id).find('.tagname').length == 0) {
                $('#mentionHolder' + msg_id).prepend(msgreqHolderHtml({ msg_id: msg_id }));
            }
        }
    });
}

function msgreqHolderHtml(data) {
    var html = '<div class="requestHolder" id="requestHolder_' + data.msg_id + '">' +
        '<div class="reqBtn accept" onclick="acceptIssueMsg(\'' + data.msg_id + '\')">Accept</div>' +
        '<div class="reqBtn addTag" onclick="$(\'.msg_id_' + data.msg_id + ' .issueTagContainer\').trigger(\'click\')">+ Issue Tag</div>' +
        '</div>';
    return html;
}

function acceptIssueMsg(msg_id) {
    var data = {
        conversation_id: conversation_id,
        msg_id: msg_id,
        user_id: [user_id],
        type: 'add'
    }
    var username = user_fullname.trim().toLowerCase().replace(/[`~!@#$%^&*()|+\-=÷¿?;:'",.<>\{\}\[\]\\\/]/gi, '');
    username = username.replace(/\s/g, '');

    var createData = {
        mention_users: [user_id],
        tag_title: username,
        tagged_by: user_id,
        msg_id: msg_id,
        conversation_id: conversation_id
    }
    socket.emit('acceptOrRejectIssue', data, function(rs) {
        if (rs.status) {
            socket.emit('createIssueTag', createData, function(res) {
                if (res.status) {
                    alltags.push(createData.tag_title);
                    alltagsFull.push(res.data);
                    $('#mentionHolder' + createData.msg_id).prepend(issueTagDesign(res.data));
                    allconvissuetag.push(res.data);
                    $('#requestHolder_' + createData.msg_id).remove();
                }
            });
        }
    })
}

function convParticipantsTooltip(convid) {
    $('#conv_title .participants.freeliTooltip').remove();
    $('#conv_title').append('<p id="headPartiTooltip" class="participants freeliTooltip"></p>');
    $.each(user_list, function(k, v) {
        if (participants.indexOf(v.id) > -1) {
            $('#headPartiTooltip').append('' + v.fullname + '<br>');
        }
    })

}

function triggerSelect(elm) {
    var msg_id = $(elm).attr('msg-id');

    $('#selectMessage' + msg_id).trigger('click');
}

function triggerEdit(elm) {
    var msg_id = $(elm).attr('msg-id');
    $('#editAction' + msg_id).trigger('click');
}

function removeChecklistTemp(elm) {
    // $(elm).parent('.checkListItem').hide();
    $(elm).parent('.checkListItem').find('.checkBoxTitle').html("");
    $(elm).parent('.checkListItem').find('.checkBoxTitle').focus();
    // $('#msgCheckItemContainer').find('.checkListItem[checklist-id='+id+']').hide();
    // $('#msgCheckItemContainer').find('.checkListItem[checklist-id='+id+']').html("");
}
var thisMsgAllTagid = [];
var thisMsgAllTagidNew = [];
var msg_tagUsers = null;
var all_user_string_tag = {};
var oldAddedtag = [];

function viewMessageTag(elm) {
    oldAddedtag = [];
    anyChangeThisAction = [];
    $('#tagSearchAddInput').val('');
    $('#tagSearchAddInput').focus();

    $('#selectToallShareTag').find('.Custom_checkboxF').removeClass('active');
    msg_tagUsers = null;
    thisMsgAllTagid = [];
    thisMsgAllTagidNew = [];
    tagremoveOld = [];
    $('#tagAddBtn').hide();
    $('#selectToallShareTag').hide();
    $('#updateMessageTag .sub_btn').show();
    $('#updateMessageTag').attr('file-id', '');
    thisConvTagName = [];
    thisConvTag = [];
    $('#updateMessageTag .hayven_Modal_Content').css('pointer-events', 'auto');
    var msg_id = $(elm).attr('msg-id');
    if (all_user_string_tag[msg_id] != null && all_user_string_tag[msg_id] != 'null') {
        msg_tagUsers = all_user_string_tag[msg_id];
    }
    // console.log(17777777,all_user_string_tag);
    $('#updateMessageTag').attr('msg-id', msg_id);
    $('#updateMessageTag').attr('msg-sender', $('#msgThread_' + msg_id).find('.user-msg').attr('data-senderid'));
    var allUserTag = $('#msg_tag_list' + msg_id).attr('tag-list');

    if (allUserTag != 'null') {

        allUserTag = allUserTag.split(',');
    } else {
        allUserTag = [];
    }
    $('#AllTagList').html('');
    $('#updateMsgTagContainer').html('');
    $('#updateMessageTag').css('display', 'flex');
    // console.log(allUserTag);
    tag_counterSet(null, true);
    if (msg_tagUsers != null) {
        // console.log(155555,msg_tagUsers);
        msg_tagUsers = JSON.parse(msg_tagUsers);
    }
    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            thisConvTagName.push(v.title);
            thisConvTag.push(v.tag_id);
            var removeAction = 'inactive';
            if (msg_tagUsers != null) {
                if (msg_tagUsers[user_id] != undefined) {
                    if (msg_tagUsers[user_id].indexOf(v.tag_id) > -1) {
                        removeAction = '';
                    }
                }
            }
            var st = 'shared_icon';
            var sa = '';
            if (v.shared_tag != null) {
                st = st + ' active';
                if (v.shared_tag !== user_id) {
                    sa = ' others_userTag ';
                }
            }
            if (allUserTag.indexOf(v.tag_id) > -1) {
                thisMsgAllTagid.push(v.tag_id);
                // console.log(17656,v.tag_color);
                oldAddedtag.push(v.tag_id);
                // if(v.tagged_by !== user_id){
                var privateDesign = '<span style="border-color:' + getTagColor(v.tag_id) + '"  class="color_defiendBtn" style="background-color:' + getTagColor(v.tag_id) + '"></span><span id="thisTagId_' + v.tag_id + '" class="this_title" data-id="' + v.tag_id + '" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)" data-balloonu="Click and submit to add this tag" data-balloon="Type and enter to save this tag"  data-balloon-pos="up">' + v.title + '</span>' + getSharedTagUserName(v.tag_id) + '<span class="removeIcon" data-balloon="Delete" data-balloon-pos="up"></span><span class="editIcon" data-balloon="Edit" data-balloon-pos="up"></span><span class="' + st + '" data-balloon="Make tag available to others in this room" data-balloon-pos="left"></span>';
                if (v.tag_type == 'public') {
                    privateDesign = '<span class="color_defiendBtn" style="background-color:' + getTagColor(v.tag_id) + '"></span><span id="thisTagId_' + v.tag_id + '" class="this_title" data-id="' + v.tag_id + '">' + v.title + '</span>';
                }

                var created_byThistag = (v.tagged_by == user_id ? 'createByme' : 'createByothers');
                $('#AllTagList').prepend('<div style="border-color:' + getTagColor(v.tag_id) + '" onclick="tagOneMsg(this,event)" class="active ' + created_byThistag + ' ' + (v.tag_type == 'public' ? 'public_tag public_tag_show ' : 'private_tag_show ') + (v.shared_tag !== null ? ' shared_tag_user ' : ' ') + sa + getShareOrnotTag(v.tag_id) + ' tag tag_id_' + v.tag_id + '" data-id="' + v.tag_id + '" msg-id="' + msg_id + '">' + privateDesign + '</div>');

                // }else{

                // // $('#updateMsgTagContainer').prepend('<div class="'+removeAction+' item '+(v.tag_type == 'public' ? 'public_tag_show ':'private_tag_show')+sa+getShareOrnotTag(v.tag_id) +' '+ (v.shared_tag !== null ? ' shared_tag_user ':' ') +'" style="'+(v.tag_color != null ? 'background-color:'+v.tag_color+' !important':'')+'"><p class="valtext">'+v.title+'</p><span class="valremove '+(v.tag_type == 'public' ? 'public_tag ':' ')+'" data-val="'+v.title+'" tag-id="'+v.tag_id+'" msg-id="'+msg_id+'" onclick="removeOnMsgTag(this)" data-balloon="Remove tag" data-balloon-pos="up"></span></div>');
                // }
                // var msg_type = $('#msgThread_'+msg_id).attr('data-msg-type');
                // if(msg_type == 'checklist' || msg_type == 'text'){
                // 	$('#updateMsgTagContainer').prepend('<div class="item"><p class="valtext">'+v.title+'</p><span class="valremove" data-val="'+v.title+'" tag-id="'+v.tag_id+'" msg-id="'+msg_id+'" onclick="removeOnMsgTag(this)"></span></div>');
                // }else{

                // 	if(thisroomTagList.indexOf(v.tag_id) == -1){

                // 		$('#updateMsgTagContainer').prepend('<div class="item"><p class="valtext">'+v.title+'</p><span class="valremove" data-val="'+v.title+'" tag-id="'+v.tag_id+'" msg-id="'+msg_id+'" onclick="removeOnMsgTag(this)"></span></div>');
                // 	}
                // }
            } else {

                var privateDesign = '<span style="border-color:' + getTagColor(v.tag_id) + '"  class="color_defiendBtn" style="background-color:' + getTagColor(v.tag_id) + '"></span><span id="thisTagId_' + v.tag_id + '" class="this_title" data-id="' + v.tag_id + '" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)" data-balloonu="Click and submit to add this tag" data-balloon="Type and enter to save this tag"  data-balloon-pos="up">' + v.title + '</span>' + getSharedTagUserName(v.tag_id) + '<span class="removeIcon" data-balloon="Delete" data-balloon-pos="up"></span><span class="editIcon" data-balloon="Edit" data-balloon-pos="up"></span><span class="' + st + '" data-balloon="Make tag available to others in this room" data-balloon-pos="left"></span>';
                if (v.tag_type == 'public') {
                    privateDesign = '<span class="color_defiendBtn" style="background-color:' + getTagColor(v.tag_id) + '"></span><span id="thisTagId_' + v.tag_id + '" class="this_title" data-id="' + v.tag_id + '">' + v.title + '</span>';
                }
                var created_byThistag = (v.tagged_by == user_id ? 'createByme' : 'createByothers');
                $('#AllTagList').append('<div style="border-color:' + getTagColor(v.tag_id) + '" onclick="tagOneMsg(this,event)" class="' + created_byThistag + ' ' + (v.tag_type == 'public' ? 'public_tag public_tag_show ' : 'private_tag_show ') + (v.shared_tag !== null ? ' shared_tag_user ' : ' ') + sa + getShareOrnotTag(v.tag_id) + ' tag tag_id_' + v.tag_id + '" data-id="' + v.tag_id + '" msg-id="' + msg_id + '">' + privateDesign + '</div>');
            }
            tag_counterSet(v.tag_type, true);
        }
    });
    $('#updateMsgTagContainer input').focus();
    $('#updateMessageTag').removeClass('sharedtag_tab');
    $('#updateMessageTag').removeClass('public_tab');
    $('#updateMessageTag').addClass('private_tab');
    checkTagLength();
    getRoomWiseShareTag(conversation_id);
}

function changeShareTagC(tag_id, type) {
    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            if (v.tag_id == tag_id) {
                if (type) {
                    allUserTagList[k]['shared_tag'] = user_id;
                    // $('#AllTagList').find('.tag_id_'+tag_id).click();
                } else {
                    allUserTagList[k]['shared_tag'] = null;
                }
            }
        }
    })
}

function tagOneMsg(elm, event) {
    var msg_id = $(elm).attr('msg-id');
    var tag_id = $(elm).attr('data-id');
    var title = $('#AllTagList').find('.tag_id_' + tag_id).text();
    var thisPublic = ($(elm).hasClass('public_tag') ? true : false);
    var thisShared = ($(elm).hasClass('shared_tag_only') ? true : false);
    var thisotherUser = ($(elm).hasClass('others_userTag') ? ' others_userTag ' : ' ');
    var tag_color = findColorThisTag(tag_id);
    // console.log(12222,tag_color);	
    if (oldAddedtag.indexOf(tag_id) > -1) {
        removeA(anyChangeThisAction, tag_id);
    } else {
        anyChangeThisAction.push(tag_id);
    }

    // console.log(15805,$(event.target).hasClass('editIcon'))
    if ($(event.target).hasClass('removeIcon')) {
        // console.log('remove');
        event.preventDefault();
        event.stopImmediatePropagation();
        $('#warningMessage').html('');
        $('#warningTitle').html('');
        $('#warningPopup').css('display', 'flex');
        $('#warningPopup').attr('data-type', 'delete_tag');
        $('#warningPopup').attr('tag-id', tag_id);
        $('#warningTitle').text('Delete Tag');
        $('#warningMessage').html('<h4 style="font-weight:normal; font-size:16px;"> Are you sure about deleting this tag? All content previously tagged with this one will be untagged as well.</h4>');
        $('.buttonCancel').text('Cancel');
        $('.buttonAction').addClass('bg_danger').text('Delete');

        // $('#AllTagList').find('.tag_id_'+tag_id).remove();
        // event.preventDefault();
        // $(elm).remove();
        // delteMyTagV2({tag_id:tag_id,type:'conv'});
        // $('.tag_name_view_'+tag_id).remove();
    } else if ($(event.target).hasClass('shared_icon')) {
        if ($(event.target).hasClass('active')) {
            // console.log('remove');
            // event.preventDefault();
            // event.stopImmediatePropagation();
            // $('#warningMessage').html('');
            // $('#warningTitle').html('');
            // $('#warningPopup').show();
            // $('#warningPopup').attr('data-type', 'removeShare');
            // $('#warningPopup').attr('tag-id',tag_id );
            // $('#warningTitle').text('Share Tag');
            // $('#warningMessage').html('<h4 style="font-weight:normal; font-size:16px;"> Do you want to revoke sharing on this tag? No one on this channel with this tag can view.</h4>');
            // $('.buttonCancel').text('Cancel');
            // $('.buttonAction').addClass('bg_danger').text('Revoke');

            $(event.target).removeClass('active');
            $('.tag_id_' + tag_id).css('border-color', 'var(--PrimaryC)');
            $('.tag_id_' + tag_id).removeClass('shared_tag_user');
            $('.tag_name_view_' + tag_id).removeClass('shared_tag_user');
            $('.tag_id_' + tag_id).removeClass('shared_tag_only');
            $('.tag_id_' + tag_id).addClass('notShared');
            changeShareTagC(tag_id, false);
            socket.emit('sharedTag', { tagged_by: user_id, tag_id: tag_id, shared_tag: null }, function(res) {
                socket.emit('updateTeamtagListperMsgBrocast', { type: 'removeShare', tag_id: tag_id });
                // console.log(res);
            })
        } else {
            // $('#warningMessage').html('');
            // $('#warningTitle').html('');
            // $('#warningPopup').show();
            // $('#warningPopup').attr('data-type', 'addShare');
            // $('#warningPopup').attr('tag-id',tag_id );
            // $('#warningTitle').text('Share Tag');
            // $('#warningMessage').html('<h4 style="font-weight:normal; font-size:16px;"> Do you want to share this tag? Anyone on this channel with this tag can view.</h4>');
            // $('.buttonCancel').text('Cancel');
            // $('.buttonAction').removeClass('bg_danger').text('Share');

            $(event.target).addClass('active');
            $('.tag_id_' + tag_id).css('border-color', 'var(--PrimaryC');
            $('.tag_id_' + tag_id).addClass('shared_tag_user');
            $('.tag_name_view_' + tag_id).addClass('shared_tag_user');
            $('.tag_id_' + tag_id).addClass('shared_tag_only');
            $('.tag_id_' + tag_id).removeClass('notShared');
            changeShareTagC(tag_id, true);
            socket.emit('sharedTag', { tagged_by: user_id, tag_id: tag_id, shared_tag: user_id }, function(res) {
                $.each(allUserTagList, function(k, v) {
                    if (v != undefined) {
                        if (v.tag_id == tag_id) {
                            socket.emit('updateTeamtagListperMsgBrocast', { type: 'addShare', tag_id: tag_id, user_id: user_id, tag: allUserTagList[k], oldAddedtag: oldAddedtag, msg_id: msg_id });
                        }
                    }
                });
                // console.log(res);
            })
        }
    } else if ($(event.target).hasClass('editIcon')) {
        event.preventDefault();
        $(elm).find('.this_title').attr('contenteditable', true);

        var el = document.getElementById('thisTagId_' + tag_id + '');
        placeCaretAtEnd(el);
        editTag_id = tag_id;
        old_edit_tag_title = title;


    } else {
        $('#tagSearchAddInput').val("");
        $('#tagSearchAddInput').focus();
        // $('#tagAddAndsubmitbtN').removeClass('active');
        $('#tagAddAndsubmitbtN').show();
        $('#tagAddBtn').hide();
        $('#selectToallShareTag').hide();
        if ($('#AllTagList').find('.tag_id_' + tag_id).hasClass('active')) {
            $('#AllTagList').find('.tag_id_' + tag_id).removeClass('active')
            removeA(thisMsgAllTagid, tag_id);
            removeA(thisMsgAllTagidNew, tag_id);
            tagremoveOld.push(tag_id);
            if (oldAddedtag.indexOf(tag_id) > -1) {
                anyChangeThisAction.push(tag_id);
            } else if (anyChangeThisAction.indexOf(tag_id) > -1) {
                removeA(anyChangeThisAction, tag_id);
            }
        } else {
            $('#AllTagList').find('.tag_id_' + tag_id).addClass('active')
            thisMsgAllTagid.push(tag_id);
            thisMsgAllTagidNew.push(tag_id);
        }

        // socket.emit('tagOneMsg',{msg_id:msg_id,conversation_id:conversation_id,tag_id:tag_id,user_id:user_id},function(res){
        // if(res.status){
        // 		$('#updateMsgTagContainer').prepend('<div class="item '+(thisPublic? 'public_tag_show ':'private_tag_show ')+ '"><p class="valtext">'+title+'</p><span class="valremove '+(thisPublic? 'public_tag ':' ')+ '" data-val="'+title+'" tag-id="'+tag_id+'" msg-id="'+msg_id+'" onclick="removeOnMsgTag(this)"></span></div>');

        // 		var oldTagList = $('#msg_tag_list'+msg_id).attr('tag-list');
        // 		if(oldTagList != null){
        // 			oldTagList = oldTagList.split(',');
        // 		}else{
        // 			oldTagList = [];
        // 		}
        // 		oldTagList.push(tag_id);
        // 		$('#msg_tag_list'+msg_id).attr('tag-list',oldTagList);
        // 		$('#msg_tag_list'+msg_id).append('<span class="tag_design tag_name_view_'+tag_id+'" data-id="'+tag_id+'">'+title+'</span>');
        // 		$('#updateMsgTagContainer input').focus();

        // 		var allTagIds = $('#thisMsgTagLists'+msg_id).attr('data-id');

        // 		var this_tag_list = [];

        // 		if(allTagIds != ''){
        // 			this_tag_list = allTagIds.split(',');
        // 			this_tag_list.push(tag_id);
        // 		}else{
        // 			this_tag_list.push(tag_id);
        // 		}
        // 		$('#thisMsgTagLists'+msg_id).attr('data-id',this_tag_list);
        // 		permsg_tagsList(msg_id);
        // 	}
        // 	checkTagLength();
        // });

        //$('#updateMsgTagContainer').prepend('<div class="item '+thisotherUser+(thisPublic? 'public_tag_show ':'private_tag_show ') + (thisShared? ' shared_tag_user ':' ')+ getShareOrnotTag(tag_id) +'" style="'+(tag_color != null ? 'background-color:'+tag_color+' !important':'')+'"><p class="valtext">'+title+'</p><span class="valremove '+(thisPublic? 'public_tag ':' ')+ '" data-val="'+title+'" tag-id="'+tag_id+'" msg-id="'+msg_id+'" onclick="removeOnMsgTag(this)" data-balloon="Remove tag" data-balloon-pos="up"></span></div>');

        // var oldTagList = $('#msg_tag_list'+msg_id).attr('tag-list');
        // if(oldTagList != null){
        // 	oldTagList = oldTagList.split(',');
        // }else{
        // 	oldTagList = [];
        // }
        // oldTagList.push(tag_id);
        // $('#msg_tag_list'+msg_id).attr('tag-list',oldTagList);
        // $('#msg_tag_list'+msg_id).append('<span class="tag_design tag_name_view_'+tag_id+'" data-id="'+tag_id+'">'+title+'</span>');
        // $('#updateMsgTagContainer input').focus();

        // var allTagIds = $('#thisMsgTagLists'+msg_id).attr('data-id');

        // var this_tag_list = [];

        // if(allTagIds != ''){
        // 	this_tag_list = allTagIds.split(',');
        // 	this_tag_list.push(tag_id);
        // }else{
        // 	this_tag_list.push(tag_id);
        // }
        // $('#thisMsgTagLists'+msg_id).attr('data-id',this_tag_list);
        // permsg_tagsList(msg_id);
        // }
        checkTagLength();
    }

}




function showMoreChecklist(elm) {
    $(elm).parent('.msgCheckListContainer').find('.checkListItem').removeClass('hiddenCl');
    $(elm).remove();
}

function tagForAttach(elm) {
    var tag_id = $(elm).attr('data-id');
    if ($(elm).attr('data-type') == 'addedTag') {
        $(elm).removeAttr('data-type')
        removeA(tempAttachmentTag, tag_id);
    } else {
        var design = ' <div class="item"><p class="valtext">' + $(elm).text() + '</p><span class="valremove" data-val="dalim" tag-title="' + $(elm).text() + '" tag-id="' + tag_id + '"  onclick="removeTemppAtag(this)" ></span></div>';
        if ($('#ChatFileUpload').is(':visible')) {
            $('#AttachmentTagHolder').prepend(design);
            tempAttachmentTag.push(tag_id);
            $(elm).remove();
            $('#AttachmentTagHolder').next('input').val('').focus();
        } else {
            $('#RepAttachmentTagHolder').prepend(design);
            tempAttachmentTag.push(tag_id);
            $(elm).remove();
            $('#RepAttachmentTagHolder').next('input').val('').focus();
        }

    }
    // console.log($('#AttachmentTagHolder').html())
    if ($('#AttachmentTagHolder').find('.item').length > 0) {
        $('#AttachmentTagHolderInput').attr('placeholder', '');
    } else {
        $('#AttachmentTagHolderInput').attr('placeholder', 'Tag upload(s) to be more organized...');
    }
    if ($('#RepAttachmentTagHolder').find('.item').length > 0) {
        $('#RepAttachmentTagHolder+input').attr('placeholder', '');
    } else {
        $('#RepAttachmentTagHolder+input').attr('placeholder', 'Tag upload(s) to be more organized...');
    }
    $('#AttachmentTagHolderInput').focus();
}

function removeTemppAtag(elm) {
    removeA(tempAttachmentTag, $(elm).attr('tag-id'));
    var design = '<li onclick="tagForAttach(this)" class="tag" data-id="' + $(elm).attr('tag-id') + '">' + $(elm).attr('tag-title') + '</li>';
    if ($('#ChatFileUpload').is(':visible')) {
        $('#tagsForUploadedFile').append(design);
    } else {
        $('#repFileTags').append(design);
    }
    $(elm).parent('.item').remove();

    if ($('#AttachmentTagHolder').find('.item').length > 0) {
        $('#AttachmentTagHolderInput').attr('placeholder', '');
    } else {
        $('#AttachmentTagHolderInput').attr('placeholder', 'Tag upload(s) to be more organized...');
    }
    if ($('#RepAttachmentTagHolder').find('.item').length > 0) {
        $('#RepAttachmentTagHolder+input').attr('placeholder', '');
    } else {
        $('#RepAttachmentTagHolder+input').attr('placeholder', 'Tag upload(s) to be more organized...');
    }
    $('#AttachmentTagHolderInput').focus();
}

function draw_Tag_fullDesign(tag_id, msg_id) {
    var title = '';
    var publicTag = false
    var thisShared = false;
    var thisotherUser = '';
    var created_byThistag = ''
    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            if (v.tag_id == tag_id) {
                // console.log(v)
                title = v.title;
                if (v.shared_tag != null) {
                    thisShared = true;
                }
                if (v.tagged_by == 'user_id') {
                    thisotherUser = 'others_userTag';
                }
                created_byThistag = (v.tagged_by == user_id ? 'createByme' : 'createByothers');

            }
        }
    });
    // console.log(title,publicTag,thisShared,thisotherUser);
    var st = 'shared_icon';
    if (thisShared) {
        st = st + ' active';
    }
    var privateDesign = '<span class="removeIcon" data-balloon="Delete" data-balloon-pos="up"></span><span class="editIcon" data-balloon="Edit" data-balloon-pos="up"></span><span class="' + st + '" data-balloon="Make tag available to others in this room" data-balloon-pos="left"></span>';
    if (publicTag) {
        privateDesign = '';
    }


    $('#AllTagList').prepend('<div style="border-color:' + getTagColor(tag_id) + '"  onclick="tagOneMsg(this,event)" class="' + created_byThistag + ' ' + thisotherUser + (publicTag ? 'public_tag public_tag_show ' : 'private_tag_show ') + getShareOrnotTag(tag_id) + (thisShared ? 'shared_tag_user ' : '  ') + ' tag tag_id_' + tag_id + '" data-id="' + tag_id + '" msg-id="' + msg_id + '"><span class="color_defiendBtn" style="background-color:' + getTagColor(tag_id) + '"></span><span data-id="' + tag_id + '" id="thisTagId_' + tag_id + '" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)" class="this_title" data-balloonu="Click and submit to add this tag" data-balloon="Type and enter to save this tag" data-balloon-pos="up">' + title + '</span>' + getSharedTagUserName(tag_id) + privateDesign + '</div>');
    // console.log('<div style="border-color:'+getTagColor(tag_id)+'"  onclick="tagOneMsg(this,event)" class="'+created_byThistag+' '+thisotherUser+(publicTag? 'public_tag public_tag_show ':'private_tag_show ')+getShareOrnotTag(tag_id) + (thisShared? 'shared_tag_user ':'  ')+ ' tag tag_id_'+tag_id+'" data-id="'+tag_id+'" msg-id="'+msg_id+'"><span class="color_defiendBtn" style="background-color:'+getTagColor(tag_id)+'"></span><span data-id="'+tag_id+'" id="thisTagId_'+tag_id+'" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)" class="this_title" data-balloonu="Click and submit to add this tag" data-balloon="Type and enter to save this tag" data-balloon-pos="up">'+title+'</span>'+getSharedTagUserName(tag_id)+privateDesign+'</div>')

    $('#AllTagList').removeClass('showEndMsg');
    $('#tagSearchAddInput').focus();
    checkTagLength();
}
var tagremoveOld = [];
var anyChangeThisAction = [];

function removeOnMsgTag(elm) {
    var tag_id = $(elm).attr('tag-id');
    var title = $(elm).attr('data-val');
    var msg_id = $(elm).attr('msg-id');
    var publicTag = ($(elm).hasClass('public_tag') ? true : false)
    var thisShared = ($(elm).parent('.item').hasClass('shared_tag_only') ? true : false);
    var thisotherUser = ($(elm).parent('.item').hasClass('others_userTag') ? ' others_userTag ' : ' ');
    $(elm).parent('.item').remove();
    removeA(thisMsgAllTagid, tag_id);
    removeA(thisMsgAllTagidNew, tag_id);
    tagremoveOld.push(tag_id);
    if (oldAddedtag.indexOf(tag_id) > -1) {
        anyChangeThisAction.push(tag_id);
    } else if (anyChangeThisAction.indexOf(tag_id) > -1) {
        removeA(anyChangeThisAction, tag_id);
    }
    // socket.emit('removeOnMsgTag',{msg_id:msg_id,conversation_id:conversation_id,user_id:user_id,tag_id:tag_id},function(res){
    // 	if(res.status){
    // 		var allUserTag = $('#msg_tag_list'+msg_id).attr('tag-list');
    // 			if(allUserTag != null ){

    // 				allUserTag = allUserTag.split(',');
    // 				var newtaglist = []
    // 				$.each(allUserTag,function(k,v){
    // 					if(v !== tag_id){
    // 						newtaglist.push(v);
    // 					}
    // 				});
    // 				$('#msg_tag_list'+msg_id).attr('tag-list',newtaglist);
    // 			}else{
    // 				allUserTag = [];
    // 				$('#msg_tag_list'+msg_id).attr('tag-list','');
    // 			}

    // 			// var privateDesign = '<span id="thisTagId_'+v.tag_id+'" class="this_title" data-id="'+v.tag_id+'" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)">'+v.title+'</span><span class="removeIcon"></span><span class="editIcon"></span>';
    // 			// if(v.tag_type == 'public'){
    // 			// 	privateDesign = '<span id="thisTagId_'+v.tag_id+'" class="this_title" data-id="'+v.tag_id+'">'+v.title+'</span>';
    // 			// }
    // 		// $('#AllTagList').prepend('<div onclick="tagOneMsg(this,event)" class="tag tag_id_'+v.tag_id+'" data-id="'+v.tag_id+'" msg-id="'+msg_id+'">'+privateDesign+'</div>');
    // 		var privateDesign = '<span class="removeIcon"></span><span class="editIcon"></span>';
    // 		if(publicTag){
    // 			privateDesign = '';
    // 		}
    // 		$('#AllTagList').prepend('<div onclick="tagOneMsg(this,event)" class="'+(publicTag? 'public_tag public_tag_show ':'private_tag_show ')+' tag tag_id_'+tag_id+'" data-id="'+tag_id+'" msg-id="'+msg_id+'"><span data-id="'+tag_id+'" id="thisTagId_'+tag_id+'" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)" class="this_title">'+title+'</span>'+privateDesign+'</div>');
    // 			$('#msgThread_'+msg_id).find('.tag_name_view_'+tag_id).remove();

    // 				var allTagIds = $('#thisMsgTagLists'+msg_id).attr('data-id');

    // 				var this_tag_list = [];

    // 				if(allTagIds != ''){
    // 					this_tag_list = allTagIds.split(',');
    // 					removeA(this_tag_list,tag_id);
    // 				}
    // 				$('#thisMsgTagLists'+msg_id).attr('data-id',this_tag_list);
    // 				permsg_tagsList(msg_id);

    // 	}else{
    // 		console.log(res);
    // 	}
    // 	checkTagLength();
    // });
    var allUserTag = $('#msg_tag_list' + msg_id).attr('tag-list');
    // if(allUserTag != null ){

    // 	allUserTag = allUserTag.split(',');
    // 	var newtaglist = []
    // 	$.each(allUserTag,function(k,v){
    // 		if(v !== tag_id){
    // 			newtaglist.push(v);
    // 		}
    // 	});
    // 	$('#msg_tag_list'+msg_id).attr('tag-list',newtaglist);
    // }else{
    // 	allUserTag = [];
    // 	$('#msg_tag_list'+msg_id).attr('tag-list','');
    // }

    // var privateDesign = '<span id="thisTagId_'+v.tag_id+'" class="this_title" data-id="'+v.tag_id+'" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)">'+v.title+'</span><span class="removeIcon"></span><span class="editIcon"></span>';
    // if(v.tag_type == 'public'){
    // 	privateDesign = '<span id="thisTagId_'+v.tag_id+'" class="this_title" data-id="'+v.tag_id+'">'+v.title+'</span>';
    // }
    // $('#AllTagList').prepend('<div onclick="tagOneMsg(this,event)" class="tag tag_id_'+v.tag_id+'" data-id="'+v.tag_id+'" msg-id="'+msg_id+'">'+privateDesign+'</div>');
    var st = 'shared_icon';
    if (thisShared) {
        st = st + ' active';
    }
    var privateDesign = '<span class="removeIcon" data-balloon="Delete" data-balloon-pos="up"></span><span class="editIcon" data-balloon="Edit" data-balloon-pos="up"></span><span class="' + st + '" data-balloon="Make tag available to others in this room" data-balloon-pos="left"></span>';
    if (publicTag) {
        privateDesign = '';
    }
    var created_byThistag = (thisotherUser ? 'createByme' : 'createByothers');
    $('#AllTagList').prepend('<div style="border-color:' + getTagColor(tag_id) + '"  onclick="tagOneMsg(this,event)" class="' + created_byThistag + ' ' + thisotherUser + (publicTag ? 'public_tag public_tag_show ' : 'private_tag_show ') + getShareOrnotTag(tag_id) + (thisShared ? 'shared_tag_user ' : '  ') + ' tag tag_id_' + tag_id + '" data-id="' + tag_id + '" msg-id="' + msg_id + '"><span class="color_defiendBtn" style="background-color:' + getTagColor(tag_id) + '"></span><span data-id="' + tag_id + '" id="thisTagId_' + tag_id + '" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)" class="this_title" data-balloonu="Click and submit to add this tag" data-balloon="Type and enter to save this tag" data-balloon-pos="up">' + title + '</span>' + getSharedTagUserName(tag_id) + privateDesign + '</div>');
    // $('#msgThread_'+msg_id).find('.tag_name_view_'+tag_id).remove();

    // var allTagIds = $('#thisMsgTagLists'+msg_id).attr('data-id');

    // var this_tag_list = [];

    // if(allTagIds != ''){
    // 	this_tag_list = allTagIds.split(',');
    // 	removeA(this_tag_list,tag_id);
    // }
    // $('#thisMsgTagLists'+msg_id).attr('data-id',this_tag_list);
    // permsg_tagsList(msg_id);
    checkTagLength();
}

var tagconvTemArray = [];
var tagidfilter = [];

function filterThis(elm) {
    tagconvTemArray = [];
    var hasActive = $(elm).hasClass('active');

    if (!hasActive) {
        if (tagidfilter.indexOf($(elm).attr('tag-id')) == -1) {
            tagidfilter.push($(elm).attr('tag-id'));
        }
        $(elm).addClass('active');

        $('.side_bar_list_item li').each(function(k, v) {
            if ($(v).attr('data-conversationid') != user_id) {
                if (myconversation_list.indexOf($(v).attr('data-conversationid')) === -1) {
                    myconversation_list.push($(v).attr('data-conversationid'));
                }
            }
        });
        var design = '<div class="tag_item" id="c_tag_item_' + $(elm).attr('tag-id') + '"><img src="/images/basicAssets/activeSvg/tagActive.svg" class="flagged"><p>' + $(elm).text() + '</p><img onclick="removeUserTagFilter(\'' + $(elm).attr('tag-id') + '\')" src="/images/basicAssets/Close.svg"></div>';

        $('.tagg_list').append(design);
        removeA(myconversation_list, user_id);
        filterTagCheck = true;
        tagFilter();


    } else {
        removeUserTagFilter($(elm).attr('tag-id'));
        // $(elm).removeClass('active');
        // removeA(tagidfilter,$(elm).attr('tag_id'));
        // if(tagidfilter.length > 0){
        // 	tagFilter();
        // }
    }

}

function removeUserTagFilter(tag_id) {
    // console.log(10692,tag_id);
    // $('.filter_tag_'+tag_id).removeClass('active');
    // $('#c_tag_item_'+tag_id).remove();
    // removeA(tagidfilter,tag_id);
    // console.log(10696,tagidfilter)
    // if(tagidfilter.length == 0){

    // 	$("#errMsg").text('No Result(s) Found');
    // 	$("#errMsg").hide();

    // 	$("#conversation_list_sidebar li").show();
    // 	$("#pintul li").show();
    // 	$("#conversation_list_sidebar li").show();
    // 	filterTagCheck = false;
    // }else{
    // 	filterTagCheck = true;
    // 	tagFilter();
    // }
    $('#c_tag_item_' + tag_id).remove();
    $('.tag_list.filter_tag_' + tag_id).removeClass('active');
    removeA(allFilteredItem, tag_id);
    filterConversationLastT();

}

var filterTagCheck = true;

function tagFilter() {
    var seartTxt = $("#searchText").val();
    socket.emit('getAllDataForTag', {
        conversation_list: (searchTagList.length > 0 ? currentConv_list : myconversation_list),
        target_text: seartTxt,
        target_filter: 'tag',
        user_id: user_id,
        tag_list: tagidfilter,
        company_id: company_id,
    }, (callBack) => {
        // console.log(callBack);
        if (callBack.status) {
            $('.tagg_list').show();
            if (callBack.data.length > 0) {
                $("#errMsg").text('No Result(s) Found');
                $("#errMsg").hide();

                $("#conversation_list_sidebar li").hide();
                $("#pintul li").hide();
                $("#conversation_list_sidebar li").hide();
                if (filterTagCheck) {

                    $.each(callBack.data, function(k, v) {
                        $("#conv" + v).show();
                        if (tagconvTemArray.indexOf(v) === -1) {
                            tagconvTemArray.push(v);
                        }
                    });
                } else {
                    $("#conversation_list_sidebar li").show();
                    $("#pintul li").show();
                    $("#conversation_list_sidebar li").show();
                }

                if ($('#conv' + $('#roomIdDiv').attr('data-roomid')).is(':visible')) {
                    $('#conv' + $('#roomIdDiv').attr('data-roomid')).removeClass('sideActive');
                    $('#conv' + $('#roomIdDiv').attr('data-roomid')).trigger('click');
                }
                $('.tagg_list').show();
                // if($(".tag_item").length > 0){
                // }
            } else {
                $("#errMsg").text('No Result(s) Found');
                $("#errMsg").show();

                $("#conversation_list_sidebar li").show();
                $("#pintul li").show();
                $("#conversation_list_sidebar li").show();
            }

        }
    });
}


function searchFilterTagItem(elm) {
    $("#filterUserTag .tag_list").each(function() {
        if ($(this).text().toLowerCase().search($(elm).val().toLowerCase()) > -1) {
            $(this).show();
        } else {
            $(this).hide();
        }
    });

    $("#filterUserTag .tag_list").unhighlight();
    $("#filterUserTag .tag_list").highlight($(elm).val());
}

function searchTagListAttach(event, elm) {
    $("#tagsForUploadedFile li").each(function() {
        if ($(this).text().toLowerCase().search($(elm).val().toLowerCase()) > -1) {
            $(this).show();
        } else {
            $(this).hide();
        }
    });

    $("#tagsForUploadedFile li").unhighlight();
    $("#tagsForUploadedFile li").highlight($(elm).val());
    if (event.keyCode == 8) {
        if ($(elm).val().length == 0) {
            $('#AttachmentTagHolder .item:last').find('.valremove').trigger('click');
        }
    }
}

function searchRepTagListAttach(event, elm) {
    $("#repFileTags li").each(function() {
        if ($(this).text().toLowerCase().search($(elm).val().toLowerCase()) > -1) {
            $(this).show();
        } else {
            $(this).hide();
        }
    });

    $("#repFileTags li").unhighlight();
    $("#repFileTags li").highlight($(elm).val());
    if (event.keyCode == 8) {
        if ($(elm).val().length == 0) {
            $('#RepAttachmentTagHolder .item:last').find('.valremove').trigger('click');
        }
    }

    if ($('#RepAttachmentTagHolder').find('.item').length > 0) {
        $('#RepAttachmentTagHolder+input').attr('placeholder', '');
    } else {
        $('#RepAttachmentTagHolder+input').attr('placeholder', 'Tag upload(s) to be more organized...');
    }
}

function replybtnonhover(elm) {
    var tooltip = 'Start a thread';
    var msg_id = $(elm).attr('data-msgid');

    if ($('#msgThread_' + msg_id).find('.msgReply').length > 0) {
        tooltip = 'Reply to thread';
    }

    var design = '<p class="freeliTooltip">' + tooltip + '</p>';
    $(elm).find('.freeliTooltip').remove();
    $(elm).append(design);
}

function replybtnonleave(elm) {
    $(elm).find('.freeliTooltip').remove();
}

function toggleChecklistf(msgid) {
    var allchecklist = $('#data_msg_body' + msgid).find('.checkListItem');
    if ($('#data_msg_body' + msgid).find('.filterchecklist').hasClass('active')) {
        $('#data_msg_body' + msgid).find('.filterchecklist').removeClass('active');
        $('#data_msg_body' + msgid).find('.filterchecklist').text('Show Pending (' + $('#data_msg_body' + msgid).find('.filterchecklist').attr('data-in') + ')');
        // console.log(16790,Number($('#data_msg_body'+msgid).find('.filterchecklist').attr('data-in')) == 0);
        if (Number($('#data_msg_body' + msgid).find('.filterchecklist').attr('data-in')) == 0) {
            $('#no_pendingList' + msg_id).remove();
            // $('#filterPending_'+msgid).parent('.checkAction').after('<div class="no_pendingList" id="no_pendingList'+msgid+'">No pending task here! <span class="link_url">Click to view all completed task(s).</span></div>')
        }
        $('#data_msg_body' + msgid).find('.checkListItem').show();
        $('#clcounterperMsg' + msgid).show();
    } else {
        $('#data_msg_body' + msgid).find('.filterchecklist').addClass('active');
        $('#data_msg_body' + msgid).find('.showMorechecklist').click();

        $.each(allchecklist, function(k, v) {
            if (!$(v).find('.checkBox').hasClass('checked')) {
                $(v).show();
            } else {
                $(v).hide();
            }
        });
        $('#clcounterperMsg' + msgid).hide();
        $('#data_msg_body' + msgid).find('.filterchecklist').text('Show All (' + $('#data_msg_body' + msgid).find('.filterchecklist').attr('data-length') + ')');
    }
}

function makeEditablechecklist(e, u, m) {
    if (!$(e.target).hasClass('filterchecklist') && !$(e.target).hasClass('dueDateIcon') && !$(e.target).hasClass('ttl_requestTime') && !$(e.target).hasClass('.success_btn') && !$(e.target).hasClass('no_pendingList') && !$(e.target).hasClass('link_url')) {
        if ($('#msgThread_' + m).attr('check_edit') == "true" || $('#msgThread_' + m).find('.editMessageBody').length > 0) {
            console.log("---------------------------")
            if ($('#threadReplyPopUp').is(':visible') && $('#msgThread_' + m).find('.editMessageBody').length > 0) {
                closeAllPopUp();
                ediCheckListMessage(m, u);
            }
            return false;
        } else {
            if ($("#taskList_panel").is(":visible")) {
                $(".checklist_list_view_design").removeClass("last_click_me");
                $(e.target).closest(".checklist_list_view_design").addClass("last_click_me");
            }
            var hasright = true;

            if (hasright) {
                if ($(e.target).hasClass('checkBox') || $(e.target).hasClass('filterpending') || $(e.target).hasClass('filterShowall') || $(e.target).hasClass('showMorechecklist') || $(e.target).parents('.AssigneeUser').length > 0) {
                    return false;
                    // ediCheckListMessage(m,u);
                } else {
                    ediCheckListMessage(m, u);
                }
            } else {
                return false;
            }
        }
    }
}

function hideThisurlForall(id) {
    if ($('#links' + id).closest('.date-by-links').children().length == 2) {
        $('#links' + id).closest('.date-by-links').remove();
    } else {
        $('#links' + id).remove();
    }
    var a = $("#mediaLinksTab").text();
    var b = Number(a.replace(/[a-zA-Z()]/g, "")) - 1;
    $("#mediaLinksTab").html("<a>Links (" + b + ")</a>");
    if ($('#mediaLinks .all-links').length == 0) {
        $('#mediaLinks').addClass('flex_class')
        $('#mediaLinks').append('<h2 class="notFoundMsg" style="display: block;">No link(s) were found in this channel !</h2>')
        $('.individual-tab-seach-con').hide();
    } else {
        $('.individual-tab-seach-con').show();
    }
}
socket.on('updateDeleteLinkids', function(id) {
    hideThisurlForall(id);
})
var deletedFilesId = [];

function removeThisMsgLink(msg_id) {
    socket.emit('findLinkData', { msg_id: msg_id }, function(res) {
        console.log(res)
        if (res.length > 0) {
            for (let i of res) {
                console.log(25981, i)
                var data = {
                    url_id: i.url_id,
                    conversation_id: conversation_id,
                    user_id: user_id
                }
                socket.emit('hidethisurl_forAll', data, function(callback) {
                    if (callback.status) {
                        hideThisurlForall(i.url_id);
                        $('#delete_msg_div').hide();
                        socket.emit('updateDeleteLinkids', i.url_id);
                    }
                });
            }
        }
    })
}

function deleteMessage(elm, type) {
    if ($('#flagPanelContainer').is(':visible')) {
        var msgid = $('#delete_msg_div').attr('msg-id');
        conversation_id = $('.msg_id_' + msgid).attr('conv-id');
    }

    if ($('#delete_msg_div').attr('delete_type') == 'link') {
        var linkid = $('#delete_msg_div').attr('msg-id');
        var id = linkid;
        var data = {
            url_id: id,
            conversation_id: conversation_id,
            user_id: user_id
        }
        if (type == 'for_all') {
            socket.emit('hidethisurl_forAll', data, function(callback) {
                if (callback.status) {
                    hideThisurlForall(id);
                    $('#delete_msg_div').hide();
                    socket.emit('updateDeleteLinkids', id);
                }
            });
        } else {

            socket.emit('hidethisurl', data, function(callback) {
                if (callback.status) {
                    hideThisurlForall(id);
                    $('#delete_msg_div').hide();
                }
            });
        }
    } else {
        var msgid = $('#delete_msg_div').attr('msg-id');
        var msg_type = 'text';
        if ($('#data_msg_body' + msgid).find('.msgCheckListContainer').length > 0) {
            msg_type = 'checklist';

        }
        console.log(type)
        if (type == 'for_all') {
            if ($('#threadReplyPopUp').is(':visible')) {
                var msg_id = $('#delete_msg_div').attr('msg-id');
                var main_conv_id = $('#threadReplyPopUp').attr('data-conv');

                socket.emit('delete_message_last_time', { msg_id: [msg_id], participants: participants, conversation_id: thread_id, user_id: user_id, type: type, main_conv_id: main_conv_id }, function(res) {
                    console.log(res)
                    if (res.status) {
                        // removeThisMsgLink(msg_id);

                        // socket.emit('findLinkData',{msg_id: msg_id},function(res){

                        // })
                        var h4 = $('.rep_msg_' + msg_id).find('h4')[0].outerHTML;
                        $('.rep_msg_' + msg_id).find('.thread-user-msg').html('');
                        $('.rep_msg_' + msg_id).find('.thread-user-msg').html(h4);
                        $('.rep_msg_' + msg_id).find('.msgs-form-users-options').remove();
                        // $('.rep_msg_'+msg_id).append('<i><img src="/images/delete_msg.png" class="deleteicon"> You deleted this message.</i><span onclick="permanent_delete_silently(\'' + msg_id + '\')" class="silent_delete"> (Remove this line)</span>');
                        $('.rep_msg_' + msg_id).append('<i><img src="/images/delete_msg.png" class="deleteicon"> You deleted this message. </i><span onclick="permanent_delete_silently(\'' + msg_id + '\')" class="silent_delete"> (Remove this line)</span>');
                        closeAllPopUp();
                        //'<i><img src="/images/delete_msg.png" class="deleteicon"> '+has_title+' deleted this message.</i><span onclick="permanent_delete_silently(\'' + row.msg_id + '\')" class="silent_delete"> (Remove this line)</span>';
                        if (res.file_ids != undefined) {
                            if (res.file_ids.length > 0) {
                                $.each(res.file_ids, function(k, v) {
                                    deletedFilesId.push(v);
                                })
                            }
                        }
                    }
                })
            } else {
                var msg_html = $('#msgThread_' + msgid).find('.msg-time').parent('h4')[0].outerHTML;
                var title = $('#data_msg_body' + msgid).find('.checkListPlainText').text();
                socket.emit('delete_message_last_time', { msg_id: [msgid], participants: participants, conversation_id: $('#roomIdDiv').attr('data-roomid'), user_id: user_id, type: type, main_conv_id: "" }, function(res) {
                    if (res.status) {
                        // removeThisMsgLink(msgid);
                        $('#msgThread_' + msgid).find('.user-msg').html('');
                        $('#msgThread_' + msgid).find('.user-msg').append(msg_html);
                        $('#msgThread_' + msgid).find('.user-msg').append('<p id="data_msg_body' + msgid + '" onkeyup="keyupForPlain_textEdit(event)"></p>');
                        $('#data_msg_body' + msgid)
                        if (msg_type == 'checklist') {
                            viewchecklisttype = 'count';
                            countAndGetchecklist();
                            $('#data_msg_body' + msgid).html('<i><img src="/images/delete_msg.png" class="deleteicon"> "' + title + '" Checklist has been deleted by ' + user_fullname + '</i><span onclick="permanent_delete_silently(\'' + msgid + '\')" class="silent_delete"> (Remove this line)</span>');
                        } else {

                            $('#data_msg_body' + msgid).html('<i><img src="/images/delete_msg.png" class="deleteicon"> You deleted this message.</i><span onclick="permanent_delete_silently(\'' + msgid + '\')" class="silent_delete"> (Remove this line)</span>');
                        }
                        $('#delete_msg_div').hide();
                        $('#msgThread_' + msgid).find('.msgs-form-users-options').hide();
                        $('#msgThread_' + msgid).addClass('deleted');
                        deletedMessages.push(msgid);
                        counterUnreadallmsg(msgid);
                        // closeAllPopUp();
                        if (res.file_ids != undefined) {
                            if (res.file_ids.length > 0) {
                                $.each(res.file_ids, function(k, v) {
                                    deletedFilesId.push(v);
                                })
                            }
                        }

                    }
                })
            }
        } else {
            if ($('#threadReplyPopUp').is(':visible')) {
                // console.log(13015,$('#threadReplyPopUp').is(':visible'))
                var msg_id = $('#delete_msg_div').attr('msg-id');
                var main_conv_id = $('#threadReplyPopUp').attr('data-conv');
                socket.emit('delete_message_last_time', { msg_id: [msg_id], participants: participants, conversation_id: thread_id, user_id: user_id, type: type, main_conv_id: main_conv_id }, function(res) {
                    if (res.status) {
                        var h4 = $('.rep_msg_' + msg_id).find('h4')[0].outerHTML;
                        $('.rep_msg_' + msg_id).find('.thread-user-msg').html('');
                        $('.rep_msg_' + msg_id).find('.thread-user-msg').html(h4);
                        $('.rep_msg_' + msg_id).find('.msgs-form-users-options').remove();
                        // $('.rep_msg_'+msg_id).append('<i><img src="/images/delete_msg.png" class="deleteicon"> You deleted this message.</i><span onclick="permanent_delete_silently(\'' + msg_id + '\')" class="silent_delete"> (Remove this line)</span>');
                        $('.rep_msg_' + msg_id).append('<i><img src="/images/delete_msg.png" class="deleteicon"> You deleted this message. </i><span onclick="permanent_delete_silently(\'' + msg_id + '\')" class="silent_delete"> (Remove this line)</span>');
                        closeAllPopUp();
                        if (res.file_ids != undefined) {
                            if (res.file_ids.length > 0) {
                                $.each(res.file_ids, function(k, v) {
                                    deletedFilesId.push(v);
                                })
                            }
                        }

                    }
                })
            } else {
                var msg_html = $('#msgThread_' + msgid).find('.msg-time').parent('h4')[0].outerHTML;
                var title = $('#data_msg_body' + msgid).find('.checkListPlainText').text()
                socket.emit('delete_message_last_time', { msg_id: [msgid], participants: participants, conversation_id: $('#roomIdDiv').attr('data-roomid'), user_id: user_id, type: type, main_conv_id: "" }, function(res) {
                    if (res.status) {
                        $('#msgThread_' + msgid).find('.user-msg').html('');
                        $('#msgThread_' + msgid).find('.user-msg').append(msg_html);
                        $('#msgThread_' + msgid).find('.user-msg').append('<p id="data_msg_body' + msgid + '" onkeyup="keyupForPlain_textEdit(event)"></p>');
                        viewchecklisttype = 'count';
                        countAndGetchecklist();
                        $('#delete_msg_div').hide();
                        if (msg_type == 'checklist') {
                            $('#data_msg_body' + msgid).html('<i><img src="/images/delete_msg.png" class="deleteicon">"' + title + '" Checklist has been deleted by ' + user_fullname + '</i><span onclick="permanent_delete_silently(\'' + msgid + '\')" class="silent_delete"> (Remove this line)</span>');
                        } else {

                            $('#data_msg_body' + msgid).html('<i><img src="/images/delete_msg.png" class="deleteicon"> You deleted this message.</i><span onclick="permanent_delete_silently(\'' + msgid + '\')" class="silent_delete"> (Remove this line)</span>');
                        }
                        deletedMessages.push(msgid);
                        counterUnreadallmsg(msgid);
                        $('#msgThread_' + msgid).addClass('deleted');
                        $('#msgThread_' + msgid).find('.msgs-form-users-options').hide();
                        if (res.file_ids != undefined) {
                            if (res.file_ids.length > 0) {
                                $.each(res.file_ids, function(k, v) {
                                    deletedFilesId.push(v);
                                })
                            }
                        }

                    }
                })
            }
        }
    }
}

function counterUnreadallmsg(msgid) {
    // console.log(15682, unread_replay_data);
    $.each(unread_replay_data, function(k, v) {
        // console.log(125226,v.root_msg_id == msgid)
        if (v.root_msg_id == msgid) {
            // console.log(v.msg_id);
            var nor = Number($('#conv' + v.root_conv_id).attr('data-nor'));
            $('#conv' + v.root_conv_id).attr('data-nor', (nor - 1 > 0) ? nor - 1 : "");
            // console.log(22193,(nor - 1 > 0) ? nor - 1 : "")
            $('#conv' + v.root_conv_id).find('.unreadMsgCount').text((nor - 1 > 0) ? nor - 1 : "");
            $('.msg_id_' + msgid).css('background', 'transparent');
            v.root_msg_id = 0;
            v.root_conv_id = 0;
            read_rep_counter++;
        }
    });
    // console.log(15695, unread_replay_data);
    if ((unread_replay_data.length - read_rep_counter) == 0) {
        $(".thread_active").hide();
        $(".thread_message").hide();
        read_rep_counter = 0;
    }
    reply_msg_counter();
    var removeDeletedmsg = [];
    $.each(unread_replay_data, function(k, v) {
        // console.log(v.root_msg_id);
        if (deletedMessages.indexOf(v.root_msg_id) > -1) {
            removeDeletedmsg.push(k);
        }
    });
    $.each(removeDeletedmsg, function(k, v) {
        unread_replay_data.splice(v, 1);
    })
}

socket.on('msg_remove_for_All_broadcast', function(data) {
    // console.log(12989, data);
    var msg_type = 'text';
    if ($('#data_msg_body' + data.msg_id).find('.msgCheckListContainer').length > 0) {
        msg_type = 'checklist';

    }
    $('#msgThread_' + data.msg_id).find('.msgs-form-users-options').hide();
    $('#msgThread_' + data.msg_id).addClass('deleted');
    $('#msgThread_' + data.msg_id).find('.msgReply').remove();
    $('#msgThread_' + data.msg_id).find('.attach_tag').remove();
    $('#msgThread_' + data.msg_id).find('.replies').remove();
    if (data.user_id !== user_id) {
        deletedMessages.push(data.msg_id);
        counterUnreadallmsg(data.msg_id);
        viewchecklisttype = 'count';
        countAndGetchecklist();
        if (msg_type == 'checklist') {
            $('#data_msg_body' + data.msg_id).html('<i><img src="/images/delete_msg.png" class="deleteicon"> "' + $('#data_msg_body' + data.msg_id).find('.checkListPlainText').text() + '" Checklist has been deleted by ' + findObjForUser(data.user_id).fullname + '</i><span onclick="permanent_delete_silently(\'' + data.msg_id + '\')" class="silent_delete"> (Remove this line)</span>');
        } else {
            $('#data_msg_body' + data.msg_id).html('<i><img src="/images/delete_msg.png" class="deleteicon"> ' + findObjForUser(data.user_id).fullname + ' deleted this message.</i><span onclick="permanent_delete_silently(\'' + data.msg_id + '\')" class="silent_delete"> (Remove this line)</span>');
        }

        var h4 = $('.rep_msg_' + data.msg_id).find('h4')[0].outerHTML;
        $('.rep_msg_' + data.msg_id).find('.thread-user-msg').html('');
        $('.rep_msg_' + data.msg_id).find('.thread-user-msg').html(h4);
        $('.rep_msg_' + data.msg_id).find('.msgs-form-users-options').remove();
        // $('.rep_msg_'+data.msg_id).append('<i><img src="/images/delete_msg.png" class="deleteicon"> '+findObjForUser(data.user_id).fullname+' deleted this message.</i><span onclick="permanent_delete_silently(\'' + data.msg_id + '\')" class="silent_delete"> (Remove this line)</span>');
        $('.rep_msg_' + data.msg_id).append('<i><img src="/images/delete_msg.png" class="deleteicon"> ' + findObjForUser(data.user_id).fullname + ' deleted this message. <span onclick="permanent_delete_silently(\"' + data.msg_id + '\")" class="silent_delete"> (Remove this line)</span></i>');
    } else {
        if (msg_type == 'checklist') {
            $('#data_msg_body' + data.msg_id).html('<i><img src="/images/delete_msg.png" class="deleteicon"> &nbsp; Checklist ' + $('#data_msg_body' + data.msg_id).find('.checkListPlainText').text() + ' has been deleted by ' + user_fullname + '</i><span onclick="permanent_delete_silently(\'' + data.msg_id + '\')" class="silent_delete"> (Remove this line)</span>');
        } else {
            $('#data_msg_body' + data.msg_id).html('<i><img src="/images/delete_msg.png" class="deleteicon"> You deleted this message.</i><span onclick="permanent_delete_silently(\'' + data.msg_id + '\')" class="silent_delete"> (Remove this line)</span>');
        }


    }
});
var recentlyShowMen = false;

function mentionuserFun(div) {
    recentlyShowMen = false;
    var i = window.getSelection().getRangeAt(0).startOffset - 1;
    var text = $(div).text();
    // text = text.replace(/&nbsp;/g, " ");
    var mention_length = $('#msg').find('.mention_user_msg.solid_mention').length;
    if (mention_length > 1) {
        mention_length = ($('#msg').find('.mention_user_msg.solid_mention').length - 1);
    } else {
        mention_length = 0
    }
    // console.log(15669,mention_length)
    var cktext = text.charAt(i);
    cktext = text.charAt(i + mention_length);
    // console.log(15667,i);
    // console.log(15667,cktext);
    // console.log(15676,text.charCodeAt(i - 1));
    if (i != -1) {
        if (cktext == '@') {
            if (i == 0) {
                // console.log(15665,'showmention')
                searchMsgUser = true;
                mentionUser_ListView = '@';
                recentlyShowMen = true;
                $('#mention_user_list').show();
                mention_div_action('show');

            } else {
                // console.log(15676,text.charCodeAt(i - 1))
                if (text.charCodeAt(i - 1) == 160 || text.charCodeAt(i - 1) == 32) {
                    // console.log(15672,'showmention')
                    searchMsgUser = true;
                    mentionUser_ListView = '@';
                    recentlyShowMen = true;
                    $('#mention_user_list').show();
                    mention_div_action('show');

                }
            }
        } else if (cktext == '!@') {
            if (i == 0) {
                searchMsgUser = true;
                mentionUser_ListView = '!@';
                recentlyShowMen = true;
                $('#mention_user_list').show();
                mention_div_action('show');

            } else {
                // console.log(15669,text.charAt(i - 1));
                if ((text.charAt(i - 1)) == ' ') {
                    // console.log('showmention')
                    searchMsgUser = true;
                    mentionUser_ListView = '!@';
                    recentlyShowMen = true;
                    $('#mention_user_list').show();
                    mention_div_action('show');

                }
            }
        }
    }
    // if(str.match(/!@/g) == null){
    // 	searchMsgUser = false;
    // 	mention_div_action('hide');
    // }
    // if(str.match(/!@/g) == null){
    // 	searchMsgUser = false;
    // 	mention_div_action('hide');
    // }
}
var searchMsgUser = false;
var searchMsgUseRep = false;

function removeByIndex(str, index) {
    // //debugger
    return str.slice(0, index) + str.slice(index + 1);
}

function getCaretIndex(element) {
    let position = 0;
    const isSupported = typeof window.getSelection !== "undefined";
    if (isSupported) {
        const selection = window.getSelection();
        if (selection.rangeCount !== 0) {
            const range = window.getSelection().getRangeAt(0);
            const preCaretRange = range.cloneRange();
            preCaretRange.selectNodeContents(element);
            preCaretRange.setEnd(range.endContainer, range.endOffset);
            position = preCaretRange.toString().length;
        }
    }
    return position;
}

function setCharAt(str, index, chr) {
    if (index > str.length - 1) return str;
    return str.substr(0, index) + chr + str.substr(index + 1);
}

function private_tooltip() {


    // $('#msg').append('!');
    // placeCaretAtEnd(document.getElementById('msg'));
    // var e = $.Event('keyup');
    // e.which = 49;
    // $('#msg').trigger(e);
    // }, 0);

    // setTimeout(() => {
    $('#msg').append('!@');
    placeCaretAtEnd(document.getElementById('msg'));
    let ggg = getCaretIndex($('#msg')[0]);
    // alert(ggg);

    var e = $.Event('keyup');
    e.which = 50;
    $('#msg').trigger(e);


}
$('body').on('keyup', '#msg', function(e) {
    // //debugger;
    // console.log(15719,e)
    // mentionuserFun('#msg');
    // GetIndex($('#msg').text(), e.target);
    var str = $('#msg').text();
    // console.log(13835,str.length)
    if (str.length == 1) {
        placeCaretAtEnd(document.getElementById('msg'));
    }
    if (!$('#msgCheckItemContainer').is(':visible')) {
        var mentioncheck = checkMenOrNot(e, nameArry, 'both');
        // console.log(15843,mentioncheck)
        var activeAction = '';
        if (mentioncheck) {
            if ($('#secretUserList').find('.secret_heading').length > 0) {
                activeAction = '!@';
            } else if ($('#msg').find('.solid_mention').length > 0) {
                activeAction = '@';
            }
            if (mentioncheck.check == '@') {
                mentionFor = '@';
            } else {
                mentionFor = '!@';
            }
            if (mentionFor == activeAction || activeAction == '') {
                if (mentioncheck.last_t != '@' && mentioncheck.last_t != '!@') {
                    // if(!mentionisActive){
                    // 	mentionisActive = true;
                    // 	draw_mention_design('#mention_user_list',true,nameArry,'msg');
                    // }else{
                    // 	searchMentionFun(e,'#mention_user_list','.mention_user');
                    // }
                    searchMentionFun(e, '#mention_user_list', '.mention_user');
                } else {
                    // searchMentionFun(e,'#mention_user_list','.mention_user');
                    mentionisActive = true;
                    draw_mention_design('#mention_user_list', true, nameArry, 'msg');
                }
            }
        } else {
            mentionFor = '';
            draw_mention_design('#mention_user_list', false, nameArry, 'msg');
            mentionisActive = false;
        }
    }


    // console.log(13707,str.indexOf('!@'))
    // if(str.indexOf('!@') > -1){
    // 	var s = str.split('!@');
    // 	if(str.indexOf('&nbsp;!@')){
    // 		s = str.split('!@');
    // 	}else{
    // 		if(str.length == 2){
    // 			s = str.split('!@');
    // 		}
    // 	}
    //
    // 	// console.log(13894,str.match(/!@/g))
    // 	if(str.match(/!@/g) == null){
    // 		searchMsgUser = false;
    // 		mention_div_action('hide');
    // 	}
    // }else{
    // 	var s = str.split('@');
    // 	if(str.indexOf('&nbsp;@')){
    // 		s = str.split('@');
    // 	}else{
    // 		if(str.length == 1){
    // 			s = str.split('!@');
    // 		}
    // 	}
    // 	// console.log(str.match(/@/g));
    // 	if(str.match(/@/g) == null){
    // 		searchMsgUser = false;
    // 		mention_div_action('hide');
    // 	}
    // }
    //
    // if(s.length == 1){
    // 	var indx = 0;
    // }else{
    //
    // 	var indx = (s.length - 1) ;
    // }
    // if(str.length > 0){
    //
    // 	if(s[indx] == ''){
    // 		searchMsgUser = true;
    // 	}
    // }

    // console.log(19999999999,searchMsgUser)
    if (e.keyCode == 32) {

        // if($('#mention_user_list').find('.mention_user:visible').length == 0){
        // 	// console.log(12543,$('#mention_user_list').find('.mention_user:visible'))
        // 	searchMsgUser = false;
        // 	mention_div_action('hide');
        // }else{
        // 	// e.preventDefault();
        // 	// e.stopImmediatePropagation();
        // 	//return false;
        // 	//$('#msg').html($('#msg').html().replace(/&nbsp;/gi,' '));
        //     //  placeCaretAtEnd(document.getElementById('msg'));
        // }
    } else if (e.keyCode == 27) {
        e.preventDefault();
        e.stopImmediatePropagation();
        // searchMsgUser = false;
        // mention_div_action('hide');
        mentionFor = '';
        draw_mention_design('#mention_user_list', false, nameArry, 'msg');
        mentionisActive = false;

    }
    // console.log(13942,searchMsgUser);
    // if(e.keyCode !== 38 && e.keyCode !== 40 ){
    // 	console.log(15812,searchMsgUser)
    // 	console.log(15812,str.indexOf('!@') > -1)
    // 	if(searchMsgUser){
    // 		if(str.indexOf('!@') > -1){
    // 			if($('#mention_user_list').is(':visible')){
    // 				var searStr = s[indx].split('!@');
    // 					if(searStr.length > 1){
    // 						searStr = searStr[1];
    // 					}else{
    // 						searStr = searStr[0];
    // 					}
    // 					var newSearch =  searStr.replace(/\s/g, '');
    //
    // 					if(!recentlyShowMen){
    // 						mnps(newSearch);
    // 					}else{
    // 						$("#mention_user_list").removeClass('hideThisDivanyway');
    //
    // 					}
    // 				// $('#mention_user_list .mention_user').unhighlight();
    // 				// $('#mention_user_list .mention_user').highlight(searStr);
    // 				$("#mention_user_list .mention_user").removeClass('selected');
    // 				$("#mention_user_list .mention_user:visible").first().addClass('selected');
    // 			}else{
    // 					mentionUser_ListView = '!@';
    // 					mention_div_action('show');
    // 			}
    // 		}else{
    // 			if($('#mention_user_list').is(':visible')){
    // 				var searStr = s[indx].split('@');
    // 					if(searStr.length > 1){
    // 						searStr = searStr[1];
    // 					}else{
    // 						searStr = searStr[0];
    // 					}
    // 					var newSearch =  searStr.replace(/\s/g, '');
    // 					if(!recentlyShowMen){
    // 						mnps(newSearch);
    // 					}else{
    // 						$("#mention_user_list").removeClass('hideThisDivanyway');
    //
    // 					}
    //
    // 				// $('#mention_user_list .mention_user').unhighlight();
    // 				// $('#mention_user_list .mention_user').highlight(searStr);
    // 				$("#mention_user_list .mention_user").removeClass('selected');
    // 				$("#mention_user_list .mention_user:visible").first().addClass('selected');
    // 			}else{
    // 					mentionUser_ListView = '@';
    // 					mention_div_action('show');
    // 			}
    // 		}
    // 	}
    // }

    // if($('#mention_user_list').find('.mention_user:visible').length == 0){
    // 	$('#mention_user_list').hide();
    // }


})

var mnps = (newSearch) => {
    $("#mention_user_list .mention_user").each(function() {
        var text = $(this).text();
        text = text.replace(/\s/g, '');
        if (text.toLowerCase().indexOf(newSearch.toLowerCase()) > -1) {
            // if(!$(this).hasClass('itsVisible')){
            // 	$(this).addClass('itsVisible');
            // 	$(this).removeClass('itsVisible');
            // }
            $(this).show();
        } else {
            $(this).hide();
            // $(this).removeClass('itsVisible');
            // if(!$(this).hasClass('itsInvisible')){
            // 	$(this).addClass('itsInvisible');
            // }
        }
    });
    if ($("#mention_user_list").find('.mention_user:visible').length == 0) {
        $("#mention_user_list").addClass('hideThisDivanyway');
    } else {
        $("#mention_user_list").removeClass('hideThisDivanyway');
    }
}
$('body').on('keydown', '#msg', function(e) {

    var str = $('#msg').text().trim();
    // if(str.length == 0){
    // 	if(e.shiftKey && e.keyCode == 50){
    // 		searchMsgUser = false;
    // 		mention_div_action('hide');
    // 		searchMsgUser = true;
    // 	}
    // }else{
    // 	if(str.indexOf('!@') > -1){
    // 		var s = str.split(' !@');
    // 		if(str.length == 1){
    // 			s = str.split('!@');
    // 		}
    // 	}else{
    // 		var s = str.split(' @');
    // 		if(str.length == 1){
    // 			s = str.split('@');
    // 		}
    // 	}
    // 	if(s.length == 1){
    // 		var indx = 0;
    // 	}else{
    //
    // 		var indx = (s.length - 1) ;
    // 	}
    // 	if(e.shiftKey && e.keyCode == 50){
    // 		searchMsgUser = false;
    // 		mention_div_action('hide');
    // 		if(s[indx] == ''){
    // 			searchMsgUser = true;
    // 		}
    // 	}
    // }



    if (e.keyCode == 8) {
        var text = $('#msg').html().split('&nbsp;');
        if (text[text.length - 1] == '') {
            if (text[text.length - 2].indexOf('mention_user_msg') > -1) {
                e.preventDefault();
                e.stopImmediatePropagation();
                $('#msg').find('.mention_user_msg').last().remove();
                // privateMsgTo();
            }
        }
    }
})

function mention_div_action(type) {
    if (type == 'show') {
        $('#mention_user_list').html('');
        if (mentionUser_ListView == '@') {
            $.each(user_list, function(k, v) {
                console.log(27187,v)
                if (participants.indexOf(v.id) !== -1 && v.is_delete == 0) {
                    var fullname = v.fullname;
                    // fullname = fullname.join('');
                    // fullname = fullname.toLowerCase();
                    var youtext = '';
                    if (v.id == user_id) {
                        youtext = '(You)';
                    }

                    var design = '<div class="mention_user" id="mention_user_msg_' + v.id + '" onclick="addUserThisMsg(\'' + v.id + '\',\'' + fullname + '\')" data-id="' + v.id + '" >' +
                        '<img src="' + file_server + 'profile-pic/Photos/' + v.img + '" alt="">' +
                        '<div class="name">' + fullname + youtext + '</div>' +
                        '</div>';
                    $('#mention_user_list').append(design);
                }
            });
        } else {
            var personalUser = [];

            if ($('#secretUserList').find('.secret_heading').length > 0) {
                personalUser = $('#secretUserList').find('.secret_heading').attr('data-id').split(',');
            }

            $.each(user_list, function(k, v) {
                if (participants.indexOf(v.id) !== -1 && v.is_delete == 0) {
                    if (v.id !== user_id) {
                        var fullname = v.fullname;
                        if (personalUser.indexOf(v.id) > -1) {
                            var design = '<div class="mention_user removeIcon" id="mention_user_msg_' + v.id + '" onclick="addUserThisMsg(\'' + v.id + '\',\'' + fullname + '\')" data-id="' + v.id + '" >';
                        } else {

                            var design = '<div class="mention_user" id="mention_user_msg_' + v.id + '" onclick="addUserThisMsg(\'' + v.id + '\',\'' + fullname + '\')" data-id="' + v.id + '" >';
                        }
                        design += '<img src="' + file_server + 'profile-pic/Photos/' + v.img + '" alt="">';
                        design += '<div class="name">' + fullname + '</div>';
                        design += '</div>';
                        $('#mention_user_list').append(design);
                    }
                }
            });
        }

        $('#mention_user_list').show();
        $('#mention_user_list .mention_user:first').addClass('selected');
    } else if (type == 'hide') {
        $('#mention_user_list_file').html('');
        $('#replymention_user').html('');
        $('#mention_user_list').html('');
        $('#mention_user_list').hide();
        $('#mention_user_list_file').hide();
        $('#replymention_user').hide();
        searchMsgUser = false;
    }
}

var mentionUser_ListView = '@';

function addUserThisMsg(id, fullname) {
    var str = document.getElementById("msg").innerHTML;
    var text = $('#msg').text();
    if (mentionUser_ListView == '!@') {
        var res = str.slice(0, str.lastIndexOf("!@"));

        document.getElementById("msg").innerHTML = res;
        var personalUser = [];

        if ($('#secretUserList').find('.secret_heading').length > 0) {
            personalUser = $('#secretUserList').find('.secret_heading').attr('data-id').split(',');
            if (personalUser.indexOf(id) > -1) {
                removeA(personalUser, id);
            } else {
                personalUser.push(id)
            }
            $('#msg').text().trim();
            $('#secretUserList').find('.secret_heading').attr('data-id', personalUser.join(','))
        } else {
            var design = '<span onclick="viewmention_div_action()" class="secret_heading hideaftersent" contenteditable="false" style="cursor:pointer" spellcheck="false" data-id="' + id + '"><span class="">Private message to: ' + findObjForUser(id).fullname + '</span> <span class="removeSecretUser" onclick="removeSecretUsers(event)"></span></span>';

            $('#msg').text().trim();
            $('#secretUserList').find('.secret_heading.hideaftersent').remove();
            $('#secretUserList').prepend(design);
        }

        //$('#msg').append('<div onclick="actionMentionUser(\''+id+'\')" class="mention_user_msg secret_user _scret_msg_" data-secret="@:_S'+id+'@:_S" data-id="'+id+'"  data-mention="'+'!@'+fullname+'"></div>&nbsp;')
        // 	$('#msg').html(res);
        mention_div_action('hide');
        placeCaretAtEnd(document.getElementById('msg'));
        privateMsgTo();
    } else {

        // var s = str.split('@');
        // if(s.length == 1){
        // 	$('#msg').html('<span onclick="actionMentionUser(\''+id+'\')" class="mention_user_msg" contenteditable="false" data-mention="'+'@'+fullname+'"></span>&nbsp; '+ ' ' +'   ');
        // }else{
        // 	removeA(s,s[s.length - 1]);
        // 	$('#msg').html(s.join('@'));
        // 	$('#msg').append('<span onclick="actionMentionUser(\''+id+'\')" class="mention_user_msg" contenteditable="false" data-mention="'+'@'+fullname+'"></span>&nbsp; '+ ' ' +'   ');
        // }
        var res = str.slice(0, str.lastIndexOf("@"));

        document.getElementById("msg").innerHTML = res;
        $('#msg').text().trim();
        if ($('#msg').find('.solid_mention').last().attr('data-id') !== id) {
            $('#msg').append('<div onclick="actionMentionUser(event,\'' + id + '\')" data-id="' + id + '" class="mention_user_msg solid_mention"  data-mention="' + '@' + fullname + '"></div>&nbsp;')
        }
        // 	$('#msg').html(res);
        mention_div_action('hide');
        placeCaretAtEnd(document.getElementById('msg'));
    }
}

function actionMentionUser(e, id) {
    if (e == 'onload') {
        id = $('#hayvenSidebar li.sideActive').attr('data-id');
    } else {
        e.preventDefault();
        e.stopImmediatePropagation();
    }
    if (conversation_type == 'personal' && id == conversation_id) {
        id = $('#hayvenSidebar li.sideActive').attr('data-id');
    } else if (conversation_type !== 'personal' && id == conversation_id) {
        var img = $('#conv_title').find('img').attr('src');
        expandMyimg(img);
        return false;
    }
    console.log(conversation_type)
        // socket.emit('get_call_url',{user_id : user_id , type: 'profile'},function(res){
    var userornot = false;

    if (id != user_id) {
        $.each(user_list, function(k, v) {
            if (id == v.id) {
                userornot = true;
                $('#myModalImgview').find('.img_foot_action div').removeClass('off_G_C');
                $('#myModalImgview').find('.img_foot_action div').addClass('off_P_C');
                if (id == user_id) {
                    $('#myModalImgview').attr('chat-text', false);
                    if (res != null) {
                        $('#callerid_url_profile').text(window.location.origin + "/call/" + findObjForUser(id).conference_id);
                        $('#user_calleridPopupbox').show();
                    }

                } else {
                    $('#myModalImgview').attr('chat-text', true);
                    $('#user_calleridPopupbox').hide();

                }
                $('#myModalImgview').attr('data-userid', v.id);
                $('#zoomImgView').attr('src', file_server + 'profile-pic/Photos/' + v.img);
                $('#myModalImgview').css('display', 'flex');
                $('#zoomImgShare').attr('data-value', file_server + 'profile-pic/Photos/' + v.img);
                var originalname = v.fullname;
                $('#dataOrigianl_name').html('');
                setTimeout(function() {
                    if (originalname != $('#user_namePopupbox').text()) {
                        $('#dataOrigianl_name').text(originalname);
                    }
                }, 500)
                $('#user_namePopupbox').text(v.fullname);
                $('#user_namePopupbox').attr('class', 'P_user_name conv_nickname_' + v.id + '');
                $('#user_namePopupbox').attr('onclick', 'editCustomTitle(event, \'conv_title\',\'' + v.id + '\',\'' + v.fullname + '\')');

                $('#user_emailPopupbox').text(v.email);
                $('#dconvUsers').html('');

                $('#temppdconvM').html('');
                temppconvSingle = false;
                temppconvSingleGo = false;
                temppconvSingleFriendId = null;
                changeAllCustomTitle();

            }
        });
        if (!userornot) {
            $('#myModalImgview').find('.img_foot_action div').removeClass('off_P_C');
            $('#myModalImgview').find('.img_foot_action div').addClass('off_G_C');
        }
    } else {
        editProfileBackwrap();
    }
    // });

}

function privateMsgTo(div, privateMsgTo) {
    // //debugger
    $('#' + div).text().trim();

    var secretUserPerMsg = [];
    if ($('#' + privateMsgTo + ' .secret_heading.hideaftersent').length > 0) {
        if ($('#' + privateMsgTo + ' .secret_heading.hideaftersent').attr('data-id') !== "") {
            secretUserPerMsg = $('#' + privateMsgTo + ' .secret_heading.hideaftersent').attr('data-id').split(',');
        }
    }

    if (secretUserPerMsg.length == 0) {
        $('#' + privateMsgTo + ' .secret_heading.hideaftersent').remove();
        return false;
    }

    // var secretUserPerMsg = [];
    // // $('#msg .mention_user_msg.secret_user._scret_msg_').css('display','inline-block')
    // // $('#msg .mention_user_msg.secret_user._scret_msg_').first().css('display','none')
    // $.each(allPrivatUser,function(k,v){
    // 	if($(v).attr('data-id') != user_id){
    // 		if(secretUserPerMsg.indexOf($(v).attr('data-id')) == -1){
    // 			secretUserPerMsg.push($(v).attr('data-id'));
    // 		}
    // 	}
    // })
    // console.log(14247,secretUserPerMsg);



    var design = '';

    if (secretUserPerMsg.length > 0) {
        design += '<span onclick="viewmention_div_action()" class="secret_heading hideaftersent" contenteditable="false" style="cursor:pointer" spellcheck="false" data-id="' + secretUserPerMsg.join(',') + '"><span class="pvt_msg_to_span">Private message to: </span>';
        $.each(secretUserPerMsg, function(k, v) {
            if (v !== user_id) {
                if (k == 0) {
                    design += '<span class="removeSecretUserid" id="removeSecretUserid_' + v + '"> ' + findObjForUser(v).fullname + ' <span data-uid="' + v + '" class="removeSecretUser" onclick="removeSecretPerson(\'' + v + '\')"></span></span>';
                } else {
                    if (secretUserPerMsg.length == (k + 1)) {
                        design += ' <span class="removeSecretUserid" id="removeSecretUserid_' + v + '">' + findObjForUser(v).fullname + ' <span data-uid="' + v + '"class="removeSecretUser" onclick="removeSecretPerson(\'' + v + '\')"></span></span>';
                    } else {
                        design += '<span class="removeSecretUserid" id="removeSecretUserid_' + v + '">' + findObjForUser(v).fullname + ' <span data-uid="' + v + '" class="removeSecretUser" onclick="removeSecretPerson(\'' + v + '\')"></span></span>';
                    }
                }
            }
        });
        design += '<span class="backSecretUser" onclick="backto_normal_secret()">Back to room chat</span>';
        design += '</span>'
    }
    $('#' + privateMsgTo).find('.secret_heading.hideaftersent').remove();
    $('#' + privateMsgTo).prepend(design);
    placeCaretAtEnd(document.getElementById(div));
}

function removeSecretUsers(e) {
    e.preventDefault();
    e.stopImmediatePropagation();
    var id = $(e.target).parents('.secretUserList').attr('id');
    $('#' + id).html('');
    var div = 'msg';
    if (id == 'secretUserList_rep') {
        div = 'msg_rep';
    }
    placeCaretAtEnd(document.getElementById(div));
}


function viewmention_div_action() {
    // mentionUser_ListView = '!@';
    // var ys = $('#msg').text();
    // if(ys.charAt(ys.length - 1) !== '@' && ys.charAt(ys.length - 2) !== '!' ){
    //
    // 	var div = document.getElementById( 'msg' );
    //
    // 	div.insertAdjacentHTML( 'beforeend', '!@' );
    // }
    //
    // placeCaretAtEnd(document.getElementById('msg'));
    // mention_div_action('show');
}

function findConversation() {
    // console.log('click')
    var to_id = $('#myModalImgview').attr('data-userid');
    if (to_id != undefined && to_id != '') {
        $.each(user_list, function(k, v) {
            if (v.id == to_id) {
                if (v.id == user_id) {
                    closeModal('myModalImgview');
                    $('#conv' + user_id).trigger('click');
                } else {
                    temmpSingleConv(v.id, v.img, v.fullname, '');
                }

            }
        })
    }
}

function triggerFile(ele) {
    var url = $(ele).parents('.fil_attach').find('.per_img_hover_opt .img_action[data-href]').attr('data-href');
    var pdf = $(ele).parents('.fil_attach').find('.per_img_hover_opt .img_action[file-type="pdf"]');
    if (pdf.length == 1) {
        // console.log(1);
        url = $(ele).parents('.fil_attach').find('.per_img_hover_opt .img_action.share_ico').attr('data-value')
        window.open(url);
    } else {
        // console.log(2)
        $(ele).parents('.fil_attach').find('.per_img_hover_opt .img_action[data-balloon="Preview"]').trigger('click');
    }
}

function triggerAviFile(e, elm) {

    if ($(elm).attr('file-type') == 'webm' || $(elm).attr('file-type') == 'mp4' && ($(elm).attr('view-type') == 'list')) {
        // console.log('111')
        e.preventDefault();
        e.stopImmediatePropagation();
        // $(elm).find('.per_img_hover_opt .img_action[data-balloon="Preview"]').trigger('click');
        var url = $(elm).find('.hyvenCheckbox').attr('data');
        window.open(url, "_blank");
    } else if ($(elm).attr('file-type') != 'mp4' && $(elm).attr('file-type') != 'webm') {
        // console.log('222')
        e.preventDefault();
        e.stopImmediatePropagation();
        $(elm).find('.per_img_hover_opt .img_action[data-balloon="Preview"]').trigger('click');
    }
}

function showFullMsgThread() {
    $('#threadReplyPopUp').removeClass('small_div');
    if ($('#threadFullmsg').hasClass('active')) {
        $('#threadReplyPopUp .main-thread-msgs:first').css({
            'overflow-y': 'hidden',
            'height': '85px'
        });
        $('#threadFullmsg').removeClass('active');
        $('#threadFullmsg').text('Show full message');
    } else {
        $('#threadReplyPopUp .main-thread-msgs:first').css({
            'overflow-y': 'auto',
            'height': '250px',
            'max-height': 'unset'
        });
        $('#threadReplyPopUp').addClass('small_div');
        $('#threadFullmsg').addClass('active');
        $('#threadFullmsg').text('Hide full message');
    }
}

var checktitleforcreateroom = false;

function createRoomCheckReqdata() {
    var data = {
        b_unit: $('#business_unit').val(),
        team_name: checktitleforcreateroom,
        team: $('#select-ecosystem').val()
    }
    if (data.b_unit !== '' && data.team_name != false && data.team != '0') {
        $('#createChannelContainer').removeClass('inactive');
    } else {
        if (!$('#createChannelContainer').hasClass('inactive')) {
            $('#createChannelContainer').addClass('inactive');
        }
    }
}

function goToThisRoom(e, id) {
    e.preventDefault();
    e.stopImmediatePropagation();
    $('#conv' + id).removeClass('sideActive');
    if ($('#conv' + id).is(':visible')) {
        $('#conv' + id).trigger('click');
        // $('#hideRoom_fromLeft').hide();
        $('body').removeClass('room_closed');
    } else {
        // $('#roomTitle'+id).trigger('click');
        $.each(allRooms, function(k, resData) {
            if (resData.conversation_id == id) {

                if (!$('#conv' + id).is(':visible')) {
                    $("#conversation_list_sidebar").prepend('<li  data-myid="' + user_id + '" data-createdby="0"  data-octr="' + resData.created_by + '" onclick="start_conversation(event)" data-nor="0" data-subtitle="' + resData.group_keyspace + '" data-id="' + user_id + '" data-conversationtype="group" data-tm= "' + parseInt(parseInt(resData.participants.length) + 1) + '" data-conversationid="' + resData.conversation_id + '" data-name="' + resData.title + '" data-img="' + resData.conv_img + '"  id="conv' + resData.conversation_id + '" class="temppSideli ' + (resData.root_conv_id != null ? 'itssubconvhide' : '') + '"><span class="' + (resData.privacy === 'public' ? "hash" : "lock") + '"></span><span class="usersName">' + resData.title + '</span><span class=" unreadMsgCount"></span></li>');
                    $('#conv' + id).trigger('click');
                }
            }
        })
    }
}


function triggermainThread(elm) {
    $(elm).find('.msgthreadtrigger').trigger('click');
}


function returnedithistoryDesign(edit_history, data, typeclass) {
    // console.log('A1', edit_history, data);

    var design = '';
    var allmsg_edit = edit_history.split('@_$cUsJs');
    allmsg_edit.reverse();
    var hiddenCls = '';
    $.each(allmsg_edit, function(k, v) {
        var newData = JSON.parse(v);
        if (k == 0) {
            design += '<div class="' + typeclass + '" id="data_msg_body' + data.msg_id + '" data-index="' + k + '" onkeyup="keyupForPlain_textEdit(event)">' + newData.msg_body + '</div>';
            // design += '<div class="updatedTextOriginal" id="editedMsg_id'+data.msg_id+'"><div class="'+typeclass+'" id="data_msg_body'+data.msg_id+'">' + newData.msg_body + '</div><div class="lastUpdateTime">Updated at '+moment(Number(newData.update_at)).local().format('MMM Do YYYY - h:mm a')+'</div></div>';
            //design += '<div class="updatedTextOriginal" id="editedMsg_id'+data.msg_id+'"><div class="'+typeclass+'" id="data_msg_body'+data.msg_id+'">' + newData.msg_body + '</div><div class="lastUpdateTime">Updated at '+moment(Number(newData.update_at)).local().format('MMM Do YYYY - h:mm a')+'</div></div>';
            //design += '<div class="updatedTextOriginal" data-index="'+k+'"><p>'+newData.msg_body+'</p><div class="lastUpdateTime">Updated at '+moment(Number(newData.update_at)).local().format('MMM Do YYYY - h:mm a')+'</div></div>';
            if (allmsg_edit.length > 0) {
                if (hiddenCls == '') {
                    hiddenCls = 'hiddenCl';
                    design += '<div class="showMoreEditedmsg" onclick="showfulleditedMsg(\'' + data.msg_id + '\',this)">Edited on ' + moment(Number(data.edit_status)).local().format('Do MMM YYYY @ h:mm a') + ' | Click to view old message</div>'
                }
            }
        } else {
            design += '<div class="updatedTextOriginal ' + hiddenCls + '" data-index="' + k + '"><div class="msg_historyBody">' + newData.msg_body + '</div><div class="lastUpdateTime"> ' + moment(Number(newData.update_at)).format('MMM Do YYYY') + ' at ' + moment(data.created_at).format('h:mm a') + '</div></div>';

        }
    });

    design += '<div class="updatedTextOriginal ' + hiddenCls + '" data-index="' + allmsg_edit.length + '"><div class="msg_historyBody">' + data.msg_body + '</div><div class="lastUpdateTime">' + moment(data.created_at).local().format('MMM Do YYYY - h:mm a') + '</div></div>';

    return design;
}

function returnedithistoryDesignrep(edit_history, data, typeclass) {
    console.log('A2');

    var design = '';
    var allmsg_edit = edit_history.split('@_$cUsJs');
    allmsg_edit.reverse();
    var hiddenCls = '';
    $.each(allmsg_edit, function(k, v) {
        var newData = JSON.parse(v);
        if (k == 0) {
            if (data.msg_body.indexOf('thread_chk_item') > -1) {
                var thread_chk_item = data.msg_body.match(/<p class="thread_chk_item">([^\<]*?)<\/p>/g);
                design += '' + thread_chk_item + '';
            }
            design += '<div class="' + typeclass + '" id="data_msg_body_rep' + data.msg_id + '" data-index="' + k + '" onkeyup="keyupForPlain_textEdit(event)">' + newData.msg_body + '</div>';
            // design += '<div class="updatedTextOriginal" id="editedMsg_id'+data.msg_id+'"><div class="'+typeclass+'" id="data_msg_body'+data.msg_id+'">' + newData.msg_body + '</div><div class="lastUpdateTime">Updated at '+moment(Number(newData.update_at)).local().format('MMM Do YYYY - h:mm a')+'</div></div>';
            //design += '<div class="updatedTextOriginal" id="editedMsg_id'+data.msg_id+'"><div class="'+typeclass+'" id="data_msg_body'+data.msg_id+'">' + newData.msg_body + '</div><div class="lastUpdateTime">Updated at '+moment(Number(newData.update_at)).local().format('MMM Do YYYY - h:mm a')+'</div></div>';
            //design += '<div class="updatedTextOriginal" data-index="'+k+'"><p>'+newData.msg_body+'</p><div class="lastUpdateTime">Updated at '+moment(Number(newData.update_at)).local().format('MMM Do YYYY - h:mm a')+'</div></div>';
            if (allmsg_edit.length > 0) {
                if (hiddenCls == '') {
                    hiddenCls = 'hiddenCl';
                    design += '<div class="showMoreEditedmsg" onclick="showfulleditedMsg(\'' + data.msg_id + '\',this)">Edited on ' + moment(Number(data.edit_status)).local().format('Do MMM YYYY @ h:mm a') + ' | Click to view old message</div>'
                }
            }
        } else {
            design += '<div class="updatedTextOriginal ' + hiddenCls + '" data-index="' + k + '"><p class="msg_historyBody">' + newData.msg_body + '</p><div class="lastUpdateTime">' + moment(Number(newData.update_at)).format('MMM Do YYYY') + ' at ' + moment(data.created_at).format('h:mm a') + '</div></div>';

        }
    });
    if (data.msg_body.indexOf('thread_chk_item') == -1) {
        design += '<div class="updatedTextOriginal ' + hiddenCls + '" data-index="' + allmsg_edit.length + '"><p class="msg_historyBody">' + data.msg_body + '</p><div class="lastUpdateTime">' + moment(data.created_at).local().format('MMM Do YYYY - h:mm a') + '</div></div>';
    } else {
        var thread_chk_item = data.msg_body.match(/<p class="thread_chk_item">([^\<]*?)<\/p>/g);
        var msg_body = data.msg_body.split(thread_chk_item)[data.msg_body.split(thread_chk_item).length - 1];

        design += '<div class="updatedTextOriginal ' + hiddenCls + '" data-index="' + allmsg_edit.length + '"><p class="msg_historyBody">' + msg_body + '</p><div class="lastUpdateTime">' + moment(data.created_at).local().format('MMM Do YYYY - h:mm a') + '</div></div>';
    }

    return design;
}

function showfulleditedMsg(msg_id, elm) {
    $(elm).remove();
    $('#msgThread_' + msg_id).find('.updatedTextOriginal ').removeClass('hiddenCl');
    $('.rep_msg_' + msg_id).find('.updatedTextOriginal ').removeClass('hiddenCl');
}

function deleteThreadMsg(elm) {
    var msgid = $(elm).attr('msg-id');
    var created_by = $(elm).attr('created-by');
    $('#delete_msg_div').css('display', 'flex');
    $('#delete_msg_div').attr('msg-id', msgid);
    if (created_by == user_id) {
        $('#deleteForAll').show();
        $('#deleteForMe').text('Delete for me');
        $('#deleteForMe').show();
    } else {
        $('#deleteForAll').hide();
        $('#deleteForMe').text('Delete for me');
        $('#deleteForMe').show();
    }
    // if(all_active){
    // 	$('#deleteForAll').show();
    // }else{
    // 	$('#deleteForMe').text('Delete for me');
    // 	$('#deleteForAll').hide();
    // }
    // if(msg_type == 'checklist'){
    // 	$('#deleteForMe').hide();
    // }else{
    // 	$('#deleteForMe').show();
    // }
    // if(conversation_id == user_id){
    // 	$('#deleteForMe').show();
    // 	$('#deleteForAll').hide();
    // 	$('#deleteForMe').text('Delete for me');
    // 	all_active = false;
    // }else{
    // 	$('#deleteForMe').text('Delete for me');
    // }
}

function clickToSend() {
    var e = $.Event('keydown');
    e.which = 13; // Character 'A'
    $('#msg').trigger(e);
}
$(document).keydown(function(e) {
    if (e.keyCode == 70 && e.shiftKey) {
        if (e.ctrlKey) {
            $('.search_fil').click();

            $('#sideBarSearch').focus();
            e.preventDefault();
        }
    }
    // Esc key buing with document
    if (e.which == 27) {
        $('#sideBarSearch').blur();
        if ($("#gotopage").is(":visible")) $("#gotopage").hide();
    }
});

function showJoinPopupforPublicRoom(conversation_id) {
    $('#warningPopup').css('display', 'flex');
    $('#warningPopup').attr('data-type', 'joinroomReq');
    $('#warningPopup').attr('data-id', conversation_id);
    $('#warningTitle').text('Update !');
    $('#warningMessage').text('You are not a member of this room. Would you like to join this Room?');
    $('.buttonAction').removeClass('bg_danger').text('Yes');
    $('.buttonCancel').text('Cancel');
}
var gothisroompop = false;

function showJoinButtonPopupforPublicRoom(conversation_id, element) {
    gothisroompop = true;
    // $('#roomBtnforClick'+conversation_id).trigger('click');
    var grpprivacy = $('#joinChanelTile' + conversation_id).attr('data-privecy');
    var selectecosystem = $('#joinChanelTile' + conversation_id).attr('data-keyspace');
    var title = $('#joinChanelTile' + conversation_id).attr('data-title');
    joinRoom(undefined, user_id, grpprivacy, selectecosystem, conversation_id, user_id, title)


}

function editReplyMsg(elm) {
    var msg_id = $(elm).attr('data-id');
    var msg_body = $('#data_msg_body_rep' + msg_id).html();
    $('#data_msg_body_rep' + msg_id).hide();
    // $('#data_msg_body_rep'+msg_id).after('<div  class="editRepMsgContainer"><div id="editRep'+msg_id+'" class="editablemsg_body" contenteditable="true"  data-id="'+msg_id+'"></div><div class="updateAction"><div class="save_btn"  data-id="'+msg_id+'">Save</div><div class="cancel_btn" data-id="'+msg_id+'" onclick="cancelRepMsg(this)" >Cancel</div></div></div>');
    $('#data_msg_body_rep' + msg_id).after('<div  class="editRepMsgContainer"><div id="editRep' + msg_id + '" class="editablemsg_body" contenteditable="true" onblur="//repMsgOnBlur(event)" onkeyup="repMsgKeyupFun(event)" data-id="' + msg_id + '"></div><div class="updateAction"><div class="save_btn" onclick="saveRepMsg(this)" data-id="' + msg_id + '">Save</div><div class="cancel_btn" data-id="' + msg_id + '" onclick="cancelRepMsg(this)" >Cancel</div></div></div>');
    $('#editRep' + msg_id).prepend(msg_body);
    $('.rep_msg_' + msg_id).addClass('edit_action_on');
    placeCaretAtEnd(document.getElementById('editRep' + msg_id));
}

function repMsgKeyupFun(e) {
    if (e.keyCode == 13) {
        // $(event.target).blur();
        $(event.target).parents('.editRepMsgContainer').find('.updateAction .save_btn').trigger('click');
    }
}

function saveRepMsg(elm) {
    var msg_id = $(elm).attr('data-id');
    var msg_body = $('#editRep' + msg_id).html();
    var old_body = $('#data_msg_body_rep' + msg_id).html()
    if ($('#editRep' + msg_id).text() == $('#data_msg_body_rep' + msg_id).text()) {
        cancelRepMsg(elm);
    } else {
        if ($('#editRep' + msg_id).text().length > 0) {
            saveEditMsg(msg_id, msg_body, old_body);
        }
    }
}

function cancelRepMsg(elm) {
    var msg_id = $(elm).attr('data-id');
    cancelEditRep(msg_id);
    $('.rep_msg_' + msg_id).removeClass('edit_action_on');
}
// function repMsgOnBlur(e){
// 	var msg_id = $(e.target).attr('data-id');
// 	var msg_body = $('#editRep'+msg_id).html();
// 	var old_body = $('#data_msg_body_rep'+msg_id).html();
// 	$('.rep_msg_'+msg_id).removeClass('edit_action_on')
// 	if($('#editRep'+msg_id).text() == $('#data_msg_body_rep'+msg_id).text()){
// 		cancelEditRep(msg_id);
// 	}else{
// 		if($('#editRep'+msg_id).text().length > 0){
// 			saveEditMsg(msg_id,msg_body,old_body);
// 		}
// 	}
// }

var saveEditMsg = (msg_id, msg_body, old_body) => {

    // console.log(msg_body)
    var data = {
        conversation_id: $('#threadReplyPopUp').attr('thread_root'),
        msg_id: msg_id,
        update_at: new Date().getTime().toString(),
        msg_body: msg_body,
        old_body: old_body
    };
    var attch_audiofile = [];
    var attch_imgfile = [];
    var attch_otherfile = [];
    var attch_videofile = [];
    $.each($('.rep_msg_' + msg_id + ' .fil_attach.attach-file '), function(k, v) {
        attch_otherfile.push($(v).attr('data-file_name'));
    });
    $.each($('.rep_msg_' + msg_id + ' .img_attach'), function(k, v) {
        attch_imgfile.push($(v).attr('alt'));
    });
    $.each($('.rep_msg_' + msg_id + ' .ado_attach'), function(k, v) {
        attch_audiofile.push($(v).attr('data-file_name'));
    });
    $.each($('.rep_msg_' + msg_id + ' .vdo_attach'), function(k, v) {
        attch_videofile.push($(v).attr('data-file_name'));
    });
    var data = {
        conv_id: $('#threadReplyPopUp').attr('thread_root'),
        thread_root_id: $('#threadReplyPopUp').attr('data-conv'),
        msg_id: msg_id,
        msg_body: msg_body,
        update_at: new Date().getTime().toString(),
        sender: user_id,
        sender_img: user_img,
        sender_name: user_fullname,
        attch_audiofile: attch_audiofile,
        attch_imgfile: attch_imgfile,
        attch_otherfile: attch_otherfile,
        attch_videofile: attch_videofile,
        type: 'reply'
    };
    socket.emit('msg_update', data, (res) => {
        // console.log(9065,res);
        $('.rep_msg_' + msg_id).remove();
    });

}
var cancelEditRep = (msg_id) => {
    $('.rep_msg_' + msg_id).find('.editRepMsgContainer').remove();
    $('#data_msg_body_rep' + msg_id).show();
}


var unreadinactiveCounter = 0;
// window.onfocus = function () {
//   isTabActive = true;
//   unreadinactiveCounter = 0;
//   unreadinactiveCounterTime();
// };

// window.onblur = function () {
//   isTabActive = false;
//   unreadinactiveCounterTime();
// };


$(window).on("blur focus", function(e) {
    var prevType = $(this).data("prevType");

    if (prevType != e.type) { //  reduce double fire issues
        switch (e.type) {
            case "blur":
                isTabActive = false;
                unreadinactiveCounterTime();
                break;
            case "focus":
                isTabActive = true;
                // unreadinactiveCounter = 0;
                unreadinactiveCounterTime();
                break;
        }
    }

    $(this).data("prevType", e.type);
})

function unreadinactiveCounterTime() {
    // if(pageTitleOn != ''){
    // 	if(isTabActive){
    // 		// $('#titleTag').text(pageTitleOn);
    // 	}else{
    // 		if(unreadinactiveCounter > 0){
    // 			$('#titleTag').text('('+unreadinactiveCounter+') '+pageTitleOn);
    // 		}else{
    // 			$('#titleTag').text(pageTitleOn);
    // 		}
    // 	}
    // }

    var i = $('#hayvenSidebar li');
    var c = 0;
    $.each(i, function(k, v) {
        // console.log($(v).attr('data-nom'))
        if ($(v).attr('data-nom') != '' && $(v).attr('data-nom') != undefined) {
            if ($(v).attr('data-nom') != 'NaN' && $(v).attr('data-nom') != NaN) {
                c = (parseInt($(v).attr('data-nom'))) + c;
            }

        }
    });

    if (c > 0) {
        // $('#titleTag').text('(' + c + ') ' + 'Workfreeli | Connect');
    } else {
        // $('#titleTag').text('Workfreeli | Connect');
    }
    // console.log(16623,c)
}



// $("html").on('click', function(e) {
// 	if(isTabActive){
// 		if (unreadinactiveCounter > 0) {
// 			$('#titleTag').text(pageTitleOn);
// 			unreadinactiveCounter = 0;
// 		}
// 	}
// })

function leaveRoomShowFun() {

    if (thisroomStatus == 'close') {
        $('#leaveThisRoom').hide();
    } else {
        if (thisroomPrivacy == 'public') {
            if (participants.length > 1) {
                if (adminArra.length > 1) {
                    // console.log(adminArra.length,)
                    $('#leaveThisRoom').show();
                } else if (adminArra.indexOf(user_id) == -1) {
                    $('#leaveThisRoom').show();
                } else {
                    $('#leaveThisRoom').hide();
                }
            } else {
                $('#leaveThisRoom').hide();
            }
        } else {
            $('#leaveThisRoom').hide();
        }
    }
}

// function editProfileBackwrap(){
// 	// $('#editProfile').show();
// 	$(".connect_right_section").hide();
// 	$('#updateUserProfile').show();
// 	$('#editUserProfileName').val(user_fullname);
// 	$('#useronchangeimgvalue').val(user_img);
// 	$('#editUserProfileName').attr('placeholder',user_fullname);
// 	if(user_img == 'img.png'){
// 		$('#removeProfileimgbtn').hide();
// 	}else{
// 		$('#removeProfileimgbtn').show();
// 	}
// 	$('#changeUserImage').attr('src',file_server+'profile-pic/Photos/'+user_img);
// 	$('#changeUserImage').attr('alt',user_fullname);
// 	$('#callerid_url_personal').val(window.location.origin+'/call/'+findObjForUser(user_id).conference_id);
// 	if($('.profilenavMainSection').is(':visible')){
// 		profileNav();
// 	}
// }

// function changeUserImage(event,files){
// 	var formData = new FormData();
// 	formData.append('bucket_name', 'profile-pic');
// 	formData.append('room_image', files[0]);
// 	var slid = Number(moment().unix());
//     formData.append('sl', slid);
//     $('#changeUserImage').attr('src', file_server+'common/imgLoader.gif');
// 	$.ajax({
// 		url: '/s3Local/convImg',
// 		type: "POST",
// 		data: formData,
// 		dataType: 'json',
// 		contentType: false,
// 		processData: false,
// 		success: function(res){
// 			console.log(14020,res);
// 			$('#useronchangeimgvalue').val(res.data.key)
// 			$('#changeUserImage').attr('src',res.data.location);
// 			$('#removeProfileimgbtn').show();
// 		}
// 	});
// }

// function editProfileAction(type){
// 	if(type == 'removeImg'){
// 		$('#useronchangeimgvalue').val('img.png')
// 		$('#changeUserImage').attr('src',file_server+'profile-pic/Photos/img.png');
// 		$('#removeProfileimgbtn').hide();
// 	}
// }

// socket.on('changeUserProfile',function(data){
// 	$.each(user_list,function(k,v){
// 		if(v.id == data.id){
// 			console.log(14095,data)
// 			v.fullname = data.fullname;
// 			v.img = data.img;
// 			user_id_to_img[v.id] = data.img;
// 			user_id_to_fullname[v.id] = data.fullname;

// 			$('.user_name'+v.id).html(data.fullname);
// 			$('.user_img'+v.id).attr('src',file_server+'profile-pic/Photos/'+data.img);
// 		}
// 		if(user_id == data.id){
// 			user_fullname = data.fullname;
// 			user_img = data.img;
// 		}
// 	})
// });


// function changeUsernamekey(e){
// 	if(e.keyCode == 13){
// 		e.preventDefault();
// 		e.stopImmediatePropagation();
// 		// actionWarning('change_profile');
// 		saveUserProfileFun();
// 	}
// }

function changeNextBtnPop(elm, type) {
    $('.warningPopupContent .btn').removeClass('active');
    $('#converPopNextBtn').removeClass('active');
    if (type == 'room') {
        $(elm).addClass('active');
        $('#converPopNextBtn').addClass('active');
        $('#converPopNextBtn').attr('onclick', 'createChannel()');
    } else if (type == 'direct') {
        $(elm).addClass('active');
        $('#converPopNextBtn').addClass('active');
        $('#converPopNextBtn').attr('onclick', 'createDirMsg()');
    }
}


var zoomer = document.getElementById('zoomer');
var hubblepic = $('#mediaFilePreview .currentimg');



function reset_zoom() {
    $('#zoomer').val(1);
    $('#mediaFilePreview .currentimg').css({ 'transform': 'unset', 'top': 'unset', 'left': 'unset' });
}


function changeZoomerVal(type) {
    if (type == 'max') {
        $('#zoomer').val(Number($('#zoomer').val()) + 0.3);
        deepdive();

    } else if (type == 'min') {
        $('#zoomer').val((Number($('#zoomer').val()) - 0.3));
        if (Number($('#zoomer').val()) == 1) reset_zoom();
        deepdive();

    }
}


socket.on('delete_room_broadcast', function(data) {
    if ($('#conv' + data.conversation_id).hasClass('sideActive')) {
        $('#conv' + user_id).trigger('click');
    }
    $('#conv' + data.conversation_id).remove();
    $('#joinChanelTile' + data.conversation_id).remove();
})

function multipleFileShare() {

    var urls = [];
    if (selectedMediaImgTempArray.length > 0) {
        $.each(selectedMediaImgTempArray, function(k, v) {
            urls.push(v);
        })
    }
    if (selectedMediaVidTempArray.length > 0) {
        $.each(selectedMediaVidTempArray, function(k, v) {
            urls.push(v);
        })
    }
    if (selectedMediaAudTempArray.length > 0) {
        $.each(selectedMediaAudTempArray, function(k, v) {
            urls.push(v);
        })
    }
    if (selectedMediaFileTempArray.length > 0) {
        $.each(selectedMediaFileTempArray, function(k, v) {
            urls.push(v);
        })
    }
    if (selectedMediaTagTempArray.length > 0) {
        $.each(selectedMediaTagTempArray, function(k, v) {
            urls.push(v);
        })
    }
    // if(selectedMediaLinkTempArray.length > 0){
    // 	$.each(selectedMediaLinkTempArray,function(k,v){
    // 		urls.push(v);
    // 	})
    // }

    var newApp = [];
    if (selectedMediaLinkTempArray.length > 0) {
        $.each(selectedMediaLinkTempArray, function(k, v) {
            newApp.push('<a href="' + v + '" target="_blank">' + v + '</a>');
        })
        $('.UnsharedClass').remove();
        $('#shareLinkPop').css('display', 'flex');
        $('#shareLink').html('');
        $('#shareLink').html(newApp.join('<br><br>'));
        $('#shareLink').focus();
        $('#shareLink').html(newApp.join('<br><br>'));
    }
    if (urls.length > 0) {
        socket.emit('SetURLshorten', { linkArray: urls, type: 'multiple', user_id: user_id }, function(res) {
            // console.log(21386,res)
            $.each(res.data, function(k, v) {
                newApp.push('<a href="' + mywindowUrl + '/url/' + v + '" target="_blank">' + mywindowUrl + '/url/' + v + '</a>');
            })
            $('.UnsharedClass').remove();
            $('#shareLinkPop').css('display', 'flex');
            $('#shareLink').html('');
            $('#shareLink').html(newApp.join('<br><br>'));
            $('#shareLink').focus();
        })
    }



}

var urlTitleEditId = '';
var fileTitleEditId = '';
var convTitleEditId = '';

function editCustomTitle(e, type, uniq_id, originalname) {
    e.preventDefault();
    e.stopImmediatePropagation();
    // console.log(user_id);
    if (uniq_id == user_id) {
        if (type == 'conv_title') {
            editProfileBackwrap();
            return false;
        } else {

            return false;
        }
    }
    $('#editCustomTitle').attr('data-origi', '');
    if (type == 'link') {
        $('#set_your_own_title').html('Set your own custom link title');
        $('#editCustomTitle').attr('data-type', 'link_title');
        urlTitleEditId = uniq_id;
        $('#editCustomTitle').css('display', 'flex');
        $('#editCutomActionId').text('Link Title');
        $('#editCustomActionVal').attr('placeholder', 'Link Title')
        $('#editCustomActionVal').val($('.conv_nickname_' + uniq_id + '').text());
        $('#editCustomActionVal').focus();
        $('#titleResetActionBtn').hide();
        // if ($('.conv_nickname_' + uniq_id + '').text() == originalname) {
        //     $('#titleResetActionBtn').hide();
        // } else {
        //     $('#titleResetActionBtn').show();
        // }
    } else if (type == 'file') {
        $('#set_your_own_title').html('Set your own custom file name');
        $('#editCustomTitle').attr('data-type', 'file_title');
        fileTitleEditId = uniq_id;
        $('#editCustomTitle').css('display', 'flex');
        $('#editCutomActionId').text('File Title');
        $('#editCustomActionVal').attr('placeholder', 'File Title');
        $('#editCustomActionVal').val($('.file_title_' + uniq_id + '').first().attr('data-custom'));
        $('#editCustomActionVal').focus();
        if ($('.file_title_' + uniq_id + '').first().text() == originalname) {
            $('#titleResetActionBtn').hide();
        } else {
            $('#titleResetActionBtn').show();
        }
    } else if (type == 'conv_title') {
        var u = findObjForUser(uniq_id);
        if (u) {
            $('#set_your_own_title').html('Set a custom nickname for this member');
            $('#editCutomActionId').text('This nickname will be for your eyes only. You can always reset it back to the member\'s original name.');
            $('#editCustomActionVal').attr('placeholder', 'Member Title');
        } else {
            $('#set_your_own_title').html('Set a custom nickname for this conversation');
            $('#editCutomActionId').text('This nickname will be for your eyes only. You can always reset it back to the conversation\'s original name.');
            $('#editCustomActionVal').attr('placeholder', 'Conversation Title');
        }
        $('#editCustomTitle').attr('data-type', type);
        convTitleEditId = uniq_id;
        $('#editCustomTitle').css('display', 'flex');
        $('#editCustomActionVal').val($('.conv_nickname_' + uniq_id + '').first().text());
        $('#editCustomActionVal').focus();
        if ($('.conv_nickname_' + uniq_id + '').first().text() == originalname) {
            $('#titleResetActionBtn').hide();
        } else {
            $('#titleResetActionBtn').show();
        }
    }
    $('#titleResetActionBtn').attr('data-original', originalname);
    $('#customTitleSavebtn').text("Save")

}

function editLinkTitle(e, type, uniq_id, originalname) {
    e.preventDefault();
    e.stopImmediatePropagation();
    if (type == 'link') {
        $('#set_your_own_title').html('Set your own custom link title');
        $('#editCustomTitle').attr('data-type', 'link_title');
        $('#editCustomTitle').attr('data-origi', 'original_link');
        urlTitleEditId = uniq_id;
        $('#editCustomTitle').css('display', 'flex');
        $('#editCutomActionId').text('Link Title');
        $('#editCustomActionVal').attr('placeholder', 'Link Title')
        $('#editCustomActionVal').val($('#url_title_' + uniq_id + '').text());
        $('#editCustomActionVal').focus();
        if ($('#url_title_' + uniq_id + '').text() == originalname) {
            $('#titleResetActionBtn').hide();
        } else {
            $('#titleResetActionBtn').show();
        }
    }
    $('#titleResetActionBtn').attr('data-original', originalname);
    $('#customTitleSavebtn').text("Save")

}

function editLinkName(e, type, uniq_id, originalname) {
    e.preventDefault();
    e.stopImmediatePropagation();
    // console.log(user_id);
    if (uniq_id == user_id) {
        if (type == 'conv_title') {
            editProfileBackwrap();
            return false;
        } else {

            return false;
        }
    }
    if (type == 'link') {
        $('#set_your_own_title').html('Edit Link Title');
        $('#editCustomTitle').attr('data-type', 'edit_link_title');
        urlTitleEditId = uniq_id;
        UrlTitleConvId = $(e.target).attr('conv-id');
        $('#editCustomTitle').css('display', 'flex');
        $('#editCutomActionId').text('Link Title');
        $('#editCustomActionVal').attr('placeholder', 'Link Title')
        $('#editCustomActionVal').val($('#url_title_' + uniq_id + '').text());
        $('#editCustomActionVal').focus();
        $('#titleResetActionBtn').hide();
    }
    $('#titleResetActionBtn').attr('data-original', originalname);
    $('#customTitleSavebtn').text("Save")

}

function editTitleResetFun(type) {
    $('#editCustomActionVal').val($('#titleResetActionBtn').attr('data-original'));
    actionCustomTitle(type);

}

function actionCustomTitle(type) {
    // debugger
    if (type == 'link_title') {
        if ($('#editCustomTitle').attr('data-origi') == 'original_link') {
            var data = {
                url_id: urlTitleEditId,
                conversation_id: $('#editCustomTitle').attr('data-conv'),
                title: $('#editCustomActionVal').val(),
                msg_id: $('#editCustomTitle').attr('msgid'),
                user_id: user_id
            }
            socket.emit('saveLinkTitle', data, function(res) {
                console.log(27537, data.title)
                $('#url_title_' + data.url_id + '').text(data.title);
                findMyLinks(conversation_id);
                closeModal('editCustomTitle');

            })
        } else {

            var data = {
                change_id: urlTitleEditId,
                change_title: $('#editCustomActionVal').val(),
                user_id: user_id,
                type: 'link',
                original_name: $('#titleResetActionBtn').attr('data-original'),
                msg_id: $('#editCustomTitle').attr('msgid')
            }
            socket.emit('customTitle', data, function(res) {
                if (res.status) {
                    customNameStore[data.change_id] = data.change_title;
                    // $('#url_title_' + data.change_id + '').text(data.change_title);
                    $('.conv_nickname_' + data.change_id + '').text(data.change_title);
                }
                closeModal('editCustomTitle');

            })
        }

    } else if (type == 'edit_link_title') {
        var data = {
                url_id: urlTitleEditId,
                title: $('#editCustomActionVal').val(),
                user_id: user_id,
                conversation_id: UrlTitleConvId,
                msg_id: $('#editCustomTitle').attr('msgid')
            }
            // console.log(data)
        socket.emit('updateLinkTitle', data, function(res) {
            if (res.status) {
                customNameStore[data.url_id] = data.title;
                $('#url_title_' + data.url_id + '').text(data.title);
                $('.conv_nickname_' + data.url_id + '').text(data.title);
            }
            closeModal('editCustomTitle');

        });
    } else if (type == 'file_title') {
        if ($('#editCustomActionVal').val().length > 0) {
            var data = {
                change_id: fileTitleEditId,
                change_title: $('#editCustomActionVal').val(),
                user_id: user_id,
                type: 'file',
                original_name: $('#titleResetActionBtn').attr('data-original')
            }
            socket.emit('customTitle', data, function(res) {
                if (res.status) {
                    customNameStore[data.change_id] = data.change_title;
                    if ($('.file_title_' + data.change_id + '').first().attr('data-original') == data.change_title) {
                        $('.file_title_' + data.change_id + '').text(data.change_title);

                    } else {

                        $('.file_title_' + data.change_id + '').text(data.change_title + '(' + $('.file_title_' + data.change_id + '').first().attr('data-original') + ')');
                    }
                    $('.file_title_' + data.change_id + '').attr('data-custom', data.change_title);


                    if ($('.file_cus_title_' + data.change_id + '').first().attr('data-original') == data.change_title) {
                        $('.file_cus_title_' + data.change_id + '').hide();
                    } else {
                        $('.file_cus_title_' + data.change_id + '').text(data.change_title);
                        $('.file_cus_title_' + data.change_id + '').show();
                        $('.file_cus_title_' + data.change_id + '').parent('.cus_title').show();
                        $('.file_cus_title_' + data.change_id).closest('.all-files').find('.for_list_view').removeClass('custitlenop');
                        $('.file_cus_title_' + data.change_id).closest('.all-files').find('.updated_by').removeClass('custitlenod');
                    }
                    $('.file_cus_title_' + data.change_id + '').attr('data-custom', data.change_title);

                }
                closeModal('editCustomTitle');

            })
        }
    } else if (type == 'conv_title') {
        if ($('#editCustomActionVal').val().length > 0) {
            var data = {
                change_id: convTitleEditId,
                change_title: $('#editCustomActionVal').val(),
                user_id: user_id,
                type: 'conv_title',
                original_name: $('#titleResetActionBtn').attr('data-original')
            }
            socket.emit('customTitle', data, function(res) {
                if (res.status) {
                    customNameStore[data.change_id] = data.change_title;
                    $('#update_title_' + data.change_id + '').text(data.change_title);
                    $('.conv_nickname_' + data.change_id + '').text(data.change_title);
                    $('.user_name' + data.change_id + '').text(data.change_title);
                }
                closeModal('editCustomTitle');

            })
        }
    }
}
socket.on('updateLinkTitleSync', function(data) {
    console.log(27537, data.title)
    $('#url_title_' + data.url_id + '').text(data.title);
    findMyLinks(conversation_id);
    closeModal('editCustomTitle');
})
var customNameStore = {};
var customNameStoreQuery = false;
$(function() {
    getAllUserCustomTitle();
    socket.emit('my_all_notification', { user_id: user_id }, function(res) {
        var ured = 0;
        $.each(res.data, function(k, v) {
            if (v.seen_users && v.seen_users.indexOf(user_id) > -1) {
                ured += 1;
            }
        });
        if (parseInt(login_total) !== 0) {
            if (ured > 0) {
                // console.log(23666,ured)
                $('#notificaitonClickItem').find('.unreadMsgCount').text(ured);
            }
        }
    })
})

function getAllUserCustomTitle() {
    var data = {
        user_id: user_id,
        type: 'get'
    }
    socket.emit('customTitle', data, function(res) {
        customNameStoreQuery = true;
        if (res.status) {
            $.each(res.result, function(k, v) {
                customNameStore[v.change_id] = v.change_title;
            });
            changeAllCustomTitle();
        }
    })
}

function changeAllCustomTitle() {
    // console.log(14745,customNameStore);
    if (customNameStoreQuery) {
        for (var key in customNameStore) {
            // console.log(24024,customNameStore[key])
            if (customNameStore.hasOwnProperty(key)) {
                $('.url_title_' + key).html(customNameStore[key]);
                if ($('.file_title_' + key + '').first().attr('data-original') == customNameStore[key]) {
                    $('.file_title_' + key).html(customNameStore[key]);
                } else {
                    $('.file_title_' + key).html(customNameStore[key] + '(' + $('.file_title_' + key + '').first().attr('data-original') + ')');
                }
                $('.file_title_' + key).attr('data-custom', customNameStore[key]);

                if ($('.file_cus_title_' + key + '').first().attr('data-original') == customNameStore[key]) {
                    $('.file_cus_title_' + key).parent('.cus_title').hide();
                } else {
                    $('.file_cus_title_' + key).html(customNameStore[key]);
                    $('.file_cus_title_' + key).parent('.cus_title').show();
                    $('.file_cus_title_' + key).closest('.all-files').find('.for_list_view').removeClass('custitlenop');
                    $('.file_cus_title_' + key).closest('.all-files').find('.updated_by').removeClass('custitlenod');
                }
                $('.file_cus_title_' + key).attr('data-custom', customNameStore[key]);


                $('.conv_nickname_' + key).html(customNameStore[key]);
                $('#update_title_' + key).html(customNameStore[key]);
                $('.user_name' + key).html(customNameStore[key]);
            }
        }
    } else {
        getAllUserCustomTitle();
    }
}

// function changeSingleCusTitle(uniq){
// 	console.log(14703,customNameStore)
// 	return customNameStore[uniq];
// }

function actionCustomTitlekeyup(e, type) {
    if (e.keyCode == 13) {
        e.preventDefault();
        e.stopImmediatePropagation();
        actionCustomTitle(type);
    }
}

var clipboard2 = new Clipboard('#call_copyurl_profilebtn', {
    text: function() {
        return document.querySelector('#callerid_url_profile').textContent;
    }
});

clipboard2.on('success', function(e) {
    $('#warningsPopup .popup_title').text('Alert !');
    $('#warningsPopup .warningMsg').text('URL copied to clipboard.');
    $('#warningsPopup').css('display', 'flex');
    // e.clearSelection();
});


var selectedSp = [];
var setissueUser = () => {
    selectedSp = [];
    $('#issue_service_providerPop').show();
    $('#userListFornewServiceProvider').html('');
    if ($('#issue_req_users').attr('data-id') !== '') {
        selectedSp = $('#issue_req_users').attr('data-id').split(',');
    }
    $.each(user_list, function(k, v) {
        var newCls = '';
        if (selectedSp.indexOf(v.id) > -1) {
            newCls = 'active';
        }

        if (conv_service_provider.indexOf(v.id) !== -1) {
            var html = '<li class="showEl ' + newCls + '" onclick="addasServiceProvider(this,\'' + v.id + '\')">' +
                '<img src="' + file_server + 'profile-pic/Photos/' + v.img + '" class="profile">' +
                '<span class="name s-l-def-clas" data-uuid="' + v.id + '">' + v.fullname + '</span>' +
                '<span class="designation-name">[Service Provider]</span>' +
                '</li>';
            $('#userListFornewServiceProvider').append(html);
        }
    });
    checkActiveClass(selectedSp, '#issue_service_providerPop .sub_btn');
}

function addasServiceProvider(elm, id) {
    if (!$(elm).hasClass('active')) {
        selectedSp.push(id);
        $(elm).addClass('active');
    } else {
        $(elm).removeClass('active');
        removeA(selectedSp, id);
    }
    checkActiveClass(selectedSp, '#issue_service_providerPop .sub_btn');
}

function assignToissueTempp(elm, id) {
    if (!$(elm).hasClass('active')) {
        newAssignMsg.push(id);
        $(elm).addClass('active');
    } else {
        $(elm).removeClass('active');
        removeA(newAssignMsg, id);
    }
    checkActiveClass(newAssignMsg, '#issue_assign_req_Pop .sub_btn');
}

function checkActiveClass(check, selector) {
    $(selector).removeClass('active');
    if (check.length > 0) {
        $(selector).addClass('active');
    }
}

function submitIssueSP() {
    closeModal('issue_service_providerPop');
    var allspanme = [];
    var allSpid = [];
    $.each(user_list, function(k, v) {
        if (selectedSp.indexOf(v.id) > -1) {
            allspanme.push(v.fullname);
            allSpid.push(v.id);
        }
    });

    $('#issue_req_users').attr('data-id', allSpid.join(','));
    $('#issue_req_users').html('[' + allspanme.join(',') + ']');

}

var newAssignMsg = [];
var selecedAssignMsgid = '';
var selecedAssignConvid = '';

function assigntoRequest(convid, msgid) {
    newAssignMsg = [];
    selecedAssignMsgid = msgid;
    selecedAssignConvid = convid;
    $('#issue_assign_req_Pop').show();
    $('#user_list_for_reqAssign').html('');
    if ($('#msgThread_' + msgid).find('.secret_heading').length != 0) {
        var dataId = $('#msgThread_' + msgid).find('.secret_heading').attr('data-id').split(',');
        newAssignMsg = dataId;
    }

    $.each(user_list, function(k, v) {
        if (conv_service_provider.indexOf(v.id) !== -1) {

        }
    });
    var teamid = $("#roomIdDiv").attr('data-keyspace');
    for (var i = 0; i < allteams.length; i++) {
        if (allteams[i].team_id == teamid) {
            $.each(user_list, function(k, v) {
                if (allteams[i].participants.indexOf(v.id) > -1) {
                    // if(v.id !== user_id){
                    var user_name = v.fullname;
                    // if(v.id == user_id){
                    // 	user_name = 'You'
                    // }
                    if (v.is_active !== 0) {
                        var subtitle = 'Member';
                        if (adminArra.indexOf(v.id) > -1) {
                            subtitle = 'Admin';
                        } else if (conv_service_provider.indexOf(v.id) > -1) {
                            subtitle = 'Service Provider';
                        }
                        var activeClass = '';
                        if (newAssignMsg.indexOf(v.id) > -1) {
                            activeClass = 'active';
                        }
                        var html = '<li class="showEl ' + activeClass + '" onclick="assignToissueTempp(this,\'' + v.id + '\')">' +
                            '<img src="' + file_server + 'profile-pic/Photos/' + v.img + '" class="profile">' +
                            '<span class="name s-l-def-clas" data-uuid="' + v.id + '">' + user_name + '</span>'

                        +'<span class="designation-name">[' + subtitle + ']</span>' +
                            '</li>';
                        $('#user_list_for_reqAssign').append(html);
                    }
                    // }
                }
            })
        }
    }
    checkActiveClass(newAssignMsg, '#issue_assign_req_Pop .sub_btn');
}

function submitAndAssign() {
    socket.emit('issueAssignMsg', { msg_id: selecedAssignMsgid, conversation_id: selecedAssignConvid, assign_to: newAssignMsg, created_at: moment().format() }, function(res) {
        // console.log(res)
        closeModal('issue_assign_req_Pop');
        // var design = '<span class="secret_heading" data-id="'+newAssignMsg.join(',')+'">Assign to ';
        // $.each(newAssignMsg,function(k,v){
        // 	if(k == 0){
        // 		design += '<span> '+findObjForUser(v).fullname+' </span>';
        // 	}else{
        // 		if(newAssignMsg.length == (k+1)){
        // 			design += ' & <span>'+findObjForUser(v).fullname+' </span>';
        // 		}else{
        // 			design += '<span>, '+findObjForUser(v).fullname+' </span>';
        // 		}
        // 	}
        // })
        // design += '</span>';

        // $('._assign_to_'+selecedAssignMsgid).html('&nbsp;'+design);
        $('#msgThread_' + selecedAssignMsgid).remove();
    })
}

socket.on('issueAssignMsg', function(data) {
    var design = '<span class="secret_heading" data-id="' + data.assign_to.join(',') + '">Assign to ';
    $.each(data.assign_to, function(k, v) {
        if (k == 0) {
            design += '<span> ' + findObjForUser(v).fullname + ' </span>';
        } else {
            if (data.assign_to.length == (k + 1)) {
                design += ' & <span>' + findObjForUser(v).fullname + ' </span>';
            } else {
                design += '<span>, ' + findObjForUser(v).fullname + ' </span>';
            }
        }
    })
    design += '</span>';

    $('._assign_to_' + data.msg_id).html('&nbsp;' + design);
    $('#msgThread_' + data.msg_id).find('.assignBtn').html('Update Assign');
    // $('#msgThread_'+data.msg_id).find('.assignBtn').remove();
})

function checkguestUserelement() {
    if (has_permission(user_id, GUEST)) {
        $('body').addClass('guest_user');
    } else {
        $('body').removeClass('guest_user');
    }
}
var escToClose = '';
$('body').on('keyup', function(e) {
    if (e.keyCode == 27) {
        closeMyImgViewer();
        if ($('#mediaFilePreview').is(':visible')) {
            closeMediaPopup();
            return false
        }
        console.log('after console');
        // console.log(20853,$('#threadReplyPopUp').is(':visible'));
        // console.log(20854,$('.msgs-form-users #msgCheckItemContainer').is(':visible'))
        if ($('.msgs-form-users #msgCheckItemContainer').is(':visible')) {
            e.preventDefault();
            e.stopImmediatePropagation();
            if ($('#threadReplyPopUp').is(':visible')) {
                e.preventDefault();
                e.stopImmediatePropagation();
                closeAllPopUp();
            } else {
                if ($('#dueDatePickerChecklist').is(':visible')) {
                    closeModal('dueDatePickerChecklist');
                } else {
                    if ($('.filterBy_popup').is(':visible')) {
                        $('.filter_by').removeClass('active');
                        $('.filterBy_popup').hide();
                    } else {
                        $('.msgs-form-users #msgCheckItemContainer').parent('.editMessageBody').find('.editMessageAction .saveBtn.BtoC').trigger('click');
                    }
                }
            }
        } else {
            if ($('#threadReplyPopUp').is(':visible')) {
                e.preventDefault();
                e.stopImmediatePropagation();
                closeAllPopUp();
            } else {
                if ($('#NotificationContainer').is(':visible')) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    return false;
                }
                if (escToClose != '') {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    $(escToClose).trigger('click');
                    escToClose = '';
                } else if ($('#checkListCounter').hasClass('active')) {
                    viewChecklistMsg();
                    $('#conv' + conversation_id).click();
                } else if ($('.threadasideContainer').is(':visible') || $('#connectAsideContainer .backToChat').is(':visible')) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    backToChat();
                } else if ($('.connect_right_section').is(':visible')) {
                    closeRightSection();
                } else if ($('#myModalImgview').is(':visible')) {
                    $('#myModalImgview').hide();
                }
            }
        }

        if ($('.checklistFilterPopup').is(':visible')) {
            $('.checklistFilterPopup').hide();
        }
        var src_filter = $('.src_total_msg_content');
        if (src_filter.is(':visible')) {
            $('.dropbtn').removeClass('rotate');
            src_filter.hide();
        }
        if ($('#changePwdPopup').is(':visible')) {
            $('#changePwdPopup').hide();
            $('#old_password').val('');
            $('#new_password').val('');
            $('#con_password').val('');
        }

        if ($('.intercom-composer-emoji-popover').hasClass('active')) {
            $('.intercom-composer-emoji-popover').removeClass('active')
        }
    } else {
        if ($(e.target).attr('id') == 'requestNote') {
            var olddate = $('#TaskDatePicker').attr('old-date');
            var newdate = $('#TaskDatePicker').val();
            if ($(e.target).val() != '' && olddate != newdate) {
                $('#checklistRequestBtn .buttonAction').removeAttr('disabled');
            } else {
                if (!$('#dueDatePickerChecklist .hayven_Modal_Container').hasClass('request_review_open')) {
                    $('#checklistRequestBtn .buttonAction').attr('disabled', 'disabled');
                }
            }
        } else if ($(e.target).attr('id') == 'declineNote') {
            if ($(e.target).val() != '') {
                $('#decline_btn_sec .decline_btn_sec').removeAttr('disabled');
            } else {
                $('#decline_btn_sec .decline_btn_sec').attr('disabled', 'disabled');
            }
        }
    }
})

var activeFlagFilterConv = '';

function filter_flag(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
    if ($("#filterFlagged_msg_2").hasClass('activeComFilter')) {
        $('#filterFlagged_msg_2').removeClass('activeComFilter');
        // console.log(18565,'removeFilter')
        removeA(allFilteredItem, 'flag');
        activeFlagFilterConv = '';
        showFreeliToaster(false);
    } else {
        $('#filterFlagged_msg_2').addClass('activeComFilter');
        allFilteredItem.push('flag');
        activeFlagFilterConv = conversation_id;
        var msg = 'Showing flagged messages(s) from this channel. Click the close button to go back.';
        showFreeliToaster(true, msg);
        $('#workFreeliToaster').attr('data-id', 'flagged_msg');
    }
    $('#conv' + conversation_id).removeClass('sideActive');
    $('#conv' + conversation_id).trigger('click');
    $('.filterListPopup').hide();

}

function filter_OR_operation(e, type) {


    if ($('.threadasideContainer').is(':visible') || $('#unreadMsgFBar').is(':visible')) {
        backToChat(false);
    }
    var allconvitem = $('.side_bar_list_item li');
    $.each(allconvitem, function(k, v) {
        var conv_id = $(v).attr('data-conversationid');
        if (conv_id != undefined && conv_id != '') {
            if (allConvIdforFilter.indexOf(conv_id) == -1) {
                allConvIdforFilter.push(conv_id);
            }
        }

    })

    if (type == 'tag') {
        var tag_id = $(event.target).attr('tag-id');
        if ($(event.target).hasClass('active')) {
            $(event.target).removeClass('active');
            removeA(allFilteredItem, tag_id);
            $('#c_tag_item_' + tag_id + '').remove();
        } else {
            $(event.target).addClass('active');
            allFilteredItem.push(tag_id);
            var tag_name = $('.filter_tag_' + tag_id).first().text();
            var design = '<div class="tag_item" id="c_tag_item_' + tag_id + '"><img src="/images/basicAssets/activeSvg/tagActive.svg" class="flagged"><p>' + tag_name + '</p><img onclick="removeUserTagFilter(\'' + tag_id + '\')" src="/images/basicAssets/Close.svg"></div>';
            if ($('#c_tag_item_' + tag_id + '').length == 0) {
                $('#connectAsideContainer').find('.tagg_list').append(design);
            }
        }
    } else if (type == 'flag') {
        if ($(e.target).hasClass('activeComFilter')) {
            if ($(e.target).attr('id') != '_flaggedList') {
                $('.filterFlagged_msg').removeClass('activeComFilter');
                removeA(allFilteredItem, 'flag');
                $('#flagPanelContainer').hide();
            }
            // $('#c_flag_ed').remove();
        } else {
            $('.side_bar_list_item li.sideActive').removeClass('sideActive').removeClass('selected');
            if($('#activityPanelContainer').is(':visible')){
                $('#activityPanelContainer').hide();
            }
            $('#flagPanelContainer').show();
            $('.filterFlagged_msg').addClass('activeComFilter');
            $('#workFreeliToaster').hide();
            $('.allSearchInput').val('');
            allFilteredItem.push('flag');
            $('#allSearchInput').focus();
            $('#flagMsgContainer').attr('data-search', false);
            findMyLinks();
            closeMediaPopup();
            // var design = '<div class="tag_item" id="c_flag_ed"><img src="/images/basicAssets/Flagged.svg" class="flagged"><p>Flagged</p><img onclick="removeFlagFilter(\'c_flag_ed\')" src="/images/basicAssets/Close.svg"></div>';
            // if ($('#c_flag_ed').length == 0) {
            //     $('#connectAsideContainer').find('.tagg_list').append(design);
            // }
        }
    } else if (type == 'checklist') {

        if ($(event.target).hasClass('activeComFilter')) {
            $(event.target).removeClass('activeComFilter');
            if ($(event.target).attr('id') == 'filterOnly_pending_Checklist') {
                removeA(allFilteredItem, 'pending_checklist');
                $('#f_checklist_pending').remove();
                if ($('#f_checklist').length == 1 && !$('#f_checklist').is(':visible')) {
                    $('#f_checklist').remove();
                    removeA(allFilteredItem, 'checklist');
                }
            } else if ($(event.target).attr('id') == 'filterFlagged_checklist') {
                removeA(allFilteredItem, 'flagged_checklist');
            } else if ($(event.target).attr('id') == 'filterChecklist_msg') {
                if ($('#f_checklist_pending').is(':visible')) {
                    $('#f_checklist').hide();
                } else {
                    removeA(allFilteredItem, 'checklist');
                    $('#f_checklist').remove();
                }
                // removeA(allFilteredItem,'pending_checklist');
                // removeA(allFilteredItem,'flagged_checklist');
                // removeA(allFilteredItem,'checklist');
                // $('#filterOnly_pending_Checklist').removeClass('activeComFilter');
                // $('#filterFlagged_checklist').removeClass('activeComFilter');
                // $('#f_checklist').remove();
                // $('#f_checklist_pending').remove();
                // $('#f_checklist_flagged').remove();
            }

        } else {

            $(event.target).addClass('activeComFilter');
            // if(!$('#filterChecklist_msg').hasClass('activeComFilter')){
            // 	$('#filterChecklist_msg').addClass('activeComFilter')
            // }
            allFilteredItem.push('checklist');
            if ($(event.target).attr('id') == 'filterOnly_pending_Checklist') {
                if ($('#f_checklist_pending').length == 0) {
                    var design = '<div class="tag_item" id="f_checklist_pending"><img src="/images/flaticon/completeChecklist.svg" class="flagged"><p>Pending Checklist</p><img onclick="removeFlagFilter(\'f_checklist_pending\')" src="/images/basicAssets/Close.svg"></div>';
                    $('#connectAsideContainer').find('.tagg_list').append(design);
                }
                allFilteredItem.push('pending_checklist');
            } else if ($(event.target).attr('id') == 'filterFlagged_checklist') {
                if ($('#f_checklist_flagged').length == 0) {
                    var design = '<div class="tag_item" id="f_checklist_flagged"><img src="/images/basicAssets/Flagged.svg" class="flagged"><p>Flagged Checklist</p><img onclick="removeFlagFilter(\'f_checklist_flagged\')" src="/images/basicAssets/Close.svg"></div>';
                    $('#connectAsideContainer').find('.tagg_list').append(design);
                }
                allFilteredItem.push('flagged_checklist');
            }

            // var design = '<div class="tag_item" id="f_checklist"><img src="/images/flaticon/completeChecklist.svg" class="flagged"><p>Checklist</p><img onclick="removeFlagFilter(\'f_checklist\')" src="/images/basicAssets/Close.svg"></div>';
            if ($('#f_checklist').length == 0) {
                var showornot = false;
                if ($(event.target).attr('id') == 'filterChecklist_msg') {
                    showornot = true;
                }
                var design = '<div class="tag_item" id="f_checklist" style="' + ((!showornot) ? 'display:none' : '') + '"><img src="/images/flaticon/completeChecklist.svg" class="flagged"><p>Checklist</p><img onclick="removeFlagFilter(\'f_checklist\')" src="/images/basicAssets/Close.svg"></div>';

                $('#connectAsideContainer').find('.tagg_list').append(design);
            } else {
                if ($(event.target).attr('id') == 'filterChecklist_msg') {
                    $('#f_checklist').show();
                }

            }

        }
    }
    if (allFilteredItem.length > 0) {
        if (allFilteredItem.indexOf('flag') == -1) {}
        $('#connectAsideContainer').find('.tagg_list').show();
        $('#connectAsideContainer').find('.backToChat').show();
    } else {
        $('#connectAsideContainer').find('.tagg_list').hide();
        $('#connectAsideContainer').find('.backToChat').hide();
    }
    filterConversationLastT();
    searchFilter();

}


function filterConversationLastT() {
    if (allFilteredItem.length > 0) {
        if (!$('body').hasClass('filtered_msg')) {
            $('body').addClass('filtered_msg')
        }
        $('#connectAsideContainer').find('.tagg_list').show();
        socket.emit('Filter_Conv_Last_Time', { company_id: company_id, conversation_list: allConvIdforFilter, allFilteredItem: allFilteredItem, user_id: user_id }, function(res) {
            if (res.status) {
                console.log(res.data);
                var active = false;
                $('#flagMsgContainer').html('');

                $.each(res.data.conv_data, function(k, v) {
                    if(res.data.callBackconversation.indexOf(v.conversation_id.toString()) > -1){
                        var html = '<div class="convMsgGroup">' +
                            '   <div class="convSeparetor">' +
                            '      <span onclick="collapseMsgPanel(this)" class="convSeparetor_name">' + get_conversation_obj(v.conversation_id.toString()).conversation_title + '</span>' +
                            '   </div>' +
                            '   <div class="convMsgContainer" id="flagConvList' + v.conversation_id.toString() + '">' +
                            '   Msg will be draw here.' +
                            '   </div>' +
                            '</div>';
                        $('#flagMsgContainer').append(html);
                        $('#flagConvList' + v.conversation_id.toString()).html('');

                        $.each(res.data.callBackmsg, function(ka, m) {
                            if (v.conversation_id.toString() == m.conversation_id.toString()) {
                                var checklistItem = [];
                                $.each(res.data.checklist, function(ki,vi){
                                    if (m.msg_id == vi.msg_id) {
                                        checklistItem.push(vi);
                                        m.checklist = checklistItem;
                                    }
                                });

                                $('#flagConvList' + m.conversation_id).prepend(draw_msg(m, false, false, true));
                                taskItemCounter(m.msg_id);
                            }
                        });
                    }
                });

            }
        })
        // countAndGetchecklist();
    } else {
        $('#connectAsideContainer').find('.tagg_list').hide();
        $.each(allConvIdforFilter, function(k, v) {
            $('#conv' + v).show();
        });
        var conv_id = $('.side_bar_list_item li.sideActive').attr('data-conversationid');
        var lastActive = $('#lastActive').val();
        // console.log(lastActive);
        allSearchInputClear()
        $('#conv' + lastActive).removeClass('sideActive');
        $('#conv' + lastActive).trigger('click');
        $('body').removeClass('filtered_msg');
    }
}

function collapseMsgPanel(el) {
    if ($(el).parents('.convMsgGroup').hasClass('collapsed')) {
        $(el).parents('.convMsgGroup').removeClass('collapsed');
    } else {
        $(el).parents('.convMsgGroup').addClass('collapsed');
    }
}

function media_view_change(type) {
    if (type == 'grid') {
        $('#mediaFilePreview .media-tab-body').removeClass('list_view').addClass('grid_view');

        $.each($('#mediaVideos .all-videos'), function(k, v) {
            $(v).attr('view-type', 'grid');
        });
    } else {
        $.each($('#mediaVideos .all-videos'), function(k, v) {
            $(v).attr('view-type', 'list');
        });
        if (!$('#mediaFilePreview .media-tab-body').hasClass('list_view')) {
            $('#mediaFilePreview .media-tab-body').removeClass('grid_view').addClass('list_view');
        }
    }
}

function seenUnreadNotification() {
    var allUnreadNoti = $('#notification_body').find('.unreadNoti');

    var allid = [];
    $.each(allUnreadNoti, function(k, v) {
        var id = $(v).attr('data-notification');
        if (allid.indexOf(id) == -1) {
            allid.push(id);
        }
    });

    if (allid.length > 0) {
        socket.emit('update_notification', { user_id: user_id, noti_ids: allid, type: 'room_delete', update_type: 'seen' });
    }
}

function removeUnreadNoti(elm) {
    if ($(elm).hasClass('unreadNoti')) {
        $(elm).removeClass('unreadNoti');
    }
}

function notiRemoveForMe(elm) {
    var noti_id = $(elm).attr('data-noti');
    socket.emit('update_notification', { user_id: user_id, noti_id: noti_id, type: 'room_delete', update_type: 'delete' });
    $('#noti_id_' + noti_id).remove();
}

var threadTriggerd = false;
var secretTriggerd = false;

function threadChatOnly(elm) {
    // debugger
    $('#privateChatsOnly').removeClass('active'); $('#msg-container').attr('has-private','false');
    $('.moreMenuPopup').hide();
    $('.filterListPopup').hide();
    if ($(elm).hasClass('active')) {
        threadTriggerd = false;
        $(elm).removeClass('active');
        $('#conv' + conversation_id).removeClass('sideActive').trigger('click');
        $('#workFreeliToaster').attr('data-id', '');
        showFreeliToaster(false);
        $('#groupChatContainer').removeClass('filterActive');
    } else {
        if ($('#filterFlagged_msg_2').hasClass('activeComFilter')) {
            $('#filterFlagged_msg_2').removeClass('activeComFilter')
            threadTriggerd = false;
            $('#workFreeliToaster').attr('data-id', '');
            showFreeliToaster(false);
        }
        threadTriggerd = true;
        $(elm).addClass('active');
        $('#conv' + conversation_id).removeClass('sideActive').trigger('click');
        var msg = `Showing thread messages(s) from this channel. Click the close button to go back.`;
        showFreeliToaster(true, msg);
        $('#groupChatContainer').addClass('filterActive');
        $('#workFreeliToaster').attr('data-id', 'threadChatsOnly')
    }
}

function privateChatsOnly(elm) {
    $('#callNotifications').removeClass('active');
    $('#threadChatsOnly').removeClass('active');
    $('.moreMenuPopup').hide();
    $('.filterListPopup').hide();
    // debugger
    if ($(elm).hasClass('active')) {
        secretTriggerd = false;
        $('#privateChatsOnly').removeClass('active'); $('#msg-container').attr('has-private','false');
        $('#conv' + conversation_id).removeClass('sideActive').trigger('click');
        $('#workFreeliToaster').attr('data-id', '');
        showFreeliToaster(false);
        $('#groupChatContainer').removeClass('filterActive');

    } else {
        if ($('#filterFlagged_msg_2').hasClass('activeComFilter')) {
            $('#filterFlagged_msg_2').removeClass('activeComFilter')
            secretTriggerd = false;
            $('#workFreeliToaster').attr('data-id', '');
            showFreeliToaster(false);
        }
        secretTriggerd = true;
        $('#privateChatsOnly').addClass('active'); $('#msg-container').attr('has-private','true');
        // $('#msg-container').find('.msgs-form-users').hide();
        $('#conv' + conversation_id).removeClass('sideActive').trigger('click');
        // $('#msg-container').find('.secret_message_found').show();
        // cleanup_msg_separetor();
        var msg = `Showing private messages(s) from this channel. Click the close button to go back.`;
        showFreeliToaster(true, msg);
        $('#groupChatContainer').addClass('filterActive');
        $('#workFreeliToaster').attr('data-id', 'privateChatsOnly')

    }
}

function cleanup_msg_separetor() {
    $('#msg-container').find('.msg-separetor').each(function() {
        if ($('#msg-container').find('.msgs-form-users[data-format="' + $(this).attr('data-format') + '"]:visible').length) {
            $(this).show();
        } else {
            $(this).hide();
        }

    });

}

function showFreeliToaster(showORhide, msg) {
    // //debugger
    var type = $('#workFreeliToaster').attr('data-id');
    // console.log(999, type);
    if (showORhide) {
        $('#workFreeliToaster').css('display', 'block');
        $('#workFreeliToaster .msg_toaster').html(msg);
    } else {
        // $('#privateChatsOnly').removeClass('active');
        $('#workFreeliToaster').hide();
        $('#groupChatContainer').removeClass('filterActive');
        if (allFilteredItem.indexOf('flag') > -1 && $('#filterFlagged_msg_2').hasClass('activeComFilter')) {
            $('#filterFlagged_msg_2').trigger('click');
        } else {
            // console.log(28598, type)
            if (type == 'threadChatsOnly') {
                // if ($('#threadChatsOnly').hasClass('active')) {
                threadTriggerd = false;
                $('#threadChatsOnly').removeClass('active');
                $('#workFreeliToaster').attr('data-id', '');
                // console.log(18825,'removeFilter')
                removeA(allFilteredItem, 'flag');
                $('#conv' + conversation_id).removeClass('sideActive').trigger('click');
                // }
            } else if (type == 'privateChatsOnly') {
                // if ($('#privateChatsOnly').hasClass('active')) {
                secretTriggerd = false;
                $('#privateChatsOnly').removeClass('active'); $('#msg-container').attr('has-private','false');
                $('#workFreeliToaster').attr('data-id', '');
                // console.log(18825,'removeFilter')
                removeA(allFilteredItem, 'flag');
                console.log(28598, conversation_id)
                $('#conv' + conversation_id).removeClass('sideActive').trigger('click');
                // }
            } else if (type == 'flagged_msg') {

                // console.log(25540)
                if ($('#filterFlagged_msg_2').hasClass('activeComFilter')) {
                    $('#filterFlagged_msg_2').trigger('click');
                }
                // $('#conv'+conversation_id).removeClass('sideActive').trigger('click');
            } else if (type == 'viewFileThreadId') {
                $('#threadReplyPopUp').removeClass('fileActive');
                $('#workFreeliToaster').attr('data-id', '');
                showFreeliToaster(false);
            } else if (type == 'filterOnlyTagMsgATrigger') {
                $('#workFreeliToaster').attr('data-id', '');
                filterOnlyTagMsgATrigger = false;
                filterOnlyTagMsgA = [];
                $('.conv_tagOptions').hide();
                $('#conv' + conversation_id).trigger('click');
                hideSearchForHead();
            } else if (type == 'checklist_msg') {
                // console.log('Checklist Should be close')
                // $('#conv'+conversation_id).click();
                // $('#conv'+conversation_id).trigger('click');
                // return;
            } else if (type == 'link') {
                $('#conv' + conversation_id).click();
            }

        }


    }
}

socket.on('updateRoomPartBroad', function(res) {
    if (res.participants.indexOf(user_id) != -1) {
        if ($('#conv' + res.conversation_id).length == 0) {
            socket.emit('get_one_room_data', { company_id: res.company_id, conversation_id: res.conversation_id }, function(respons) {
                if (respons.status) {
                    if (!$('#conv' + res.conversation_id).is(':visible')) {
                        $('#conversation_list_sidebar').prepend(sidebarLiItem(respons.data));
                        if (respons.data.root_conv_id != null && !$('#conv' + respons.data.root_conv_id).is(':visible')) {
                            socket.emit('get_one_room_data', { company_id: res.company_id, conversation_id: respons.data.root_conv_id }, function(respons2) {
                                if (respons2.status) {
                                    $('#conversation_list_sidebar').prepend(sidebarLiItem(respons2.data));
                                }
                            });
                        }
                    }
                }
            })
        } else if ($('#conv' + res.conversation_id).hasClass('sideActive')) {
            $('#totalMember').text((res.participants.length - (res.participants_sub == null ? 0 : res.participants_sub.length)));
            participants = res.participants;
        }
    }
})


var sidebarLiItem = (data) => {
    // console.log(16674,data.root_conv_id);
    var groupornot = ((data.group == 'yes') ? 'group' : 'single')
    var subconvhide = data.root_conv_id != null ? 'itssubconvhide' : '';
    // console.log(16677, subconvhide);
    var html = '<li onclick="start_conversation(event)" data-privacy="' + data.privacy + '" data-status="active" data-mute="unmute" data-pin="unpin" data-cnv-type="' + groupornot + '" data-octr="" data-nom="" data-myid="' + user_id + '" data-createdby="' + data.created_by + '" data-nor="0" data-id="' + data.conversation_id + '" data-tm="' + data.participants.length + '" data-subtitle="' + data.group_keyspace + '" data-conversationtype="' + groupornot + '" data-conversationid="' + data.conversation_id + '" data-root_conv_id="' + data.root_conv_id + '" data-name="' + data.title + '" data-img="' + data.conv_img + '" id="conv' + data.conversation_id + '" class="' + subconvhide + '">';
    if (groupornot == 'group') {
        if (data.privacy == 'private') {
            html += '<span class=" lock" style="left: 12px;"></span>';
        } else {
            html += '<span class=" hash" style="left: 12px;"></span>';
        }
    } else {
        html += '<span class=" online_' + data.conversation_id + '" style="left: 12px;"></span>';
    }

    html += '<span class=" usersName">';

    html += '<span class="conv_nickname_' + data.conversation_id + '">' + data.title + '</span>';
    html += '</span>';
    html += '<span class="subroomunread"></span><span class=" unreadMsgCount"></span>';
    html += '</li>';

    return html;
}

function triggerView(ele) {
    var type = $(ele).siblings('.per_img_hover_opt').find('.img_action.view_ico').attr('file-type');
    if (type == 'pdf') {
        window.open($(ele).parents('.fil_attach.attach-file').attr('data-src'), '_blank');
    }
    $(ele).siblings('.per_img_hover_opt').find('.img_action.view_ico').trigger('click');
}

function show_hide_conv_i(e, elm) {
    var cursor = $(e.target).offset();
    // console.log(cursor);
    var top = cursor.top - 160;
    var left = cursor.left;
    if ($('.i-conv-popup').is(':visible')) {
        $('.i-conv-popup').fadeIn("slow").hide();
        $('.i-conv').removeClass('active');
    } else {
        $('.i-conv').addClass('active');
        $('.i-conv-popup').fadeOut("slow").css("top", top).show();
    }
}
$('body').on('keyup', '#customTimerMuinutes', function(event) {
    if ($(this).val() < 0) {
        $(this).val(0);
    }
})
var checklistRepText = null;

function openThreadForCheckI(event, elm) {
    event.preventDefault();
    event.stopImmediatePropagation();
    var cid = $(elm).parents('.checkListItem').attr('checklist-id');
    var mid = $(elm).parents('.checkListItem').attr('msg_id');
    var t = $(elm).parents('.checkListItem').find('.checkBoxTitle').attr('data-title');
    // console.log(17137,t);
    checklistRepText = t;
    $('#msgThread_' + mid).find('.msgs-form-users-options .replys:first').click();
}


///////////////
// function mentionuserFun(div,e){
// 	var i = window.getSelection().getRangeAt(0).startOffset - 1;
// 	var text = $(div).text();
// 	var cktext = text.charAt(i);
// 	if(i != -1){
// 		if(cktext == '@'){
// 			if(i == 0){
// 				searchMsgUser = true;
// 				mentionUser_ListView = '@';
// 				mention_div_action('show');
//
// 			}else {
// 				console.log(15669,text.charAt(i - 1));
// 				if((text.charAt(i - 1)) == ' '){
// 					console.log('showmention')
// 					searchMsgUser = true;
// 					mentionUser_ListView = '@';
// 					mention_div_action('show');
//
// 				}
// 			}
// 		}else if(cktext == '!@'){
// 			if(i == 0){
// 				searchMsgUser = true;
// 				mentionUser_ListView = '!@';
// 				mention_div_action('show');
//
// 			}else {
// 				console.log(15669,text.charAt(i - 1));
// 				if((text.charAt(i - 1)) == ' '){
// 					console.log('showmention')
// 					searchMsgUser = true;
// 					mentionUser_ListView = '!@';
// 					mention_div_action('show');
//
// 				}
// 			}
// 		}
// 	}


var mentionisActive = false;
var firstIndexOfMention = 0;
var lastIndexOfMention = 0;
var mentionFor = '';

function keyupfunction(e) {
    var mentioncheck = checkMenOrNot(e, nameArry);
    if (mentioncheck) {
        if (mentioncheck.check == '@') {
            mentionFor = '@';
        } else {
            mentionFor = '!@';
        }
        if (mentioncheck.last_t != '@' && mentioncheck.last_t != '!@') {
            if (!mentionisActive) {
                mentionisActive = true;
                draw_mention_design('#mention_user_list', true, nameArry);
            } else {
                searchMentionFun(e, '#mention_user_list', '.mention_user');
            }
        } else {
            mentionisActive = true;
            draw_mention_design('#mention_user_list', true, nameArry);
        }
    } else {
        mentionFor = '';
        draw_mention_design('#mention_user_list', false, nameArry);
        mentionisActive = false;
    }
}
var nameArry = [];
var nameArryid = [];
var nameArryimg = [];
var brUsedlast = false;

function isBr(el) {
    return el && el.nodeType == 1 && el.tagName == "BR";
}

function isWhitespaceNode(node) {
    if (node !== null)
        return node.nodeType == 3 && /^\s*$/.test(node.data);
}

function isFirstOrLastChildBr(el) {
    var first = el.firstChild;
    if (isWhitespaceNode(first)) first = first.nextSibling;
    if (isBr(first)) return true;

    var last = el.lastChild;
    if (isWhitespaceNode(last)) last = last.previousSibling;
    if (isBr(last)) return true;

    return false;
}

function checkMenOrNot(e, user_array, usedoption) {
    var i = window.getSelection().getRangeAt(0).startOffset - 1;
    lastIndexOfMention = i;
    var t = $(e.target).text();
    var el = document.getElementById($(e.target).attr('id'));
    var brtruee = isFirstOrLastChildBr(el);
    if (brtruee) {
        brUsedlast = true;
    }
    i = (getSelectionCharacterOffsetWithin(el).end - 1);
    if (conversation_type == 'group') {
        // console.log(19527,t[i - 1]);
        if (t[i] == '@') {
            if (i == 0) {
                firstIndexOfMention = i;
                return { index: i, text: t[i], check: '@', last_t: t.charAt(i) }
            } else if (t[i - 1] == ' ' || t.charCodeAt(i - 1) == 160 || t.charCodeAt(i - 1) == 32 || brUsedlast == true) {
                firstIndexOfMention = i;
                return { index: i, text: t[i], check: '@', last_t: t.charAt(i) }
            } else {
                if (usedoption == 'both') {
                    if (t[i - 1] == '!') {
                        firstIndexOfMention = i;
                        return { index: i, text: t[i], check: '!@', last_t: t.charAt(i) }
                    }
                }

            }
        } else {
            var c = 0;
            var check = '@';
            if (firstIndexOfMention != 0) {
                if (t.charAt(firstIndexOfMention - 1) == '!') {
                    check = '!@'
                }
            }
            if (lastIndexOfMention != firstIndexOfMention && lastIndexOfMention > firstIndexOfMention) {
                if (check == '@') {
                    var str = t.substring((firstIndexOfMention + 1), lastIndexOfMention);
                } else {
                    var str = t.substring((firstIndexOfMention + 2), lastIndexOfMention);
                }
                $.each(user_array, function(k, v) {
                    if (v.toLowerCase().indexOf(str.toLowerCase()) > -1) {
                        c += 1;
                    }
                });
            }
            if (c != 0) {
                return { index: i, text: t[i], check: check, last_t: t.charAt(i) };
            } else {
                brtruee = false;
                return false;
            }
        }
    } else {
        brtruee = false;
        return false;
    }
}

function draw_mention_design(div, status, user_array, main) {
    // //debugger;
    $(div).html('');
    $(div).find('.removePop').remove();
    $(div).prepend('<span class="removePop" onclick="mention_div_action(\'hide\');"></span>');
    if (status) {
        var personalUser = []
        var secretUserList = 'secretUserList';

        if (main == 'msg_rep') {
            secretUserList = 'secretUserList_rep';
        } else {
            secretUserList = 'secretUserList';
        }
        if ($('#' + secretUserList).find('.secret_heading').length > 0) {
            personalUser = $('#' + secretUserList).find('.secret_heading').attr('data-id').split(',');
        }



        $.each(user_array, function(k, v) {
            console.log(29455,v)
            if (mentionFor == '!@') {
                if (nameArryid[k] != user_id) {
                    var activeClass = '';
                    if (personalUser.indexOf(nameArryid[k]) > -1) {
                        activeClass = 'removeIcon';
                    }
                    var design = '<div class="mention_user ' + activeClass + '" msg-div="' + main + '" user-i="' + k + '" onclick="addThisMen(this)" user-name="' + v + '" main-div="' + div + '" >' +
                        '<img src="' + file_server + 'profile-pic/Photos/' + nameArryimg[k] + '" alt="">' +
                        '<div class="name">' + v + '</div>' +
                        '</div>';
                    $(div).append(design);
                    $(div).show();
                }
            } else {
                var design = '<div class="mention_user" msg-div="' + main + '" user-i="' + k + '" onclick="addThisMen(this)" user-name="' + v + '" main-div="' + div + '" >' +
                    '<img src="' + file_server + 'profile-pic/Photos/' + nameArryimg[k] + '" alt="">' +
                    '<div class="name">' + v + '</div>' +
                    '</div>';
                $(div).append(design);
                $(div).show();
            }

        });
        if (mentionFor == '@') {
            var design = '<div class="mention_user everyOneClass" msg-div="' + main + '" user-i="everyOne" onclick="addThisMen(this)" user-name="Everyone" main-div="' + div + '" >' +
                '<img src="' + file_server + 'common/arroba-sign.svg" alt="">' +
                '<div class="name">Everyone</div>' +
                '</div>';
            $(div).prepend(design);
            $(div).show();
        }
        $(div).find('.mention_user').removeClass('selected');
        $(div).find('.mention_user').first().addClass('selected');
    } else {
        $(div).hide();
        // brUsedlast = false;
    }

}


function addThisMen(elm) {
    var name = $(elm).attr('user-name');
    var div = $(elm).attr('msg-div');
    var main = $(elm).attr('main-div');
    if (name == 'Everyone') {
        $('.write-msgs .mention_user_msg').remove();
    }
    var str = document.getElementById(div).innerHTML;
    var text = $('#' + div).text();

    var useri = $(elm).attr('user-i')
    if (mentionFor == '!@') {
        // console.log(nameArryid[useri])
        var res = str.slice(0, str.lastIndexOf("!@"));

        document.getElementById(div).innerHTML = res;
        var id = nameArryid[useri];
        var personalUser = [];
        //
        var secretDiv = 'secretUserList';
        if (div == 'msg_rep') {
            secretDiv = 'secretUserList_rep';
        }

        if ($('#' + secretDiv).find('.secret_heading').length > 0) {
            personalUser = $('#' + secretDiv).find('.secret_heading').attr('data-id').split(',');
            if (personalUser.indexOf(id) > -1) {
                removeA(personalUser, id);
            } else {
                personalUser.push(nameArryid[useri]);
            }
            $('#' + div).text().trim();
            $('#' + secretDiv).find('.secret_heading').attr('data-id', personalUser.join(','))
        } else {
            var design = '<span onclick="viewmention_div_action()" class="secret_heading hideaftersent" contenteditable="false" style="cursor:pointer" spellcheck="false" data-id="' + id + '"><span class="">Private message to: ' + name + '</span><span class="removeSecretUser" onclick="removeSecretUsers(event)"></span></span>';
            // console.log(17865,design)
            $('#' + div).text().trim();
            $('#' + secretDiv).find('.secret_heading.hideaftersent').remove();
            $('#' + secretDiv).prepend(design);
        }

        draw_mention_design(main, false, nameArry, div);
        placeCaretAtEnd(document.getElementById(div));
        privateMsgTo(div, secretDiv);
    } else {
        // console.log(name);
        var res = str.slice(0, str.lastIndexOf("@"));
        document.getElementById(div).innerHTML = res;
        $('#' + div).text().trim();
        var html = '<div onclick="actionMentionUser(event,\'' + nameArryid[useri] + '\')" data-id="' + nameArryid[useri] + '" class="mention_user_msg solid_mention"  data-mention="' + '@' + name + '"></div>&nbsp;'
        $('#' + div).append(html);
        draw_mention_design(main, false, nameArry, div);
        placeCaretAtEnd(document.getElementById(div));


    }

}

function searchMentionFun(e, div, item) {
    var t = $(e.target).text();
    var check = '@';
    if (check == '@') {
        var str = t.substring((firstIndexOfMention + 1), lastIndexOfMention + 1);
    } else {
        var str = t.substring((firstIndexOfMention + 2), lastIndexOfMention + 1);
    }
    var c = 0;
    if (str != check && str != ' ') {
        // console.log($('#mention_user_list').find('.mention_user').length)
        $.each($(div).find(item), function(k, v) {
            if ($(v).find('.name').text().toLowerCase().indexOf(str.toLowerCase()) > -1) {
                c += 1;
                $(v).show();
            } else {
                $(v).hide();
            }
        });
        if (c > 0) {
            $(div).show();
        } else {
            $(div).hide();
        }
        $(div).find(item).removeClass('selected');
        $(div).find(item + ':visible').first().addClass('selected');
    }

}

function getSelectionCharacterOffsetWithin(element) {
    var start = 0;
    var end = 0;
    var doc = element.ownerDocument || element.document;
    var win = doc.defaultView || doc.parentWindow;
    var sel;
    if (typeof win.getSelection != "undefined") {
        sel = win.getSelection();
        if (sel.rangeCount > 0) {
            var range = win.getSelection().getRangeAt(0);
            var preCaretRange = range.cloneRange();
            preCaretRange.selectNodeContents(element);
            preCaretRange.setEnd(range.startContainer, range.startOffset);
            start = preCaretRange.toString().length;
            preCaretRange.setEnd(range.endContainer, range.endOffset);
            end = preCaretRange.toString().length;
        }
    } else if ((sel = doc.selection) && sel.type != "Control") {
        var textRange = sel.createRange();
        var preCaretTextRange = doc.body.createTextRange();
        preCaretTextRange.moveToElementText(element);
        preCaretTextRange.setEndPoint("EndToStart", textRange);
        start = preCaretTextRange.text.length;
        preCaretTextRange.setEndPoint("EndToEnd", textRange);
        end = preCaretTextRange.text.length;
    }
    return { start: start, end: end };
}

// $('#msg_rep').on('keydown',function(e){
// 	arrowAndEnterFormen(e,'replymention_user','down');
// });
$('#msg_rep').on('keyup', function(e) {
    // e.preventDefault();
    // e.stopImmediatePropagation();
    // return false;
    if ($('#replymention_user').is(':visible')) {
        if (e.keyCode == 40 || e.keyCode == 38) {
            e.preventDefault();
            e.stopImmediatePropagation();
            return false;
        } else if (e.keyCode == 27) {
            e.preventDefault();
            e.stopImmediatePropagation();
            $('#replymention_user').hide();
            return false;
        }
    }

    var str = $('#msg_rep').text();
    if (str.length == 1) {
        placeCaretAtEnd(document.getElementById('msg_rep'));
    }
    var mentioncheck = checkMenOrNot(e, nameArry, '@');
    // console.log(15843,mentioncheck)
    if (mentioncheck) {
        if (mentioncheck.check == '@') {
            mentionFor = '@';
        }
        if (mentioncheck.last_t != '@') {
            searchMentionFun(e, '#replymention_user', '.mention_user');
        } else {
            mentionisActive = true;
            draw_mention_design('#replymention_user', true, nameArry, 'msg_rep');
        }
    } else {
        mentionFor = '';
        draw_mention_design('#replymention_user', false, nameArry, 'msg_rep');
        mentionisActive = false;
    }

    if (e.keyCode == 32) {



    } else if (e.keyCode == 27) {
        if (str.length != '') {
            e.preventDefault();
            e.stopImmediatePropagation();
            mentionFor = '';
            draw_mention_design('#replymention_user', false, nameArry, 'msg_rep');
            mentionisActive = false;
        }

    }



})
$('#msg_rep').on('keydown', function(e) {
        $('#msg_rep').find('a').attr('target', '_blank');
        if ($('#replymention_user').is(':visible')) {
            if (e.keyCode == 40 || e.keyCode == 38) {
                e.preventDefault();
                e.stopImmediatePropagation();
                arrowAndEnterFormen(e, 'replymention_user', 'down');
                return false;
            } else if (e.keyCode == 27) {
                e.preventDefault();
                e.stopImmediatePropagation();
                $('#replymention_user').hide();
                return false;
            }
        }
        if (e.keyCode == 13 || e.keyCode == 9) {
            if ($('#replymention_user').is(':visible')) {
                e.preventDefault();
                e.stopImmediatePropagation();
                $('#replymention_user .mention_user.selected').click();

                return false;
            }


        }
        if (e.keyCode == 8) {
            var text = $('#msg_rep').html().split('&nbsp;');
            if (text[text.length - 1] == '') {
                if (text[text.length - 2].indexOf('mention_user_msg') > -1) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    $('#msg_rep').find('.mention_user_msg').last().remove();
                    // privateMsgTo();
                }
            }
        }


    })
    // $('#FileComment').on('keydown',function(e){
    // 	arrowAndEnterFormen(e,'mention_user_list_file','down');
    // });
$('body').on('keyup', '#FileComment', function(e) {
    if ($('#mention_user_list_file').is(':visible')) {
        if (e.keyCode == 40 || e.keyCode == 38) {
            e.preventDefault();
            e.stopImmediatePropagation();
            // arrowAndEnterFormen(e,'mention_user_list_file','up');
            return false;
        } else if (e.keyCode == 27) {
            e.preventDefault();
            e.stopImmediatePropagation();
            $('#mention_user_list_file').hide();
            return false;
        }
    }
    // arrowAndEnterFormen(e,'mention_user_list_file','up');
    var str = $('#FileComment').text();
    if (str.length == 1) {
        placeCaretAtEnd(document.getElementById('FileComment'));
    }
    var mentioncheck = checkMenOrNot(e, nameArry, '@');
    // console.log(15843,mentioncheck)
    if (mentioncheck) {
        if (mentioncheck.check == '@') {
            mentionFor = '@';
        }
        if (mentioncheck.last_t != '@') {
            searchMentionFun(e, '#mention_user_list_file', '.mention_user');
        } else {
            mentionisActive = true;
            draw_mention_design('#mention_user_list_file', true, nameArry, 'FileComment');
        }
    } else {
        mentionFor = '';
        draw_mention_design('#mention_user_list_file', false, nameArry, 'FileComment');
        mentionisActive = false;
    }

    if (e.keyCode == 32) {

    } else if (e.keyCode == 27) {
        e.preventDefault();
        e.stopImmediatePropagation();
        mentionFor = '';
        draw_mention_design('#mention_user_list_file', false, nameArry, 'FileComment');
        mentionisActive = false;

    }

});
$('body').on('keydown', '#FileComment', function(e) {
    if ($('#mention_user_list_file').is(':visible')) {
        if (e.keyCode == 40 || e.keyCode == 38) {
            e.preventDefault();
            e.stopImmediatePropagation();
            arrowAndEnterFormen(e, 'mention_user_list_file', 'down');
            return false;
        } else if (e.keyCode == 27) {
            e.preventDefault();
            e.stopImmediatePropagation();
            $('#mention_user_list_file').hide();
            return false;
        }
    }
    if (e.keyCode == 13 || e.keyCode == 9) {
        if ($('#mention_user_list_file').is(':visible')) {
            // console.log(16139,$('#mention_user_list_file').is(':visible'))
            e.preventDefault();
            e.stopImmediatePropagation();
            $('#mention_user_list_file .mention_user.selected').click();
            return false;
        }

    }
    if (e.keyCode == 8) {
        var text = $('#FileComment').html().split('&nbsp;');
        if (text[text.length - 1] == '') {
            if (text[text.length - 2].indexOf('mention_user_msg') > -1) {
                e.preventDefault();
                e.stopImmediatePropagation();
                $('#FileComment').find('.mention_user_msg').last().remove();
                // privateMsgTo();
            }
        }

    }
    // var node = document.querySelector("#FileComment");
    // node.focus();
    // console.log(Node.TEXT_NODE)
    // var caret = window.getSelection().getRangeAt(0).startOffset - 1;
    //
    // var child;
    // var childNodeIndex = 0;
    // for(var i=0; i<node.childNodes.length; i++) {
    // 	child = node.childNodes[i];
    // 	// Node.ELEMENT_NODE == 1
    // 	// Node.TEXT_NODE == 3
    // 	if(child.nodeType == Node.TEXT_NODE) {
    // 		// keep track of caret across text childNodes
    // 		if(child.length <= caret) {
    // 			caret -= child.length;
    // 		} else {
    // 			break;
    // 		}
    // 	} else if (child.nodeType == Node.ELEMENT_NODE) {
    // 		// condition that 'each image would be treated as 1 character'
    // 		if(caret > 0) {
    // 			caret -= 1;
    // 		} else {
    // 			break;
    // 		}
    // 	};
    // 	childNodeIndex += 1;
    // }
    //
    // var textNode = node.childNodes[childNodeIndex];
    //
    // // your original code continues here...
    // var range = document.createRange();
    // console.log(textNode)
    // range.setStart(textNode, caret);
    // range.setEnd(textNode, caret);
    // var sel = window.getSelection();
    // console.log(sel,caret);
    // sel.removeAllRanges();
    //
    // sel.addRange(range)

});

function arrowAndEnterFormen(e, id, type) {
    // console.log(e,id)

    if ($('#' + id).is(':visible')) {
        console.log(e, id, type)
        if (e.keyCode == 13 || e.keyCode == 9) {
            if (type == 'up') {
                e.preventDefault();
                e.stopImmediatePropagation();
                return false;
            } else {
                e.preventDefault();
                e.stopImmediatePropagation();
                if ($("#" + id + " .mention_user.selected").is(':visible')) {
                    $("#" + id + " .mention_user.selected").trigger('click');
                    return false;
                } else {
                    return false;
                }
            }


        }

        // console.log(19171,e.type);
        if (e.type == 'keydown') {
            if (e.keyCode == 40 || e.keyCode == 38) {
                if (type == 'up') {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    return false;
                } else {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    if (e.keyCode == 38) {

                        var nextelm = $("#" + id + " .mention_user.selected").prev("#" + id + " .mention_user:visible:first");
                    } else {
                        var nextelm = $("#" + id + " .mention_user.selected").nextAll("#" + id + " .mention_user:visible:first");

                    }
                    if ($(nextelm).length == 0) {
                        nextelm = $("#" + id + " .mention_user:visible").first();
                    }
                    $("#" + id + " .mention_user").removeClass('selected');
                    $('#triggerElement').attr('href', nextelm);
                    $(nextelm).addClass('selected');
                    $('#triggerElement').trigger('click');
                    $(nextelm).focus();
                    return false;
                }

            }
        }
    }
}

function info_tooltip(type, position, ele, e) {
    // 	e.stopImmediatePropagation();
    e.preventDefault();
    $('.info_tooltip').attr('data-pos', position);
    var msg = '';
    if (type == 'send_msg') {
        msg += '<li>Mention a team member in a message by typing "@" and their display name, or send a private message by using "!@" instead.</li><li> Private messages can only be seen by members mentioned in the message using "!@".</li><li> A Checklist can be created by clicking the left-most icon in the input bar.</li>';
    } else if (type == 'search_conv') {
        msg += '<li>Search multiple users ie abc, def (,) or abc ; def ( ; ) etc.</li>';
    } else if (type == 'caller_id') {
        msg += '<li>This is your personal call link.</li><li> It can be visited by anyone you share the link with (even non-Workfreeli users).</li>';
    } else if (type == 'caller_id_room') {
        msg += '<li>This is the Room\'s conference call link.</li><li> It can be visited by anyone you share the link with (even non-Workfreeli users).</li><li> The call can be answered by any Room member and all Room members have access to join.</li>';
    } else if (type == 'team') {
        msg += '<p>Team is used to choose member(s) to invite to the Room now or later -- selecting a Team doesn\'t invite the entire Team to the Room.</p>';
    } else if (type == 'privacy') {
        msg += '<li>Private Rooms can only be accessed by users added to the Room.</li><li> To give the entire team access, switch the toggle to make this Room public.</li>';
    } else if (type == 'members') {
        msg += '<p>Hover over members in the Room Member(s) list to change their Room access level or to remove them from the Room.</p>';
    } else if (type == 'gallery') {
        msg += '<li>Hover over any file and click on the fourth icon from the left to set a custom file name.</li><li> Custom file names are used to make searching for and identifying files in the File Gallery more easy.</li><li> Custom file names can also be created for links in the File Gallery by hovering over the link and clicking on the left icon.</li>';
    } else if (type == 'rooms') {
        $(ele).addClass('active');
        msg += '<li>Click on Conversation(s) to access the Room Gallery - this is where you can view a list of all Private, Public, and Closed Rooms that you can join or are already a part of.</li> <li>To send a Direct Message or create a new Room, click on the plus sign (+). </li>';
    } else if (type == 'guest_user_invite') {
        $(ele).addClass('active');
        msg += '<li>Separate multiple email addresses using the semicolon (;) character. </li>';
    }

    $('.info_tooltip .tooltip_body').html('');
    $('.info_tooltip .tooltip_body').html(msg);

    var e_width = $('.info_tooltip').width();
    e_width += 10;
    var e_height = $('.info_tooltip').height();
    e_height += 30;
    var click_pos = $(e.target).parents('.tooltip_target').offset();

    if (position == 'top') {
        var top = click_pos.top;
        top = top - e_height;
        var left = click_pos.left - 8;
    } else if (position == 'exact') {
        var top = click_pos.top;
        top = 110;
        var left = 0;
    } else {
        var top = click_pos.top;
        top = top + 35;
        var left = click_pos.left - e_width;
    }

    $('.info_tooltip').css({
        top: top,
        left: left
    });

    if ($('.info_tooltip').hasClass('active')) {
        $('.info_tooltip').hide();
        $('.info_tooltip').removeClass('active');
        $('.i-conv').removeClass('active');
    } else {
        $('.info_tooltip').show();
        $('.info_tooltip').addClass('active');
    }
}

function tooltip_close() {
    $('.info_tooltip').hide();
    $('.i-conv').removeClass('active');
    $('.info_tooltip').removeClass('active');
}


// if(event.keyCode == 13){
// 	if($('#mention_user_list').is(':visible')){
// 		console.log(16139,$('#mention_user_list').is(':visible'))
// 		event.preventDefault();
// 		event.stopImmediatePropagation();
// 		$('#mention_user_list .mention_user.selected').click();
// 		return false;
// 	}
//
// }


function newMessageCheckfun(conversation_id, data) {
    var msg_viewFil = false;
    if (conversation_id == data.conversation_id) {
        if (allFilteredItem.length > 0) {
            if (data.msg_type != 'notification' && data.msg_type != 'call') {
                $.each(allFilteredItem, function(k, v) {
                    if (v == 'flag') {
                        if (data.has_flagged != null) {
                            if (data.has_flagged.indexOf(user_id.toString()) > -1) {
                                msg_viewFil = true;
                            }
                        }
                    } else if (v == 'checklist') {
                        if (data.msg_type == 'checklist') {
                            msg_viewFil = true;
                            if (allFilteredItem.indexOf('flagged_checklist') > -1) {
                                if (data.has_flagged != null && data.has_flagged.indexOf(user_id) != -1) {
                                    msg_viewFil = true;
                                } else {
                                    msg_viewFil = false;
                                }
                            }
                        }
                    }
                });

                if (msg_viewFil) {
                    if (allFilteredItem.indexOf('pending_checklist') > -1) {
                        var p = 0;
                        var c = 0;
                        $.each(data.checklist, function(k, v) {
                            if (v.checklist_status == 1) {
                                c += 1;

                            } else {
                                p += 1;
                            }
                        });
                        if (p == 0) {
                            msg_viewFil = false;;
                        }
                    }
                }



            } else {
                msg_viewFil = true;
            }

            if (!msg_viewFil) {
                return false;
            } else {
                return true;
            }

        } else {
            return true;
        }
    } else {
        return false;
    }

}

var editTag_id = '';
var old_edit_tag_title = '';

function updateTagTitle(event, elm) {
    if (event.type == 'blur') {
        $(elm).text(old_edit_tag_title);
        editTag_id = '';
        old_edit_tag_title = '';
        $(elm).attr('contenteditable', false);
    } else {
        if (event.keyCode == 13) {
            var newText = $(elm).text().trim();
            if (newText != '' && old_edit_tag_title.trim() !== newText && thisConvTagName.indexOf(newText) == -1) {
                event.preventDefault();
                event.stopImmediatePropagation();
                thisConvTagName[thisConvTagName.indexOf(old_edit_tag_title)] = newText;
                old_edit_tag_title = newText;
                socket.emit('updateUserTagTitle', { update_by: user_id, title: newText, tag_id: editTag_id, tagged_by: user_id }, function(res) {
                    $.each(allUserTagList, function(k, v) {
                        if (v != undefined) {
                            // console.log(v.tag_id,editTag_id)
                            if (v.tag_id == editTag_id) {
                                // console.log(11111111111,true)
                                allUserTagList[k].title = newText;
                                $('.tag_name_view_' + editTag_id).text(newText);
                                $(elm).blur();
                            }
                        }
                    })

                });
            } else {
                $(elm).blur();
            }

        }
    }
}


function viewOnlyFileTag(event, elm, key, tble_id = false) {
    oldAddedtag = [];
    anyChangeThisAction = [];
    var msg_id = $(event.target).parents('.msgs-form-users').attr('data-msgid');
    $('#tagSearchAddInput').val('');
    $('#tagSearchAddInput').focus();
    $('#tagAddBtn').hide();
    $('#selectToallShareTag').hide();
    $('#updateMessageTag .sub_btn').show();
    $('#updateMessageTag').removeClass('private_tab');
    $('#updateMessageTag').removeClass('public_tab');
    $('#updateMessageTag').addClass('private_tab');
    $('#updateMessageTag').attr('msg-id', '');
    changeTagMode('public');
    var usedTag = [];
    var reqData = { key: key };
    if (tble_id) {
        reqData = { id: key };
    }
    thisConvTagId = [];
    socket.emit('findThisFile', reqData, function(res) {
        console.log(29780, res)
            // console.log(14095,res.data[0]);
        if (res.status == true && res.data != null) {
            $('#updateMessageTag').attr('file-id', res.data[0].id);
            $('#updateMessageTag').attr('file-key', res.data[0].key);
            if (res.data[0].tag_list != null) {
                usedTag = res.data[0].tag_list;
            }
            thisConvTagName = [];
            thisConvTag = [];
            oldConvMytag = [];
            $('#updateMessageTag .hayven_Modal_Content').css('pointer-events', 'auto');
            $('#AllTagList').html('');
            $('#updateMsgTagContainer').html('');
            $('#updateMessageTag').css('display', 'flex');

            tag_counterSet(null, true);
            var group_keyspace = $('#roomIdDiv').attr('data-keyspace');
            var teamadminsName = [];
            console.log(group_keyspace)
            console.log(allteams)
            if(group_keyspace != 'na'){
                for(let t of allteams){
                    if(t.team_id == group_keyspace){
                        if(t.team_admin != null){
                            for(let u of t.team_admin){
                                let name = findObjForUser(u).fullname;
                                teamadminsName.push(name);
                            }
                        }
                    }
                }
                if(teamadminsName.length > 0){
                    $('.showonlyForTeam').text('Please ask your Team '+(teamadminsName.length >1?'Admins ':'Admin ')+' ('+ teamadminsName.join(', ').replace(/, ([^,]*)$/, ' and $1') +') to add any new team tags');
                }else{
                    $('.showonlyForTeam').text('Please ask your Team Admins to add any new team tags');
                }
            }else{
                $('.showonlyForTeam').text('Please ask your Team Admins to add any new team tags');
            }
            var nateams = []
            for(let t of allteams){
                if(t.participants == null){
                    t.participants = []; 
                }
                if(t.participants.indexOf(participants[0]) > -1 && t.participants.indexOf(participants[1]) > -1){
                    nateams.push(t.team_id);
                }
            }
            $.each(allUserTagList, function(k, v) {
                let re = true;
                if(group_keyspace !== 'na'){
                    if(v.team_list != null){
                        if(v.team_list.indexOf(group_keyspace) == -1){
                            re = false;
                        }
                    }
                }else{
                    if(v.team_list != null){
                        let tem = false;
                        for(let t of v.team_list){
                            console.log(t,nateams)
                            if(nateams.indexOf(t) > -1){
                                tem = true;
                                }
                        }
                        if(!tem){
                            re = false;
                        }
                    } 
                }
                if(re){
                    if (v != undefined) {
                        var st = 'shared_icon';
                        var sa = '';
                        if (v.shared_tag != null) {
                            st = st + ' active';
                            if (v.shared_tag !== user_id) {
                                sa = ' others_userTag ';
                            }
                        }
                        var created_byThistag = (v.tagged_by == user_id ? 'createByme' : 'createByothers');
                        var privateDesign = '<span style="border-color:' + getTagColor(v.tag_id) + '"  class="color_defiendBtn" style="background-color:' + getTagColor(v.tag_id) + '"></span><span id="thisTagId_' + v.tag_id + '" class="this_title" data-id="' + v.tag_id + '" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)" data-balloonu="Click and submit to add this tag" data-balloon="Type and enter to save this tag"  data-balloon-pos="up">' + v.title + '</span>' + getSharedTagUserName(v.tag_id) + '<span class="removeIcon" data-balloon="Delete" data-balloon-pos="up"></span><span class="editIcon" data-balloon="Edit" data-balloon-pos="up"></span><span class="' + st + '" data-balloon="Make tag available to others in this room" data-balloon-pos="left"></span>';
                        if (v.tag_type == 'public') {
                            privateDesign = '<span class="color_defiendBtn" style="background-color:' + getTagColor(v.tag_id) + '"></span><span id="thisTagId_' + v.tag_id + '" class="this_title" data-id="' + v.tag_id + '">' + v.title + '</span>';
                        }
                        var tag_list_with_user = {};
                        if (res.data[0].tag_list_with_user == null || res.data[0].tag_list_with_user == 'null') {
                            tag_list_with_user = {};
                        } else {
                            tag_list_with_user = JSON.parse(res.data[0].tag_list_with_user);
                        }
                        if (usedTag.indexOf(v.tag_id) > -1) {
                            thisConvTagName.push(v.title);
                            thisConvTagId.push(v.tag_id);
                            oldConvMytag.push(v.tag_id);
                            oldAddedtag.push(v.tag_id);
                            // if(v.tagged_by != user_id){
                            console.log(29832, tag_list_with_user[v.tag_id])
                            if (tag_list_with_user[v.tag_id] == '' || tag_list_with_user[v.tag_id] == undefined || tag_list_with_user[v.tag_id] == user_id) {
    
                                $('#AllTagList').prepend('<div style="border-color:' + getTagColor(v.tag_id) + '" onclick="tagOnCov(this,event)" class="active ' + created_byThistag + ' ' + (v.tag_type == 'public' ? 'public_tag public_tag_show ' : 'private_tag_show ') + (v.shared_tag !== null ? ' shared_tag_user ' : ' ') + sa + getShareOrnotTag(v.tag_id) + ' tag tag_id_' + v.tag_id + '" data-id="' + v.tag_id + '" msg-id="' + msg_id + '">' + privateDesign + '</div>');
                            }
    
                            // }else{
                            // 	$('#updateMsgTagContainer').prepend('<div class="item '+(v.tag_type == 'public' ? 'public_tag_show ':'private_tag_show ')+ getShareOrnotTag(v.tag_id) +'" style="'+(v.tag_color != null ? 'background-color:'+v.tag_color+'':'')+'"><p class="valtext">'+v.title+'</p><span class="valremove '+(v.tag_type == 'public' ? 'public_tag ':' ')+'" data-val="'+v.title+'" tag-id="'+v.tag_id+'" onclick="removeConvTag(this)" data-balloon="Remove tag" data-balloon-pos="up"></span></div>')
                            // }
                        } else {
                            if ($('#AllTagList').find('.tag_id_' + v.tag_id).length == 0) {
                                if (tag_list_with_user[v.tag_id] == '' || tag_list_with_user[v.tag_id] == undefined || tag_list_with_user[v.tag_id] == user_id) {
                                    $('#AllTagList').append('<div style="border-color:' + getTagColor(v.tag_id) + '" onclick="tagOnCov(this,event)" class="' + created_byThistag + ' ' + (v.tag_type == 'public' ? 'public_tag public_tag_show ' : 'private_tag_show ') + (v.shared_tag !== null ? ' shared_tag_user ' : ' ') + sa + getShareOrnotTag(v.tag_id) + ' tag tag_id_' + v.tag_id + '" data-id="' + v.tag_id + '" msg-id="' + msg_id + '">' + privateDesign + '</div>');
                                }
                            }
                            // $('#AllTagList').prepend('<div style="border-color:'+getTagColor(v.tag_id)+'"  onclick="tagOnCov(this,event)" class="'+created_byThistag+' '+(v.tag_type == 'public' ? 'public_tag public_tag_show ':'private_tag_show ')+getShareOrnotTag(v.tag_id) +' tag tag_id_'+v.tag_id+'" data-id="'+v.tag_id+'" conv-id="'+conversation_id+'"><span class="color_defiendBtn" style="background-color:'+getTagColor(v.tag_id)+'"></span><span id="thisTagIdConv_'+v.tag_id+'" class="this_title" data-id="'+v.tag_id+'" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)">'+v.title+'</span>'+getSharedTagUserName(v.tag_id)+'<span class="removeIcon" data-balloon="Delete" data-balloon-pos="up"></span><span class="editIcon" data-balloon="Edit" data-balloon-pos="up"></span><span class="'+st+'" data-balloon="Make tag available to others in this room" data-balloon-pos="up"></span></div>');
                        }
                        tag_counterSet(v.tag_type, true);
                    }
                }
                
            });
            $('#updateMsgTagContainer input').focus();
            addClassActive(thisConvTagId, '#updateMessageTag .sub_btn');
        }
        checkTagLength();
        getRoomWiseShareTag(conversation_id);
        if ($('#publicTeamTagTab').attr('data-count') == '0') {
            changeTagMode('private');
        }

        $('#tagSearchAddInput').focus();
    });
    // 	thisConvTagName = [];
    // 	thisConvTag = [];
    // $('#updateMessageTag .hayven_Modal_Content').css('pointer-events','auto');
    // 	var msg_id = $(elm).attr('msg-id');
    // 	$('#updateMessageTag').attr('msg-id',msg_id);
    // 	var allUserTag = $('#msg_tag_list'+msg_id).attr('tag-list');
    // 	if(allUserTag != null ){

    // 		allUserTag = allUserTag.split(',');
    // 	}else{
    // 		allUserTag = [];
    // 	}
    // 	$('#AllTagList').html('');
    // 	$('#updateMsgTagContainer').html('');
    // 	$('#updateMessageTag').show();
    // 	console.log(allUserTag);
    // 	$.each(allUserTagList,function(k,v){
    // 		thisConvTagName.push(v.title);
    // 		thisConvTag.push(v.tag_id);
    // 		if(allUserTag.indexOf(v.tag_id) > -1){

    // 			$('#updateMsgTagContainer').prepend('<div class="item"><p class="valtext">'+v.title+'</p><span class="valremove" data-val="'+v.title+'" tag-id="'+v.tag_id+'" msg-id="'+msg_id+'" onclick="removeOnMsgTag(this)"></span></div>');
    // 			// var msg_type = $('#msgThread_'+msg_id).attr('data-msg-type');
    // 			// if(msg_type == 'checklist' || msg_type == 'text'){
    // 			// 	$('#updateMsgTagContainer').prepend('<div class="item"><p class="valtext">'+v.title+'</p><span class="valremove" data-val="'+v.title+'" tag-id="'+v.tag_id+'" msg-id="'+msg_id+'" onclick="removeOnMsgTag(this)"></span></div>');
    // 			// }else{

    // 			// 	if(thisroomTagList.indexOf(v.tag_id) == -1){

    // 			// 		$('#updateMsgTagContainer').prepend('<div class="item"><p class="valtext">'+v.title+'</p><span class="valremove" data-val="'+v.title+'" tag-id="'+v.tag_id+'" msg-id="'+msg_id+'" onclick="removeOnMsgTag(this)"></span></div>');
    // 			// 	}
    // 			// }
    // 		}else{

    // 			$('#AllTagList').prepend('<div onclick="tagOneMsg(this,event)" class="tag tag_id_'+v.tag_id+'" data-id="'+v.tag_id+'" msg-id="'+msg_id+'"><span id="thisTagId_'+v.tag_id+'" class="this_title" data-id="'+v.tag_id+'" onkeyup="updateTagTitle(event,this)" onblur="updateTagTitle(event,this)">'+v.title+'</span><span class="removeIcon"></span><span class="editIcon"></span></div>');
    // 		}
    // 	});
    // 	$('#updateMsgTagContainer input').focus();
}

function tag_counterSet(type, status) {
    if (type == null) {
        $('.tag_section .private').attr('data-count', '0');
        $('.tag_section .public').attr('data-count', '0');
    } else {
        if (type == 'public') {
            var oldCounter = Number($('.tag_section .public').attr('data-count'));
            if (status) {
                oldCounter++;
            } else {
                if (oldCounter > 0) {
                    oldCounter--;
                }
            }
            $('.tag_section .public').find('.counter_tag').text('(' + oldCounter + ')');
            $('.tag_section .public').attr('data-count', oldCounter);
        } else {
            var oldCounter = Number($('.tag_section .private').attr('data-count'));
            if (status) {
                oldCounter++;
            } else {
                if (oldCounter > 0) {
                    oldCounter--;
                }
            }
            $('.tag_section .private').find('.counter_tag').text('(' + oldCounter + ')');
            $('.tag_section .private').attr('data-count', oldCounter);
        }
    }
}

function permsg_tagsList(msg_id) {

    var allTagIds = $('#thisMsgTagLists' + msg_id).attr('data-id');

    var this_tag_list = [];
    if (allTagIds == null) {
        allTagIds = [];
    } else if (allTagIds == '') {
        allTagIds = [];
    } else {
        this_tag_list = allTagIds.split(',')
    }
    var useLength = 0;
    var tooltipcount = 0;
    var html = '';
    var newHtml = '';
    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            if (this_tag_list.indexOf(v.tag_id) > -1) {
                // console.log(21600,v);
                var st = '';
                if (v.shared_tag != null) {
                    st = ' shared_tag_user ';
                    if (v.shared_tag !== user_id) {
                        st = st + ' others_userTag ';
                    }
                }
                if (useLength < 1000) {
                    if (v.tag_type == 'public') {
                        newHtml += '<span class="tag_design public_tag_team tag_name_view_' + v.tag_id + '" style="' + (v.tag_color != null ? 'background-color:' + v.tag_color + '' : '') + '" ' + getTooltipForshareTag(v.tag_id) + '><span>' + v.title + '</span> </span>';
                    } else {
                        newHtml += '<span style="background-color:'+v.tag_color+'" class="tag_design tag_name_view_' + v.tag_id + st + '" ' + getTooltipForshareTag(v.tag_id) + '><span>' + v.title + '</span> </span>';
                    }

                } else {
                    tooltipcount++;
                }

                // if(useLength == 0){
                // 	html += '<span> '+v.title+' </span>';
                // }else{
                // 	if(this_tag_list.length == (useLength+1)){
                // 		html += ' & <span> '+v.title+' </span>';
                // 	}else{
                // 		html += '<span>, '+v.title+' </span>';
                // 	}
                // }
                useLength++;
            }
        }
    });
    if (useLength > 0) {
        html += '<span class="ToggleTagActionMsg counter_tag' + useLength + '" onclick="thisMsgTags(this)">(' + useLength + ')</span>'
    }
    html += newHtml;
    // if(tooltipcount > 0){
    // 	html += '<span class="tag_design moreTooltipBtn">+'+tooltipcount+' more</span>'
    // 	html += '<div class="tag_toolTip for_tag" data-pos="top">'
    // 	// html += 	'<span class="tooltip_close" onclick="tooltip_close()"></span>'
    // 	html += 	'<div class="tooltip_body">'
    // 	useLength = 0;
    // 	$.each(allUserTagList,function(k,v){
    // 		if(this_tag_list.indexOf(v.tag_id) > -1){
    // 			if(useLength > 2){
    // 				if(v.tag_type == 'public'){
    // 					html += '<li class="tag_name_view_'+v.tag_id+'" style="'+(v.tag_color != null ? 'color:'+v.tag_color+'':'var(--PrimaryC)')+'" '+getTooltipForshareTag(v.tag_id)+'><span>'+v.title+'</span> </li>';
    // 				}else{
    // 					var sc = ''
    // 					if(v.shared_tag != null){
    // 						if(v.shared_tag !== user_id){
    // 							sc = 'color:#F55';
    // 						}else{
    // 							sc = 'color:var(--PrimaryC)';
    // 						}
    // 					}
    // 					html += '<li class="tag_name_view_'+v.tag_id+'" style="'+sc+'" '+getTooltipForshareTag(v.tag_id)+'><span>'+v.title+'</span> </li>';
    // 				}

    // 			}
    // 			useLength++;
    // 		}
    // 	});
    // 	html += 	'</div>'
    // 	html += '</div>'
    // }

    $('#thisMsgTagLists' + msg_id).html(html);
    // if(this_tag_list.length == 0){
    // 	$('#thisMsgTagLists'+msg_id).hide();
    // }else{
    // 	$('#thisMsgTagLists'+msg_id).show();
    // }
}


// var allTagIds = $('#thisMsgTagLists'+msg_id).attr('data-id');

// var this_tag_list = [];

// if(allTagIds != ''){
// 	this_tag_list = allTagIds.split(',');
// 	removeA(this_tag_list,tag_id);
// }
// $('#thisMsgTagLists'+msg_id).attr('data-id',this_tag_list);
// permsg_tagsList(msg_id);


function searchAssignee(event) {
    if (event == 'focus') {
        $('#dueDatePickerChecklist .searchDivAction').html('');

        if ($('#groupChatContainer').hasClass('task_assignment')) {
            if ($('.msgs-form-users.editable_checklistMsg').is(':visible')) {
                conversation_id = $('.msgs-form-users.editable_checklistMsg').attr('conv-id');
                conversation_type = get_conversation_obj(conversation_id).conversation_type;
                // console.log(participants, get_conversation_obj(conversation_id));
                participants = get_conversation_obj(conversation_id).participants;
                if (participants.indexOf(user_id) == -1) {
                    participants.push(user_id);
                }
            }
        }
        var participants_name = [];
        $.each(participants, function(k, v) {
            var user = findObjForUser(v);
            participants_name.push(user.fullname);
        })
        participants_name.sort();

        $.each(participants_name, function(k, v) {
            $.each(participants, function(ka, va) {
                var user = findObjForUser(va);
                if (v == user.fullname) {
                    var html = '<li onclick="assignUser(event,this)" data-user="' + va + '"><img src="' + file_server + 'profile-pic/Photos/' + user.img + '"><span class="name">' + user.fullname + '</span></li>';
                    $('#dueDatePickerChecklist .searchDivAction').append(html);
                }
            });
        });
        $('#dueDatePickerChecklist .searchDivAction').show();
    } else {
        var searchTagVal = $(event.target).val();
        $('#dueDatePickerChecklist .searchDivAction li').each(function() {
            if ($(this).find('.name').text().toLowerCase().search(searchTagVal.toLowerCase()) > -1) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
    }
}
var alternatAssigneeUserid = '';

function assignUser(evet, e) {
    var uid = $(e).attr('data-user');
    // console.log(25702, uid)
    var user = findObjForUser(uid);
    var html = '<div class="mini_item _mini_item_' + user.id + '" data-id="' + user.id + '"><p class="mini_name">' + user.fullname + '</p><span class="mini_remove_ico tooltipmsg" data-balloon="Remove assignee" data-balloon-pos="left" onclick="removeAssignMember(event,\'' + user + '\')"></span></div>';

    var id = ''
        // console.log($(evet.target).parents('.main_sec_tab').attr('id'))
    if ($(evet.target).parents('.main_sec_tab').attr('id') == 'alternatAssigneeSec') {
        id = 'alternatAssigneeSec';
        alternatAssigneeUserid = user.id;
    } else {
        id = 'normalAssineeSec';
    }
    if ($('#initialSubBtn').find('.buttonAction').text() == 'Update') {
        alternatAssigneeUserid = user.id;
    }
    $('#' + id).find('.user').html(html);
    $('#' + id).find('.user').next('input').hide();

    if (user.id != old_assignee && old_assignee != "") {
        if ($('#dueDatePickerChecklist').attr('action-submit') != 'settings') {
            $('#alternatAssigneeSec').show();
        }
        $('#alternatAssigneeSec ._3coldiv').show();
        $('#assigneeChangeResone').removeAttr('disabled');
    }

    if (user.id == old_assignee && old_assignee != "") {
        if ($('#dueDatePickerChecklist .hayven_Modal_Container').hasClass('request_review_open')) {
            if (!$('#checklistRequestBtn').is(':visible')) {
                $('#initialSubBtn').hide();
                $('#alternatAssigneeSec').hide();
                $('#checklistRequestBtn').show();
                console.log('111')
            }
        }
        if ($('#dueDatePickerChecklist .hayven_Modal_Container').hasClass('decline_review_open')) {
            if (!$('#declineApprove').is(':visible')) {
                console.log('222')
                $('#declineApprove').css('display', 'flex');
                $('#initialSubBtn').hide();
                $('#alternatAssigneeSec').hide();
            }
        }
    } else {
        // if ($('.hayven_Modal_Container').hasClass('decline_review_open')) {
        // 	if (!$('#declineApprove').is(':visible')) {
        // 		console.log('222')
        // 		$('#declineApprove').hide();
        // 		$('#initialSubBtn').show();
        // 		$('#alternatAssigneeSec').hide();
        // 	}
        // }
    }
    $('#dueDatePickerChecklist .searchDivAction').hide();
    $("#normalAssineeSec input").blur();
}

function removeAssignMember(e, userid) {
    var id = ''
    if ($(e.target).parents('.main_sec_tab').attr('id') == 'alternatAssigneeSec') {
        id = 'alternatAssigneeSec';
        alternatAssigneeUserid = '';
    } else {
        id = 'normalAssineeSec';
    }
    $('#' + id).find('.user').html('');
    $('#' + id).find('.user').next('input').val('');
    $('#' + id).find('.user').next('input').show();
    if ($('#checklistRequestBtn').is(':visible')) {
        $('#checklistRequestBtn').hide();
        $('#initialSubBtn').show();
    } else if ($('#declineApprove').is(':visible')) {
        $('#declineApprove').hide();
        $('#initialSubBtn').show();
    }
    $('#alternatAssigneeSec').hide();
}

function changeStatusTask(e) {
    // if($(e).prop("checked")){
    // 	$(e).parents('._3coldiv').find('label.statusCheck').text('Private');
    // }else{
    // 	$(e).parents('._3coldiv').find('label.statusCheck').text('Public');
    // }

}

function thisMsgTags(elm) {
    var check = $(elm).parent('.attach_tag.onlyFileTag').hasClass('active');
    if (check) {
        $(elm).parent('.attach_tag.onlyFileTag').removeClass('active');
    } else {
        $(elm).parent('.attach_tag.onlyFileTag').addClass('active')
    }
}

function searchDivActionDiv(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
}


socket.on('update_checklist_settings', function(res) {
    console.log('update_checklist_settings', res.data);
    var hiddenCls = '';
    var data = res.data;
    var cvPrivacy = checklistVisiblityCheck(data);
    var id = data.checklist_id;
    var up_check = $('.perchecklist_' + id).find('.end_due_date.upBy_name');
    // console.log(125, up_check)
    if (data.end_due_date != null) {
        if (Number(data.end_due_date) < moment().unix()) {
            if (!$('.perchecklist_' + data.checklist_id).hasClass('overdue')) {
                $('.perchecklist_' + data.checklist_id).addClass('overdue')
            }
        } else {
            $('.perchecklist_' + data.checklist_id).removeClass('overdue')
        }
        if (res.type == 'single') {
            // console.log(26187, res.type);
            $('.perchecklist_' + data.checklist_id).find('.checkBox').removeClass('checkUNauth');
            if (!cvPrivacy) {
                $('.perchecklist_' + data.checklist_id).find('.checkBox').addClass('checkUNauth');
            }
            $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').attr('data-privacy', data.privacy);
            $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').attr('data-assignee', data.assign_to);
            $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').attr('end-date', data.end_due_date);
            $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').html('<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(data.assign_to).img + '">')
            if (!$('.perchecklist_' + data.checklist_id).find('.dueDateIcon').hasClass('active')) {
                $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').addClass('active AssigneeUser');
            }
            if (data.end_due_date != null) {
                if (Number(data.end_due_date) < moment().unix()) {
                    if (!$('.perchecklist_' + data.checklist_id).hasClass('overdue')) {
                        $('.perchecklist_' + data.checklist_id).addClass('overdue')
                    }
                } else {
                    $('.perchecklist_' + data.checklist_id).removeClass('overdue')
                }
            }

            var id = data.checklist_id;
            var up_check = $('.perchecklist_' + id).find('.end_due_date.upBy_name');
            var crtBy = $('.perchecklist_' + id).find('.createdBy_name').text();
            var assign_info = '<div class="assign_info">';
            assign_info += '<span class="createdBy_name">' + crtBy + '</span>'
            assign_info += ' <span class="end_due_date upBy_name" data="">| Updated by ' + findObjForUser(data.last_updated_by).fullname + ' on ' + moment(data.last_updated_at).local().format('MMM Do YYYY - h:mm a') + '</span>'
            if (data.assign_to != user_id && data.assignedby == data.assign_to && data.assign_status == data.assign_to) {
                assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(data.assign_to).fullname + '">| Self-assigned by ' + findObjForUser(data.assign_to).fullname + '</span> ';
                assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>';
            } else {
                assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(data.assign_to).fullname + '">| Assigned to ' + findObjForUser(data.assign_to).fullname + ' </span>';
                assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>';
                assign_info += ' <span class="end_due_date assignBy_name" data="' + findObjForUser(data.assignedby).fullname + '">| Assigned by ' + findObjForUser(data.assignedby).fullname + ' </span>';
            }
            assign_info += '</div>';

            var Ac = $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').attr('data-assingment');
            Ac = Number(Ac);

            var allActivity = '';
            if (data.assign_to != null && data.end_due_date != null) {
                allActivity += '<span class="activity_assignedTo"> | Assigned to ' + findObjForUser(data.assign_to).fullname + ' </span>'
            }
            if (data.assignedby != null && data.end_due_date != null) {
                allActivity += '<span class="activity_assignedBy"> | Assigned by ' + findObjForUser(data.assignedby).fullname + ' </span>'
            }

            if (data.assign_to != null) {
                if (data.assignedby != user_id && data.assign_status != user_id) {
                    if ($('.perchecklist_' + id).find('.assign_info').length == 1) {
                        $('.perchecklist_' + id).find('.assign_info').remove();
                        $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                    } else {
                        $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                    }
                }
                Ac = Number(Ac + 1);
                $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').text('Assigned (' + Ac + ')');
                $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').attr('data-assingment', Ac);
                $('.perchecklist_' + id).addClass('has_assign').removeClass('unassigned');
                $('.perchecklist_' + id).attr('assign-to', data.assign_to);
                $('.perchecklist_' + id).attr('assigned-by', data.assignedby);
                $('.perchecklist_' + id).find('.activity_list_all .activity_assignedTo').remove();
                $('.perchecklist_' + id).find('.activity_list_all .activity_assignedBy').remove();
                $('.perchecklist_' + id).find('.endDue_date').remove();
                $('.perchecklist_' + id).find('.checkBoxTitle').after('<div class="endDue_date"> Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</div>');
                $('.perchecklist_' + id).find('.activity_list_all').append(allActivity);
                if ((data.assignedby != user_id) && (data.assign_to == user_id || data.alternative_assign_to == user_id)) {
                    $('.perchecklist_' + id).addClass('response_req');
                }
                taskItemCounter(data.msg_id);
            } else {
                Ac = Number(Ac - 1);
                $('.perchecklist_' + id).find('.assign_info').remove();
                $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                $('.perchecklist_' + id).attr('assign-to', 'null');
                $('.perchecklist_' + id).attr('assigned-by', 'null');
                $('.perchecklist_' + id).removeClass('waiting_3');
                $('.perchecklist_' + id).attr('msg-pending', false);
                $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').text('Assigned (' + Ac + ')');
                $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').attr('data-assingment', Ac);
                $('.perchecklist_' + id).removeClass('has_assign').addClass('unassigned');
                $('.perchecklist_' + id).find('.activity_list_all .activity_assignedTo').remove();
                $('.perchecklist_' + id).find('.activity_list_all .activity_assignedBy').remove();
            }
            $('.perchecklist_' + id).addClass('modified');
            var msg_time = moment().format();
            $('.perchecklist_' + id).attr('data-lastmodified', msg_time);
        } else {
            // console.log('setting',123);
            var alldue = $('.msg_id_' + data.msg_id).find('.dueDateIcon');
            var allItem = $('.msg_id_' + data.msg_id).find('.checkListItem');

            $('.msg_id_' + data.msg_id).find('.checkListPlainText').attr('data-privacy', data.privacy);
            $('.msg_id_' + data.msg_id).find('.checkListPlainText').attr('data-assignee', data.assign_to);
            $('.msg_id_' + data.msg_id).find('.checkListPlainText').attr('end-date', data.end_due_date);

            var id = data.checklist_id;
            var up_check = $('.perchecklist_' + id).find('.end_due_date.upBy_name');
            var assign_info = '<div class="assign_info">';
            if (up_check.length > 0) {
                assign_info += '<span class="end_due_date upBy_name" data="">' + up_check.text() + '</span>'
            }
            if (data.assign_to != user_id && data.assignedby == data.assign_to && data.assign_status == data.assign_to) {
                assign_info += '<span class="end_due_date assignee_name" data="' + findObjForUser(data.assign_to).fullname + '">' + (up_check.length > 0 ? ' | ' : ' | ') + 'Self-assigned by ' + findObjForUser(data.assign_to).fullname + '</span> ';
                assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>';
            } else {
                assign_info += '<span class="end_due_date assignee_name" data="' + findObjForUser(data.assign_to).fullname + '">' + (up_check.length > 0 ? ' | ' : ' | ') + 'Assigned to ' + findObjForUser(data.assign_to).fullname + ' </span>';
                assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>';
                assign_info += ' <span class="end_due_date assignBy_name" data="' + findObjForUser(data.assignedby).fullname + '">| Assigned by ' + findObjForUser(data.assignedby).fullname + ' </span>';
            }
            assign_info += '</div>';
            $.each(alldue, function(k, v) {
                $(v).parents('.checkListItem').find('.checkBox').removeClass('checkUNauth');
                if (!cvPrivacy) {
                    $(v).parents('.checkListItem').find('.checkBox').addClass('checkUNauth');
                }
                if (data.end_due_date != null) {
                    if (Number(data.end_due_date) < moment().unix()) {
                        if (!$(v).parents('.checkListItem').hasClass('overdue')) {
                            $(v).parents('.checkListItem').addClass('overdue')
                        }
                    } else {
                        $(v).parents('.checkListItem').removeClass('overdue')
                    }
                }

                $(v).attr('data-privacy', data.privacy);
                $(v).attr('data-assignee', data.assign_to);
                $(v).attr('end-date', data.end_due_date);
                // $(v).html('<img src="'+file_server+'profile-pic/Photos/'+findObjForUser(data.assign_to).img+'">')
                if (!$(v).hasClass('active')) {
                    $(v).addClass('active AssigneeUser');
                }
            });
            // console.log(allItem);
            $.each(allItem, function(k, v) {
                if (!$(v).hasClass('new_item')) {
                    var checklist_id = $(v).attr('checklist-id');
                    if (data.assignedby != user_id && data.assign_status != user_id) {
                        $(v).find('.item_toolbar').after(assign_info);
                    }
                    $(v).addClass('has_assign').removeClass('unassigned');
                    $(v).attr('assign_to', data.assign_to);
                    $(v).attr('assignedby', data.assignedby);
                    $(v).find('.assign_info').append('<div class="ttl_requestTime ttl_request' + checklist_id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + checklist_id + '">Pending Acceptance. </span></div>');
                    $(v).find('.dueDateIcon').html('<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(data.assign_to).img + '">')
                }
            });
            // console.log(23927, Number(allItem.length-1));
            $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').text('Assigned (' + Number(allItem.length - 1) + ')');
            $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').attr('data-assingment', Number(allItem.length - 1));
        }
    } else {
        $('.perchecklist_' + data.checklist_id).removeClass('overdue');
        if (res.type == 'single') {
            console.log(26334, res.type);
            $('.perchecklist_' + data.checklist_id).find('.checkBox').removeClass('checkUNauth');
            $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').attr('data-privacy', '');
            $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').attr('data-assignee', '');
            $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').attr('end-date', '');
            $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').html('');
            $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').removeClass('active AssigneeUser');

            var id = data.checklist_id;
            // var dt = moment().format();
            var crtBy = $('.perchecklist_' + id).find('.createdBy_name').text();

            $('.perchecklist_' + id).find('.assign_info').remove();

            $('.perchecklist_' + id).find('.item_toolbar').after('<div class="assign_info"><span class="createdBy_name">' + crtBy + '</span><span class="end_due_date upBy_name" data="">| Updated by ' + findObjForUser(data.last_updated_by).fullname + ' on ' + moment(data.last_updated_at).local().format('MMM Do YYYY - h:mm a') + '</span></div>');
            $('.perchecklist_' + id).attr('assign-to', 'null');
            $('.perchecklist_' + id).attr('assigned-by', 'null');
            $('.perchecklist_' + id).removeClass('waiting_3');
            $('.perchecklist_' + id).attr('msg-pending', false);
            $('.perchecklist_' + id).find('.ttl_requestTime').remove();
            $('.perchecklist_' + id).find('.endDue_date').remove();
            $('.perchecklist_' + id).removeClass('has_assign').addClass('unassigned');
            $('.perchecklist_' + id).removeClass('response_req');

            $('.perchecklist_' + id).addClass('modified');
            var msg_time = moment().format();
            $('.perchecklist_' + id).attr('data-lastmodified', msg_time);
            taskItemCounter(data.msg_id);
        } else {
            var allItem = $('.msg_id_' + data.msg_id).find('.dueDateIcon');
            $.each(allItem, function(k, v) {
                $(v).parents('.checkListItem').find('.checkBox').removeClass('checkUNauth');
                $(v).parents('.checkListItem').removeClass('overdue');
                $(v).attr('data-privacy', '');
                $(v).attr('data-assignee', '');
                $(v).attr('end-date', '');
                $(v).html('')
                $(v).removeClass('active AssigneeUser');
            })
        }
    }

    if (data.assignedby != user_id && data.assign_to == user_id) {
        // console.log(23942, data.assignedby, data.assign_to, user_id);
        $('.ttl_request' + data.checklist_id).remove();
        var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + data.checklist_id + '"><span class="short_cart_btn aprove_btn_sortcart" onclick="assign_accept_btn(this)">Accept</span> <span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span> <span class="short_cart_btn" data-type="Decline" onclick="open_duedate_box(this)">Decline</span></span></div>';
        $('.perchecklist_' + data.checklist_id).addClass('waiting_3');
        $('.perchecklist_' + data.checklist_id).attr('msg-pending', true);
        $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
    }
});


socket.on('update_checklist_settings_last', function(data) {
    console.log('update_checklist_settings_last', data);
    if (data.type == 'accept' || data.type == 'cancel') {
        if (data.type == 'accept') {
            console.log('U', data.request_ttl_approved_date);
            console.log('Req_date 1', moment(Number(data.request_ttl_approved_date)).local().format('MMM Do YYYY - h:mm a'));
            console.log('Req_date 1', moment(Number(data.approved_date)).local().format('MMM Do YYYY - h:mm a'));
            var conv_id = $('.msg_id_' + data.msg_id).attr('conv-id');
            $('.ttl_request' + data.checklist_id).remove();
            $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').show();
            $('.perchecklist_' + data.checklist_id).attr('msg-pending', false);
            $('hayven_Modal_Container').removeClass('request_open');
            if (get_conversation_obj(conv_id).conversation_type == 'personal') {
                $('.perchecklist_' + data.checklist_id).addClass('waiting_3');
                // var html = '<div class="ttl_requestTime ttl_request'+data.checklist_id+'"><span class="_separetor">|</span> <span class="success_btn" data-id="'+data.checklist_id+'"><span class="short_cart_btn" data-type="Request" onclick="open_duedate_box(this)">Request for extension</span> </span></div>';
                var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + data.checklist_id + '"><span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span> <span class="short_cart_btn" data-type="Mark complete" onclick="open_duedate_box(this)">Mark as completed</span></span></div>';
            } else {
                $('.perchecklist_' + data.checklist_id).removeClass('waiting_3');
            }
            flash_msg_item_bottom(data.checklist_id, 'Request Accepted');
            if (data.request_ttl_approved_date != null) {
                $('.perchecklist_' + data.checklist_id).find('.endDue_date').remove();
                $('.perchecklist_' + data.checklist_id).find('.checkBoxTitle').after('<div class="endDue_date"> Due by: ' + (data.request_ttl_approved_date != null ? moment.unix(Number(data.approved_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</div>');
                $('.perchecklist_' + data.checklist_id).find('.assign_info .end_due_date._due_date').text('| Due by: ' + (data.request_ttl_approved_date != null ? moment.unix(Number(data.approved_date / 1000)).local().format('MMM Do YYYY - h:mm a') : ''));
            }
            $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
            $('.perchecklist_' + data.checklist_id).addClass('modified');
            var msg_time = moment().format();
            $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);
        } else {
            if ($('.ttl_request' + data.checklist_id).is(':visible')) {
                var html = '<span class="success_btn red_color"  data-id="' + data.checklist_id + '">Request Canceled</span>';
                $('.ttl_request' + data.checklist_id).html(html);
            }
        }
    } else if (data.type == 'assign_accept') {
        $('.ttl_request' + data.checklist_id).remove();
        // flash_msg_item_bottom(data.checklist_id);
        $('.perchecklist_' + data.checklist_id).addClass('modified');
        var msg_time = moment().format();
        $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);
    } else if (data.type == 'request') {
        $('.ttl_request' + data.checklist_id).remove();
        var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span style="color: red">Extension requested </span>  <span class="success_btn red_color" data-id="' + data.checklist_id + '"> <span class="short_cart_btn" data-type="request_review" onclick="open_duedate_box(this)">Review</span></span></div>';
        // if(adminArra.indexOf(user_id) > -1 || $('.msg_id_'+data.msg_id).find('.user-msg').attr('data-senderid')){
        // console.log(24517, conversation_type);
        if (conversation_type == 'personal') {
            if (data.assign_to != user_id) {
                $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
            }
        } else {
            // if(adminArra.indexOf(user_id) > -1 ){
            if (data.assignedby == user_id) {
                if (data.assign_to != user_id) {
                    $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
                }
            }
        }
        $('.perchecklist_' + data.checklist_id).find('.item_toolbar .item_del').hide();
        $('.perchecklist_' + data.checklist_id).find('.item_toolbar .dueDateIcon').hide();
        $('.perchecklist_' + data.checklist_id).addClass('modified');
        var msg_time = moment().format();
        $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);
    } else if (data.type == 'cancel_request') {
        $('.ttl_request' + data.checklist_id).remove();
        var html = '';
        if (data.status != 2) {
            html += '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + data.checklist_id + '">Pending Acceptance</span></div>';
        }
        // if(adminArra.indexOf(user_id) > -1 || $('.msg_id_'+data.msg_id).find('.user-msg').attr('data-senderid')){
        if (conversation_type == 'personal') {
            if (data.assign_to != user_id) {
                $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
            }
        } else {
            // if(adminArra.indexOf(user_id) > -1 ){
            if (data.assign_to != user_id) {
                $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
            }
            // }
        }
        $('.perchecklist_' + data.checklist_id).addClass('modified');
        var msg_time = moment().format();
        $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);
        $('.perchecklist_' + data.checklist_id).find('.item_toolbar .item_del').show()
        $('.perchecklist_' + data.checklist_id).find('.item_toolbar .dueDateIcon').show()
        $('.perchecklist_' + data.checklist_id).find('.item_toolbar .dueDateIcon').removeClass('lock_for_user');
    } else if (data.type == 'assigneeChange') {
        var id = data.checklist_id;
        var crtBy = $('.perchecklist_' + id).find('.createdBy_name').text();
        var assign_info = '<div class="assign_info">';
        assign_info += '<span class="createdBy_name">' + crtBy + '</span>'
        assign_info += ' <span class="end_due_date upBy_name" data="">| Updated by ' + findObjForUser(data.last_updated_by).fullname + ' on ' + moment(data.last_updated_at).local().format('MMM Do YYYY - h:mm a') + '</span>';
        if (data.alternative_assign_to != user_id && data.assignedby == data.alternative_assign_to && data.assign_status == data.alternative_assign_to) {
            assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(data.alternative_assign_to).fullname + '">| Self-assigned by ' + findObjForUser(data.alternative_assign_to).fullname + '</span> ';
            assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>';

            $('.perchecklist_' + data.checklist_id).find('.item_toolbar .end_due_date').hide();
        } else {
            assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(data.alternative_assign_to).fullname + '">| Assigned to ' + findObjForUser(data.alternative_assign_to).fullname + ' </span>';
            assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>';
            assign_info += ' <span class="end_due_date assignBy_name" data="' + findObjForUser(data.assignedby).fullname + '">| Assigned by ' + findObjForUser(data.assignedby).fullname + ' </span>';
        }
        assign_info += '</div>';

        if (data.alternative_assign_to != null) {
            if (data.assignedby != user_id && data.assign_status != user_id) {
                if ($('.perchecklist_' + id).find('.assign_info').length == 1) {
                    $('.perchecklist_' + id).find('.assign_info').remove();
                    $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                } else {
                    $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                }
            }

            $('.perchecklist_' + id).find('.endDue_date').remove();
            $('.perchecklist_' + id).find('.checkBoxTitle').after('<div class="endDue_date"> Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</div>');
            $('.perchecklist_' + id).attr('assign-to', data.alternative_assign_to);
            $('.perchecklist_' + id).attr('assigned-by', data.assignedby);
        } else {
            $('.perchecklist_' + id).find('.assign_info').remove();
            $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
            $('.perchecklist_' + id).attr('assign-to', 'null');
            $('.perchecklist_' + id).attr('assigned-by', 'null');
            $('.perchecklist_' + id).removeClass('waiting_3');
            $('.perchecklist_' + id).attr('msg-pending', false);
        }

        $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').addClass('AssigneeUser');
        $('.perchecklist_' + data.checklist_id).find('.dueDateIcon').html('<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(data.alternative_assign_to).img + '">');

        $('.ttl_request' + data.checklist_id).remove();
        var html = '';

        if (data.alternative_assign_to == user_id) {
            $('.perchecklist_' + data.checklist_id).addClass('waiting_3');
            $('.perchecklist_' + data.checklist_id).attr('msg-pending', true);
            html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + data.checklist_id + '"> <span class="short_cart_btn aprove_btn_sortcart" onclick="assign_accept_btn(this)">Accept</span> <span class="short_cart_btn" data-type="Request" onclick="open_duedate_box(this)">Request for extension</span> <span class="short_cart_btn" data-type="Decline" onclick="open_duedate_box(this)">Decline</span></span></div>';
        } else {
            $('.perchecklist_' + data.checklist_id).removeClass('waiting_3');
            $('.perchecklist_' + data.checklist_id).attr('msg-pending', false);
            if (adminArra.indexOf(user_id) > -1) {
                // console.log('Assignee change');
            }
            html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + data.checklist_id + '">Assignee changed</span></div>';
        }
        $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
        $('.perchecklist_' + data.checklist_id).addClass('modified');
        var msg_time = moment().format();
        $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);

    } else if (data.type == 'Decline') {
        $('.ttl_request' + data.checklist_id).remove();
        var html = "";
        if (conversation_type == 'personal') {
            if (data.assign_status == 1) {
                html += '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span style="color: red">Declined </span>  <span class="success_btn red_color" data-id="' + data.checklist_id + '"> <span class="short_cart_btn" data-type="decline_review" onclick="open_duedate_box(this)" action="declined">Review</span></span></div>';
            }
        } else {
            if (data.assignedby == user_id) {
                if (data.assign_status == 1) {
                    html += '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span style="color: red">Declined </span>  <span class="success_btn red_color" data-id="' + data.checklist_id + '"> <span class="short_cart_btn" data-type="decline_review" onclick="open_duedate_box(this)" action="declined">Review</span></span></div>';
                }
            }
        }
        $('.perchecklist_' + data.checklist_id).find('.item_toolbar .item_del').hide()
        $('.perchecklist_' + data.checklist_id).find('.item_toolbar .dueDateIcon').hide()
        $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
        $('.perchecklist_' + data.checklist_id).addClass('modified');
        var msg_time = moment().format();
        $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);
    } else if (data.type == 'cancel_decline') {
        $('.ttl_request' + data.checklist_id).remove();
        var html = "";
        if (conversation_type == 'personal') {
            if (data.assign_status != 1) {
                html += '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + data.checklist_id + '">Pending Acceptance</span></div>';
            }
        } else {
            if (adminArra.indexOf(user_id) > -1) {
                if (data.assign_status != 1) {
                    html += '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + data.checklist_id + '">Pending Acceptance</span></div>';
                }
            }
        }
        $('.perchecklist_' + data.checklist_id).find('.item_toolbar .item_del').show();
        $('.perchecklist_' + data.checklist_id).find('.item_toolbar .dueDateIcon').show();
        $('.perchecklist_' + data.checklist_id).find('.item_toolbar .dueDateIcon').removeClass('lock_for_user');
        $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
        $('.perchecklist_' + data.checklist_id).addClass('modified');
        var msg_time = moment().format();
        $('.perchecklist_' + data.checklist_id).attr('data-lastmodified', msg_time);
    } else if (data.type == 'duedate_change_creator') {
        $('.ttl_request' + data.checklist_id).remove();
        var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + data.checklist_id + '"> <span class="short_cart_btn aprove_btn_sortcart" onclick="assign_accept_btn(this)">Accept</span> <span class="short_cart_btn" data-type="Request" onclick="open_duedate_box(this)">Request for extension</span> <span class="short_cart_btn" data-type="Decline" onclick="open_duedate_box(this)">Decline</span></span></div>';
        $('.perchecklist_' + data.checklist_id).append(html);
    } else if (data.type == 'Delete') {
        $('.perchecklist_' + data.checklist_id).remove();
        taskItemCounter(data.msg_id);
    } else if (data.type == 'complete_review') {
        $('.perchecklist_' + data.checklist_id).attr('review_status', 0);
        // console.log(25952, data.type);
    } else if (data.type == 'recheck') {
        $('.perchecklist_' + data.checklist_id).addClass('pending_item');
        $('.perchecklist_' + data.checklist_id).removeClass('completed_item');
        $('.perchecklist_' + data.checklist_id).find('.checkBox').removeClass('checked');
        $('.perchecklist_' + data.checklist_id).attr('review_status', 2);
        $('.perchecklist_' + data.checklist_id).attr('checklist_status', 0);
        taskItemCounter(data.msg_id);
        var html = '<div class="ttl_requestTime ttl_request' + data.checklist_id + '"><span class="_separetor">|</span> <span style="color: red"></span>  <span class="success_btn red_color" data-id="' + data.checklist_id + '"> Task Re-check</span></div>';
        $('.ttl_request' + data.checklist_id).remove();
        $('.perchecklist_' + data.checklist_id).find('.assign_info').append(html);
    }
})

// Socket on from android
socket.on('update_checklist_process', function(data) {
    console.log('Socket On Android: ', data);
    data = data.data;

    var last_updated_by = data.user_id;
    var assignedby = data.user_id;
    var id = data.checklist_id;
    if (data.type == 'new_assignee') {
        var assign_status = data.user_id;
        if (data.end_due_date != null) {
            if (Number(data.end_due_date) < moment().unix()) {
                if (!$('.perchecklist_' + id).hasClass('overdue')) {
                    $('.perchecklist_' + id).addClass('overdue')
                }
            } else {
                $('.perchecklist_' + id).removeClass('overdue')
            }

            // Need Privacy
            $('.perchecklist_' + id).find('.checkBox').removeClass('checkUNauth');
            // if(!cvPrivacy){
            // 	$('.perchecklist_'+id).find('.checkBox').addClass('checkUNauth');
            // }
            // $('.perchecklist_'+id).find('.dueDateIcon').attr('data-privacy',data.privacy);
            $('.perchecklist_' + id).find('.dueDateIcon').attr('data-assignee', data.assign_to);
            $('.perchecklist_' + id).find('.dueDateIcon').attr('end-date', data.end_due_date);
            $('.perchecklist_' + id).find('.dueDateIcon').html('<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(data.assign_to).img + '">')
            if (!$('.perchecklist_' + id).find('.dueDateIcon').hasClass('active')) {
                $('.perchecklist_' + id).find('.dueDateIcon').addClass('active AssigneeUser');
            }

            var up_check = $('.perchecklist_' + id).find('.end_due_date.upBy_name');
            var crtBy = $('.perchecklist_' + id).find('.createdBy_name').text();
            var assign_info = '<div class="assign_info">';
            assign_info += '<span class="createdBy_name">' + crtBy + '</span>'
            assign_info += ' <span class="end_due_date upBy_name" data="">| Updated by ' + findObjForUser(last_updated_by).fullname + ' on ' + moment(data.last_updated_at).local().format('MMM Do YYYY - h:mm a') + '</span>'
            if (data.assign_to != user_id && assignedby == data.assign_to && assign_status == data.assign_to) {
                assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(data.assign_to).fullname + '">| Self-assigned by ' + findObjForUser(data.assign_to).fullname + '</span> ';
                assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>';
            } else {
                assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(data.assign_to).fullname + '">| Assigned to ' + findObjForUser(data.assign_to).fullname + ' </span>';
                assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>';
                assign_info += ' <span class="end_due_date assignBy_name" data="' + findObjForUser(assignedby).fullname + '">| Assigned by ' + findObjForUser(assignedby).fullname + ' </span>';
            }
            assign_info += '</div>';


            var Ac = $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').attr('data-assingment');
            Ac = Number(Ac);

            var allActivity = '';
            if (data.assign_to != null && data.end_due_date != null) {
                allActivity += '<span class="activity_assignedTo"> | Assigned to ' + findObjForUser(data.assign_to).fullname + ' </span>'
            }
            if (assignedby != null && data.end_due_date != null) {
                allActivity += '<span class="activity_assignedBy"> | Assigned by ' + findObjForUser(assignedby).fullname + ' </span>'
            }

            if (data.assign_to != null) {
                if (assignedby != user_id && assign_status != user_id) {
                    if ($('.perchecklist_' + id).find('.assign_info').length == 1) {
                        $('.perchecklist_' + id).find('.assign_info').remove();
                        $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                    } else {
                        $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                    }
                }
                Ac = Number(Ac + 1);
                $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').text('Assigned (' + Ac + ')');
                $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').attr('data-assingment', Ac);
                $('.perchecklist_' + id).addClass('has_assign').removeClass('unassigned');
                $('.perchecklist_' + id).attr('assign-to', data.assign_to);
                $('.perchecklist_' + id).attr('assigned-by', assignedby);
                $('.perchecklist_' + id).find('.activity_list_all .activity_assignedTo').remove();
                $('.perchecklist_' + id).find('.activity_list_all .activity_assignedBy').remove();
                $('.perchecklist_' + id).find('.endDue_date').remove();
                $('.perchecklist_' + id).find('.checkBoxTitle').after('<div class="endDue_date"> Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</div>');
                $('.perchecklist_' + id).find('.activity_list_all').append(allActivity);
                if (assignedby != user_id) {
                    $('.perchecklist_' + id).addClass('response_req');
                    taskItemCounter(data.msg_id);
                }
            } else {
                Ac = Number(Ac - 1);
                $('.perchecklist_' + id).find('.assign_info').remove();
                $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                $('.perchecklist_' + id).attr('assign-to', 'null');
                $('.perchecklist_' + id).attr('assigned-by', 'null');
                $('.perchecklist_' + id).removeClass('waiting_3');
                $('.perchecklist_' + id).attr('msg-pending', false);
                $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').text('Assigned (' + Ac + ')');
                $('.msg_id_' + data.msg_id).find('.filterShowall.assignment_count').attr('data-assingment', Ac);
                $('.perchecklist_' + id).removeClass('has_assign').addClass('unassigned');
                $('.perchecklist_' + id).find('.activity_list_all .activity_assignedTo').remove();
                $('.perchecklist_' + id).find('.activity_list_all .activity_assignedBy').remove();
            }

            if (assignedby != user_id && data.assign_to == user_id) {
                $('.ttl_request' + id).remove();
                var html = '<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + id + '"><span class="short_cart_btn aprove_btn_sortcart" onclick="assign_accept_btn(this)">Accept</span> <span class="short_cart_btn" onclick="open_duedate_box(this)" data-type="Request">Request for extension</span> <span class="short_cart_btn" data-type="Decline" onclick="open_duedate_box(this)">Decline</span></span></div>';
                $('.perchecklist_' + id).addClass('waiting_3');
                $('.perchecklist_' + id).attr('msg-pending', true);
                $('.perchecklist_' + id).find('.assign_info').append(html);
            }
        }
    } else if (data.type == 'alternative_assign_to') {
        var assign_status = data.user_id;
        var alternative_assign_to = data.assign_to;
        var crtBy = $('.perchecklist_' + id).find('.createdBy_name').text();
        var assign_info = '<div class="assign_info">';
        assign_info += '<span class="createdBy_name">' + crtBy + '</span>'
        assign_info += ' <span class="end_due_date upBy_name" data="">| Updated by ' + findObjForUser(last_updated_by).fullname + ' on ' + moment(data.last_updated_at).local().format('MMM Do YYYY - h:mm a') + '</span>';
        if (alternative_assign_to != user_id && assignedby == alternative_assign_to && assign_status == alternative_assign_to) {
            assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(alternative_assign_to).fullname + '">| Self-assigned by ' + findObjForUser(alternative_assign_to).fullname + '</span> ';
            assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>';

            $('.perchecklist_' + id).find('.item_toolbar .end_due_date').hide();
        } else {
            assign_info += ' <span class="end_due_date assignee_name" data="' + findObjForUser(alternative_assign_to).fullname + '">| Assigned to ' + findObjForUser(alternative_assign_to).fullname + ' </span>';
            assign_info += ' <span class="end_due_date _due_date" data="' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('MMM Do YYYY') : '') + '">| Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</span>';
            assign_info += ' <span class="end_due_date assignBy_name" data="' + findObjForUser(assignedby).fullname + '">| Assigned by ' + findObjForUser(assignedby).fullname + ' </span>';
        }
        assign_info += '</div>';

        if (alternative_assign_to != null) {
            if (assignedby != user_id && assign_status != user_id) {
                if ($('.perchecklist_' + id).find('.assign_info').length == 1) {
                    $('.perchecklist_' + id).find('.assign_info').remove();
                    $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                } else {
                    $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
                }
            }
            $('.perchecklist_' + id).find('.endDue_date').remove();
            $('.perchecklist_' + id).find('.checkBoxTitle').after('<div class="endDue_date"> Due by: ' + (data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</div>');
            $('.perchecklist_' + id).attr('assign-to', alternative_assign_to);
            $('.perchecklist_' + id).attr('assigned-by', assignedby);
        } else {
            $('.perchecklist_' + id).find('.assign_info').remove();
            $('.perchecklist_' + id).find('.item_toolbar').after(assign_info);
            $('.perchecklist_' + id).attr('assign-to', 'null');
            $('.perchecklist_' + id).attr('assigned-by', 'null');
            $('.perchecklist_' + id).removeClass('waiting_3');
            $('.perchecklist_' + id).attr('msg-pending', false);
        }


        $('.perchecklist_' + id).find('.dueDateIcon').addClass('AssigneeUser');
        $('.perchecklist_' + id).find('.dueDateIcon').html('<img src="' + file_server + 'profile-pic/Photos/' + findObjForUser(alternative_assign_to).img + '">');

        $('.ttl_request' + id).remove();
        var html = '';

        if (alternative_assign_to == user_id) {
            $('.perchecklist_' + id).addClass('waiting_3');
            $('.perchecklist_' + id).attr('msg-pending', true);
            html = '<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + id + '"> <span class="short_cart_btn aprove_btn_sortcart" onclick="assign_accept_btn(this)">Accept</span> <span class="short_cart_btn" data-type="Request" onclick="open_duedate_box(this)">Request for extension</span> <span class="short_cart_btn" data-type="Decline" onclick="open_duedate_box(this)">Decline</span></span></div>';
        } else {
            $('.perchecklist_' + id).removeClass('waiting_3');
            $('.perchecklist_' + id).attr('msg-pending', false);
            if (adminArra.indexOf(user_id) > -1) {
                // console.log('Assignee change');
            }
            html = '<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span class="success_btn" data-id="' + id + '">Assignee changed</span></div>';
        }
        $('.perchecklist_' + id).find('.assign_info').append(html);
    } else if (data.type == 'assign_accept') {
        $('.ttl_request' + id).remove();
    } else if (data.type == 'decline') {

        //Need assignedby
        $('.ttl_request' + id).remove();
        var html = "";
        if (conversation_type == 'personal') {
            // console.log(11)
            if (data.assign_status == 1) {
                html += '<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span style="color: red">Declined </span>  <span class="success_btn red_color" data-id="' + id + '"> <span class="short_cart_btn" data-type="decline_review" onclick="open_duedate_box(this)" action="declined">Review</span></span></div>';
            }
        } else {
            // console.log(22)
            if (data.assignedby == user_id) {
                // console.log(33)
                if (data.assign_status == 1) {
                    html += '<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span style="color: red">Declined </span>  <span class="success_btn red_color" data-id="' + id + '"> <span class="short_cart_btn" data-type="decline_review" onclick="open_duedate_box(this)" action="declined">Review</span></span></div>';
                }
            }
        }
        $('.perchecklist_' + id).find('.item_toolbar .item_del').hide()
        $('.perchecklist_' + id).find('.item_toolbar .dueDateIcon').hide()
        $('.perchecklist_' + id).find('.assign_info').append(html);
    } else if (data.type == 'cancel_decline') {
        $('.ttl_request' + id).remove();
        var html = "";
        if (conversation_type == 'personal') {
            if (data.assign_status != 1) {
                html += '<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + id + '">Pending Acceptance</span></div>';
            }
        } else {
            if (adminArra.indexOf(user_id) > -1) {
                if (data.assign_status != 1) {
                    html += '<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + id + '">Pending Acceptance</span></div>';
                }
            }
        }
        $('.perchecklist_' + id).find('.item_toolbar .item_del').show();
        $('.perchecklist_' + id).find('.item_toolbar .dueDateIcon').show();
        $('.perchecklist_' + id).find('.item_toolbar .dueDateIcon').removeClass('lock_for_user');
        $('.perchecklist_' + id).find('.assign_info').append(html);
    } else if (data.type == 'request') {

        // Need assignedby
        $('.ttl_request' + id).remove();
        var html = '<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span style="color: red">Extension requested </span>  <span class="success_btn red_color" data-id="' + id + '"> <span class="short_cart_btn" data-type="request_review" onclick="open_duedate_box(this)">Review</span></span></div>';
        if (conversation_type == 'personal') {
            if (data.assign_to != user_id) {
                $('.perchecklist_' + id).find('.assign_info').append(html);
            }
        } else {
            if (data.assignedby == user_id) {
                if (data.assign_to != user_id) {
                    $('.perchecklist_' + id).find('.assign_info').append(html);
                }
            }
        }
        $('.perchecklist_' + id).find('.item_toolbar .item_del').hide();
        $('.perchecklist_' + id).find('.item_toolbar .dueDateIcon').hide();
    } else if (data.type == 'cancel_request') {
        // Need assign_to
        // Need assign_status
        $('.ttl_request' + id).remove();
        var html = '';
        if (data.assign_status != 2) {
            html += '<div class="ttl_requestTime ttl_request' + id + '"><span class="_separetor">|</span> <span class="success_btn red_color" data-id="' + id + '">Pending Acceptance</span></div>';
        }
        // if(adminArra.indexOf(user_id) > -1 || $('.msg_id_'+data.msg_id).find('.user-msg').attr('data-senderid')){
        if (conversation_type == 'personal') {
            if (data.assign_to != user_id) {
                $('.perchecklist_' + id).find('.assign_info').append(html);
            }
        } else {
            // if(adminArra.indexOf(user_id) > -1 ){
            if (data.assign_to != user_id) {
                $('.perchecklist_' + id).find('.assign_info').append(html);
            }
            // }
        }
        $('.perchecklist_' + id).find('.item_toolbar .item_del').show()
        $('.perchecklist_' + id).find('.item_toolbar .dueDateIcon').show()
        $('.perchecklist_' + id).find('.item_toolbar .dueDateIcon').removeClass('lock_for_user');
    } else if (data.type == 'approve') {
        $('.ttl_request' + id).remove();
        $('.perchecklist_' + id).find('.dueDateIcon').show();
        $('.perchecklist_' + id).removeClass('waiting_3');
        $('.perchecklist_' + id).attr('msg-pending', false);
        $('hayven_Modal_Container').removeClass('request_open');
        // var html = '<div class="ttl_requestTime ttl_request'+id+'"><span class="_separetor">|</span> <span class="success_btn" data-id="'+id+'">Request Accepted</span></div>';
        flash_msg_item_bottom(id, 'Request Accepted');
        // <span class="end_due_date _due_date"> Due by: '+(data.end_due_date != null ? moment.unix(Number(data.end_due_date / 1000)).format('ll'):'')+'</span>
        if (data.request_ttl_approved_date != null) {
            var request_ttl_approved_date = (moment(data.request_ttl_approved_date, "YYYY-MM-DD HH:mm").unix() * 1000);
            $('.perchecklist_' + id).find('.assign_info .end_due_date._due_date').text('| Due by: ' + moment.unix(Number(request_ttl_approved_date / 1000)).local().format('MMM Do YYYY - h:mm a'));
            $('.perchecklist_' + id).find('.endDue_date').remove();
            $('.perchecklist_' + id).find('.checkBoxTitle').after('<div class="endDue_date"> Due by: ' + (data.request_ttl_approved_date != null ? moment.unix(Number(request_ttl_approved_date / 1000)).local().format('MMM Do YYYY - h:mm a') : '') + '</div>');
        }
        $('.perchecklist_' + id).find('.assign_info').append(html);
    } else if (data.type == 'mark_complete') {

    }
});

setInterval(function() {
    var alloverDue = $('.dueDateIcon.AssigneeUser.active');

    $.each(alloverDue, function(k, v) {
        var end_time = $(v).attr('end-date');
        if (Number(end_time) < moment().unix()) {
            if ($(v).attr('last_updated_by') !== 'null') {
                if (moment($(v).attr('last_updated_by')).unix() > Number(end_time) && $(v).attr('checklist_status') == '0') {
                    if (!$(v).parents('.checkListItem').hasClass('overdue')) {
                        $(v).parents('.checkListItem').addClass('overdue');
                    } else {
                        $(v).parents('.checkListItem').removeClass('overdue');
                    }
                }
            } else {
                if (!$(v).parents('.checkListItem').hasClass('overdue')) {
                    $(v).parents('.checkListItem').addClass('overdue');
                }
            }

        } else {
            $(v).parents('.checkListItem').removeClass('overdue');
        }

    })

}, 10000);
// ================ Idle timer start ===================
let idle_counter = 0;
let inactive_counter = "";
var idle_timer = setInterval(function() {
    idle_counter++;
    // console.log('idle_counter',idle_counter);
    if (idle_counter % 180 == 0) {
        // $('#headRefreshDialog').css('display','flex');
        update_conv_counter();
    }
}, 1000);
$(document).bind('mousemove click mouseup mousedown keydown keypress keyup submit change mouseenter scroll resize dblclick',
    function() {
        if (idle_counter > 1800) {
            setCookie("reloading_page", "1");
            // $("#reloading_page").show();
            location.reload();
        }
        idle_counter = 0;
    });

document.addEventListener("visibilitychange", function(e) {
    // browser inactive
    if (document.hidden) {
        // console.log("inactive time", e.target.timeline.currentTime)
        inactive_counter = e.target.timeline.currentTime;
    }
    // browser active
    else {
        // console.log("active time", e.target.timeline.currentTime)
        var dif = parseInt((e.target.timeline.currentTime - inactive_counter) / 1000);
        if (dif > 1800) {
            setCookie("reloading_page", "1");
            // $("#reloading_page").show();
            location.reload();
        }
    }
});

jQuery(document).ready(function($) {
    $(function() {
        idle_counter = 0;
        setTimeout(function() {
            setCookie("reloading_page", "0");
            $("#reloading_page").hide();
            $('body').removeClass('sp_popup_open');

        }, 2000);
    });
});

$('#refreshNotificationbtn').on('click', function() {
    location.reload();
});
// $('#closeNotificationbtn').on('click', function () {
// 	$('#headRefreshDialog').css('display','none');
// });
// ============ idle timer end ===================

function checkTagLength() {
    $('#AllTagList').removeClass('showEndMsg');
    if ($('#AllTagList div.tag:visible').length == 0) {
        $('#AllTagList').addClass('showEndMsg');
    }

    closeBtnForTagPop();
}

function triggerFunfilter(event, type) {
    event.preventDefault();
    event.stopImmediatePropagation();
    if (type == 'conversation') {
        $('.searchplot .dropbtn').click();
    } else {
        $('.individual-tab-seach-con .dropbtn').click();
    }
}

function closeBtnForTagPop() {
    // console.log(24757,anyChangeThisAction)
    if ($('#tagAddBtn').is(':visible')) {
        $('#tagpopCloseBtn').text('Cancel');
        $('#updateMessageTag .sharedtag').hide();
    } else {
        if (anyChangeThisAction.length == 0) {
            $('#tagpopCloseBtn').text('Cancel');
            $('#tagAddAndsubmitbtN').show();
            $('#updateMessageTag .sharedtag').show();
            $('#tagAddAndsubmitbtN').attr('onclick', 'closeModal(\'updateMessageTag\')');
            if ($('#updateMessageTag').hasClass('sharedtag_tab')) {
                $('#tagAddAndsubmitbtN').hide();
                $('#tagpopCloseBtn').text('Close');
            }
        } else {
            $('#updateMessageTag .sharedtag').hide();
            if ($('#updateMessageTag').hasClass('sharedtag_tab')) {
                $('#tagAddAndsubmitbtN').hide();
                $('#tagpopCloseBtn').text('Close');
            } else {
                $('#tagAddAndsubmitbtN').attr('onclick', 'submitTagOption()');
                $('#tagpopCloseBtn').text('Cancel');
                $('#tagAddAndsubmitbtN').show();
            }
        }
    }
}

function addCheckedCls(elm) {
    if ($(elm).hasClass('checked')) {
        $(elm).removeClass('checked');
    } else {
        $(elm).addClass('checked');
    }
}

function clearMessagesAction() {
    var check_msg = [];
    $.each($(".clear_messages_option"), function(k, v) {
        if ($(v).hasClass("checked")) {
            check_msg.push($(v).attr("data-cleartype"));
        }
    });
    // if($('#deletewithmedia').hasClass('checked')){
    // 	check_msg.push('media');
    // }
    // if($('#deletewithflagged').hasClass('checked')){
    // 	check_msg.push('flagged');
    // }
    var data = { conversation_id: conversation_id, user_id: user_id, allmyUnreadThread: allmyUnreadThread, check_msg: check_msg };
    if (check_msg.length == 0) {
        $('.moreMenuPopup').hide();
        closeModal('clearMessages');
        call_toastr("No option selected...");
    } else {
        socket.emit('clear_conv', data, (res) => {
            if (res.status) {
                // console.log(res)
                $('#conv' + conversation_id).removeClass('sideActive').trigger('click');
                // var nor = Number($('#conv'+conversation_id).attr('data-nor'));
                // $('#conv'+conversation_id).attr('data-nor', '');
                // if(nor>0){
                // 	var cn = Number($(".thread_message span").text());
                // 	if(cn == nor)
                // 		$(".thread_message").hide();
                // 	$(".thread_message span").text(cn-nor);
                // }
            } else {
                // console.log(res);
            }
            $('.moreMenuPopup').hide();
            closeModal('clearMessages');
        });
    }
}




function viewThreadFiles(event, elm) {
    if ($('#threadReplyPopUp').hasClass('fileActive')) {
        $('#threadReplyPopUp').removeClass('fileActive');
        showFreeliToaster(false);
        $('#workFreeliToaster').attr('data-id', '');
    } else {
        $('#threadReplyPopUp').addClass('fileActive');
        $('#workFreeliToaster').attr('data-id', 'viewFileThreadId');
        var msg = `Showing media thread messages(s). Click the close button to go back.`;
        showFreeliToaster(true, msg);
    }
}

function remove_tag_css() {
    $(".media-tab-body .media_view").removeClass("tag_media_pos");
}


$('body').on('keydown', '#sideBarSearch', function(event) {
    if (event.keyCode == 13) {
        event.preventDefault();
        event.stopImmediatePropagation();
    }
})

function sideBarSearch(e, value) {
    console.log(value)
    e.preventDefault();
    e.stopImmediatePropagation();

    // if(value !== ""){
    // 	if(value.length > 2){
    // 		socket.emit('searchTextOnDetail',{value:value,conversation_list:currentConv_list},(callback)=>{
    // 			console.log(callback);
    // 			if(callback.searchRes.length > 0){
    // 				$('#errMsg').html('');
    // 				$('#errMsg').hide();

    // 				$("#conversation_list_sidebar li").hide();
    // 				$("#pintul li").hide();
    // 				$("#conversation_list_sidebar li").hide();

    // 				$.each(callback.searchRes, function (k, v) {
    // 					if(currentConv_list.indexOf(v.toString()) > -1 ){
    // 						$("#conv"+v).show();
    // 					}
    // 				});
    // 			}else{
    // 				$("#conversation_list_sidebar li").hide();
    // 				$("#pintul li").hide();
    // 				$("#conversation_list_sidebar li").hide();

    // 				$('#errMsg').html('');
    // 				$("#errMsg").text('No Result Found');
    // 				$('#errMsg').show();
    // 				$('#errMsg').css('top','50%');
    // 			}
    // 		});
    // 	}
    // 	// $(".side_bar_list_item .usersName").each(function () {
    // 	// 	if ($(this).text().toLowerCase().search(value.toLowerCase()) > -1) {
    // 	// 		$(this).parents('li').show();
    // 	// 	} else {
    // 	// 		$(this).parents('li').hide();
    // 	// 		$('#conv'+user_id).show();
    // 	// 	}
    // 	// });
    // 	// $('.side_bar_list_item .usersName').unhighlight();
    // 	// $('.side_bar_list_item .usersName').highlight(value);
    // 	// $('#conv'+user_id + ' .usersName').unhighlight();
    // }else{
    // 	$('.side_bar_list_item .usersName').unhighlight();
    // 	$('.side_bar_list_item li').show();
    // 	$('#errMsg').html('');
    // 	$('#errMsg').hide();
    // 	// $("#pintul li").show();
    // 	// $.each(currentConv_list, function (k, v) {
    // 	// 	$("#conv"+v).show();
    // 	// });
    // }
}

function hide_conv_more_than_50() {
    var n = 0;
    $(".side_bar_list_item li").each(function() {
        $(this).unhighlight();
        if (n++ > 50)
            $(this).addClass("conv_hide");
    });
}

function sideBarliSearch(e, val) {
    var code = e.keyCode || e.which;
    if (code == 8) {
        $(".side_bar_list_item li").show();
    }
    // console.log(222222222222222222222222, val.length)
    if (val.length > 0)
        $(".side_bar_list_item li").removeClass("conv_hide");
    else
        hide_conv_more_than_50();

    val = val.replace(/,/g, ';');
    val = val.split(";");

    // var value = val[0].trim();
    // $(".side_bar_list_item li").each(function () {
    // 	$(this).unhighlight();
    // 		var id = $(this).attr("data-conversationid");
    // // if ($(this).find('.usersName .conv_nickname_'+id).text().toLowerCase().search(value.toLowerCase()) > -1) {
    // 		// 	$(this).show();
    // 		// 	$(this).highlight(value);
    // 		if ($(this).find('.usersName').text().toLowerCase().search(value.toLowerCase()) > -1) {
    // 						$(this).show();
    // 		} else {
    // 			$(this).hide();
    // 		}
    // });
    $(".side_bar_list_item li").removeClass('show_fromSub');
    $.each(val, function(k, v) {
        var value = v.trim();
        $(".side_bar_list_item li.itssubconvhide").each(function() {
            $(this).unhighlight();
            var id = $(this).attr("data-conversationid");
            if ($(this).find('.usersName').text().toLowerCase().search(value.toLowerCase()) > -1) {
                var root_id = $(this).attr('data-root_conv_id')
                $('#conv' + root_id).show();
                $('#conv' + root_id).addClass('show_fromSub');
            } else {
                $('#conv' + root_id).hide();
                $('#conv' + root_id).removeClass('show_fromSub');
            }
        });
        $(".side_bar_list_item li:visible").each(function() {
            $(this).unhighlight();
            var id = $(this).attr("data-conversationid");
            if ($(this).find('.usersName').text().toLowerCase().search(value.toLowerCase()) > -1) {
                $(this).show();
            } else {
                if (!$(this).hasClass('show_fromSub')) {
                    $(this).hide();
                }
            }
        });

    });


    if (code == 13) {
        var value = val.join('; ').trim();
        e.preventDefault();
        e.stopImmediatePropagation();
        var html = '<div class="tag_item" id="searchKey">' +
            '<img src="/images/basicAssets/search_icon_for_sidebar.svg" class="flagged">' +
            '<p>' + value + '</p><img onclick="clear_search()" src="/images/basicAssets/Close.svg">' +
            '</div>';
        $('#sideBarSearch').val('');
        $('#connectAsideContainer .tagg_list').html(html).show();
    }
}

function clear_search() {
    $('#searchKey').remove();
    $(".side_bar_list_item li").show();
    $('#connectAsideContainer .tagg_list').hide();
    hide_conv_more_than_50();
}

$('body').on('focus', '.checkBoxTitle', function(event) {
    var id = $(event.target).attr('id');
    // console.log(20418,id);
    placeCaretAtEnd(document.getElementById(id));
})

$('body').on('focus', '.checkListPlainText', function(event) {
    var id = $(event.target).attr('id');
    // console.log(20418,id);
    placeCaretAtEnd(document.getElementById(id));

})



// $('body').on('click','#mediaFilePreview .all-images',function(event){
// 	if($(event.target).hasClass('all-images')){
// 		$(event.target).find('.img-name').trigger('click');
// 	}
// });
// $('body').on('click','#mediaFilePreview .all-videos',function(event){
// 	if($(event.target).hasClass('all-videos')){
// 		$(event.target).find('.per_img_hover_opt .download_ico').trigger('click');
// 	}
// });
// $('body').on('click','#mediaFilePreview .all-audios',function(event){
// 	if($(event.target).hasClass('all-audios')){
// 		$(event.target).find('.per_img_hover_opt .download_ico').trigger('click');
// 	}
// });
// $('body').on('click','#mediaFilePreview .all-files',function(event){
// 	if($(event.target).hasClass('all-files')){
// 		$(event.target).find('.per_img_hover_opt .download_ico').trigger('click');
// 	}
// });
// $('body').on('click','#mediaFilePreview .all-links',function(event){
// 	if($(event.target).hasClass('all-links')){
// 		$(event.target).find('.link-details').trigger('click');
// 	}
// });
var convertToChecklist = false;
var convertToChecklistMsg_id = '';
var convertToChecklistmsg = '';

function convertTask(event) {
    var msg_id = $(event.target).parents('.msgs-form-users').attr('data-msgid');
    $(event.target).parents('.msgs-form-users').find('.shareSingleMsgConnect').trigger('click');
    convertToChecklist = true;
    convertToChecklistmsg = $('#data_msg_body' + msg_id).text();
    convertToChecklistMsg_id = $(event.target).parents('.msgs-form-users').attr('data-msgid');
    $('#shareMessagePopUp').find('.hayven_Modal_heading h1').text("Convert to task");
    $('#shareMessagePopUp').find('.sub_btn').text("Convert");

    selectedShareMember = [];
    alluserandrooms = [];
    $('#shareMessagePopUp').css('display', 'flex');
    var msg_id = $(event.target).closest('.msgs-form-users').attr('data-msgid');
    $('#shareMessagePopUp').find('.shareButton').attr('data-msgid', msg_id);
    $('#shareMessagePopUp').find('.sub_btn').attr('data-msgid', msg_id);
    $('.searchInput').html("");
    $('#shareSuggestedList').html("");
    $('.no_of_user_left_to_add span').text(10 - selectedShareMember.length);
    $('#shareMsgminiHolder').html('');
    $('#shareMsgminiHolder').next('input').val('');

    var countFile = 0;
    var src = '';
    var data1 = $(event.target).closest('.msgs-form-users').find('.fil_attach.attach-file').length;
    var data2 = $(event.target).closest('.msgs-form-users').find('.msg_per_img_div').length;
    if (data1 == 1) {
        countFile += data1;
        src = '';
        src = $(event.target).closest('.msgs-form-users').find('.fil_attach.attach-file').attr('data-src');
    }

    if (data2 == 1) {
        countFile += data2;
        src = '';
        src = $(event.target).closest('.msgs-form-users').find('.msg_per_img_div').find('img').attr('src');
    }

    if (countFile == 1) {
        // console.log(src);
        $('.singleFile_link').show();
        $('#shareLink2').text(src);
        $('#shareLink2').focus();
        $('#shareLink2').select();
    } else {
        $('.singleFile_link').hide();
    }
    // console.log(countFile);


    // if($('#roomIdDiv').attr('topic-type') == 'work'){
    var userid = user_id;
    if (allconvdetails.length > 0) {
        $.each(allconvdetails, function(k, v) {
            var data = {
                conversation_id: v.conversation_id,
                conv_img: v.conv_img,
                title: v.title,
                type: 'group',
                participants_sub: v.participants_sub

            }
            if (v.single == 'no') {
                if (v.title != '' && v.title != null) {
                    alluserandrooms.push(data);
                    // console.log(6519,v);
                    //$('#shareSuggestedList').append(userListDesign(v));
                }
            }
        });
        $.each(user_list, function(k, v) {
            var data = {
                conversation_id: v.id,
                conv_img: v.img,
                title: v.fullname,
                type: 'user',
                participants_sub: []
            }
            if (!has_permission(v.id, 1600) && v.is_delete == 0) {
                alluserandrooms.push(data);
            }
        });
        var newdata = _.sortBy(alluserandrooms, ["title", 'asc']);
        $('#shareSuggestedList').html("");
        $.each(newdata, function(k, v) {
            if ($('#suggestUsers' + v.conversation_id).length == 0) {
                v.participants_sub = (v.participants_sub == null ? [] : v.participants_sub)
                if (v.participants_sub.indexOf(user_id) == -1) {
                    $('#shareSuggestedList').append(userListDesign(v));
                }
            }
        })
    } else {
        socket.emit('myTopicList', { userid }, (respons) => {
            // console.log(6525,respons);
            if (respons.staus) {
                allRooms = respons.rooms;
                $.each(respons.rooms, function(k, v) {
                    allconvdetails.push(v);
                    if (v.conversation_id !== conversation_id) {
                        if (v.single == 'no') {
                            if (v.title != '' && v.title != null) {
                                var data = {
                                    conversation_id: v.conversation_id,
                                    conv_img: v.conv_img,
                                    title: v.title,
                                    type: 'group',
                                    participants_sub: v.participants_sub
                                }
                                alluserandrooms.push(data);
                                //$('#shareSuggestedList').append(userListDesign(v));
                            }
                        }
                    }
                });
                $.each(user_list, function(k, v) {
                    var data = {
                        conversation_id: v.id,
                        conv_img: v.img,
                        title: v.fullname,
                        type: 'user',
                        participants_sub: []
                    }
                    if (!has_permission(v.id, 1600) && v.is_delete == 0) {

                        alluserandrooms.push(data);
                    }
                });
                var newdata = _.sortBy(alluserandrooms, ["title", 'asc']);

                $.each(newdata, function(k, v) {
                    v.participants_sub = (v.participants_sub == null ? [] : v.participants_sub)
                    if (v.participants_sub.indexOf(user_id) == -1) {
                        $('#shareSuggestedList').append(userListDesign(v));
                    }
                })
            }
        });
    }

    // }else{
    // 	var user_list = access_user_list;
    // 	$.each(user_list, function(k,v){
    // 		if(participants.indexOf(v.id) == -1 && v.id !== user_id){
    // 			$('#shareSuggestedList').append(userListDesign(v));
    // 		}
    // 	});
    // }
    popupMouseEnter();
    // var msg_id = $(event.target).parents('.msgs-form-users').attr('data-msgid');

    // var msg = $('#data_msg_body'+msg_id).text();
    // socket.emit('convertTask',{msg_body:msg,msg_id:msg_id,conversation_id:conversation_id,user_id:user_id,sender_name:user_fullname,sender_img:user_img});
}


function onsearchTagConvHead() {

    if (input_val == '') {
        $('.headTagIconAppend').find('li').unhighlight();
        $('.headTagIconAppend').find('li').show();
    } else {
        $('.headTagIconAppend').find('li').unhighlight();
        $('.headTagIconAppend').find('li').highlight(input_val);
        $.each($('.headTagIconAppend').find('li'), function() {
            if ($(this).find('.highlight').length == 0) {
                $(this).hide();
            } else {
                $(this).show();
            }
        });
        var value = $('.headTagIconAppend li[data-title="' + input_val + '"]').text();
        if (input_val == value) {
            if (e.keyCode == 13) {
                e.preventDefault();
                e.stopImmediatePropagation();
                // $('#headTagIconAppend li[data-title="'+input_val+'"]').trigger('click');
                // $(elm).val("");
                $('.headTagIconAppend').find('li').unhighlight();
                $('.headTagIconAppend').find('li').show();
            }
        }
    }
}


function searchTagConvHead(e, elm) {
    var str = $(elm).val();
    if (str == '') {
        $('.headTagIconAppend').find('li').unhighlight();
        $('.headTagIconAppend').find('li').show();
    } else {
        $('.headTagIconAppend').find('li').unhighlight();
        $('.headTagIconAppend').find('li').highlight(str);
        $.each($('.headTagIconAppend').find('li'), function() {
            if ($(this).find('.highlight').length == 0) {
                $(this).hide();
            } else {
                $(this).show();
            }
        });
        var value = $('.headTagIconAppend li[data-title="' + str + '"]').text();
        if (str == value) {
            if (e.keyCode == 13) {
                e.preventDefault();
                e.stopImmediatePropagation();
                $('.headTagIconAppend li[data-title="' + str + '"]').trigger('click');
                $(elm).val("");
                $('.headTagIconAppend').find('li').unhighlight();
                $('.headTagIconAppend').find('li').show();
            }
        }
        if (str == 'tag :') {
            triggerFilterTag(str)

        }
    }
}

var tagitm;
var tagitmid;

function filterOnlyTagMsg(elm) {
    var tag_id = $(elm).attr('tag-id');
    var str = $(elm).attr('data-title');
    tagitm = $(elm).attr('data-title');
    tagitmid = tag_id;
    // $('#input_values input').attr('id', "searchAfter").attr('placeholder', "Search  messsae(s) in conversation").attr('onkeyup','searchThisThread(event,this)').focus().val('tag : '+str);;
    // if($(elm).hasClass('active')){
    // 	$(elm).removeClass('active');
    // 	removeA(filterOnlyTagMsgA,tag_id);
    // 	$('.tag_srcContainer').find('#_addedTag_'+tag_id).remove();
    // }else{
    // $(elm).addClass('active');
    if ($('#mediaFilePreview').is(':visible')) {

    } else {
        if (tag_id == 'filteTagOnly') {
            if ($(elm).hasClass('active')) {
                $('#filterTagOnlyBtn2').removeClass('active');
                $('#filterTagOnlyBtn1').removeClass('active');
                removeA(filterOnlyTagMsgA, tag_id);
                filterOnlyTagMsgATrigger = conversation_id;
                $('#conv' + conversation_id).click();
            } else {
                $('#filterTagOnlyBtn2').addClass('active');
                $('#filterTagOnlyBtn1').addClass('active');
                filterOnlyTagMsgA.push(tag_id);
                filterOnlyTagMsgATrigger = conversation_id;
                $('#conv' + conversation_id).click();
            }
        } else {
            $('#filterTagOnlyBtn2').removeClass('active');
            $('#filterTagOnlyBtn1').removeClass('active');
            removeA(filterOnlyTagMsgA, tag_id);

            filterOnlyTagMsgA.push(tag_id);
            $(elm).remove();
            $('#containSelectedTag').prepend('<div class="_addedTag" id="_addedTag_' + tag_id + '"><p>' + str + '</p><span tag-name="' + str + '" tag-id="' + tag_id + '" class="_removeAddedTag" onclick="_removeAddedTag(this)"></span></div>');
        }
    }
    // }
}

function _removeAddedTag(el) {
    var tag_id = $(el).attr('tag-id');
    var str = $(el).attr('tag-name');

    removeA(filterOnlyTagMsgA, tag_id);
    $('.tag_srcContainer').find('#_addedTag_' + tag_id).remove();
    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            if (v.tag_id == tag_id) {

                $('#headTagIconAppend').prepend(getSearchTagLi(v));
            }
        }
    });
    getRoomWiseShareTag(conversation_id);

}

function getTagToCreateorId(tag_id) {
    var created_by = '';
    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            if (v.tag_id == tag_id) {
                created_by = v.tagged_by;
            }
        }
    });

    return created_by;
}


function getUserEmailSpan(user_id) {
    var html = '';
    if (user_id != '') {
        html = '<span class="liemail">[' + findObjForUser(user_id).fullname + ']</span>';
    }

    return html;
}

function filterbyTagFiles() {
    var tagId = tagitmid;
    var allMedia = $('[tag_array]');
    $.each(allMedia, function(k, v) {
        if ($(v).attr('tag_array') != 'null') {
            var arry = [];
            arry = $(v).attr('tag_array').split(',');
            if (arry.indexOf(tagId) > -1) {
                $(v).show();
            } else {
                $(v).hide();
            }
        } else {
            $(v).hide();
        }
        if ($('#mediaImgsTab').hasClass('active')) {
            if ($(v).parents('.date-by-images').find('.all-images:visible').length == 0) {
                $(v).parents('.date-by-images').hide();
            }
        } else if ($('#mediaViedeosTab').hasClass('active')) {
            if ($(v).parents('.date-by-videos').find('.all-videos:visible').length == 0) {
                $(v).parents('.date-by-videos').hide();
            }
        } else if ($('#mediaAudiosTab').hasClass('active')) {
            if ($(v).parents('.date-by-audios').find('.all-audios:visible').length == 0) {
                $(v).parents('.date-by-audios').hide();
            }
        } else if ($('#mediaFilesTab').hasClass('active')) {
            if ($(v).parents('.date-by-files').find('.all-files:visible').length == 0) {
                $(v).parents('.date-by-files').hide();
            }
        }
    })

}

function _tag_goBtn() {
    if ($('#mediaFilePreview').is(':visible')) {
        $('.headTagIconAppend').hide();
        $('#search_different_tab').focus().val('tag : ' + tagitm);
        filterbyTagFiles();
        changeFilterAction();

    } else {
        filterOnlyTagMsgATrigger = conversation_id;
        $('.conv_tagOptions').find('.srcConv_tag').removeClass('activeUl');
        $('.conv_tagOptions').hide();
        $('#conv' + conversation_id).click();

        $('.chat-head-calling').hide();
        $('#input_values').show().focus();
        $('#headSearchClose').show();
        $('.src_total_msg').show();
        $('#input_values input').attr('id', "searchAfter").attr('placeholder', "Search  messsae(s) in conversation").attr('onkeyup', 'searchThisThread(event,this)').focus().val('tag : ' + tagitm);
    }


}

function searchDivOn(event, elm) {



    if ($(event.target).hasClass('srcConv_tag')) {
        if ($(elm).hasClass('activeUl')) { $(elm).removeClass('activeUl') } else {
            $(elm).addClass('activeUl');
            $('.multi-search').focus().val(input_val);
        }
    }
    onsearchTagConvHead();
}

$('body').on('click', '.checklistActive_grid_view .msgs-form-users', function(event) {
    if (!$(event.target).hasClass('editable_checklistMsg')) {
        if ($(event.target).hasClass('msg-time')) {
            $(event.target).parents('.msgs-form-users').find('.msgCheckListContainer').trigger('click');
        } else if ($(event.target).hasClass('user_info_sec') && !$(event.target).hasClass('sndr_name')) {
            $(event.target).parents('.msgs-form-users').find('.msgCheckListContainer').trigger('click');
        } else {
            $(event.target).find('.msgCheckListContainer').trigger('click');
        }
    }
});

$('body').on('click', '.main-thread-msgs.main_thread', function(event) {
    if ($(event.target).parents('.main-thread-msgs.main_thread').find('.msgCheckListContainer').length > 0) {
        var _m = $(event.target).parents('.main-thread-msgs.main_thread').find('.msgCheckListContainer').attr('msg-id');
        var _u = $(event.target).parents('.main-thread-msgs.main_thread').find('.msgCheckListContainer').attr('data-sender');
        closeAllPopUp();
        ediCheckListMessage(_m, _u);
    }
});

var sortingtype = 'msgbody';
var sortingStatus = false;

function sortingChecklist(elm, type) {
    var divs = $("#taskList_panel .msgs-form-users");
    if (type == 'title') {
        sortingtype = 'msgbody';
    } else if (type == 'room') {
        sortingtype = 'room';
    } else if (type == 'created_by') {
        sortingtype = 'createdby';
    } else if (type == 'last_modified') {
        sortingtype = 'lastmodified';
    } else if (type == 'last_modified_by') {
        sortingtype = 'lastmodifiedby';
    } else if (type == 'itremcounter') {
        sortingtype = 'checklistlength';
    }
    if ($(elm).hasClass('active')) {
        $(elm).removeClass('active');
        sortingStatus = false;
        $("#taskList_panel .msgs-form-users").sort(Ascending_sort).appendTo('#taskList_panel');
    } else {
        $('.checklistListViewHeader').find('li').removeClass('active');
        $(elm).addClass('active');
        sortingStatus = true;
        $("#taskList_panel .msgs-form-users").sort(Ascending_sort).appendTo('#taskList_panel');
    }
}


function Ascending_sort(a, b) {
    // console.log(a,b);
    if (sortingStatus) {
        return ($(b).attr('data-' + sortingtype).toUpperCase()) < ($(a).attr('data-' + sortingtype).toUpperCase()) ? 1 : -1;
    } else {
        return ($(a).attr('data-' + sortingtype).toUpperCase()) < ($(b).attr('data-' + sortingtype).toUpperCase()) ? 1 : -1;
    }

}

function sortingMsgList(el, type) {
    if (type == 'title') {
        sortingtype = 'msgbody';
    } else if (type == 'room') {
        sortingtype = 'room';
    } else if (type == 'sender') {
        sortingtype = 'createdby';
    } else if (type == 'createdAt') {
        sortingtype = 'lastmodified';
    }

    if ($(el).hasClass('active')) {
        $(el).removeClass('active');
        sortingStatus = false;
        $("#msg-container .msgs-form-users").sort(sortListMsg).appendTo('#msg-container');
    } else {
        $('.msgListViewHeader').find('li').removeClass('active');
        $(el).addClass('active');
        sortingStatus = true;
        $("#msg-container .msgs-form-users").sort(sortListMsg).appendTo('#msg-container');
    }
}

function sortListMsg(a, b) {
    if (sortingStatus) {
        return ($(b).attr('data-' + sortingtype).toUpperCase()) < ($(a).attr('data-' + sortingtype).toUpperCase()) ? 1 : -1;
    } else {
        return ($(a).attr('data-' + sortingtype).toUpperCase()) < ($(b).attr('data-' + sortingtype).toUpperCase()) ? 1 : -1;
    }
}

function approvettl(event, elm) {
    event.preventDefault();
    event.stopImmediatePropagation();
    var checklist_id = $(elm).attr('data-id');
    if ($(elm).hasClass('success_btn')) {
        $(elm).parents('.checkListItem').find('.dueDateIcon').click();
    } else {

        var updateData = {
            msg_id: $(elm).parents('.checkListItem').attr('msg_id'),
            checklist_id: checklist_id,
            request_ttl_date: null,
            request_ttl_message: null,
            request_ttl_time: null,
            Request_ttl_by: null,
            type: 'cancel'
        }
        $('.ttl_request' + checklist_id).remove();
        // console.log(updateData)
        socket.emit('manage_checklist', updateData, function(res) {
            flash_msg_updated_fun(updateData.msg_id, 'Checklist updated');
            // toastr["success"]("Checklist updated");
            flash_msg_item_bottom(updateData.checklist_id);
        })
    }
}


function findColorThisTag(tag_id) {
    var r = null;
    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            if (v.tag_id == tag_id) {
                r = v.tag_color;
            }
        }
    });
    return r;

}


function selectToSharetag(elm) {
    var status = false;

    if ($(elm).find('.Custom_checkboxF').hasClass('active')) {
        status = true;
    }
    if (status) {
        $(elm).find('.Custom_checkboxF').removeClass('active');
    } else {
        $(elm).find('.Custom_checkboxF').addClass('active');
    }
}


function checklistCounterLenthString(data) {
    if (data == undefined || data.length == 0) return "";
    if ($("#conv" + data[0].convid).length != 1) return "";
    var c = 0;
    var i = 0;
    var t = 0;
    var response_req = 0;
    var str = '';
    $.each(data, function(k, v) {
        var due_date_is_today = false;
        var need_due_check = 'yes';
        if (checklist_item_due_date_check(v) === true) {
            due_date_is_today = true;
        }

        if (v.checklist_status == null) {
            v.checklist_status = 0
        }
        if (v.request_ttl_approved_date != null) {
            v.end_due_date = (moment(v.request_ttl_approved_date, "YYYY-MM-DD HH:mm").unix() * 1000);
        }
        var assusr = v.alternative_assign_to == null ? v.assign_to : v.alternative_assign_to;
        if (v.checklist_status == 0) {
            // if((cv.created_by == user_id || adminArra.indexOf(user_id) > -1) && assusr != user_id ){
            if (assusr != user_id) {
                if (v.assign_status == 1 && v.assignedby == user_id) {
                    // html += '<div class="ttl_requestTime ttl_request'+cv.checklist_id+'"><span class="success_btn red_color" data-id="'+cv.checklist_id+'">Assigned user declined this task.<span class="short_cart_btn" onclick="open_duedate_box(this)">Review</span></span></div>';
                    response_req++;
                    need_due_check = 'no';
                    // console.log(v.msg_id, v.msg_title, v.checklist_title)
                } else if (v.Request_ttl_by != null && v.assignedby == user_id) {
                    // html += '<div class="ttl_requestTime ttl_request'+cv.checklist_id+'"><span class="success_btn red_color" data-id="'+cv.checklist_id+'">Time extension has been requested, please review and take action <span class="short_cart_btn" onclick="open_duedate_box(this)">Review</span></span></div>';
                    response_req++;
                    need_due_check = 'no';
                }
                if (v.assign_status == user_id && v.assignedby == user_id && v.Request_ttl_by == null && v.end_due_date != null) {
                    // html += '<div class="ttl_requestTime ttl_request'+cv.checklist_id+'">| <span class="success_btn red_color" data-id="'+cv.checklist_id+'">Pending Acceptance. </span></div>';
                }
            } else {
                if (v.assign_status != null && v.assign_status != 2 && v.assign_status != user_id && assusr == user_id) {
                    if ((v.assignee_change_reason != null || v.assign_decline_note != null) && v.assign_status != 1 && v.Request_ttl_by == null) {
                        response_req++;
                        need_due_check = 'no';
                        // console.log(v.msg_id, v.msg_title, v.checklist_title)
                    } else if (v.assign_status == 1 && assusr == user_id) {
                        // html += '<div class="ttl_requestTime ttl_request'+cv.checklist_id+'"><span class="success_btn red_color" data-id="'+cv.checklist_id+'"><span class="short_cart_btn" data-type="cancel_decline" msg-id="'+updateData.msg_id+'" checklist-id="'+updateData.checklist_id+'" data-reciver="'+receive_id+'" onclick="requesttlBtn(this)">Cancel Decline</span></span></div>';
                    } else if (v.Request_ttl_by == user_id) {
                        // html += '<div class="ttl_requestTime ttl_request'+cv.checklist_id+'"><span class="success_btn red_color" data-id="'+cv.checklist_id+'"><span class="short_cart_btn" data-type="cancel_request" onclick="requesttlBtn(this)">Cancel Extension request</span></span></div>'
                    } else {
                        response_req++;
                        need_due_check = 'no';
                        // console.log(v.msg_id, v.msg_title, v.checklist_title)
                    }
                }
            }

            if (need_due_check == 'yes' && due_date_is_today && assusr == user_id && v.assignedby != user_id) {
                if (v.assign_status == 2 && v.Request_ttl_by == user_id) {} else {
                    if (v.Request_ttl_by == null) {
                        response_req++;
                        // console.log(v.msg_id, v.msg_title, v.checklist_title)
                    }
                }
            }
        }

        t++;
        if (v.checklist_status == 1) {
            c++;
        } else {
            i++;
        }
    });
    return (t == c) ? -1 : response_req;
}

function filter_checklist_text(e) {
    // $('.msgs-form-users .checkListPlainText').unhighlight();
    // $('.msgs-form-users .checkListPlainText').highlight(str);		

    // $('.msgs-form-users .checklisticon_vew').unhighlight();
    // $('.msgs-form-users .checklisticon_vew').highlight(str);

    // $.each($('.msgs-form-users'), function () {
    // 	if ($(this).find('.highlight').length == 0) {
    // 		$(this).prev('.msg-separetor').hide();
    // 		$(this).hide();
    // 	} else {
    // 		$(this).prev('.msg-separetor').show();
    // 		$(this).show();
    // 	}
    // });
    // if(str == ''){
    // 	$('.msgs-form-users').show();
    // 	$('#msg-container').removeClass('all_hide');
    // }
    // console.log(11, $('.msgs-form-users').length, $('.msgs-form-users[style="display: none;"]').length);
    // if ($('.msgs-form-users').length == $('.msgs-form-users[style="display: none;"]').length) {
    // 	$('#msg-container').addClass('all_hide');
    // }else {
    // 	$('#msg-container').removeClass('all_hide');
    // }
    if (e.keyCode == 13) {
        // var str = $('#filter_checklist_text').val().trim().toLowerCase();
        // if(str == "") {
        // 	gotoChecklistTaskPage(1, 'off');
        // 	$('.msgs-form-users .checklist_list_view_design li').unhighlight();
        // }
        // else{
        // 	my_all_task_assignment_filterd = [];

        // 	$.each(my_all_task_assignment, function(k, v){
        // 		var name = findObjForUser(v.last_update_user).fullname;
        // 		var convname = get_conversation_obj(v.conversation_id).conversation_title;

        // 		if(v.msg_body.indexOf(str) > -1) 
        // 			my_all_task_assignment_filterd.push(v);

        // 		if(convname !== undefined){ 
        // 			if(convname.indexOf(str) > -1)
        // 				my_all_task_assignment_filterd.push(v); 
        // 		}
        // 		if(name !== undefined){ 
        // 			if(name.indexOf(str) > -1)
        // 				my_all_task_assignment_filterd.push(v); 
        // 		}
        // 	});

        // 	gotoChecklistTaskPage(1, 'on');
        // 	$('.msgs-form-users .checklist_list_view_design li').unhighlight();
        // 	$('.msgs-form-users .checklist_list_view_design li').highlight(str);
        // }
        searchChecklistFT();
    } else {
        var v = $(e.target).val();
        if (v != '') {
            $(e.target).parents('.inputcheclist').addClass('active');
        } else {
            $(e.target).parents('.inputcheclist').removeClass('active');
        }
    }
}

function check_search_val() {
    if ($('#_inputBar').hasClass("display_str_add")) {
        $('#_inputBar').val($('#_inputBar').attr("data-value")).removeClass("display_str_add");
    }
}

function searchChecklistFT() {
    var str = $('#groupChatContainer #search_for').val().trim().toLowerCase();
    var selected_ids = [];
    var selected_ids_name = [];
    $.each($('#selectedUserli .mini_item'), function(k, v) {
        selected_ids.push($(v).attr('data-uid'));
        selected_ids_name.push($(v).text());
    });
    var sd = $("#groupChatContainer #select_startDate").val();
    var ed = $("#groupChatContainer #select_endDate").val();
    var display_str = "";
    if (str == "" && selected_ids.length == 0 && sd == "" && ed == "") {
        gotoChecklistTaskPage(1, 'off');
        $('.msgs-form-users .checklist_list_view_design li').unhighlight();
    } else {
        my_all_task_assignment_filterd = [];

        // title search into room name or checklist title
        if (str != "") {
            display_str += 'title:' + str;
            $.each(my_all_task_assignment, function(k, v) {
                // var name = findObjForUser(v.last_update_user).fullname;
                var convname = get_conversation_obj(v.conversation_id).conversation_title;

                if (v.msg_body.toLowerCase().indexOf(str) > -1)
                    my_all_task_assignment_filterd.push(v);

                if (convname.toLowerCase() !== undefined) {
                    if (convname.indexOf(str) > -1)
                        my_all_task_assignment_filterd.push(v);
                }
            });
        }

        // participants search
        if (selected_ids.length > 0) {
            var alltask = (my_all_task_assignment_filterd.length > 0) ? my_all_task_assignment_filterd : my_all_task_assignment;
            if (alltask.length > 0) {
                display_str += display_str != "" ? " and participants:" + selected_ids_name.join(' or ') : "participants:" + selected_ids_name.join(' or ');
                my_all_task_assignment_filterd = [];
                $.each(alltask, function(k, v) {
                    var participants = get_conversation_obj(v.conversation_id).participants;
                    var flag = true;
                    for (let i = 0; i < selected_ids.length; i++) {
                        if (participants.indexOf(selected_ids[i]) == -1) flag = false;
                    }
                    if (flag) my_all_task_assignment_filterd.push(v);
                });
            }
        }

        // start date end date search
        if (sd != '' || ed != '') {
            var alltask = (my_all_task_assignment_filterd.length > 0) ? my_all_task_assignment_filterd : my_all_task_assignment;
            if (alltask.length > 0) {
                sd = sd != '' ? new Date(sd) : new Date('2000-01-01');
                ed = ed != '' ? new Date(ed) : new Date();
                console.log(30638, sd, ed);
                display_str += display_str != "" ? " and due date:" + moment(sd).format("DD-MMM-YYYY") + " to " + moment(ed).format("DD-MMM-YYYY") : "due date:" + moment(sd).format("DD-MMM-YYYY") + " to " + moment(ed).format("DD-MMM-YYYY");
                my_all_task_assignment_filterd = [];
                $.each(alltask, function(k, v) {
                    var compareDate = moment(v.created_at);
                    var startDate = moment(sd);
                    var endDate = moment(ed);

                    if (compareDate.isBetween(startDate, endDate))
                        my_all_task_assignment_filterd.push(v);
                });
            }
        }
        gotoChecklistTaskPage(1, 'on');
        $('.msgs-form-users .checklist_list_view_design li').unhighlight();
        $('.msgs-form-users .checklist_list_view_design li').highlight(str);
        // _searchForm();
        $('#_searchForm').hide();
        $('#_inputBar').val(display_str).attr("data-value", str).addClass("display_str_add").blur();
    }
}

function getTooltipForshareTag(tag_id) {
    var r = '';

    $.each(allUserTagList, function(k, v) {
        if (v != undefined) {
            if (v.tag_id == tag_id) {
                if (v.shared_tag != null) {
                    if (v.shared_tag == user_id) {
                        r = 'data-balloon="Tagged by You" data-balloon-pos="up"';
                    } else {
                        r = 'data-balloon="Tagged by ' + findObjForUser(v.shared_tag).fullname + '" data-balloon-pos="up"';
                    }
                } else {
                    r = 'data-balloon="Tagged by You" data-balloon-pos="up"';
                }
            }
        }
    });

    return r;
}

function gethtmlForFileTag(file_id, file_tags,file_data) {
    var tooltipcount = 0;
    var html = '<div class="attach_tag onlyFileTag active" tooltipcount="'+tooltipcount+'" id="thisMsgTagLists' + file_id + '" data-id="' + file_tags.join(',') + '">';
    var useLength = 0;
    var newHtml = '';
    var printdata = [];
    var fileAcitvity = {};
    if(file_data.tag_list_with_user != null && file_data.tag_list_with_user != 'null'){
        fileAcitvity = JSON.parse(file_data.tag_list_with_user);
    }

    $.each(allUserTagList, function(k, v) {
        console.log(k,v);
        if (v != undefined) {
            if (file_tags.indexOf(v.tag_id) > -1) {
                var st = '';
                if (v.shared_tag != null) {
                    st = ' shared_tag_user ';
                    if (v.shared_tag !== user_id) {
                        st = st + ' others_userTag ';
                    }
                }
                if(useLength < 3){
                    if (printdata.indexOf(v.tag_id) == -1) {
                        printdata.push(v.tag_id);
                    }
                	// if(v.tag_type == 'public'){
                	// 	html += '<span onclick="triggerfileTagIco(event,\''+file_id+'\')" class="file_id_cls tag_design public_tag_team tag_name_view_'+v.tag_id+'" style="'+(v.tag_color != null ? 'background-color:'+v.tag_color+'':'')+'" '+getTooltipForshareTag(v.tag_id)+' ><span class="file_id_cls">'+v.title+'</span> </span>';
                	// }else{
                	// 	html += '<span onclick="triggerfileTagIco(event,\''+file_id+'\')" class=" file_id_cls tag_design  tag_name_view_'+v.tag_id+st+'" '+getTooltipForshareTag(v.tag_id)+' ><span class="file_id_cls">'+v.title+'</span> </span>';
                	// }
                    // html += '<span onclick="triggerfileTagIco(event,\''+file_id+'\')"      class="file_id_cls tag_design public_tag_team tag_name_view_'+v.tag_id+'" style="'+(v.tag_color != null ? 'background-color:'+v.tag_color+'':'')+'" '+getTooltipForshareTag(v.tag_id)+' ><span class="file_id_cls">'+v.title+'</span> </span>';
                        html += '<span style="background-color:'+v.tag_color+'" class="file_id_cls tag_design 11" onclick="triggerfileTagIco(event,\'' + file_id + '\')" title="'+v.title +' ['+(findObjForUser(fileAcitvity[v.tag_id]).fullname == undefined ? 'User not found':findObjForUser(fileAcitvity[v.tag_id]).fullname )+']'+'">'+v.title+'</span>';

                }else{
                    tooltipcount++;
                }
                // if(useLength == 0){
                // 	html += '<span> '+v.title+' </span>';
                // }else{
                // 	if(this_tag_list.length == (useLength+1)){
                // 		html += ' & <span> '+v.title+' </span>';
                // 	}else{
                // 		html += '<span>, '+v.title+' </span>';
                // 	}
                // }
                useLength++;
            }
        }
    });
    // if (useLength > 0) {
    //     html += '<span class="ToggleTagActionMsg counter_tag' + useLength + '" onclick="thisMsgTags(this)">(' + useLength + ')</span>'
    // }

    // html += newHtml;
    html += '</div>';
    if (tooltipcount > 0) {
        html += '<span class="file_id_cls tag_design moreTooltipBtn test_1" onclick="triggerfileTagIco(event,\'' + file_id + '\')"> +' + tooltipcount + '</span>'
        html += '<div class="tag_toolTip for_tag" data-pos="top">'
            // html += 	'<span class="tooltip_close" onclick="tooltip_close()"></span>'
        html += '<div class="tooltip_body">'
        useLength = 0;
        $.each(allUserTagList, function(k, v) {
            if (v != undefined) {
                if (file_tags.indexOf(v.tag_id) > -1 && printdata.indexOf(v.tag_id) == -1) {
                    var st = '';
                    if (v.shared_tag != null) {
                        st = ' shared_tag_user ';
                        if (v.shared_tag !== user_id) {
                            st = st + ' others_userTag ';
                        }
                    }
                    // if(useLength > 2){
                    // 	if(v.tag_type == 'public'){
                    // 		html += '<li class="tag_name_view_'+v.tag_id+'" style="'+(v.tag_color != null ? 'color:'+v.tag_color+'':'var(--PrimaryC)')+'" '+getTooltipForshareTag(v.tag_id)+'><span>'+v.title+'</span> </li>';
                    // 	}else{
                    var sc = ''
                    if (v.shared_tag != null) {
                        if (v.shared_tag !== user_id) {
                            sc = 'color:#F55';
                        } else {
                            sc = 'color:var(--PrimaryC)';
                        }
                    }
                    html += '<li class="modified_tooltip tag_name_view_' + v.tag_id + st + '" style="' + sc + '"><span>' + v.title + '<span class="miniTitle">[' + findObjForUser(v.tagged_by).fullname + ']</span></span> </li>';
                    // 	}
                    // }
                    useLength++;
                }
            }
        });
        html += '</div>'
        html += '</div>'
    }
    // html += '</div>';

    return html;
}


function triggerfileTagIco(event, file_id) {
    event.preventDefault();
    event.stopImmediatePropagation();
    if ($(event.target).parents('.lightbox').length > 0) {

        $('#oneFileTag' + file_id).prev('.per_img_hover_opt').find('.img_action.tag_ico').click();
    } else {

        $('#oneFileTag' + file_id).next('.per_img_hover_opt').find('.img_action.tag_ico').click();
    }

}

function getSearchTagLi(data) {
    return '<li data-balloon="Click to search a tag in conversation" data-balloon-pos="up" class="per_tag_li ' + (data.shared_tag != null ? ' shared_tag_user' : '') + ' filter_tag_' + data.tag_id + '" onclick="filterOnlyTagMsg(this)" tag-id="' + data.tag_id + '" data-title="' + data.title + '"><span class="tag_title_search" >' + data.title + '</span>' + getUserEmailSpan(data.tagged_by) + '</li>'
}

function changeTagViewOption() {
    if ($('#viewAllTagActive').hasClass('active')) {
        $('#viewAllTagActive').removeClass('active');
        $('#viewAllTagActive').addClass('inactive');
        var allSpan = $('#visibleTagMedia').find('span.active');
        $.each(allSpan, function(k, v) {
            $(v).click();
        });
    } else {
        $('#viewAllTagActive').addClass('active');
        $('#viewAllTagActive').removeClass('inactive');
        var allSpan = $('#visibleTagMedia').find('span');
        $.each(allSpan, function(k, v) {
            if (!$(v).hasClass('active') && $(v).attr('id') !== 'viewAllTagActive') {
                $(v).click();
            }
        });
    }
}

function checkViewAllBtnStatus() {
    var allSpan = $('#visibleTagMedia').find('span');
    var s = true;
    $.each(allSpan, function(k, v) {
        if ($(v).hasClass('active')) {
            s = false;
        }
    });
    if (s) {
        // $('#viewAllTagActive').removeClass('active');
        // $('#viewAllTagActive').addClass('inactive');
        $('#mediaFilePreview').removeClass('AllActiveCls');
        $('#mediaFilePreview').addClass('AllActiveCls');
        $('#mediaTags .search_msg').remove();
        $('#mediaTags .date-by-tags').show();
        $('#mediaTags .all-images ').show();
        $('#mediaTags .all-videos ').show();
        $('#mediaTags .all-audios ').show();
        $('#mediaTags .all-files ').show();

    } else {
        $('#mediaFilePreview').removeClass('AllActiveCls');
        // $('#viewAllTagActive').addClass('active');
        // $('#viewAllTagActive').removeClass('inactive');

    }


}

function filterTagMedia(ele, type, value) {
    var v = value;
    if (type == 'remove') {
        $('#tagCustomid' + v + '').hide();
        $(ele).removeClass('active');
        $(ele).addClass('inactive');
        $(ele).attr('data-type', 'add');

    } else if (type == 'add') {
        if ($('#mediaFilePreview').hasClass('AllActiveCls')) {
            $('#mediaTags').find('.date-by-tags').hide();
        }
        $('#tagCustomid' + v + '').show();
        $(ele).removeClass('inactive');
        $(ele).addClass('active');
        $(ele).attr('data-type', 'remove');

    }

    if ($('#visibleTagMedia span').length == 0) {
        $('#visibleTagList').hide();
    } else {
        $('#visibleTagList').show();
    }

    if ($('#hiddenTagMedia span').length == 0) {
        $('#hiddenTagList').hide();
    } else {
        $('#hiddenTagList').show();
    }
    checkViewAllBtnStatus();
}

$('body').on('click', '#viewAllTagActive', function(event) {
    $('#mediaTagDivHead').click();
});



function gothismsgCov(cid, msg_id) {
    goConvIdChecklist = cid;
    goMsgIdChecklist = msg_id;
    if ($('#msgThread_' + goMsgIdChecklist).length == 0) {
        $('#conv' + goConvIdChecklist).click();
    } else {
        if ($('#conv' + goConvIdChecklist).hasClass('sideActive')) {
            $('#msgThread_' + goMsgIdChecklist).find('.checkListPlainText').click();
            goMsgIdChecklist = '';
            goConvIdChecklist = '';
        } else {
            $('#conv' + goConvIdChecklist).click();
        }
    }
}




$('#panzoom').on({
    contextmenu: function(e) {
        e.preventDefault();
        // console.log('click')
        $(".menuBarRigthClick").css({
            "display": "block",
            "left": e.pageX,
            "top": e.pageY
        });

    },
    click: function(e) {
        var $target = $(e.target);
        if ($target.is('.menuBarRigthClick') || $target.closest('.menuBarRigthClick').length) {
            e.preventDefault();
        } else {
            $(".menuBarRigthClick").hide();
        }
    }
});


$('body').on('click', function(e) {
    if ($(e.target).attr('id') !== 'panzoom') {
        if ($('.menuBarRigthClick').is(':visible')) {
            $(".menuBarRigthClick").hide();
        }
    }
})


function activeShareIconLink() {
    // console.log(26693,'sharelink')
    var allFileIds = [];

    $.each(thisConvAllFilesNames, function(k, v) {
        allFileIds.push(v + user_id);
    });
    // $('.img_action.share_ico').removeClass('active');
    if (allFileIds.length > 0) {
        socket.emit('getallSharedLink', { data: allFileIds }, function(res) {
            if (res.data.length > 0) {
                $.each(res.data, function(k, v) {
                    var index = allFileIds.indexOf(v);
                    var location = file_server + thisConvAllFilesLocations[index];
                    // console.log(26715,location)
                    $('.img_action.share_ico[data-value="' + location + '"]').addClass('active');
                })

            }
        })
    }

}

function unsharedLink(shortid) {
    // closeModal('shareLinkPop');
    socket.emit('removeShareLink', { id: shortid });
    $('#shareLinkPop').find('.UnsharedClass').remove();
    $('#actionShareBtn').text('Create link');
    $('#sharelinkGreenMsg').hide();
    $('#shareLink').html('');
    $('.img_action.share_ico').removeClass('active');
    activeShareIconLink();

}

function saveAsImgFun() {
    var href = $('.slide-image-download').attr('data-href');
    // console.log(href)
    document.execCommand('SaveAs', '1', href);
}


function actionNewFilterOption(type) {
    if (type == 'file') {
        $('#mediaFilePreview .media-tabs li.active').trigger('click');
        $('#search_different_tab').attr('onkeyup', 'searchMedia(event)');
        $('#search_different_tab').attr('onkeydown', 'searchMediaDown(event)');
    } else {
        $('#mediaTagDivHead').click();
        // $('.individual-tab-seach-con .itm').click();
        // $('#search_different_tab').val('');
        // $('#mediaFilePreview').attr('data-filter','tag');
        // $('#search_different_tab').attr('onkeyup','searchTagConvHead(event,this)');
    }
}

function delete_item_div(el, e) {
    e.preventDefault();
    e.stopImmediatePropagation();
    var checklist_id = $(el).closest(".checkListItem").attr("checklist-id");
    var msg_id = $(el).closest(".checkListItem").attr("msg_id");
    $('#delete_item_div').attr('data-id', checklist_id);
    $('#delete_item_div').attr('msg-id', msg_id);
    $('#delete_item_div').css('display', 'flex');
    closeTaskAssignModal('dueDatePickerChecklist');
}

function closePopUp(type) {
    $('#' + type).hide();
}
var conversationUsedTag = [];
var conversationUsedSharedTag = [];

function getRoomWiseShareTag(conversation_id) {
    conversationUsedTag = [];
    conversationUsedSharedTag = []
    socket.emit('getRoomWiseShareTag', { conversation_id: conversation_id, user_id: user_id }, function(res) {
        if (res.status) {
            conversationUsedTag = res.all_uses_tag;
            conversationUsedSharedTag = res.all_uses_share_tag;
            changeFunForViewTag();
        }
    })
}

function changeFunForViewTag() {
    $('#AllTagList').find('div').removeClass('its_used_this_conv');
    $('.per_tag_li').removeClass('its_used_this_conv');
    // console.log(27126,conversationUsedTag);
    for (var i = 0; i < conversationUsedTag.length; i++) {
        $('.tag_id_' + conversationUsedTag[i]).addClass('its_used_this_conv');
        // $('#viewByTags'+conversationUsedTag[i]).remove();
        $('.filter_tag_' + conversationUsedTag[i]).addClass('its_used_this_conv');
    }
}

// Drag popup script
$(function() {
    $('#createDirConv .hayven_Modal_Container').draggable({ containment: '#createDirConv', handle: '.drag_handlr', scroll: false });
    $('#updateMessageTag .hayven_Modal_Container').draggable({ containment: '#updateMessageTag', scroll: false });
    $('#shareMessagePopUp .hayven_Modal_Container').draggable({ containment: '#shareMessagePopUp', handle: '.drag_handlr', scroll: false });
    $('#addMemberPopup .hayven_Modal_Container').draggable({ containment: '#addMemberPopup', handle: '.drag_handlr', scroll: false });
    $('#dueDatePickerChecklist .hayven_Modal_Container').draggable({ containment: '#dueDatePickerChecklist', handle: '.drag_handlr', scroll: false });
    $('#notificationPopup .hayven_Modal_Container').draggable({ containment: '#notificationPopup', handle: '.drag_handlr', scroll: false });
    $('#warningPopup .hayven_Modal_Container').draggable({ containment: '#warningPopup', handle: '.drag_handlr', scroll: false });
    $('#clearMessages .hayven_Modal_Container').draggable({ containment: '#clearMessages', handle: '.drag_handlr', scroll: false });
    $('#shareLinkPop .hayven_Modal_Container').draggable({ containment: '#shareLinkPop', handle: '.drag_handlr', scroll: false });
    $('#editCustomTitle .hayven_Modal_Container').draggable({ containment: '#editCustomTitle', handle: '.drag_handlr', scroll: false });
    $('#setTimerModel .hayven_Modal_Container').draggable({ containment: '#setTimerModel', handle: '.drag_handlr', scroll: false });
    $('#msgDeleteLastTime .hayven_Modal_Container').draggable({ containment: '#msgDeleteLastTime', scroll: false });
    $('#updateMemberPopup .hayven_Modal_Container').draggable({ containment: '#updateMemberPopup', handle: '.drag_handlr', scroll: false });
    $('#add_new_guest_Pop .hayven_Modal_Container').draggable({ containment: '#add_new_guest_Pop', handle: '.drag_handlr', scroll: false });
    $('#warningPopupForCallMsg .hayven_Modal_Container').draggable({ containment: '#warningPopupForCallMsg', handle: '.drag_handlr', scroll: false });

    $('#warningsPopupConversation .warningPopupBody').draggable({ containment: '#warningsPopupConversation', scroll: false });
    $('#ChatFileUpload .chat-file-upload-popup').draggable({ containment: '#ChatFileUpload', handle: '.drag_handlr', scroll: false });
    $('#changePwdPopup .changePwdPopupBody').draggable({ containment: '#changePwdPopup', scroll: false });
    $('#delete_attach .delete_msg_div').draggable({ containment: '#delete_attach', scroll: false });
    $('#delete_item_div .delete_msg_div').draggable({ containment: '#delete_item_div', scroll: false });
    $('#delete_msg_div .delete_msg_div').draggable({ containment: '#delete_msg_div', scroll: false });
    $('#unmute_rooms .delete_msg_div').draggable({ containment: '#unmute_rooms', scroll: false });
    $('#downloadPreviewPopup .downloadPreviewBody').draggable({ containment: '#downloadPreviewPopup', scroll: false });
    $('#filter_conversaiton_pop .hayven_Modal_Container').draggable({ containment: '#filter_conversaiton_pop', scroll: false });
    $('#filter_conversaiton_pop2 .hayven_Modal_Container').draggable({ containment: '#filter_conversaiton_pop2', scroll: false });
    $('#roomExistPop .hayven_Modal_Container').draggable({ containment: '#roomExistPop', scroll: false });
    $('#removeWarning .hayven_Modal_Container').draggable({ containment: '#removeWarning', scroll: false });
    $('#save_warning .delete_msg_div').draggable({ containment: '#save_warning', scroll: false });
});

function convertToSub(event) {
    $('#shareMessagePopUp').removeClass('itemDisable');
    ShareMessagePopAction = 'convert';
    $('#shareMessagePopUp').find('.hayven_Modal_heading h1').text("Convert Conversation");
    $('#shareMessagePopUp').find('.sub_btn').text("Move");
    convertToChecklist = false;
    convertToChecklistMsg_id = '';
    convertToChecklistmsg = '';
    selectedShareMember = [];
    alluserandrooms = [];
    $('#shareMessagePopUp').css('display', 'flex');
    $('.searchInput').html("");
    $('#shareSuggestedList').html("");
    $('.no_of_user_left_to_add span').text(10 - selectedShareMember.length);
    $('#shareMsgminiHolder').html('');
    $('#shareMsgminiHolder').next('input').val('');
    $('#shareMessagePopUp').addClass('convert_conversation');
    var userid = user_id;
    if (allconvdetails.length > 0) {
        $.each(allconvdetails, function(k, v) {
            if (v.root_conv_id == null) {
                var data = {
                    conversation_id: v.conversation_id,
                    conv_img: v.conv_img,
                    title: v.title,
                    type: 'group',
                    participants_sub: v.participants_sub

                }
                if (v.single == 'no') {
                    if (v.title != '' && v.title != null) {
                        alluserandrooms.push(data);
                        // console.log(6519,v);
                        //$('#shareSuggestedList').append(userListDesign(v));
                    }
                }
            }
        });
        var newdata = _.sortBy(alluserandrooms, ["title", 'asc']);

        $.each(newdata, function(k, v) {
            v.participants_sub = (v.participants_sub == null ? [] : v.participants_sub)
            if (v.participants_sub.indexOf(user_id) == -1) {
                $('#shareSuggestedList').append(userListDesign(v));
            }
            // $('#shareSuggestedList').append(userListDesign(v));
        })
    } else {
        socket.emit('myTopicList', { userid }, (respons) => {
            console.log(6525, respons);
            if (respons.staus) {
                allRooms = respons.rooms;
                $.each(respons.rooms, function(k, v) {
                    allconvdetails.push(v);
                    if (v.conversation_id !== conversation_id) {
                        if (v.root_conv_id == null) {
                            if (v.single == 'no') {
                                if (v.title != '' && v.title != null) {
                                    var data = {
                                        conversation_id: v.conversation_id,
                                        conv_img: v.conv_img,
                                        title: v.title,
                                        type: 'group',
                                        participants_sub: v.participants_sub
                                    }
                                    alluserandrooms.push(data);
                                    //$('#shareSuggestedList').append(userListDesign(v));
                                }
                            }
                        }
                    }
                });
                var newdata = _.sortBy(alluserandrooms, ["title", 'asc']);

                $.each(newdata, function(k, v) {
                    if (v.root_conv_id == null) {
                        v.participants_sub = (v.participants_sub == null ? [] : v.participants_sub)
                        if (v.participants_sub.indexOf(user_id) == -1) {
                            $('#shareSuggestedList').append(userListDesign(v));
                        }
                    }
                })
            }
        });
    }
    popupMouseEnter();
}

function convertToConv(event) {
    $('#warningPopup').css('display', 'flex');
    $('#warningPopup').attr('data-type', 'convert_to_main');
    $('#warningPopup').attr('data-id', conversation_id);
    $('#warningTitle').text('Warning !');
    $('#warningMessage').text('Are you sure you want to convert sub room to main room?');
    $('.buttonAction').removeClass('bg_danger').text('Confirm');
    $('.buttonCancel').text('Cancel');

}
socket.on("room_converted_brodcast", (res) => {
    // console.log(28525, res);
    if (res.data.type == "subroom2mainroom") {
        // console.log(28546);
        if (res.rootconvdata.participants.indexOf(user_id) == -1) {
            // console.log(28548);
            $("#conv" + res.rootconvdata.conversation_id).remove();
        }
        if (res.convdata.participants.indexOf(user_id) > -1) {
            // console.log(28552);
            $('#conv' + res.convdata.conversation_id).removeClass('itssubconvhide');
            if (res.convdata.conversation_id == conversation_id) {
                $('#conv' + res.convdata.conversation_id).trigger('click');
            }
        }
    } else if (res.data.type == "mainroom2subroom") {
        // console.log(28544)
        var over_length = res.rootconvdata.title.length > 17 ? "over_length" : "";
        if ($("#conv" + res.rootconvdata.conversation_id).length == 0) {
            $("#conversation_list_sidebar").prepend('<li data-privacy="' + res.rootconvdata.privacy + '" data-octr="' + res.rootconvdata.created_by + '"  onclick="start_conversation(event)" data-nor="0" data-subtitle="' + res.rootconvdata.group_keyspace + '" data-id="' + res.rootconvdata.created_by + '" data-conversationtype="group" data-tm= "' + parseInt(res.rootconvdata.participants.length) + '" data-conversationid="' + res.rootconvdata.conversation_id + '" data-name="' + res.rootconvdata.title + '" data-img="feelix.jpg"  id="conv' + res.rootconvdata.conversation_id + '" class="' + over_length + '"><span class="' + (res.rootconvdata.privacy === 'public' ? "hash" : "lock") + '"></span> <span class="usersName">' + res.rootconvdata.title + '</span><span class="subroomunread"></span><span class=" unreadMsgCount"></span></li>');
            let c = Number($("#conv" + res.convdata.conversation_id).find(".unreadMsgCount").text());
            if (c > 0) {
                $("#conv" + res.rootconvdata.conversation_id).find(".subroomunread").show();
            }
        }
        if (res.convdata.participants.indexOf(user_id) > -1) {
            $('#conv' + res.convdata.conversation_id).addClass('itssubconvhide');
            let c = Number($("#conv" + res.convdata.conversation_id).find(".unreadMsgCount").text());
            if (c > 0) {
                $("#conv" + res.rootconvdata.conversation_id).find(".subroomunread").show();
            }
            if (res.convdata.conversation_id == conversation_id) {
                $('#conv' + res.convdata.conversation_id).trigger('click');
            }
        }
    }
});
var filterDataRoom = [];
var filterDatawork_cate = [];
var filterDatateam = [];
var filterOn = false;

function openConversationFilter(event) {
    // event.preventDefault();
    // event.stopImmediatePropagation()
    if (!filterOn) {
        filterDataRoom = [];
        filterDatawork_cate = [];
        filterDatateam = [];
        $('#reset_filter_convBtn').hide();
    } else {
        $('#reset_filter_convBtn').show();
    }
    $('#filter_conversaiton_pop2').find('input').val("");
    $('#conv_filter_head_title').html('Filter Conversation');
    $('#reset_filter_convBtn').html('Reset');
    $('#filter_conversaiton_pop2').css('display', 'flex');
    $('#room_category_for_filter').html("");

    $("#room_category_for_filter").append('<div class="forspecial_elm item_per ' + (filterDataRoom.indexOf('direct_msg') > -1 ? 'active' : 'inactive') + '" onclick="filterConversationNew(\'room\',this)" data-va="direct_msg"><span class="freeli_new_check_name">Direct Message</span><span class="freeli_new_check_design"><div class="check_whiteItem"></div></span></div>');
    $("#room_category_for_filter").append('<div id="teamRoom_id" class="forspecial_elm item_per ' + (filterDataRoom.indexOf('work') > -1 ? 'active' : 'inactive') + '" onclick="filterConversationNew(\'room\',this)" data-va="work"><span class="freeli_new_check_name">Work Room</span><span class="freeli_new_check_design"><div class="check_whiteItem"></div></span></div>');
    $("#room_category_for_filter").append('<div id="teamRoom_id2" class="forspecial_elm item_per ' + (filterDataRoom.indexOf('project_room') > -1 ? 'active' : 'inactive') + '" onclick="filterConversationNew(\'room\',this)" data-va="project_room"><span class="freeli_new_check_name">Project Room</span><span class="freeli_new_check_design"><div class="check_whiteItem"></div></span></div>');

    conversationFilterLabel('room_category_filter_lable');
    // $("#room_category_for_filter").append('<div class="forspecial_elm item_per '+(filterDataRoom == 'support_room' ? 'active':'inactive')+'" onclick="filterConversationNew(\'room\',this)" data-va="support_room"><span class="freeli_new_check_name">support Room</span><span class="freeli_new_check_design"><div class="check_whiteItem"></div></span></div>');

    $('#work_category_for_filter').html("");
    // $('#work_category_for_filter').prepend('<option value="">Select a work category</option>');
    $.each(allUnit, function(k, v) {
        // $('#work_category_for_filter').append('<option value="'+v.unit_id+'">'+v.unit_name+'</option>');

        var opt = '<div class="item_per ' + (filterDatawork_cate.indexOf(v.unit_id) > -1 ? 'active' : 'inactive') + '" onclick="filterConversationNew(\'work_cate\',this)" data-va="' + v.unit_id + '"><span class="freeli_new_check_name">' + v.unit_name + '</span><span class="freeli_new_check_design"><div class="check_whiteItem"></div></span></div>';
        $("#work_category_for_filter").append(opt);
    });
    conversationFilterLabel('work_category_filter_lable');
    $("#team_for_filter").html("");
    // $('#team_for_filter').prepend('<option value="">Select a team</option>');
    for (var i = 0; i < allteams.length; i++) {
        // var opt = '<option value="'+allteams[i].team_id+'">'+allteams[i].team_title+'</option>';
        var opt = '<div class="item_per ' + (filterDatateam.indexOf(allteams[i].team_id) > -1 ? 'active' : 'inactive') + '" onclick="filterConversationNew(\'team\',this)" data-va="' + allteams[i].team_id + '"><span class="freeli_new_check_name">' + allteams[i].team_title + '</span><span class="freeli_new_check_design"><div class="check_whiteItem"></div></span></div>';
        $("#team_for_filter").append(opt);
    }
    conversationFilterLabel('team_category_filter_lable');
    // $('#room_category_for_filter').select2();
    // $('#work_category_for_filter').select2();
    // $('#team_for_filter').select2();
    if (filterDataRoom.indexOf('direct_msg') > -1) {
        for_filter_direct_msgOp(true);
        $('#room_category_for_filter').find('[data-va="direct_msg"]').removeClass('inactive');
        $('#room_category_for_filter').find('[data-va="direct_msg"]').addClass('active');
    } else {
        for_filter_direct_msgOp(false);
    }
}

function for_filter_direct_msgOp(s) {
    if (s) {
        $('#filter_conversaiton_pop2').find('.filter_item_holder .item_per').removeClass('active');
        $('#filter_conversaiton_pop2').find('.item_section .label_item').removeClass('active');
        filterDataRoom = [];
        filterDatateam = [];
        filterDatawork_cate = [];
        // $('#room_category_filter_lable').addClass('pointerInactive');
        $('#teamRoom_id').addClass('pointerInactive');
        $('#teamRoom_id2').addClass('pointerInactive');
        $('#work_category_for_filter').find('.item_per').addClass('pointerInactive');
        $('#work_category_for_filter').parent('.item_section').addClass('pointerInactive');
        $('#team_for_filter').find('.item_per').addClass('pointerInactive');
        $('#team_for_filter').parent('.item_section').addClass('pointerInactive');
    } else {
        // $('#room_category_filter_lable').removeClass('pointerInactive');
        $('#teamRoom_id').removeClass('pointerInactive');
        $('#teamRoom_id2').removeClass('pointerInactive');
        $('#work_category_for_filter').find('.item_per').removeClass('pointerInactive');
        $('#work_category_for_filter').parent('.item_section').removeClass('pointerInactive');
        $('#team_for_filter').find('.item_per').removeClass('pointerInactive');
        $('#team_for_filter').parent('.item_section').removeClass('pointerInactive');

    }
}

function filterConversationNew(type, elm) {
    var value = $(elm).attr('data-va');
    var status = ($(elm).hasClass('active') ? true : false);

    if (status) {
        $(elm).removeClass('active');
        $(elm).addClass('inactive');
        if (value == 'direct_msg') {
            for_filter_direct_msgOp(false)
        }
    } else {
        if (value == 'direct_msg') {
            for_filter_direct_msgOp(true)
        }
        $(elm).addClass('active');
        $(elm).removeClass('inactive');
    }
    if (type == 'room') {
        if (!status) {
            filterDataRoom.push(value)
        } else {
            removeA(filterDataRoom, value);
        }
        conversationFilterLabel('room_category_filter_lable');
    } else if (type == 'work_cate') {

        if (!status) {
            filterDatawork_cate.push(value)
        } else {
            removeA(filterDatawork_cate, value);
        }
        conversationFilterLabel('work_category_filter_lable');
    } else if (type == 'team') {
        if (!status) {
            filterDatateam.push(value);
        } else {
            removeA(filterDatateam, value);
        }
        conversationFilterLabel('team_category_filter_lable');
    }
    // console.log(status)
    // console.log(filterDatawork_cate,filterDatateam,filterDatawork_cate)
}

function conversationFilterLabel(type) {
    var total_length = $('#' + type).parent('.item_section').find('.filter_item_holder').find('.item_per').length;
    var active_length = $('#' + type).parent('.item_section').find('.filter_item_holder').find('.item_per.active').length;
    if (total_length == active_length) {
        $('#' + type).removeClass('inactive');
        $('#' + type).addClass('active');
    } else {
        $('#' + type).addClass('inactive');
        $('#' + type).removeClass('active');
    }
}

function filter_conversation_newAction(event) {
    // console.log(filterDatawork_cate,filterDatateam,filterDatawork_cate)
    socket.emit('filter_all_conv_emit', user_id, function(res) {
        if (res.length > 0) {
            for (let i = 0; i < res.length; i++) {
                $('#conv' + res[i].conversation_id).removeClass('filter_active_for_hide');
                // if(res[i].group == 'yes'){
                $('#conv' + res[i].conversation_id).addClass('filter_active_for_hide');
                let topic_type = true;
                let work_cate = true;
                let team_check = true;
                if (filterDataRoom.length != 0) {
                    topic_type = false;
                }
                // if(filterDatawork_cate.length != 0){
                // 	if(filterDataRoom != 'support_room'){
                // 		work_cate = false;
                // 	}
                // }

                if (filterDatateam.length != 0) {
                    team_check = false;
                }
                if (filterDatawork_cate.length != 0) {
                    work_cate = false;
                }
                if (filterDatateam.length != 0) {
                    team_check = false;
                }

                if (filterDataRoom.indexOf(res[i].topic_type) > -1) {
                    topic_type = true;
                }
                if (filterDataRoom.indexOf('direct_msg') > -1) {
                    if (res[i].group == 'no') {
                        topic_type = true;
                    }
                }

                if (filterDatawork_cate.indexOf(res[i].b_unit_id) > -1) {
                    work_cate = true;
                }

                if (filterDatateam.indexOf(res[i].group_keyspace) > -1) {
                    team_check = true;
                }
                console.log(topic_type, work_cate, team_check);
                if (topic_type && work_cate && team_check) {
                    $('#conv' + res[i].conversation_id).removeClass('filter_active_for_hide');
                }
                // }
            }

            // $('.side_bar_list_item li:visible').first().next().click();
        }
        // if(filterDataRoom.length == 0 && filterDatawork_cate.length == 0 && filterDatateam == 0 && event == undefined){
        // 	closeModal('filter_conversaiton_pop2');
        // 	reset_filter_conv('close')
        // }else{

        // }
        if (event !== undefined) {
            closeModal('filter_conversaiton_pop2');
            $('#conversation_filter_optionDiv').addClass('activeI');
            filterOn = true;
            if ($('#convFilterBar').length == 0) {
                var html = '<div class="tag_item" id="convFilterBar"><img src="/images/basicAssets/mobile/filter.svg" class="flagged"><p>Filter</p><img onclick="reset_filter_conv(\'close\')" src="/images/basicAssets/Close.svg"></div>'
                $('#connectAsideContainer').find('.tagg_list').append(html);
                $('#connectAsideContainer').find('.tagg_list').show();
                $('#connectAsideContainer').find('.backToChat').show();
            }

        } else {
            filterOn = false;
            $('#conversation_filter_optionDiv').removeClass('activeI');
        }
        if (filterDataRoom.length == 0 && filterDatawork_cate.length == 0 && filterDatateam == 0) {
            filterOn = false;
            $('#conversation_filter_optionDiv').removeClass('activeI');

            $('#convFilterBar').remove();
            if ($('#connectAsideContainer').find('.tagg_list').html() == '') {
                $('#connectAsideContainer').find('.backToChat').hide();
            }
        }


    })


}

function reset_filter_convOnlyClose() {
    filterDataRoom = [];
    filterDatawork_cate = [];
    filterDatateam = [];
    filter_conversation_newAction()
        // openConversationFilter();
    $('#work_category_filter_lable').removeClass('active');
    $('#work_category_filter_lable').addClass('inactive');
    $('#room_category_filter_lable').removeClass('active');
    $('#room_category_filter_lable').addClass('inactive');
    $('#team_category_filter_lable').removeClass('active');
    $('#team_category_filter_lable').addClass('inactive');
}

function reset_filter_conv(type) {
    // filterDataRoom = '';
    filterDataRoom = [];
    filterDatawork_cate = [];
    filterDatateam = [];
    filter_conversation_newAction()
    if (type !== 'close') {

        openConversationFilter();
    }
    // console.log('reset')
    $('#work_category_filter_lable').removeClass('active');
    $('#work_category_filter_lable').addClass('inactive');
    $('#room_category_filter_lable').removeClass('active');
    $('#room_category_filter_lable').addClass('inactive');
    $('#team_category_filter_lable').removeClass('active');
    $('#team_category_filter_lable').addClass('inactive');
    $('#convFilterBar').remove();
    if ($('#connectAsideContainer').find('.tagg_list').html() == '') {
        $('#connectAsideContainer').find('.backToChat').hide();
    }
    // filterOn = false;
    // $('#conversation_filter_optionDiv').removeClass('activeI');
}

function filterNewDesignClick(elm, event) {
    var status = ($(elm).hasClass('active') ? true : false);

    if (status) {
        $(elm).removeClass('active');
        $(elm).addClass('inactive');
    } else {
        $(elm).addClass('active');
        $(elm).removeClass('inactive');
    }
}

function findMyFilterItems(event) {
    var value = $(event.target).val();

    $(".mid-sec-forfilter .freeli_new_check_name").each(function() {
        var text = $(this).text();
        text = text.replace(/\s/g, '');
        if (text.toLowerCase().indexOf(value.toLowerCase()) > -1) {
            // if(!$(this).hasClass('itsVisible')){
            // 	$(this).addClass('itsVisible');
            // 	$(this).removeClass('itsVisible');
            // }
            $(this).parent('.item_per').show();
        } else {
            $(this).parent('.item_per').hide();
            // $(this).removeClass('itsVisible');
            // if(!$(this).hasClass('itsInvisible')){
            // 	$(this).addClass('itsInvisible');
            // }
        }
    });
}

function selectForAllFilterConv(type) {
    if ($('#' + type).hasClass('active')) {
        $.each($('#' + type).parent('.item_section').find('.filter_item_holder').find('.item_per'), function(k, v) {
            if ($(v).hasClass('active')) {
                $(v).trigger('click');
            }
        });
    } else {
        $.each($('#' + type).parent('.item_section').find('.filter_item_holder').find('.item_per'), function(k, v) {
            if ($(v).hasClass('inactive')) {
                $(v).trigger('click');
            }
        });
    }

}

function expandMyimg(src) {
    $('#myModal').css('display', 'flex');
    $('#img01').attr('src', src);
}

function closeMyImgViewer() {
    $('#myModal').hide();
}

function dontDisturb() {
    var dontDisturb = localStorage.getItem('dontDisturb' + user_id);
    dontDisturb = JSON.parse(dontDisturb);

    console.log('Check')
        // var allConv = [];
        // if (dontDisturb == null || dontDisturb.length == 0) {
        // 	$.each($('#conversation_list_sidebar li'), function(k,v){
        // 		var id = $(v).attr('data-conversationid');
        // 		if (id != undefined) {
        // 			if (allConv.indexOf(id) == -1) {
        // 				allConv.push(id);
        // 			}
        // 		}
        // 	});
        // 	$('#unMuteAllConv').show();
        // 	localStorage.setItem('dontDisturb'+user_id, JSON.stringify(allConv));
        // }else{
        // 	$('#unMuteAllConv').hide();
        // 	localStorage.setItem('dontDisturb'+user_id, JSON.stringify(allConv));
        // }

    if ($('.linkAccount.dontDisturb').hasClass('ON')) {
        console.log('Check 1');
        var allmConv = [];
        var allmute_id = [];
        $.each($('#connectAsideContainer li.mute_conv'), function(k, v) {
            var id = $(v).attr('data-conversationid');
            var mid = $(v).attr('data-mute');
            if (id != undefined) {
                if (mid != undefined || mid != 'unmute') {
                    if (allmConv.indexOf(id) == -1) {
                        allmConv.push(id);
                        allmute_id.push(mid);
                    }
                }
            }
        });
        console.log('allmConv=', allmConv, 'allmute_id=', allmute_id)
        if (allmute_id.length > 0) {
            var data = {
                mute_id: allmute_id,
                user_id: user_id
            }
            socket.emit('unmute_notification', data, (res) => {
                console.log(res);
                if (res.status == "success") {
                    profileNav();
                    $.each(allmute_id, function(k, v) {
                        $.each(myAllMuteConv, function(ka, va) {
                            if (va != undefined) {
                                if (va.mute_id == v) {
                                    $('#conv' + va.conversation_id).children('.mute_bell').remove();
                                    $('#conv' + va.conversation_id).removeClass('mute_conv');
                                    $('#conv' + va.conversation_id).attr('data-mute', 'unmute');
                                    $('#viewMuteNotification').removeClass('active');
                                    removeA(myAllMuteConv, va);
                                    removeA(myAllMuteConvid, va.conversation_id);
                                    removeA(myAllDayMuteConv, va);
                                    removeA(dayMuteConvId, va.conversation_id);

                                    closeModal('notificationPopup');
                                    $('.customTooltipSidebar').hide();
                                    return false;
                                }
                            }
                        });
                    });

                } else {
                    // console.log(res);
                }
            });
        }
    } else {
        console.log('Check 2')
        viewAllBackWrap('notificationPopup', 'global');
        profileNav();
    }
}


function unMuteThis() {
    var type = $('#unMuteThis').attr('type');
    var dontDisturb = localStorage.getItem('dontDisturb' + user_id);
    dontDisturb = JSON.parse(dontDisturb);
    if (dontDisturb == null) {
        dontDisturb = [];
    }
    if (type == 'mute') {
        dontDisturb.push(conversation_id);
        localStorage.setItem('dontDisturb' + user_id, JSON.stringify(dontDisturb));
        $('#unMuteThis').text('Unmute this room only').attr('type', 'unmute');
        $('#setNotify').hide();
    } else {
        if (dontDisturb.indexOf(conversation_id) > -1) {
            removeA(dontDisturb, conversation_id);
            localStorage.setItem('dontDisturb' + user_id, JSON.stringify(dontDisturb));
        }
        // console.log(22,dontDisturb.length);
        $('#setNotify').show();
        $('#unMuteThis').text('Mute Notification Sound').attr('type', 'mute');
    }
}

function unMuteAllConv(type = null) {
    if (type == 'yes') {
        var allConv = [];
        localStorage.setItem('dontDisturb' + user_id, JSON.stringify(allConv));
        $('#unMuteAllConv').hide();
        $('#unmute_rooms').hide();
    } else {
        $('#unmute_rooms').css('display', 'flex');
    }
}
socket.emit("get_unread_conversation", '12098018-6816-45c6-946a-8f260a42bd0e', function(res) {
    // console.log(28983,res)
})

function keyupRoomName(e) {
    var val = $(e.target).val()
    if (val != '') {
        $('#createChannelContainer').removeClass('inactive');
    } else {
        $('#createChannelContainer').addClass('inactive');
    }
}
var muteDays = [];

function selectMuteDay(el) {
    var day = $(el).attr('data-name');
    if ($(el).hasClass('active')) {
        $(el).removeClass('active');
        if (muteDays.indexOf(day) > -1) {
            removeA(muteDays, day);
        }
    } else {
        $(el).addClass('active');
        if (muteDays.indexOf(day) == -1) {
            muteDays.push(day);
        }
    }
    var activeDay = $('span.days.active').length;
    if (activeDay > 1 || activeDay == 1) {
        $('.custom_time').show();
        $('.custom_dateTime').hide();
    } else {
        $('.custom_dateTime').show();
        $('.custom_time').hide();
    }
}

function getMyseenUsers() {
    var myseen_users = participants;
    removeA(myseen_users, user_id);
    return myseen_users;
}

function clearNotificationAll() {
    $('#warningPopup').css('display', 'flex');
    $('#warningPopup').attr('data-type', 'clear_all_notification');
    $('#warningPopup').attr('data-id', user_id);
    $('#warningTitle').text('Warning !');
    $('#warningMessage').text('Are you sure you want to clear all notification?');
    $('.buttonAction').addClass('bg_danger').text('Yes');
    $('.buttonCancel').text('No');
}


function taskItemCounter(msg_id) {
    // console.log(msg_id);
    var dateOver_due = Number($('.msg_id_' + msg_id).find('.checkListItem.dateOver_due').length);
    var response_req = Number($('.msg_id_' + msg_id).find('.checkListItem.response_req').length);
    var ttckl = Number($('.msg_id_' + msg_id).find('.checkListItem.visible').length);
    var comckl = Number($('.msg_id_' + msg_id).find('.checkListItem.completed_item').length);
    var pndckl = Number($('.msg_id_' + msg_id).find('.checkListItem.pending_item').length);
    var assigned = Number($('.msg_id_' + msg_id).find('.checkListItem.has_assign').length);
    var unassigned = Number($('.msg_id_' + msg_id).find('.checkListItem.unassigned').length);
    var my_pending = Number($('.msg_id_' + msg_id).find('.checkListItem.my_pending').length);
    var modified = Number($('.msg_id_' + msg_id).find('.checkListItem.modified').length);
    $('#filterShowall_' + msg_id).text('Show All (' + ttckl + ')');
    $('#filterPending_' + msg_id).text('All Pending (' + pndckl + ')');
    $('#filterMyPending_' + msg_id).text('My Pending (' + my_pending + ')');
    $('#filterMyResReq_' + msg_id).text('My Response Required (' + response_req + ')');
    $('#filterCompletedall_' + msg_id).text('Completed (' + comckl + ')');
    $('#filterassigned_' + msg_id).text('Assigned (' + assigned + ')');
    $('#filterUnassigned_' + msg_id).text('Unassigned (' + unassigned + ')');
    $('#filterOverDue_' + msg_id).text('Over Due (' + dateOver_due + ')');
    // $('#recentActivity_'+msg_id).text('Recent Activity ('+modified+')');

    // console.log(ttckl, pndckl, my_pending, response_req, comckl, assigned,unassigned, dateOver_due, modified)
}

function triggerFlagForlater(elm) {
    $(elm).parents('.msgs-form-users').find('.msgs-form-users-options').find('.flag').trigger('click')
}

function selectOptionFileT(elm) {
    var dataLi = $(elm).attr('data-link')
    if ($(elm).hasClass('active')) {
        $(elm).removeClass('active');
        removeA(allLinkFordownload, dataLi)
    } else {
        $(elm).addClass('active');
        if (allLinkFordownload.indexOf(dataLi) == -1) {
            allLinkFordownload.push(dataLi);
        }
    }
    if (allLinkFordownload.length > 0) {
        $('#media_Action_Div').show();
    } else {
        $('#media_Action_Div').hide();
    }
}
// ================ private mention ==============================
var pvtmembertemp = [];

function viewmentionuserlists() { // ssssss
    $('#mentionMemberPopup').find('.sub_btn').removeClass('active');
    $('#secretUserList').hide();
    pvtmembertemp = [];
    $('#updateRoomListMention').html('');
    $('#mentionnewMemberMini').html('');
    var secretDiv = 'secretUserList';
    let pvt_userlist = $('#' + secretDiv).find('.secret_heading').length ? $('#' + secretDiv).find('.secret_heading').attr('data-id').split(',') : [];

    mentionFor = '!@';
    $.each(nameArry, function(k, v) {
        if (nameArryid[k] != user_id) {
            let usr_info = get_user_info_obj(nameArryid[k]);
            // var activeClass = '';

            var html = '<li id="li_men_pvt' + usr_info.id + '" user-name="' + usr_info.fullname + '" data-img="' + usr_info.img + '" data-userid="' + usr_info.id + '" user-i="' + k + '" msg-div="msg" main-div="#mention_user_list" class="showEl findMember" onclick="addThisMenNew(this)">' +
                '<div class="addMember-on-off-pop">' +
                '<img src="' + file_server + 'profile-pic/Photos/' + usr_info.img + '" class="profile">';
            if (onlineUserList.indexOf(usr_info.id) == -1) {
                html += '<span class="offline online_' + usr_info.id + '" style="top: 30px; left: 6px; z-index: 1; position: absolute;"></span>';
            } else {
                html += '<span class="online online_' + usr_info.id + '" style="top: 30px; left: 6px; z-index: 1; position: absolute;"></span>';
            }
            html += '</div>' +
                '<span class="name s-l-def-clas" data-uuid="' + usr_info.id + '">' + usr_info.fullname + ' <span class="id-beside-name">[' + usr_info.email + ']</span></span>' +
                '</li>';
            $('#updateRoomListMention').append(html);

            if (pvt_userlist.indexOf(nameArryid[k]) === -1) { // not added already


            } else {
                $('#li_men_pvt' + usr_info.id).hide();
                var data = {
                    id: usr_info.id,
                    fullname: usr_info.fullname,
                    img: usr_info.img
                }
                $('#mentionnewMemberMini').append(mini_itemDesignPvt(data, 'add'));
            }

        }

    });

    // temppNewMembername = [];
    // temppNewMemberuudi = [];

    $('#mentionMemberPopup').css('display', 'flex');
    $('#mentionMemberPopup input').focus();
    $('#mentionMemberPopup input').val('');
    submitActiveClassMen('mentionMemberPopup');
}

function addThisMenNew(elm) {
    var name = $(elm).attr('user-name');
    var div = $(elm).attr('msg-div');
    var main = $(elm).attr('main-div');
    var userid = $(elm).attr('data-userid');
    var img = $(elm).attr('data-img');

    var data = {
        id: userid,
        fullname: name,
        img: img
    }


    $("#numbers").text(parseInt(memberList.length) + 1);

    $('#mentionnewMemberMini').append(mini_itemDesignPvt(data, 'add'));
    $('#mentionnewMemberMini').next('input').val('');
    $('#mentionnewMemberMini').next('input').focus();
    $('.hayvenList .s-l-def-clas').unhighlight();
    // $('#updateRoomListMention').find('li').show();

    $("#mentionMemberPopup #search_member_mention").val("").trigger("input");

    // =================================================================

    var str = document.getElementById(div).innerHTML;
    var text = $('#' + div).text();

    var useri = $(elm).attr('user-i')
        // console.log(nameArryid[useri])
        // var res = str.slice(0, str.lastIndexOf("!@"));
        // document.getElementById(div).innerHTML = res;
    var id = nameArryid[useri];
    var personalUser = [];
    memberList.push(name);
    memberListUUID.push(id);
    temppNewMembername.push(name);
    temppNewMemberuudi.push(id);
    pvtmembertemp.push(id);
    submitActiveClassMen('mentionMemberPopup');

    //
    var secretDiv = 'secretUserList';
    if (div == 'msg_rep') {
        secretDiv = 'secretUserList_rep';
    }

    if ($('#' + secretDiv).find('.secret_heading').length > 0) {
        personalUser = $('#' + secretDiv).find('.secret_heading').attr('data-id').split(',');
        if (personalUser.indexOf(id) > -1) {
            removeA(personalUser, id);
        } else {
            personalUser.push(nameArryid[useri]);
        }
        $('#' + div).text().trim();
        $('#' + secretDiv).find('.secret_heading').attr('data-id', personalUser.join(','))
    } else {
        var design = '<span onclick="viewmention_div_action()" class="secret_heading hideaftersent" contenteditable="false" style="cursor:pointer" spellcheck="false" data-id="' + id + '"><span class="">Private message to: ' + name + '</span> <span class="removeSecretUser" onclick="removeSecretUsers(event)"></span></span>';
        // console.log(17865,design)
        $('#' + div).text().trim();
        $('#' + secretDiv).find('.secret_heading.hideaftersent').remove();
        $('#' + secretDiv).prepend(design);
    }

    // draw_mention_design(main,false,nameArry,div);
    // placeCaretAtEnd(document.getElementById(div));
    privateMsgTo(div, secretDiv);

    $(elm).addClass('none_important');
    if ($('#secretUserList .removeSecretUserid').length) {
        $('#msg').addClass('secret_div');
    } else {
        $('#msg').removeClass('secret_div');
    }
}

function removeAddMemberPvt(elm, id, fullname, img) {
    // debugger
    $('._mini_item_' + id).remove();
    // removeA(memberList, fullname);
    // removeA(memberListUUID, id);
    removeA(temppNewMembername, fullname);
    removeA(temppNewMemberuudi, id);
    removeA(pvtmembertemp, id);

    if ($(elm).hasClass('room_admin')) {
        removeA(temppNewAdminuudi, id);
    } else if ($(elm).hasClass('room_sp')) {
        removeA(temppNewSPuudi, id);
    }

    $("#numbers").text(parseInt(memberList.length) + 1);

    $('#li_men_pvt' + id).removeClass('none_important').show();

    submitActiveClassMen('mentionMemberPopup');
    $('#mentionnewMemberMini').next('input').click();
    $('#mentionnewMemberMini').next('input').focus();
    // $("#mentionMemberPopup #updateRoomListMention li").show();
    $("#mentionMemberPopup #search_member_mention").val("");
    removeSecretPerson(id);
    if ($('#secretUserList .removeSecretUserid').length) {
        $('#msg').addClass('secret_div');
    } else {
        $('#msg').removeClass('secret_div');
    }
}

function removeSecretPerson(uid) {
    // //debugger
    // let uid = $(el).attr('data-uid');
    let old_arr = $('#secretUserList .secret_heading.hideaftersent').attr('data-id').split(',');

    var index = old_arr.indexOf(uid);
    if (index !== -1) { old_arr.splice(index, 1); }

    if (old_arr.length == 0) {
        $('#secretUserList').html('');
    } else {
        $('#secretUserList .secret_heading.hideaftersent').attr('data-id', old_arr.join(','));
    }
    $('#removeSecretUserid_' + uid).remove();

    if ($('#secretUserList .removeSecretUserid').length) {
        $('#msg').addClass('secret_div');
    } else {
        $('#msg').removeClass('secret_div');
    }

}

function backto_normal_secret() {
    $('#secretUserList').html('');
    $('#msg').removeClass('secret_div');
}

function findMentionForPopup(e, elm) {
    var value = $(elm).val().trim();
    if (e.keyCode !== 40 && e.keyCode !== 38 && e.keyCode !== 13 && e.keyCode !== 27) {
        $(".backwrap .hayvenList .s-l-def-clas").each(function() {
            if ($(this).text().toLowerCase().search(value.toLowerCase()) > -1) {
                $(this).parent('li').show();
                $(this).parent('li').addClass('showEl');
            } else {
                $(this).parent('li').hide();
                $(this).parent('li').removeClass('showEl');
            }
        });

        if (value !== '') {
            $('#updateRoomListMention li').removeClass("hoverLi");
            $('#updateRoomListMention li.showEl').last().addClass('hoverLi');
            // console.log($('#updateRoomListMention li.showEl').last());
        } else {
            $('#updateRoomListMention li').removeClass("hoverLi");
        }

        $('.backwrap .hayvenList .s-l-def-clas').unhighlight();
        $('.backwrap .hayvenList .s-l-def-clas').highlight(value);
    }

    if (e.keyCode == 8) {
        if (value == '') {
            $(elm).prev('.mini_item_holder').find('.mini_item:last .mini_remove_ico').trigger('click');
        }
    }
}

function updateTempoMention() {
    // $('.removeSecretUserid.temp').removeClass('temp');
    $('#secretUserList').show();
    $('#mentionMemberPopup').hide();
    if ($('#secretUserList .removeSecretUserid').length) {
        $('#msg').addClass('secret_div');
    } else {
        $('#msg').removeClass('secret_div');
    }
}

function closeModalmentionMemberPopup() {
    for (let pvid of pvtmembertemp) {
        $('#removeSecretUserid_' + pvid).remove();
    }

    if ($('.removeSecretUserid').length == 0) {
        $('#secretUserList').html('');
    } else {
        var pvt_membercur = [];
        $('.removeSecretUser').each(function() {
            pvt_membercur.push($(this).attr('data-uid'));
        });
        var secretDiv = 'secretUserList';
        $('#' + secretDiv).find('.secret_heading').attr('data-id', pvt_membercur.join(','));

    }


    $('#mentionMemberPopup').hide();
    $('#secretUserList').show();
    // $('.hayven_Modal_Container').removeAttr('style').removeClass('ui-draggable');
    // $('#mentionMemberPopup').attr('data-esc',false);

    if ($('#secretUserList .removeSecretUserid').length) {
        $('#msg').addClass('secret_div');
    } else {
        $('#msg').removeClass('secret_div');
    }

}

function selectAllFiles(elm) {
    if ($(elm).hasClass('active')) {
        $('.hvSelect').removeClass('active')
    } else {
        $('.hvSelect').addClass('active')
    }
}


function openFilesFilter() {
    $('#filter_files_all_pop').show();
    $('#filter_files_all_pop').css('display', 'flex');
    var getAllperson = "";
    $.each(user_list, function(k, v) {
        getAllperson += getDesignForFilterFiles('user', v.fullname, v.id);
    });
    $('#filterByPerson_files_holder').append(getAllperson);
    var getAllRoom = "";
    // console.log(30659,myallConversations)
    $.each(myallConversations, function(k, v) {
        getAllRoom += getDesignForFilterFiles('room_filter', v.title, v.conversation_id);
    })
    $('#filterBy_room_files_holder').append(getAllRoom);

    var getAllroomCate = "";
    getAllroomCate += getDesignForFilterFiles('room_category', 'Work Room', 'Work Room');
    getAllroomCate += getDesignForFilterFiles('room_category', 'Project Room', 'Project Room');
    $('#filterBy_room_category_holder').append(getAllroomCate);

}

function getDesignForFilterFiles(type, title, value) {
    var html = '<div class="forspecial_elm item_per inactive"  data-va="' + value + '" data-type="' + type + '">' +
        '<span class="freeli_new_check_name">' + title + '</span>' +
        '<span class="freeli_new_check_design"><div class="check_whiteItem"></div></span>' +
        '</div>';
    return html;

}

function showFilterData(type) {
    var item = $('#' + type).parent('.item_section');
    if ($(item).hasClass('active')) {
        $(item).removeClass('active');
    } else {
        $(item).addClass('active');
    }

}

function viewFilterPopup(e, type) {

    if ($(e.target).hasClass('checklistfilter_item')) {

        // $('.checklistFilterPopup').hide();
        $('input.filter').val('');
        if ($(e.target).find('.checklistFilterPopup').is(':visible')) {
            $(e.target).find('.checklistFilterPopup').hide();
        } else {
            $('.checklistFilterPopup').hide();
            $(e.target).find('.checklistFilterPopup').show();
            // console.log(31083, type);
            var unique = [];
            if (type == 'checklist_title') {
                $("#checklist_title_filter").html('');
                $.each(my_all_task_assignment, function(k, v) {
                    if (v.msg_body != null && v.msg_body != '' && unique.indexOf(v.msg_body) == -1) {
                        unique.push(v.msg_body);
                        $("#checklist_title_filter").append('<li class="item_' + v.msg_id + ' ' + (checkedMsg.indexOf(v.msg_id) > -1 ? 'active' : '') + '" onclick="filtercheckit(event)" data-type="fil_name" data-id="' + v.msg_id + '" data-name="' + v.msg_body + '">' + v.msg_body + '</li>');
                    }
                });
            } else if (type == 'room') {
                $('#filterRoomList').html('');
                $.each(my_all_task_assignment, function(k, v) {
                    if (v.conversation_id != undefined && unique.indexOf(v.conversation_id) == -1) {
                        unique.push(v.conversation_id);
                        $('#filterRoomList').append('<li class="item_' + v.conversation_id + ' ' + (checkedRoom.indexOf(v.conversation_id) > -1 ? 'active' : '') + '" onclick="filtercheckit(event)" data-type="fil_room" data-id="' + v.conversation_id + '" data-name="' + get_conversation_obj(v.conversation_id).conversation_title + '">' + get_conversation_obj(v.conversation_id).conversation_title + '</li>');
                    }
                });
            } else if (type == 'last_update_by') {
                $('#last_update_by_filter').html('');
                $.each(my_all_task_assignment, function(k, v) {
                    let name = findObjForUser(v.last_update_user).fullname;
                    if (name != undefined && unique.indexOf(name) == -1) {
                        unique.push(name);
                        $('#last_update_by_filter').append('<li class="item_' + v.last_update_user + ' ' + (checkedPerson.indexOf(v.last_update_user) > -1 ? 'active' : '') + '" onclick="filtercheckit(event)" data-type="fil_person" data-id="' + v.last_update_user + '" data-name="' + name + '">' + name + '</li>');
                    }
                });
            }
        }
        $(e.target).find('input').focus();
        // console.log(31178,$(e.target).find('input'))
    }
}

var fil_name = [];
var checkedMsg = [];
var fil_room = [];
var checkedRoom = [];
var fil_person = [];
var checkedPerson = [];
var fil_date = [];

function filtercheckit(e) {
    var data = $(e.target).attr('data-name');
    var id = $(e.target).attr('data-id');
    var type = $(e.target).attr('data-type');
    var items = {
        id: id,
        data: data
    }
    if (!$(e.target).hasClass("active")) {
        $(e.target).addClass("active");
        if (type == 'fil_name') {
            if (fil_name.indexOf(items) == -1) {
                fil_name.push(items);
                checkedMsg.push(id);
            }
        } else if (type == 'fil_room') {
            if (fil_room.indexOf(items) == -1) {
                fil_room.push(items);
                checkedRoom.push(id);
            }
        } else if (type == 'fil_person') {
            if (fil_person.indexOf(items) == -1) {
                fil_person.push(items);
                checkedPerson.push(id);
            }
        }
    } else {
        $(e.target).removeClass("active");
        if (type == 'fil_name') {
            if (fil_name.indexOf(items) > -1) {
                removeA(fil_name, items);
                removeA(checkedMsg, id);
            }
        } else if (type == 'fil_room') {
            if (fil_room.indexOf(items) > -1) {
                removeA(fil_room, items);
                removeA(checkedRoom, id);
            }
        } else if (type == 'fil_person') {
            if (fil_person.indexOf(items) > -1) {
                removeA(fil_person, items);
                removeA(checkedPerson, id);
            }
        }
    }
}

function addFilterData(type, type2) {
    if (type == 'clear') {
        if (type2 == 'fil_name') {
            fil_name = [];
            checkedMsg = [];
            $('#checklist_title_filter li').removeClass('active');
        } else if (type2 == 'fil_room') {
            fil_room = [];
            checkedRoom = [];
            $('#filterRoomList li').removeClass('active');
        } else if (type2 == 'fil_person') {
            fil_person = [];
            checkedPerson = [];
            $('#last_update_by_filter li').removeClass('active');
        } else if (type2 == 'fil_date') {
            $('#filter_to').val('');
            $('#filter_from').val('');
        }
    } else if (type == 'ok') {
        if (type2 == 'fil_name') {
            $.each(fil_name, function(k, v) {
                var html = '<span class="main_span fil_' + v.id + ' msg_item" data-name="' + v.data + '" data-id="' + v.id + '">' +
                    '<span class="child_label">' + v.data + '</span>' +
                    '<span class="remove" onclick="removeFilterItem(\'' + v.id + '\',\'' + v.data + '\',\'' + type2 + '\')" data-id="' + v.id + '"></span>' +
                    '</span>';
                if ($('.fil_' + v.id).length == 0) {
                    $('.activeFilterList').append(html);
                }
            });
        } else if (type2 == 'fil_room') {
            $.each(fil_room, function(k, v) {
                var html = '<span class="main_span fil_' + v.id + ' room_item" data-id="' + v.id + '">' +
                    '<span class="child_label">' + v.data + '</span>' +
                    '<span class="remove" onclick="removeFilterItem(\'' + v.id + '\',\'' + v.data + '\',\'' + type2 + '\')" data-id="' + v.id + '"></span>' +
                    '</span>';
                if ($('.fil_' + v.id).length == 0) {
                    $('.activeFilterList').append(html);
                }
            });
        } else if (type2 == 'fil_person') {
            $.each(fil_person, function(k, v) {
                var html = '<span class="main_span fil_' + v.id + ' person_item" data-id="' + v.id + '">' +
                    '<span class="child_label">' + v.data + '</span>' +
                    '<span class="remove" onclick="removeFilterItem(\'' + v.id + '\',\'' + v.data + '\',\'' + type2 + '\')" data-id="' + v.id + '"></span>' +
                    '</span>';
                if ($('.fil_' + v.id).length == 0) {
                    $('.activeFilterList').append(html);
                }
            });
        } else if (type2 == 'fil_date') {

        }
    }
    $('.checklistFilterPopup').hide();
}

function removeFilterItem(id, data, type) {
    $('.fil_' + id).remove();
    $('.item_' + id).removeClass('active');
    // console.log($('.item_'+id));
    if (type == 'fil_name') {
        $.each(fil_name, function(k, v) {
            if (id == v.id) {
                removeA(fil_name, v);
                removeA(checkedMsg, id);
            }
        });
    } else if (type == 'fil_room') {
        $.each(fil_room, function(k, v) {
            if (id == v.id) {
                removeA(fil_room, v);
                removeA(checkedRoom, id);
            }
        });
    } else if (type == 'fil_person') {
        $.each(fil_person, function(k, v) {
            if (id == v.id) {
                removeA(fil_person, v);
                removeA(checkedPerson, id);
            }
        });
    } else if (type == 'fil_date') {

    }

    if ($('.activeFilterList .main_span').length > 0) {
        $('#groupChatContainer').addClass('taskFilter_open');
    } else {
        $('#groupChatContainer').removeClass('taskFilter_open');
        checkedMsg = [];
        fil_name = [];
        fil_room = [];
        checkedRoom = [];
        fil_person = [];
        checkedPerson = [];
        fil_date = [];
    }
}

function apply_filter() {
    var title = [],
        room = [],
        name = [],
        from = 0,
        to = 0;
    // $.each($("#checklist_title_filter>li.active"), function(k, v){
    // 	title.push($(v).attr("data-name"));
    // });
    $.each($(".activeFilterList>.main_span.msg_item"), function(k, v) {
        title.push($(v).attr("data-name"));
    });
    // $.each($("#filterRoomList>li.active"), function(k, v){
    // 	room.push($(v).attr("data-id"));
    // });	
    $.each($(".activeFilterList>.main_span.room_item"), function(k, v) {
        room.push($(v).attr("data-id"));
    });
    // $.each($("#last_update_by_filter>li.active"), function(k, v){
    // 	name.push($(v).attr("data-id"));
    // });
    $.each($(".activeFilterList>.main_span.person_item"), function(k, v) {
        name.push($(v).attr("data-id"));
    });

    // console.log(title,room,name);

    from = $("#filter_from").val() == "" ? moment("1970-01-01").unix() : moment($("#filter_from").val()).unix();
    to = $("#filter_to").val() == "" ? moment("2050-12-31").unix() : moment($("#filter_to").val()).unix();
    my_all_task_assignment_filterd = [];
    $.each(my_all_task_assignment, function(k, v) {
        // if($("#checklist_title_filter>li.active").length == 0){
        // 	title.push(v.msg_body);
        // }
        // if($("#filterRoomList>li.active").length == 0){
        // 	room.push(v.conversation_id);
        // }
        // if($("#last_update_by_filter>li.active").length == 0){
        // 	name.push(v.last_update_user);
        // }
        if ($(".activeFilterList>.main_span.msg_item").length == 0) {
            title.push(v.msg_body);
        }
        if ($(".activeFilterList>.main_span.room_item").length == 0) {
            room.push(v.conversation_id);
        }
        if ($(".activeFilterList>.main_span.person_item").length == 0) {
            name.push(v.last_update_user);
        }
        // console.log(31002, from, to, moment(v.created_at).unix());
        if (title.indexOf(v.msg_body) > -1 && room.indexOf(v.conversation_id) > -1 && name.indexOf(v.last_update_user) > -1 && moment(v.created_at).unix() > from && moment(v.created_at).unix() < to) {
            my_all_task_assignment_filterd.push(v);
        }
    });
    // console.log(31165, my_all_task_assignment_filterd);
    gotoChecklistTaskPage(1, 'on');
    $("#checklist_title_filter>li.active").removeClass("active");
    $("#filterRoomList>li.active").removeClass("active");
    $("#last_update_by_filter>li.active").removeClass("active");
    $("#filter_from").val("");
    $("#filter_to").val("");
}

function searchFilterPopup(e) {
    var v = $(e.target).val().toLowerCase();
    $(".filterItemList li").filter(function() {
        $(this).toggle($(this).text().toLowerCase().indexOf(v) > -1);
    });
    if (e.keyCode == '13') {
        if ($(e.target).parents('.checklistFilterPopup').find('.filterItemList li:visible').length == 1) {
            $(e.target).parents('.checklistFilterPopup').find('.filterItemList li:visible').click();
            $(e.target).val("");
            $(e.target).parents('.checklistFilterPopup').find('.filterItemList li').show();
        }
    }
}
var allRoomCateListForFilter = [];
var allPersonListForFilter = [];
var allTagListForFilter = [];
var allRoomListForFilter = [];
var allFileTypeListForFilter = [];
var allFileNameListForFilter = [];
var allDateListForFilter = [];

function resetAllFilesFiltersItem() {
    allRoomCateListForFilter = [];
    allPersonListForFilter = [];
    allTagListForFilter = [];
    allRoomListForFilter = [];
    allFileTypeListForFilter = [];
    allFileNameListForFilter = [];
    allDateListForFilter = [];

    var cateHtml = '';
    cateHtml += '<li class"" data-val="direct_room" onclick="singleClickForFilter(this,\'allRoomCateListForFilter\')"><span class="li_title">Direct Conversation</span></li>';
    cateHtml += '<li class"" data-val="work_room" onclick="singleClickForFilter(this,\'allRoomCateListForFilter\')"><span class="li_title">Work Room</span></li>';
    cateHtml += '<li class"" data-val="project_room" onclick="singleClickForFilter(this,\'allRoomCateListForFilter\')"><span class="li_title">Project Room</span></li>';
    $('#allRoomCateListForFilter').html(cateHtml);

    var userHtml = '';
    $.each(user_list, function(index, item) {
        userHtml += '<li class"" onclick="singleClickForFilter(this,\'allPersonListForFilter\')" data-val="' + item.id + '"><span class="li_title">' + item.fullname + '</span></li>';
    });
    $('#allPersonListForFilter').html(userHtml);


    var tagHtml = '';
    $.each(allUserTagList, function(index, item) {
        tagHtml += '<li class"" onclick="singleClickForFilter(this,\'allTagListForFilter\')" data-val="' + item.tag_id + '"><span class="li_title">' + item.title + '<span></li>';
    });
    $('#allTagListForFilter').html(tagHtml);


    var roomHtml = '';
    var allRoomNames = [];
    $.each(allMediaFilesData_forFilter, function(index, item) {
        var title = $('#conv' + item.conversation_id).attr('data-name');
        if (title != undefined) {
            if (allRoomNames.indexOf(title) == -1) {
                allRoomNames.push(title)
                roomHtml += '<li class"" onclick="singleClickForFilter(this,\'allRoomListForFilter\')" data-val="' + item.conversation_id + '"><span class="li_title">' + title + '</span></li>';
            }
        }
    });
    $('#allRoomListForFilter').html(roomHtml);

    var nameHtml = '';
    var allFileNames = [];
    $.each(allMediaFilesData_forFilter, function(index, item) {
        if (allFileNames.indexOf(item.originalname) == -1) {
            allFileNames.push(item.originalname)
            nameHtml += '<li class"" onclick="singleClickForFilter(this,\'allFileNameListForFilter\')" data-val="' + item.id + '"><span class="li_title">' + item.originalname + '</span></li>';
        }

    });
    $('#allFileNameListForFilter').html(nameHtml);

    var dateHtml = '';
    var alldateNames = [];
    $.each(allMediaFilesData_forFilter, function(index, item) {
        if (alldateNames.indexOf(moment(item.created_at).format('DD-MMM-YYYY')) == -1) {
            alldateNames.push(moment(item.created_at).format('DD-MMM-YYYY'))
            dateHtml += '<li class"" onclick="singleClickForFilter(this,\'allDateListForFilter\')" data-val="' + moment(item.created_at).format('DD-MMM-YYYY') + '"><span class="li_title">' + moment(item.created_at).format('DD-MMM-YYYY') + '</span></li>';
        }

    });
    $('#allDateListForFilter').html(dateHtml);

    var fileTypeHtml = '';
    var allUniqFileType = [];
    $.each(allMediaFilesData_forFilter, function(index, item) {
        var ll = item.file_type.split('/');
        ll = ll[ll.length - 1];
        // console.log(31101,ll,item.file_type)
        if (allUniqFileType.indexOf(ll) == -1) {
            allUniqFileType.push(ll)
            fileTypeHtml += '<li class"" onclick="singleClickForFilter(this,\'allFileTypeListForFilter\')" data-val="' + item.file_type + '"><span class="li_title">' + ll + '</span></li>';
        }
    });
    $('#allFileTypeListForFilter').html(fileTypeHtml);
}


function applyfilterAllFiles() {
    if ($('#allFilesMediaDiv').hasClass('active')) {
        var filtersFiles = [];
        $.each(allMediaFilesData, function(k, v) {
            let file_type = true;
            let room_id = true;
            let person_id = true;
            let file_date = true;
            let file_name = true;

            let tag_id = true;
            let cate_list = true;
            if (allFileTypeListForFilter.length != 0) {
                if (allFileTypeListForFilter.indexOf(v.file_type) == -1) {
                    file_type = false;
                }
            }
            if (allRoomListForFilter.length != 0) {
                if (allRoomListForFilter.indexOf(v.conversation_id) == -1) {
                    room_id = false;
                }
            }
            if (allTagListForFilter.length != 0) {
                if (v.tag_list == null) {
                    v.tag_list = [];
                }
                var tagFind = false;
                for (let i = 0; i < allTagListForFilter.length; i++) {
                    if (!tagFind) {
                        if (v.tag_list.indexOf(allTagListForFilter[i]) > -1) {
                            tagFind = true;
                        }
                    }
                }
                if (!tagFind) {
                    room_id = false;
                }
            }
            if (allDateListForFilter.length != 0) {
                if (allDateListForFilter.indexOf(moment(v.created_at).format('DD-MMM-YYYY')) == -1) {
                    file_date = false;
                }
            }
            if (allFileNameListForFilter.length != 0) {
                if (allFileNameListForFilter.indexOf(v.id) == -1) {
                    file_name = false;
                }
            }
            if (allPersonListForFilter.length != 0) {
                if (allPersonListForFilter.indexOf(v.user_id) == -1) {
                    person_id = false;
                }
            }

            if (file_type && room_id && person_id && file_date && file_name) {
                filtersFiles.push(v);
            }
        });
        // console.log(31192,filtersFiles);
        filterAllMyFiles_for_tab(filtersFiles);

    } else {

    }
}

// var allMediaFilesData = [];
// var allMediaLinksData = [];

function filterAllMyLinks(allMediaLink) {
    $('#mediaLinksgetFilesPagination').pagination({
        dataSource: (allMediaLink == undefined ? allMediaLinksData : allMediaLink),
        pageSize: globalpageSize,
        showPageNumbers: false,
        showNavigator: true,
        callback: function(data, pagination) {
            // template method of yourself
            var html = "";
            $.each(data, function(index, item) {
                html += getFileDesingForTable('mediaLinks_table', item);
            });

            $('#mediaLinks_tabledata').html(html);
            changeAllCustomTitle();
            if ($('#mediaLinks').find('.custom_next_prev').length == 0) {
                var html = getCustomNext_prev('mediaLinks', 'mediaLinksgetFilesPagination');
                $('#mediaLinks').append(html);

            }
        }
    });
    setTimeout(function() {
        checkCustomPagi('mediaLinksgetFilesPagination');
    }, 0)
}

function showMoretableDataHtml() {
    setTimeout(function() {
        var html = '';
        html += '<div id="ShowMoreOptionHolder" class="show_more_data" onclick="showMoreListOptions()">'
        html += '<select name="changePageSize" onchange="changePageSize(this);">'
        html += '<option value="20" ' + (globalpageSize == 20 ? 'selected' : '') + '>20</option>'
        html += '<option value="50" ' + (globalpageSize == 50 ? 'selected' : '') + '>50</option>'
        html += '<option value="100" ' + (globalpageSize == 100 ? 'selected' : '') + '>100</option>'
        html += '</select>'
        html += '</div>';
        if ($('#ShowMoreOptionHolder').length == 0) {
            if ($('#allFilesMediaDiv').hasClass('active')) {
                $('#mediaImages').after(html);
            } else {
                $('#mediaLinks').before(html);

            }
        } else {
            $('#ShowMoreOptionHolder').remove();
            // console.log(31447,$('#allFilesMediaDiv').hasClass('active'))
            if ($('#allFilesMediaDiv').hasClass('active')) {
                $('#mediaImages').after(html);
            } else {
                // console.log(31453n)
                $('#mediaLinksgetFilesPagination').before(html);

            }
        }
    }, 100)

}

function customPaginateNext(elm) {
    var paginationId = $(elm).attr('data-paginate');
    $('#' + paginationId).pagination('next');
    checkCustomPagi(paginationId);
}

function customPaginatePrev(elm) {
    var paginationId = $(elm).attr('data-paginate');
    $('#' + paginationId).pagination('previous');
    checkCustomPagi(paginationId);
}

function checkCustomPagi(type) {
    var currentPageNumber = $('#' + type).pagination('getSelectedPageNum');
    var totalPageNumber = $('#' + type).pagination('getTotalPage');
    var p = false;
    var n = false;

    if (currentPageNumber != 1) {
        p = true;
    }
    if (currentPageNumber <= totalPageNumber) {
        n = true;
    }
    if (currentPageNumber == totalPageNumber) {
        n = false;
    }
    if (totalPageNumber == 0 || totalPageNumber == 1) {
        p = false;
        n = false;
    }
    // console.log(3224,p,n,totalPageNumber,currentPageNumber,type)
    $('.custom_next_prev').find('.prev_btn').removeClass('inactive');
    $('.custom_next_prev').find('.next_btn').removeClass('inactive');
    if (!p) {
        $('.custom_next_prev').find('.prev_btn').addClass('inactive');
    }

    if (!n) {
        $('.custom_next_prev').find('.next_btn').addClass('inactive');
    }
    if (n) {
        $('.custom_next_prev').find('.next_btn').show();
    } else {
        $('.custom_next_prev').find('.next_btn').hide();
    }

    if (p && !n) {
        $('.custom_next_prev').find('.prev_btn').show();
    } else {
        $('.custom_next_prev').find('.prev_btn').hide();
    }
}

function getCustomNext_prev(type, paginate) {
    var html = '<div class="custom_next_prev">'

    +'<div class="prev_btn" data-type="' + type + '" data-paginate="' + paginate + '" onclick="customPaginatePrev(this)">Go Up</div>' +
        '<div class="next_btn" data-type="' + type + '" data-paginate="' + paginate + '" onclick="customPaginateNext(this)">Load More</div>'

    +
    '</div>';

    return html;
}

function filterAllMyFiles_for_tab(allMediaFiles) {
    if ($('#mediaAllFilesgetFilesPagination').length == 0) {

        $('#filter_tab_for_all_files').before('<div id="mediaAllFilesgetFilesPagination" class="file_pagination"></div>');
    }
    $('#mediaAllFilesgetFilesPagination').pagination({
        dataSource: (allMediaFiles == undefined ? allMediaFilesData : allMediaFiles),
        pageSize: globalpageSize,
        showPageNumbers: false,
        showNavigator: true,
        callback: function(data, pagination) {
            // template method of yourself
            var html = "";
            $.each(data, function(index, item) {
                html += getFileDesingForTable('mediaAllFiles_table', item);
            });

            $('#mediaAllFiles_tabledata').html(html);
            changeAllCustomTitle();
            if ($('#mediaAllFiles').find('.custom_next_prev').length == 0) {
                var html = getCustomNext_prev('mediaAllFiles', 'mediaAllFilesgetFilesPagination');
                $('#mediaAllFiles').append(html);

            }
        }
    })
    setTimeout(function() {
        checkCustomPagi('mediaAllFilesgetFilesPagination');
    }, 0)
}
var allImagesFIles = [];

function filterAllMyImage_for_tab(allMediaFiles) {
    // mediaImagesgetFilesPagination
    if ($('#mediaImagesgetFilesPagination').length == 0) {

        $('#filter_tab_for_all_files').before('<div id="mediaImagesgetFilesPagination" class="file_pagination"></div>');
    }
    allImagesFIles = [];
    var loopArr = (allMediaFiles == undefined ? allMediaFilesData : allMediaFiles)
    $.each(loopArr, function(k, v) {
            if (v.file_type.indexOf('image') > -1) {
                allImagesFIles.push(v);
            }
        })
        // console.log(allImagesFIles.length,loopArr.length)
    $('#mediaImagesgetFilesPagination').pagination({
        dataSource: allImagesFIles,
        pageSize: globalpageSize,
        showPageNumbers: false,
        showNavigator: true,
        callback: function(data, pagination) {
            // template method of yourself
            var html = "";
            $.each(data, function(index, item) {
                html += getFileDesingForTable('mediaImages_table', item);
            });

            $('#mediaImages_tabledata').html(html);
            changeAllCustomTitle();
            if ($('#mediaImages').find('.custom_next_prev').length == 0) {
                var html = getCustomNext_prev('mediaImages', 'mediaImagesgetFilesPagination');
                $('#mediaImages').append(html);

            }
        }
    });
    setTimeout(function() {
        checkCustomPagi('mediaImagesgetFilesPagination');
    }, 0)
}
var allVideosFIles = [];

function filterAllMyVideos_for_tab(allMediaFiles) {
    // mediaImagesgetFilesPagination
    if ($('#mediaVideosgetFilesPagination').length == 0) {

        $('#filter_tab_for_all_files').before('<div id="mediaVideosgetFilesPagination" class="file_pagination"></div>');
    }
    allVideosFIles = [];
    var loopArr = (allMediaFiles == undefined ? allMediaFilesData : allMediaFiles)
    $.each(loopArr, function(k, v) {
        if (v.file_type.indexOf('video') > -1) {
            allVideosFIles.push(v);
        }
    })
    $('#mediaVideosgetFilesPagination').pagination({
        dataSource: allVideosFIles,
        pageSize: globalpageSize,
        showPageNumbers: false,
        showNavigator: true,
        callback: function(data, pagination) {
            // template method of yourself
            var html = "";
            $.each(data, function(index, item) {
                html += getFileDesingForTable('mediaVideos_table', item);
            });

            $('#mediaVideos_tabledata').html(html);
            changeAllCustomTitle();
            if ($('#mediaVideos').find('.custom_next_prev').length == 0) {
                var html = getCustomNext_prev('mediaVideos', 'mediaVideosgetFilesPagination');
                $('#mediaVideos').append(html);

            }
        }
    });
    setTimeout(function() {
        checkCustomPagi('mediaVideosgetFilesPagination');
    }, 0)
}

var allAudiosFIles = [];

function filterAllMyAudios_for_tab(allMediaFiles) {
    // mediaImagesgetFilesPagination
    if ($('#mediaAudiosgetFilesPagination').length == 0) {

        $('#filter_tab_for_all_files').before('<div id="mediaAudiosgetFilesPagination" class="file_pagination"></div>');
    }
    allAudiosFIles = [];
    var loopArr = (allMediaFiles == undefined ? allMediaFilesData : allMediaFiles)
    $.each(loopArr, function(k, v) {
        if (v.file_type.indexOf('audio') > -1) {
            allAudiosFIles.push(v);
        }
    })
    $('#mediaAudiosgetFilesPagination').pagination({
        dataSource: allAudiosFIles,
        pageSize: globalpageSize,
        showPageNumbers: false,
        showNavigator: true,
        callback: function(data, pagination) {
            // template method of yourself
            var html = "";
            $.each(data, function(index, item) {
                html += getFileDesingForTable('mediaAudios_table', item);
            });

            $('#mediaAudios_tabledata').html(html);
            changeAllCustomTitle();
            if ($('#mediaAudios').find('.custom_next_prev').length == 0) {
                var html = getCustomNext_prev('mediaAudios', 'mediaAudiosgetFilesPagination');
                $('#mediaAudios').append(html);

            }
        }
    });
    setTimeout(function() {
        checkCustomPagi('mediaAudiosgetFilesPagination');
    }, 0)
}
var allDocsFIles = [];

function filterAllMyOthers_for_tab(allMediaFiles) {
    // mediaImagesgetFilesPagination
    if ($('#mediaFilesgetFilesPagination').length == 0) {

        $('#filter_tab_for_all_files').before('<div id="mediaFilesgetFilesPagination" class="file_pagination"></div>');
    }
    allDocsFIles = [];
    var loopArr = (allMediaFiles == undefined ? allMediaFilesData : allMediaFiles)
    $.each(loopArr, function(k, v) {
            if (v.file_type.indexOf('application') > -1) {
                allDocsFIles.push(v);
            }
        })
        // console.log(allDocsFIles.length)
    $('#mediaFilesgetFilesPagination').pagination({
        dataSource: allDocsFIles,
        pageSize: globalpageSize,
        showPageNumbers: false,
        showNavigator: true,
        callback: function(data, pagination) {
            // template method of yourself
            var html = "";
            $.each(data, function(index, item) {
                html += getFileDesingForTable('mediaFiles_table', item);
            });

            $('#mediaFiles_tabledata').html(html);
            changeAllCustomTitle();
            if ($('#mediaFiles').find('.custom_next_prev').length == 0) {
                var html = getCustomNext_prev('mediaFiles', 'mediaFilesgetFilesPagination');
                $('#mediaFiles').append(html);

            }

        }
    });
    setTimeout(function() {
        checkCustomPagi('mediaFilesgetFilesPagination');
    }, 0)
}

function filterAllMyPersonal_for_tab(allMediaFiles) {
    // mediaImagesgetFilesPagination
    if ($('#mediaPersonalgetFilesPagination').length == 0) {

        $('#filter_tab_for_all_files').before('<div id="mediaPersonalgetFilesPagination" class="file_pagination"></div>');
    }
    var loopArr = (allMediaFiles == undefined ? allMediaMyFilesData : allMediaFiles);
    // console.log(32272,loopArr);
    $('#mediaPersonalgetFilesPagination').pagination({
        dataSource: loopArr,
        pageSize: globalpageSize,
        showPageNumbers: false,
        showNavigator: true,
        callback: function(data, pagination) {
            // template method of yourself
            var html = "";
            $.each(data, function(index, item) {
                html += getFileDesingForTable('mediaPersonal_table', item);
            });

            $('#mediaPersonal_tabledata').html(html);
            changeAllCustomTitle();
            if ($('#mediaPersonal').find('.custom_next_prev').length == 0) {
                var html = getCustomNext_prev('mediaPersonal', 'mediaPersonalgetFilesPagination');
                $('#mediaPersonal').append(html);

            }
        }
    });
    setTimeout(function() {
        checkCustomPagi('mediaPersonalgetFilesPagination');
    }, 0)
}

function changePageSize(elm) {
    var va = $(elm).val();
    globalpageSize = Number(va);
    filterAllMyFiles_for_tab();
    filterAllMyLinks();
}

// mediaAllFiles_tabledata


$(window).bind('mousewheel DOMMouseScroll', function(event) {
    if ($(event.target).closest("#groupChatContainer").hasClass("task_assignment")) {
        // if (mousewheelevent) {
        // 	if (!$('.msgs-form-users.editable_checklistMsg').is(':visible')) {
        // 		// Load old checklist
        // 		var n = $('.msgs-form-users').length;
        // 		var offset_top_first = $("#taskList_panel").find(".msgs-form-users:first").offset().top;
        // 		var offset_top = $("#taskList_panel").find(".msgs-form-users:last").offset().top;
        // 		var msg_container = $("#taskList_panel").height();
        // 		if( (offset_top_first + offset_top - 65) < msg_container && hasNextPage > 0 && my_all_task_assignment.length > n){
        // 			mousewheelevent = false;
        // 			$("#chk_pageChange .next").trigger("click");
        // 			$('#taskList_panel').animate({ scrollTop: $('#taskList_panel').scrollTop() });
        // 		}
        // 		else if($('#taskList_panel').scrollTop() == 0 && event.originalEvent.wheelDelta > 0 && hasPrevPage > 0){
        // 			mousewheelevent = false;
        // 			$("#chk_pageChange .prev").trigger("click");
        // 			$('#taskList_panel').animate({ scrollTop: $('#taskList_panel').scrollTop() });
        // 		}
        // 	}
        // }
    } else {

        if ($('#allFilesMediaDiv').is(':visible') && $('#allFilesMediaDiv').hasClass('active')) {

            var checkScroll = $('#mediaAllFiles .body_tab_val').last()[0].scrollHeight - $('#mediaAllFiles').innerHeight();

            if ($('#mediaAllFiles').scrollTop() > checkScroll) {
                $('#mediaAllFilesgetFilesPagination').pagination('next');
                $('#mediaAllFiles').scrollTop($('#mediaAllFiles').scrollTop() - 200)
                checkCustomPagi('mediaAllFilesgetFilesPagination');
            } else if ($('#mediaAllFiles').scrollTop() == 0) {
                $('#mediaAllFilesgetFilesPagination').pagination('previous');
                $('#mediaAllFiles').scrollTop($('#mediaAllFiles').scrollTop() + 100)
                checkCustomPagi('mediaAllFilesgetFilesPagination');
            }
        } else if ($('#mediaImgsTab').hasClass('active')) {
            var checkScroll = $('#mediaImages .body_tab_val').last()[0].scrollHeight - $('#mediaImages').innerHeight();

            if ($('#mediaImages').scrollTop() > checkScroll) {
                $('#mediaImagesgetFilesPagination').pagination('next');
                $('#mediaImages').scrollTop($('#mediaImages').scrollTop() - 200)
                checkCustomPagi('mediaImagesgetFilesPagination');
            } else if ($('#mediaImages').scrollTop() == 0) {
                $('#mediaImagesgetFilesPagination').pagination('previous');
                $('#mediaImages').scrollTop($('#mediaImages').scrollTop() + 100)
                checkCustomPagi('mediaImagesgetFilesPagination');
            }
        } else if ($('#mediaViedeosTab').hasClass('active')) {
            var checkScroll = $('#mediaVideos .body_tab_val').last()[0].scrollHeight - $('#mediaImages').innerHeight();

            if ($('#mediaVideos').scrollTop() > checkScroll) {
                $('#mediaVideosgetFilesPagination').pagination('next');
                $('#mediaVideos').scrollTop($('#mediaVideos').scrollTop() - 200)
                checkCustomPagi('mediaVideosgetFilesPagination');
            } else if ($('#mediaVideos').scrollTop() == 0) {
                $('#mediaVideosgetFilesPagination').pagination('previous');
                $('#mediaVideos').scrollTop($('#mediaVideos').scrollTop() + 100)
                checkCustomPagi('mediaVideosgetFilesPagination');
            }
        } else if ($('#mediaAudiosTab').hasClass('active')) {
            var checkScroll = $('#mediaAudios .body_tab_val').last()[0].scrollHeight - $('#mediaImages').innerHeight();

            if ($('#mediaAudios').scrollTop() > checkScroll) {
                $('#mediaAudiosgetFilesPagination').pagination('next');
                $('#mediaAudios').scrollTop($('#mediaAudios').scrollTop() - 200)
                checkCustomPagi('mediaAudiosgetFilesPagination');
            } else if ($('#mediaAudios').scrollTop() == 0) {
                $('#mediaAudiosgetFilesPagination').pagination('previous');
                $('#mediaAudios').scrollTop($('#mediaAudios').scrollTop() + 100)
                checkCustomPagi('mediaAudiosgetFilesPagination');
            }
        } else if ($('#mediaFilesTab').hasClass('active')) {
            var checkScroll = $('#mediaFiles .body_tab_val').last()[0].scrollHeight - $('#mediaImages').innerHeight();

            if ($('#mediaFiles').scrollTop() > checkScroll) {
                $('#mediaFilesgetFilesPagination').pagination('next');
                $('#mediaFiles').scrollTop($('#mediaFiles').scrollTop() - 200)
                checkCustomPagi('mediaFilesgetFilesPagination');
            } else if ($('#mediaFiles').scrollTop() == 0) {
                $('#mediaFilesgetFilesPagination').pagination('previous');
                $('#mediaFiles').scrollTop($('#mediaFiles').scrollTop() + 100)
                checkCustomPagi('mediaFilesgetFilesPagination');
            }
        } else if ($('#mediaLinksTab').hasClass('active')) {
            var checkScroll = $('#mediaLinks .body_tab_val').last()[0].scrollHeight - $('#mediaLinks').innerHeight();

            if ($('#mediaLinks').scrollTop() > checkScroll) {
                $('#mediaLinksgetFilesPagination').pagination('next');
                $('#mediaLinks').scrollTop($('#mediaLinks').scrollTop() - 50)
                checkCustomPagi('mediaLinksgetFilesPagination');
            } else if ($('#mediaLinks').scrollTop() == 0) {
                $('#mediaLinksgetFilesPagination').pagination('previous');
                $('#mediaLinks').scrollTop($('#mediaLinks').scrollTop() + 50)
                checkCustomPagi('mediaLinksgetFilesPagination');
            }
        } else {
            if ($('#mediaPersonal .body_tab_val').is(':visible')) {
                var checkScroll = $('#mediaPersonal .body_tab_val').last()[0].scrollHeight - $('#mediaPersonal').innerHeight();

                if ($('#mediaPersonal').scrollTop() > checkScroll) {
                    $('#mediaPersonalgetFilesPagination').pagination('next');
                    $('#mediaPersonal').scrollTop($('#mediaPersonal').scrollTop() - 50)
                    checkCustomPagi('mediaPersonalgetFilesPagination');
                } else if ($('#mediaPersonal').scrollTop() == 0) {
                    $('#mediaPersonalgetFilesPagination').pagination('previous');
                    $('#mediaPersonal').scrollTop($('#mediaPersonal').scrollTop() + 50)
                    checkCustomPagi('mediaPersonalgetFilesPagination');
                }
            }
        }
    }


});

$('body').on('click', '.response_r', function(event) {
    event.preventDefault();
    event.stopImmediatePropagation();
    checklistRepText = $(event.target).parents('.thread-user-msg').find('.thread_chk_item').text();
    $('#define_thread_text').text(checklistRepText);
    checklistRepText = null;
    $('#msg_rep').focus();

})

function returnFilterItemDesign(type, data, title) {
    var html = '<span class="main_span ' + type + '_type" data-val="' + data + '">' +
        '<span class="child_label">' + title + '</span>' +
        '<span class="remove" onclick="triggerClickONSignleItem(this)" data-main="' + type + '" data-val="' + data + '" ></span>' +
        '</span>';

    return html;
}

function triggerClickONSignleItem(elm) {
    var id = $(elm).attr('data-val');
    var listId = $(elm).attr('data-main');
    if (listId == 'allFileNameListForFilter') {
        removeA(allFileNameListForFilter, id);
        removeA(recent_allFileNameListForFilter, id);
        $('#allFileNameListForFilter').find('li[data-val="' + id + '"]').remove();
    } else if (listId == 'allFileTypeListForFilter') {
        removeA(allFileTypeListForFilter, id);
        removeA(recent_allFileTypeListForFilter, id);
        $('#allFileTypeListForFilter').find('li[data-val="' + id + '"]').remove();
    } else if (listId == 'allDateListForFilter') {
        removeA(allDateListForFilter, id);
        removeA(recent_allDateListForFilter, id);
        $('#allDateListForFilter').find('li[data-val="' + id + '"]').remove();
    } else if (listId == 'allPersonListForFilter') {
        removeA(allPersonListForFilter, id);
        removeA(recent_allPersonListForFilterid);
        $('#allPersonListForFilter').find('li[data-val="' + id + '"]').remove();
    } else if (listId == 'allRoomListForFilter') {
        removeA(allRoomListForFilter, id);
        removeA(recent_allRoomListForFilter);
        $('#allRoomListForFilter').find('li[data-val="' + id + '"]').remove();
    }
    $(elm).parent('.main_span').remove();

}


var recent_allFileNameListForFilter = [];
var recent_allPersonListForFilter = [];
var recent_allRoomListForFilter = [];
var recent_allFileTypeListForFilter = [];
var recent_allDateListForFilter = [];

function singleClickForFilter(elm, type) {
    var data = $(elm).attr('data-val');
    if ($(elm).hasClass('active')) {
        $(elm).removeClass('active');
        if (type == 'allRoomCateListForFilter') {
            removeA(allRoomCateListForFilter, data);
        } else if (type == 'allPersonListForFilter') {
            removeA(recent_allPersonListForFilter, data);
            // removeA(allPersonListForFilter,data);
        } else if (type == 'allTagListForFilter') {
            removeA(allTagListForFilter, data);
        } else if (type == 'allRoomListForFilter') {
            removeA(recent_allRoomListForFilter, data);
            // removeA(allRoomListForFilter,data);
        } else if (type == 'allFileTypeListForFilter') {
            removeA(recent_allFileTypeListForFilter, data);
            // removeA(allFileTypeListForFilter,data);
        } else if (type == 'allFileNameListForFilter') {
            removeA(recent_allFileNameListForFilter, data);
            // removeA(allFileNameListForFilter,data);
        } else if (type == 'allDateListForFilter') {
            removeA(recent_allDateListForFilter, data);
            // removeA(allDateListForFilter,data);
        }
        // $('#mediaAllFiles_table_table_child').find('.main_span[data-val="'+data+'"]').remove();

    } else {
        $(elm).addClass('active');
        if (type == 'allRoomCateListForFilter') {
            allRoomCateListForFilter.push(data);
        } else if (type == 'allPersonListForFilter') {
            recent_allPersonListForFilter.push(data);
            // allPersonListForFilter.push(data);
        } else if (type == 'allTagListForFilter') {
            allTagListForFilter.push(data);
        } else if (type == 'allRoomListForFilter') {
            recent_allRoomListForFilter.push(data);
            // allRoomListForFilter.push(data);
        } else if (type == 'allFileTypeListForFilter') {
            recent_allFileTypeListForFilter.push(data);
            // allFileTypeListForFilter.push(data);
        } else if (type == 'allFileNameListForFilter') {
            recent_allFileNameListForFilter.push(data);
            // allFileNameListForFilter.push(data);
        } else if (type == 'allDateListForFilter') {
            recent_allDateListForFilter.push(data);
            // allDateListForFilter.push(data);
        }

        // $('#mediaAllFiles_table_table_child').append(returnFilterItemDesign(data,$(elm).find('.li_title').text()));
    }
}

function clear_filter_popup(domid) {
    if (domid == 'allPersonListForFilter') {
        $.each(allPersonListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').find('.main_span[data-val="' + v + '"]').remove();
            $('#allPersonListForFilter').find('li[data-val="' + v + '"]').removeClass('active');
        })
        $.each(recent_allPersonListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').find('.main_span[data-val="' + v + '"]').remove();
            $('#allPersonListForFilter').find('li[data-val="' + v + '"]').removeClass('active');
        })
        recent_allPersonListForFilter = [];
        allPersonListForFilter = [];
    } else if (domid == 'allRoomListForFilter') {
        $.each(allRoomListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').find('.main_span[data-val="' + v + '"]').remove();
        })
        $.each(recent_allRoomListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').find('.main_span[data-val="' + v + '"]').remove();
        })
        recent_allRoomListForFilter = [];
        allRoomListForFilter = [];
    } else if (domid == 'allFileTypeListForFilter') {
        $.each(allFileTypeListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').find('.main_span[data-val="' + v + '"]').remove();
        })
        $.each(recent_allFileTypeListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').find('.main_span[data-val="' + v + '"]').remove();
        })
        recent_allFileTypeListForFilter = [];
        allFileTypeListForFilter = [];
    } else if (domid == 'allFileNameListForFilter') {
        $.each(allFileNameListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').find('.main_span[data-val="' + v + '"]').remove();
        })
        $.each(recent_allFileNameListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').find('.main_span[data-val="' + v + '"]').remove();
        })
        recent_allFileNameListForFilter = [];
        allFileNameListForFilter = [];
    } else if (domid == 'allDateListForFilter') {
        $.each(allDateListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').find('.main_span[data-val="' + v + '"]').remove();
        })
        $.each(recent_allDateListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').find('.main_span[data-val="' + v + '"]').remove();
        })
        recent_allDateListForFilter = [];
        allDateListForFilter = [];
    }
    $('.checklistFilterPopup').hide();
}

function ok_filter_popup(domid) {
    if (domid == 'allPersonListForFilter') {
        allPersonListForFilter = [];
        $.each(recent_allPersonListForFilter, function(k, v) {
            allPersonListForFilter.push(v);
        });
        $('.allPersonListForFilter_type').remove();
        $.each(allPersonListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').append(returnFilterItemDesign('allPersonListForFilter', v, findObjForUser(v).fullname));

        })

    } else if (domid == 'allRoomListForFilter') {
        allRoomListForFilter = [];
        $.each(recent_allRoomListForFilter, function(k, v) {
            allRoomListForFilter.push(v);
        });
        $('.allRoomListForFilter_type').remove();
        $.each(allRoomListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').append(returnFilterItemDesign('allRoomListForFilter', v, $('#conv' + v).attr('data-name')));

        })
    } else if (domid == 'allFileTypeListForFilter') {
        allFileTypeListForFilter = [];
        $.each(recent_allFileTypeListForFilter, function(k, v) {
            allFileTypeListForFilter.push(v);
        });

        $('.allFileTypeListForFilter_type').remove();
        $.each(allFileTypeListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').append(returnFilterItemDesign('allFileTypeListForFilter', v, $('#allFileTypeListForFilter').find('li[data-val="' + v + '"]').find('.li_title').text()));

        })
    } else if (domid == 'allFileNameListForFilter') {
        allFileNameListForFilter = [];
        $.each(recent_allFileNameListForFilter, function(k, v) {
            allFileNameListForFilter.push(v);
        });

        $('.allFileNameListForFilter_type').remove();
        $.each(allFileNameListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').append(returnFilterItemDesign('allFileNameListForFilter', v, $('#allFileNameListForFilter').find('li[data-val="' + v + '"]').find('.li_title').text()));
        });

    } else if (domid == 'allDateListForFilter') {
        allDateListForFilter = [];
        $.each(recent_allDateListForFilter, function(k, v) {
            allDateListForFilter.push(v);
        });
        $('.allDateListForFilter_type').remove();
        $.each(allDateListForFilter, function(k, v) {
            $('#mediaAllFiles_table_table_child').append(returnFilterItemDesign('allDateListForFilter', v, $('#allDateListForFilter').find('li[data-val="' + v + '"]').find('.li_title').text()));

        })
    }
    $('.checklistFilterPopup').hide();
}



setInterval(function() {
    var allChkItem = $('.thread_chk_item');

    $.each(allChkItem, function(k, v) {

        if ($(v).parent('.thread-user-msg').find('.response_r').length == 0) {
            $(v).parent('.thread-user-msg').find('h4').append('<p class="response_r"></p>');
        }
    })
    var allFlagItem = $('.flag_forLater');

    $.each(allFlagItem, function(k, v) {
        var msgid = $(v).parents('.msgs-form-users').attr('data-msgid');
        var conv_id = $('.msg_id_' + msgid).attr('conv-id');
        if ($(v).parents('.user_info_sec').find('.reply_btn_n').length == 0) {
            $(v).parent('.user_info_sec').append('<span class="reply_btn_n" click-type="reaply" onclick="threadReply(event)" conv-id="' + conv_id + '" data-msgid="' + msgid + '"><span class="color_white" click-type="reaply" data-balloon="Reply in thread " data-balloon-pos="right">Reply</span></span>');
        }
    })
    var allFlagItem2 = $('.flaggedMsg');

    $.each(allFlagItem2, function(k, v) {
        var msgid = $(v).parents('.msgs-form-users').attr('data-msgid');
        var conv_id = $('.msg_id_' + msgid).attr('conv-id');
        if ($(v).parents('.user_info_sec').find('.reply_btn_n').length == 0) {
            $(v).parent('.user_info_sec').append('<span class="reply_btn_n" click-type="reaply" onclick="threadReply(event)" conv-id="' + conv_id + '" data-msgid="' + msgid + '"><span class="color_white" click-type="reaply" data-balloon="Reply in thread " data-balloon-pos="right">Reply</span></span>');
        }
    })

}, 2000);

function search_inputBar(e) {
    e.stopImmediatePropagation();
    e.preventDefault();
    var btn = false;
    if ($(e.target).attr('id') == '_inputBar') {
        var v = $(e.target).val();
        $('#search_for').val(v);
    } else {
        var v = $(e.target).val();
        $('#_inputBar').val(v);
    }
    if ($(e.target).val() != '') {
        btn = true;
    }
    if (btn) {
        $('.searchAndFilter').addClass('btn_active');
    } else {
        $('.searchAndFilter').removeClass('btn_active');
    }
    if (e.keyCode == 13) {
        searchChecklistFT();
    }
    if (e.keyCode == 46 && $('#_inputBar').val() == "") {
        $(".clrChkSrc").trigger("click");
    }

}

function allUser_listSearch(e) {
    var value = $(e.target).val().toLowerCase();
    $("ul.allUser_list li").filter(function() {
        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
    });
}

function allUser_list(e) {
    var user_list = _.orderBy(allUserdata[0].users, ["fullname"], ["asc"]);
    var inVal = $(e.target).val();
    $('ul.allUser_list').html('');
    var selected_ids = [];
    $.each($('#selectedUserli .mini_item'), function(k, v) {
        selected_ids.push($(v).attr('data-uid'));
    });
    $.each(user_list, function(k, v) {
        var name = v.fullname
        if (name.indexOf('Deleted') == -1 && selected_ids.indexOf(v.id) == -1) {
            if (inVal == '') {
                $('ul.allUser_list').append('<li uid="' + v.id + '" onclick="addFilterUser(this, \'' + v.id + '\')">' + v.fullname + '</li>');
            } else {
                if (name.toLowerCase().indexOf(inVal.toLowerCase()) > -1) {
                    $('ul.allUser_list').append('<li uid="' + v.id + '" onclick="addFilterUser(this, \'' + v.id + '\')">' + v.fullname + '</li>');
                } else {
                    $('ul.allUser_list').append('<li uid="' + v.id + '" style="display: none" onclick="addFilterUser(this, \'' + v.id + '\')">' + v.fullname + '</li>');
                }
            }
        }
    });
    if (!$('ul.allUser_list').is(':visible')) {
        $('ul.allUser_list').show();
    }
}

function addFilterUser(el, uid) {
    $(el).remove();
    var html = '<div class="mini_item mini_item_' + uid + '" data-uid="' + uid + '">' +
        '<p class="mini_name">' + findObjForUser(uid).fullname + '</p>' +
        '<span class="mini_remove_ico" onclick="removeFilterUser(this,\'' + uid + '\')"></span>' +
        '</div>';
    $('#selectedUserli').append(html);
}

function removeFilterUser(el, id) {
    $(el).parents('.mini_item').remove();
    $('ul.allUser_list').append('<li uid="' + id + '" onclick="addFilterUser(this, \'' + id + '\')">' + findObjForUser(id).fullname + '</li>');
}

// const $flatpickr = $("#flatpickr_id").flatpickr();

// $("#some_button_id").click(function() {
//    $flatpickr.clear();
// })
$('#select_startDate').flatpickr({
    dateFormat: "Y-m-d",
    onChange: function(selectedDates, dateStr, instance) {
        if (dateStr) {
            console.log(dateStr);
            $('.select_startDate.clearDate').addClass('active').attr('onclick', 'clearDate(1)');
        }
    }
});
$('#select_endDate').flatpickr({
    dateFormat: "Y-m-d",
    onChange: function(selectedDates, dateStr, instance) {
        if (dateStr) {
            console.log(dateStr);
            $('.select_endDate.clearDate').addClass('active').attr('onclick', 'clearDate(2)');
        }
    }
});

function clearDate(val) {
    if (val == 1) {
        $('#select_startDate').val('');
        $('.select_startDate.clearDate').removeClass('active').attr('onclick', '');
    } else if (val == 2) {
        $('#select_endDate').val('');
        $('.select_endDate.clearDate').removeClass('active').attr('onclick', '');
    }
}

function forwardOneFileFun(event, elm) {
    event.preventDefault();
    event.stopImmediatePropagation();
    if (!$('#mediaFilePreview').is(':visible')) {
        selectedDataID = [];
    }

    var id = $(elm).attr('data-id');
    selectedDataID.push(id);
    shareSelectedMsg();
    console.log(elm)
}
// threadToBackwrap
var scrollMsgUp = true;

function gotoThisMessage(e, elm) {
    e.preventDefault();
    e.stopImmediatePropagation();
    var msg_id = $(elm).attr('data-msg');
    let conv_id = $(elm).attr('data-conv');

    closeMediaPopup();
    if ($('#flagPanelContainer').is(':visible')) {
        conversation_id = $(elm).attr('data-conv');
        conv_id = 'null';
        allSearchInputClear();
        $('.backToChat.hidden').hide();
        $('body').removeClass('filtered_msg');
        $('.filterFlagged_msg').removeClass('activeComFilter');
        removeA(allFilteredItem, 'flag');
        $('#flagPanelContainer').hide();
        $('#conv' + conversation_id).addClass('sideActive').addClass('selected');
    }
    console.log(conv_id, msg_id, conv_id, conversation_id);
    socket.emit('getOneMessage', { conversation_id: conv_id == 'null' ? conversation_id : conv_id, msg_id: msg_id, conv_type: conv_id, root_conv_id: conversation_id }, function(res) {
        console.log(34764, res.data)
        scrollMsgUp = false;
        $('#msg-container').html('');
        var msg = '';
        if ($('#mediaLinksTab').hasClass('active')) {
            msg = 'Showing Link messages(s) from this channel. Click the close button to go back.';
        } else {
            msg = 'Showing File messages(s) from this channel. Click the close button to go back.';
        }
        // console.log(res.data[0])
        $('#workFreeliToaster').attr('data-id', 'link');
        // console.log(res)
        if (res.data.length == 0) {
            msg = 'This message does not exist. Click the close button to go back.';
        } else {

            draw_msg(res.data[0]);

            if (res.data[0].has_delete.indexOf(user_id) > -1 || res.data[0].has_delete.indexOf('delete_for_all') > -1) {
                msg = 'This message does not exist. Click the close button to go back.';
            }
            console.log('35105', res.rep);
            if(res.rep){
                console.log('35107', $('#msgThread_'+res.data[0].msg_id).find('p[click-type="reaply"]'));
                $('#msgThread_'+res.data[0].msg_id).find('p[click-type="reaply"]').click();
            }
        }
        showFreeliToaster(true, msg);

    })
}
function returnActivityText(data){
    body = JSON.parse(data.body);
    let text = '';
    if(data.type == 'addemoji'){
        text = data.created_by_name+' reacted to this message.<span onclick="gotoThisMessage(event,this)" data-msg="'+body.msg_id+'" data-conv="'+body.conversation_id+'" class="click-to-go"> Click to go</span>';
    }else if(data.type == 'deleteemoji'){
        text = data.created_by_name+' remove react to this message.<span onclick="gotoThisMessage(event,this)" data-msg="'+body.msg_id+'" data-conv="'+body.conversation_id+'" class="click-to-go"> Click to go</span>';
    }
    return text;
}
function returnActivityDesign(type,data){
    if(type == 'all'){
        if(data.length > 0){
            var text = '';
            
            var html = '';

            for(d of data){
                text = returnActivityText(d);
                html += '<div class="msgs-form-users "  style="pointer-events: auto;">'
                html += '<div class="msg-user-photo">'
                html +=     '<img class="" src="'+file_server+'profile-pic/Photos/'+d.created_by_img+'" alt="'+d.created_by_img+'">'
                html += '</div>'
                html += '<div class="user-msg">'
                html +=     '<h4>'
                html +=         '<span style="cursor:pointer" class="">'+d.created_by_name+'</span>'
                html +=         '<span class="msg-time" data-balloon="'+moment(d.created_at).format('DD-MM-Y hh:mm A')+'" data-balloon-pos="up"> @ '+moment(d.created_at).format('DD-MM-Y hh:mm A')+'</span>'
                html +=     '</h4>'
                html +=     '<div class="plain_text">'+text+'</div>'
                html += '</div>'
                // html += '<div class="msgs-form-users-options">'
                // html +=     '<div data-balloon="Remove this notification" data-balloon-pos="left">'
                // html +=         '<div class="delete_noti" onclick="notiRemoveForMe(this)"></div>'
                // html +=     '</div>'
                // html += '</div>'
                html += '</div>'
            }
            return html;
        }else{
            return '<div class="no_activity_found">No activity found</>';
        }
    }
}

function show_activity(el){
    if(!$('#activityPanelContainer').is(':visible')){
        socket.emit('getMyActivity',{user_id:user_id},function(res){
            if(res.status){
                $('#activityMsgContainer').html('');
                var getAllActivity = returnActivityDesign('all',res.data);
                $('#activityMsgContainer').html(getAllActivity);
                $('.side_bar_list_item li.sideActive').removeClass('sideActive').removeClass('selected');
                $('#activityPanelContainer').show();
                $('#workFreeliToaster').hide();
                $('#_flaggedList').removeClass('activeComFilter');
                $(el).addClass('sideActive').addClass('selected');
                findMyLinks();
                closeMediaPopup();
            }else{
                console.log('activity',res);
            }
        })

    }
}